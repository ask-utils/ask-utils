var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/classes/APIClient.html",[0,0.213,1,3.241]],["body/classes/APIClient.html",[0,0.271,1,4.751,2,0.9,3,0.036,4,0.036,5,0.036,6,3.389,7,0.044,8,0.57,9,4.731,10,5.444,11,5.634,12,0.863,13,5.059,14,0.912,15,5.444,16,2.176,17,4.057,18,1.405,19,4.495,20,5.444,21,5.89,22,3.374,23,3.71,24,3.728,25,0.642,26,1.21,27,5.855,28,1.721,29,0.009,30,0.454,31,0.236,32,1.167,33,0.267,34,4.197,35,4.197,36,4.197,37,3.71,38,4.197,39,6.742,40,3.62,41,1.195,42,5.059,43,3.71,44,4.197,45,0.939,46,3.71,47,4.197,48,3.71,49,4.197,50,4.197,51,1.112,52,4.393,53,3.149,54,3.389,55,2.461,56,3.713,57,1.342,58,1.313,59,1.388,60,2.254,61,0.941,62,3.71,63,3.71,64,3.713,65,2.798,66,4.393,67,0.084,68,2.374,69,4.727,70,3.389,71,3.546,72,3.149,73,3.389,74,3.389,75,4.495,76,1.803,77,4.751,78,3.71,79,1.408,80,3.71,81,0.752,82,3.71,83,3.149,84,0.769,85,3.149,86,3.389,87,3.389,88,3.149,89,0.787,90,3.388,91,3.673,92,2.873,93,3.388,94,3.199,95,1.853,96,1.853,97,4.939,98,3.71,99,5.175,100,4.495,101,5.272,102,3.903,103,5.473,104,4.733,105,3.149,106,4.393,107,5.175,108,4.393,109,0.397,110,3.389,111,5.175,112,7.025,113,5.437,114,6.448,115,3.71,116,3.71,117,3.71,118,3.71,119,3.71,120,3.71,121,6.782,122,3.71,123,5.175,124,5.059,125,4.084,126,4.453,127,5.96,128,3.71,129,3.71,130,3.71,131,2.957,132,3.71,133,0.769,134,3.71,135,2.436,136,5.175,137,3.71,138,3.71,139,6.782,140,3.71,141,5.059,142,3.389,143,3.71,144,3.71,145,4.126,146,3.71,147,6.448,148,5.175,149,5.175,150,3.71,151,3.71,152,4.495,153,3.71,154,4.495,155,3.71,156,3.71,157,3.71,158,3.71,159,5.141,160,4.727,161,1.524,162,6.448,163,3.71,164,5.96,165,5.115,166,3.265,167,3.71,168,3.71,169,3.71,170,5.175,171,3.71,172,5.407,173,3.71,174,2.957,175,3.71,176,4.453,177,5.96,178,3.71,179,3.71,180,5.175,181,5.175,182,5.175,183,2.746,184,0.57,185,2.957,186,3.71,187,3.71,188,3.71,189,3.71,190,0.92,191,0.004,192,0.005,193,0.004]],["title/classes/APIClient-1.html",[0,0.178,1,2.721,194,2.241]],["body/classes/APIClient-1.html",[0,0.226,1,5.145,2,1.05,3,0.042,4,0.042,5,0.042,7,0.051,8,0.633,10,5.895,11,5.662,12,0.934,13,5.478,14,1.013,15,5.895,16,3.033,17,4.198,18,1.013,20,5.895,22,3.255,23,4.328,24,3.904,25,0.654,26,1.265,28,1.904,29,0.009,30,0.473,31,0.241,32,1.291,33,0.269,40,4.687,41,1.296,42,5.836,45,0.915,51,1.058,52,4.879,53,3.674,54,3.954,57,1.491,58,1.458,59,1.619,61,1.098,67,0.081,68,1.986,69,5.251,70,3.954,71,3.939,72,3.674,73,3.954,74,3.954,75,5.82,76,1.823,77,5.145,79,1.266,81,1.544,83,3.674,84,0.897,85,3.674,86,3.954,87,3.954,88,3.674,89,0.918,90,3.574,91,3.574,92,3.032,93,3.574,94,3.375,95,3.574,96,3.574,97,5.223,102,5.749,103,6.866,104,4.514,105,5.836,190,1.426,191,0.005,192,0.006,193,0.005,195,4.328,196,6.188,197,6.875,198,6.28,199,5.481,200,6.503,201,4.897,202,4.897,203,1.834,204,4.897,205,4.897,206,4.897,207,4.897,208,4.897,209,4.897,210,4.897,211,4.897,212,4.897,213,4.897,214,4.897,215,4.897,216,7.356,217,4.897,218,4.897,219,4.897,220,0.982,221,4.897,222,4.897,223,6.503,224,4.897,225,4.897,226,4.897,227,7.779,228,7.779,229,4.897,230,4.897,231,4.897]],["title/interfaces/AttributeType.html",[232,0.2,233,3.714]],["body/interfaces/AttributeType.html",[0,0.27,3,0.05,4,0.05,5,0.05,9,4.308,18,1.378,26,0.827,29,0.009,33,0.21,51,1.057,55,3.23,56,5.426,57,1.341,58,1.312,68,3.538,76,1.834,79,1.301,90,2.582,91,2.582,92,2.19,93,2.582,94,2.438,95,2.582,96,2.582,124,4.388,125,5.037,184,0.57,191,0.008,192,0.007,193,0.005,232,0.254,233,7.283,234,0.488,235,5.17,236,4.388,237,1.109,238,5.849,239,5.17,240,5.17,241,6.445,242,5.17,243,5.887,244,3.141,245,0.748,246,5.17,247,5.17,248,5.17,249,6.445,250,6.445,251,5.17,252,5.17,253,5.17,254,7.712,255,5.17,256,5.17,257,6.445,258,5.17,259,5.17,260,5.17,261,7.022,262,5.17,263,5.17,264,5.17,265,7.351,266,7.022,267,7.712,268,7.906,269,7.022,270,6.445,271,6.445,272,7.351,273,4.43,274,5.17,275,5.17,276,5.17,277,5.17,278,6.445,279,6.445]],["title/interfaces/AudiencePayload.html",[232,0.2,280,0.922]],["body/interfaces/AudiencePayload.html",[0,0.149,3,0.028,4,0.041,5,0.028,7,0.034,8,0.471,12,0.743,25,0.261,29,0.009,30,0.462,31,0.249,33,0.265,45,0.342,67,0.119,81,0.578,84,0.591,89,0.605,109,0.686,133,0.886,161,1.518,184,0.314,191,0.003,192,0.005,193,0.003,220,0.647,232,0.404,234,0.404,237,0.491,245,0.413,280,1.164,281,0.514,282,0.647,283,1.323,284,1.883,285,0.565,286,0.97,287,1.386,288,0.647,289,0.97,290,0.647,291,1.164,292,0.647,293,1.164,294,0.647,295,0.647,296,0.647,297,0.949,298,0.97,299,0.647,300,0.647,301,0.647,302,0.647,303,0.647,304,1.237,305,0.97,306,0.647,307,0.647,308,0.633,309,0.647,310,0.647,311,0.97,312,0.949,313,0.949,314,0.662,315,1.323,316,0.97,317,0.647,318,0.647,319,0.662,320,0.97,321,0.647,322,0.647,323,1.164,324,0.647,325,0.949,326,1.164,327,0.647,328,0.618,329,0.647,330,0.647,331,0.662,332,0.647,333,1.138,334,0.633,335,0.647,336,0.647,337,0.647,338,0.647,339,1.476,340,1.164,341,0.647,342,0.647,343,0.647,344,0.647,345,0.633,346,0.97,347,0.886,348,0.647,349,1.265,350,0.647,351,0.662,352,0.662,353,1.191,354,0.662,355,0.662,356,0.647,357,0.97,358,0.647,359,0.662,360,0.662,361,0.633,362,1.265,363,0.662,364,0.662,365,0.662,366,0.662,367,0.662,368,0.949,369,0.647,370,0.647,371,0.647,372,0.647,373,0.647,374,0.647,375,0.97,376,0.647,377,0.949,378,0.647,379,0.647,380,0.647,381,0.647,382,0.647,383,0.647,384,0.647,385,0.647,386,0.647,387,0.647,388,0.647,389,0.647,390,0.647,391,0.647,392,0.647,393,0.647,394,0.97,395,0.647,396,0.647,397,0.647,398,0.647,399,0.647,400,0.647,401,0.647,402,1.138,403,0.647,404,0.647,405,0.97,406,0.647,407,0.647,408,0.647,409,0.647,410,1.265,411,0.647,412,0.662,413,0.647,414,0.647,415,0.647,416,1.265,417,0.647,418,0.97,419,0.647,420,1.164,421,0.647,422,0.97,423,0.647,424,1.294,425,0.647,426,0.949,427,0.647,428,0.97,429,0.647,430,0.647,431,0.647,432,0.97,433,0.647,434,0.949,435,0.662,436,0.662,437,0.647,438,0.647,439,0.949,440,0.928,441,0.886,442,0.647,443,0.605,444,1.184,445,1.447,446,0.647,447,0.647,448,0.647,449,0.647,450,0.647,451,0.647,452,0.647,453,0.647,454,0.647,455,0.647,456,0.647,457,0.647,458,0.647,459,0.647,460,0.647,461,0.647,462,1.164,463,1.164,464,1.488,465,0.647,466,0.647,467,0.97,468,0.647,469,0.662,470,1.164,471,1.164,472,0.647,473,0.662,474,0.647,475,0.662,476,0.97,477,0.647,478,1.088,479,0.662,480,0.662,481,0.647,482,0.662,483,0.647,484,0.647,485,0.97,486,0.662,487,0.97,488,0.97,489,0.97,490,1.323,491,0.647,492,0.662,493,0.662,494,0.97,495,0.647,496,0.662,497,0.662,498,0.514,499,0.647,500,1.138,501,1.138,502,0.97,503,0.633,504,0.633,505,0.633,506,0.97,507,0.647,508,0.647,509,0.647,510,0.949,511,1.164,512,0.633,513,0.633,514,0.647,515,0.662,516,0.662,517,0.647,518,0.647,519,0.662,520,0.662,521,0.662,522,0.662,523,0.97,524,0.633,525,0.633,526,1.138,527,0.97,528,0.647,529,0.647,530,0.647,531,0.97,532,0.662,533,0.323,534,0.647,535,0.578,536,1.252,537,1.354,538,1.324,539,1.518,540,0.928,541,0.662,542,0.647,543,0.527,544,0.647,545,0.647,546,1.164,547,0.662,548,0.662,549,0.97,550,0.662,551,0.662,552,0.647,553,0.662,554,1.324,555,0.662,556,1.488,557,0.662,558,0.662,559,0.662,560,0.662,561,0.662,562,1.164,563,0.662,564,0.662,565,0.662,566,0.662,567,0.662,568,0.647,569,0.662,570,0.662,571,0.662,572,0.662,573,0.662,574,0.662,575,0.662,576,0.662,577,0.662,578,0.662,579,0.662,580,0.647,581,0.662,582,1.209,583,0.662,584,0.662,585,0.662,586,0.662,587,0.662,588,0.97,589,0.662,590,0.647,591,0.662,592,0.662,593,0.662,594,0.662,595,0.662,596,0.647,597,0.647,598,0.662,599,0.662,600,0.662,601,0.647,602,0.647,603,0.662,604,0.662,605,0.647,606,0.662,607,0.662,608,0.662,609,0.662,610,0.647,611,0.662,612,0.647,613,0.662,614,0.662,615,0.647,616,0.662,617,0.662]],["title/interfaces/AuthResponse.html",[232,0.2,517,0.922]],["body/interfaces/AuthResponse.html",[0,0.148,3,0.027,4,0.041,5,0.027,7,0.034,8,0.469,12,0.74,25,0.259,29,0.009,30,0.461,31,0.249,33,0.265,45,0.34,67,0.119,81,0.574,84,0.588,89,0.601,109,0.685,133,0.883,161,1.568,184,0.312,191,0.003,192,0.004,193,0.003,220,0.643,232,0.403,234,0.402,237,0.488,245,0.41,280,0.966,281,0.511,282,0.643,283,0.658,284,1.882,285,0.561,286,0.966,287,1.383,288,0.643,289,0.966,290,0.643,291,1.16,292,0.643,293,1.16,294,0.643,295,0.643,296,0.643,297,0.945,298,0.966,299,0.643,300,0.643,301,0.643,302,0.643,303,0.643,304,1.233,305,0.966,306,0.643,307,0.643,308,0.629,309,0.643,310,0.643,311,0.966,312,0.945,313,0.945,314,0.658,315,1.319,316,0.966,317,0.643,318,0.643,319,0.658,320,0.966,321,0.643,322,0.643,323,1.16,324,0.643,325,0.945,326,1.16,327,0.643,328,0.615,329,0.643,330,0.643,331,0.658,332,0.643,333,1.135,334,0.629,335,0.643,336,0.643,337,0.643,338,0.643,339,1.473,340,1.16,341,0.643,342,0.643,343,0.643,344,0.643,345,0.629,346,0.966,347,0.883,348,0.643,349,1.261,350,0.643,351,0.658,352,0.658,353,1.187,354,0.658,355,0.658,356,0.643,357,0.966,358,0.643,359,0.658,360,0.658,361,0.629,362,1.261,363,0.658,364,0.658,365,0.658,366,0.658,367,0.658,368,0.945,369,0.643,370,0.643,371,0.643,372,0.643,373,0.643,374,0.643,375,0.966,376,0.643,377,0.945,378,0.643,379,0.643,380,0.643,381,0.643,382,0.643,383,0.643,384,0.643,385,0.643,386,0.643,387,0.643,388,0.643,389,0.643,390,0.643,391,0.643,392,0.643,393,0.643,394,0.966,395,0.643,396,0.643,397,0.643,398,0.643,399,0.643,400,0.643,401,0.643,402,1.135,403,0.643,404,0.643,405,0.966,406,0.643,407,0.643,408,0.643,409,0.643,410,1.261,411,0.643,412,0.658,413,0.643,414,0.643,415,0.643,416,1.261,417,0.643,418,0.966,419,0.643,420,1.16,421,0.643,422,0.966,423,0.643,424,1.29,425,0.643,426,0.945,427,0.643,428,0.966,429,0.643,430,0.643,431,0.643,432,0.966,433,0.643,434,0.945,435,0.658,436,0.658,437,0.643,438,0.643,439,0.945,440,0.924,441,0.883,442,0.643,443,0.601,444,1.183,445,1.446,446,0.643,447,0.643,448,0.643,449,0.643,450,0.643,451,0.643,452,0.643,453,0.643,454,0.643,455,0.643,456,0.643,457,0.643,458,0.643,459,0.643,460,0.643,461,0.643,462,1.16,463,1.16,464,1.485,465,0.643,466,0.643,467,0.966,468,0.643,469,0.658,470,1.16,471,1.16,472,0.643,473,0.658,474,0.643,475,0.658,476,0.966,477,0.643,478,1.084,479,0.658,480,0.658,481,0.643,482,0.658,483,0.643,484,0.643,485,0.966,486,0.658,487,0.966,488,0.966,489,0.966,490,1.319,491,0.643,492,0.658,493,0.658,494,0.966,495,0.643,496,0.658,497,0.658,498,0.511,499,0.643,500,1.135,501,1.135,502,0.966,503,0.629,504,0.629,505,0.629,506,0.966,507,0.643,508,0.643,509,0.643,510,0.945,511,1.16,512,0.629,513,0.629,514,0.643,515,0.658,516,0.658,517,0.966,518,1.29,519,1.319,520,1.319,521,0.658,522,1.319,523,0.966,524,0.629,525,0.629,526,1.135,527,0.966,528,0.643,529,0.643,530,0.643,531,0.966,532,0.658,533,0.322,534,0.643,535,0.574,536,1.252,537,1.352,538,1.322,539,1.515,540,0.924,541,0.658,542,0.643,543,0.524,544,0.643,545,0.643,546,1.16,547,0.658,548,0.658,549,0.966,550,0.658,551,0.658,552,0.643,553,0.658,554,1.322,555,0.658,556,1.485,557,0.658,558,0.658,559,0.658,560,0.658,561,0.658,562,1.16,563,0.658,564,0.658,565,0.658,566,0.658,567,0.658,568,0.643,569,0.658,570,0.658,571,0.658,572,0.658,573,0.658,574,0.658,575,0.658,576,0.658,577,0.658,578,0.658,579,0.658,580,0.643,581,0.658,582,1.206,583,0.658,584,0.658,585,0.658,586,0.658,587,0.658,588,0.966,589,0.658,590,0.643,591,0.658,592,0.658,593,0.658,594,0.658,595,0.658,596,0.643,597,0.643,598,0.658,599,0.658,600,0.658,601,0.643,602,0.643,603,0.658,604,0.658,605,0.643,606,0.658,607,0.658,608,0.658,609,0.658,610,0.643,611,0.658,612,0.643,613,0.658,614,0.658,615,0.643,616,0.658,617,0.658]],["title/interfaces/Availability.html",[232,0.2,313,0.902]],["body/interfaces/Availability.html",[0,0.148,3,0.027,4,0.041,5,0.027,7,0.034,8,0.469,12,0.74,25,0.259,29,0.009,30,0.461,31,0.25,32,0.732,33,0.264,45,0.34,67,0.119,81,1.151,84,0.587,89,0.6,109,0.684,133,0.882,161,1.515,184,0.312,191,0.003,192,0.004,193,0.003,220,0.642,232,0.403,234,0.402,237,0.487,245,0.41,280,0.965,281,0.511,282,0.642,283,0.657,284,1.882,285,0.561,286,0.965,287,1.382,288,0.642,289,0.965,290,0.642,291,1.16,292,0.642,293,1.16,294,0.642,295,0.642,296,0.642,297,0.944,298,0.965,299,0.642,300,0.642,301,0.642,302,0.642,303,0.642,304,1.232,305,1.289,306,0.642,307,0.642,308,0.628,309,0.642,310,0.642,311,1.289,312,0.944,313,1.134,314,1.318,315,1.485,316,1.382,317,0.642,318,0.642,319,0.657,320,0.965,321,0.642,322,0.642,323,1.16,324,0.642,325,0.944,326,1.16,327,0.642,328,0.614,329,0.642,330,0.642,331,0.657,332,0.642,333,1.134,334,0.628,335,0.642,336,0.642,337,0.642,338,0.642,339,1.472,340,1.16,341,0.642,342,0.642,343,0.642,344,0.642,345,0.628,346,0.965,347,0.882,348,0.642,349,1.261,350,0.642,351,0.657,352,0.657,353,1.186,354,0.657,355,0.657,356,0.642,357,0.965,358,0.642,359,0.657,360,0.657,361,0.628,362,1.261,363,0.657,364,0.657,365,0.657,366,0.657,367,0.657,368,0.944,369,0.642,370,0.642,371,0.642,372,0.642,373,0.642,374,0.642,375,0.965,376,0.642,377,0.944,378,0.642,379,0.642,380,0.642,381,0.642,382,0.642,383,0.642,384,0.642,385,0.642,386,0.642,387,0.642,388,0.642,389,0.642,390,0.642,391,0.642,392,0.642,393,0.642,394,0.965,395,0.642,396,0.642,397,0.642,398,0.642,399,0.642,400,0.642,401,0.642,402,1.134,403,0.642,404,0.642,405,0.965,406,0.642,407,0.642,408,0.642,409,0.642,410,1.261,411,0.642,412,0.657,413,0.642,414,0.642,415,0.642,416,1.261,417,0.642,418,0.965,419,0.642,420,1.16,421,0.642,422,0.965,423,0.642,424,1.289,425,0.642,426,0.944,427,0.642,428,0.965,429,0.642,430,0.642,431,0.642,432,0.965,433,0.642,434,0.944,435,0.657,436,0.657,437,0.642,438,0.642,439,0.944,440,0.923,441,0.882,442,0.642,443,0.6,444,1.183,445,1.445,446,0.642,447,0.642,448,0.642,449,0.642,450,0.642,451,0.642,452,0.642,453,0.642,454,0.642,455,0.642,456,0.642,457,0.642,458,0.642,459,0.642,460,0.642,461,0.642,462,1.16,463,1.16,464,1.485,465,0.642,466,0.642,467,0.965,468,0.642,469,0.657,470,1.16,471,1.16,472,0.642,473,0.657,474,0.642,475,0.657,476,0.965,477,0.642,478,1.084,479,0.657,480,0.657,481,0.642,482,0.657,483,0.642,484,0.642,485,0.965,486,0.657,487,0.965,488,0.965,489,0.965,490,1.318,491,0.642,492,0.657,493,0.657,494,0.965,495,0.642,496,0.657,497,0.657,498,0.511,499,0.642,500,1.134,501,1.134,502,0.965,503,0.628,504,0.628,505,0.628,506,0.965,507,0.642,508,0.642,509,0.642,510,0.944,511,1.16,512,0.628,513,0.628,514,0.642,515,0.657,516,0.657,517,0.642,518,0.642,519,0.657,520,0.657,521,0.657,522,0.657,523,0.965,524,0.628,525,0.628,526,1.134,527,0.965,528,0.642,529,0.642,530,0.642,531,0.965,532,0.657,533,0.321,534,0.642,535,0.574,536,1.252,537,1.351,538,1.321,539,1.515,540,0.923,541,0.657,542,0.642,543,0.523,544,0.642,545,0.642,546,1.16,547,0.657,548,0.657,549,0.965,550,0.657,551,0.657,552,0.642,553,0.657,554,1.321,555,0.657,556,1.485,557,0.657,558,0.657,559,0.657,560,0.657,561,0.657,562,1.16,563,0.657,564,0.657,565,0.657,566,0.657,567,0.657,568,0.642,569,0.657,570,0.657,571,0.657,572,0.657,573,0.657,574,0.657,575,0.657,576,0.657,577,0.657,578,0.657,579,0.657,580,0.642,581,0.657,582,1.205,583,0.657,584,0.657,585,0.657,586,0.657,587,0.657,588,0.965,589,0.657,590,0.642,591,0.657,592,0.657,593,0.657,594,0.657,595,0.657,596,0.642,597,0.642,598,0.657,599,0.657,600,0.657,601,0.642,602,0.642,603,0.657,604,0.657,605,0.642,606,0.657,607,0.657,608,0.657,609,0.657,610,0.642,611,0.657,612,0.642,613,0.657,614,0.657,615,0.642,616,0.657,617,0.657]],["title/interfaces/BaseSkillConfig.html",[232,0.2,618,3.241]],["body/interfaces/BaseSkillConfig.html",[3,0.057,4,0.057,5,0.057,7,0.07,8,0.769,25,0.68,29,0.009,31,0.237,32,1.322,33,0.242,51,1.144,57,1.81,58,1.495,67,0.108,109,0.746,191,0.006,192,0.007,193,0.006,232,0.377,234,0.557,618,6.127,619,4.227,620,4.697,621,5.796,622,6.523,623,6.524,624,5.333,625,4.402,626,5.262,627,4.781,628,2.956,629,4.227,630,4.697,631,4.781,632,5.562,633,5.262,634,5.001,635,5.001,636,5.262,637,4.227,638,4.697,639,4.227,640,4.444,641,4.444,642,4.444,643,4.444]],["title/classes/BuyContentBuilder.html",[0,0.213,644,4.066]],["body/classes/BuyContentBuilder.html",[0,0.289,2,1.342,3,0.053,4,0.053,5,0.053,7,0.08,8,0.74,12,0.973,14,1.184,16,2.924,18,1.446,25,0.506,26,1.298,28,1.956,29,0.009,30,0.486,31,0.242,32,1.327,33,0.261,39,5.703,41,1.184,51,1.102,67,0.078,79,0.952,109,0.719,190,1.373,191,0.006,192,0.007,193,0.006,203,2.344,533,0.628,543,1.241,644,6.719,645,6.26,646,4.632,647,4.082,648,4.241,649,8.187,650,3.964,651,4.396,652,4.412,653,4.412,654,4.412,655,4.412,656,3.133,657,4.899,658,3.969,659,3.969,660,3.969,661,6.26,662,6.26,663,3.969,664,3.969,665,3.791,666,4.684,667,3.969,668,3.791,669,3.969,670,3.633,671,3.791,672,3.969,673,3.791,674,3.969,675,5.533,676,3.361,677,5.533,678,6.26]],["title/classes/BuyIntentHandlerBuilder.html",[0,0.213,679,4.066]],["body/classes/BuyIntentHandlerBuilder.html",[0,0.246,2,1.14,3,0.045,4,0.045,5,0.045,7,0.056,8,0.668,12,0.878,14,1.069,16,2.215,17,2.493,18,1.441,19,3.544,24,2.493,25,0.43,26,1.265,28,1.801,29,0.009,30,0.463,31,0.234,32,1.221,41,1.069,45,0.564,51,1.285,53,3.988,55,3.161,57,1.742,58,1.539,59,1.757,61,1.192,66,5.148,67,0.095,68,2.156,72,3.988,76,1.834,79,1.349,101,4.41,104,4.824,108,3.988,109,0.649,125,4.156,135,3.982,145,3.746,176,3.982,184,0.518,190,1.823,191,0.005,192,0.006,193,0.005,203,3.007,273,2.964,498,1.094,533,0.533,628,1.99,648,3.936,650,3.888,657,4.712,675,4.698,679,6.065,680,5.316,681,4.835,682,3.825,683,4.574,684,3.754,685,2.233,686,4.311,687,4.41,688,4.351,689,3.982,690,4.351,691,4.351,692,5.316,693,4.292,694,4.292,695,4.292,696,5.316,697,4.292,698,4.292,699,3.544,700,4.351,701,4.292,702,2.28,703,3.219,704,4.292,705,3.544,706,4.292,707,3.544,708,4.292,709,5.316,710,4.698,711,4.698,712,5.316,713,5.316,714,3.219,715,5.316,716,5.316,717,5.316,718,5.316,719,5.316,720,3.544,721,6.862,722,4.698,723,5.316,724,5.316,725,5.316,726,3.371,727,6.862,728,5.316,729,5.316,730,5.316,731,5.316,732,5.316,733,5.316,734,5.316,735,5.316,736,5.316,737,5.316,738,5.316,739,5.316,740,4.292,741,5.316,742,3.988,743,3.988,744,4.156,745,5.316,746,3.988,747,3.746,748,5.316,749,5.316,750,5.316,751,5.316,752,5.316,753,5.316,754,5.316,755,5.316,756,4.292,757,5.316]],["title/classes/BuyResponseContentBuilder.html",[0,0.213,758,4.066]],["body/classes/BuyResponseContentBuilder.html",[0,0.249,2,1.156,3,0.046,4,0.046,5,0.046,7,0.057,8,0.674,9,4.605,12,0.886,14,1.078,16,2.841,18,1.446,25,0.436,26,1.299,28,1.81,29,0.009,30,0.449,31,0.232,32,1.227,33,0.24,41,1.3,51,0.781,67,0.067,76,1.42,79,1.352,92,3.022,101,5.108,109,0.654,135,3.128,174,6.202,190,1.182,191,0.005,192,0.006,193,0.005,203,2.018,245,0.689,328,1.033,533,0.54,543,1.13,646,4.542,647,3.717,648,3.962,650,3.704,651,4.107,652,4.018,653,4.018,654,4.018,655,4.018,656,4.405,657,4.774,658,3.417,659,3.417,660,3.417,663,3.417,664,3.417,665,3.264,666,4.482,667,3.417,668,3.264,669,3.417,670,3.128,671,3.264,672,3.417,673,3.264,674,3.417,676,2.894,744,3.264,758,6.119,759,5.389,760,8.071,761,8.071,762,8.071,763,8.071,764,8.071,765,8.071,766,5.389,767,5.389,768,5.389,769,5.389,770,5.389,771,5.389,772,5.589,773,4.351,774,5.589,775,4.632,776,4.425,777,4.959,778,4.181,779,4.763,780,5.389,781,4.265,782,5.389,783,4.763,784,3.797,785,5.389,786,3.593,787,4.763,788,4.043,789,3.417,790,4.763,791,5.389]],["title/interfaces/Class.html",[0,0.213,232,0.2]],["body/interfaces/Class.html",[0,0.224,3,0.028,4,0.041,5,0.028,7,0.034,8,0.471,12,0.743,25,0.261,29,0.009,30,0.462,31,0.249,33,0.264,45,0.616,67,0.119,81,0.578,84,0.591,89,0.605,109,0.686,133,0.886,161,1.518,184,0.314,191,0.003,192,0.005,193,0.003,220,0.647,232,0.404,234,0.404,237,0.491,245,0.413,280,0.97,281,0.514,282,0.647,283,0.662,284,1.883,285,0.565,286,0.97,287,1.386,288,0.647,289,0.97,290,0.647,291,1.164,292,0.647,293,1.164,294,0.647,295,0.647,296,0.647,297,0.949,298,0.97,299,0.647,300,0.647,301,0.647,302,0.647,303,0.647,304,1.237,305,0.97,306,0.647,307,0.647,308,0.633,309,0.647,310,0.647,311,0.97,312,0.949,313,0.949,314,0.662,315,1.323,316,0.97,317,0.647,318,0.647,319,0.662,320,0.97,321,0.647,322,0.647,323,1.164,324,0.647,325,0.949,326,1.164,327,0.647,328,0.618,329,0.647,330,0.647,331,0.662,332,0.647,333,1.138,334,0.633,335,0.647,336,0.647,337,0.647,338,0.647,339,1.476,340,1.164,341,0.647,342,0.647,343,0.647,344,0.647,345,0.633,346,0.97,347,0.886,348,0.647,349,1.265,350,0.647,351,0.662,352,0.662,353,1.191,354,0.662,355,0.662,356,0.647,357,0.97,358,0.647,359,0.662,360,0.662,361,0.633,362,1.265,363,0.662,364,0.662,365,0.662,366,0.662,367,0.662,368,0.949,369,0.647,370,0.647,371,0.647,372,0.647,373,0.647,374,0.647,375,0.97,376,0.647,377,0.949,378,0.647,379,0.647,380,0.647,381,0.647,382,0.647,383,0.647,384,0.647,385,0.647,386,0.647,387,0.647,388,0.647,389,0.647,390,0.647,391,0.647,392,0.647,393,0.647,394,0.97,395,0.647,396,0.647,397,0.647,398,0.647,399,0.647,400,0.647,401,0.647,402,1.138,403,0.647,404,0.647,405,0.97,406,0.647,407,0.647,408,0.647,409,0.647,410,1.265,411,0.647,412,0.662,413,0.647,414,0.647,415,0.647,416,1.265,417,0.647,418,0.97,419,0.647,420,1.164,421,0.647,422,0.97,423,0.647,424,1.294,425,0.647,426,0.949,427,0.647,428,0.97,429,0.647,430,0.647,431,0.647,432,0.97,433,0.647,434,0.949,435,0.662,436,0.662,437,0.647,438,0.647,439,0.949,440,0.928,441,0.886,442,0.647,443,0.605,444,1.184,445,1.447,446,0.647,447,0.647,448,0.647,449,0.647,450,0.647,451,0.647,452,0.647,453,0.647,454,0.647,455,0.647,456,0.647,457,0.647,458,0.647,459,0.647,460,0.647,461,0.647,462,1.164,463,1.164,464,1.488,465,0.647,466,0.647,467,0.97,468,0.647,469,0.662,470,1.164,471,1.164,472,0.647,473,0.662,474,0.647,475,0.662,476,0.97,477,0.647,478,1.088,479,0.662,480,0.662,481,0.647,482,0.662,483,0.647,484,0.647,485,0.97,486,0.662,487,0.97,488,0.97,489,0.97,490,1.323,491,0.647,492,0.662,493,0.662,494,0.97,495,0.647,496,0.662,497,0.662,498,0.514,499,1.294,500,1.138,501,1.138,502,0.97,503,0.633,504,0.633,505,0.633,506,0.97,507,0.647,508,0.647,509,0.647,510,0.949,511,1.164,512,0.633,513,0.633,514,0.647,515,0.662,516,0.662,517,0.647,518,0.647,519,0.662,520,0.662,521,0.662,522,0.662,523,0.97,524,0.633,525,0.633,526,1.138,527,0.97,528,0.647,529,0.647,530,0.647,531,0.97,532,0.662,533,0.323,534,0.647,535,0.578,536,1.252,537,1.354,538,1.324,539,1.518,540,0.928,541,0.662,542,0.647,543,0.527,544,0.647,545,0.647,546,1.164,547,0.662,548,0.662,549,0.97,550,0.662,551,0.662,552,0.647,553,0.662,554,1.324,555,0.662,556,1.488,557,0.662,558,0.662,559,0.662,560,0.662,561,0.662,562,1.164,563,0.662,564,0.662,565,0.662,566,0.662,567,0.662,568,0.647,569,0.662,570,0.662,571,0.662,572,0.662,573,0.662,574,0.662,575,0.662,576,0.662,577,0.662,578,0.662,579,0.662,580,0.647,581,0.662,582,1.209,583,0.662,584,0.662,585,0.662,586,0.662,587,0.662,588,0.97,589,0.662,590,0.647,591,0.662,592,0.662,593,0.662,594,0.662,595,0.662,596,0.647,597,0.647,598,0.662,599,0.662,600,0.662,601,0.647,602,0.647,603,0.662,604,0.662,605,0.647,606,0.662,607,0.662,608,0.662,609,0.662,610,0.647,611,0.662,612,0.647,613,0.662,614,0.662,615,0.647,616,0.662,617,0.662]],["title/interfaces/ClientConfig.html",[232,0.2,514,0.922]],["body/interfaces/ClientConfig.html",[0,0.147,3,0.027,4,0.041,5,0.027,7,0.033,8,0.466,12,0.736,25,0.465,29,0.009,30,0.46,31,0.25,32,1.098,33,0.264,45,0.337,67,0.119,81,0.569,84,0.582,89,0.596,109,0.682,133,0.877,161,1.512,184,0.309,191,0.003,192,0.004,193,0.003,220,0.637,232,0.403,234,0.4,237,0.483,245,0.407,280,0.96,281,0.507,282,0.637,283,0.652,284,1.881,285,0.556,286,0.96,287,1.377,288,0.637,289,0.96,290,0.637,291,1.154,292,0.637,293,1.154,294,0.637,295,0.637,296,0.637,297,0.938,298,0.96,299,0.637,300,0.637,301,0.637,302,0.637,303,0.637,304,1.228,305,0.96,306,0.637,307,0.637,308,0.623,309,0.637,310,0.637,311,0.96,312,0.938,313,0.938,314,0.652,315,1.313,316,0.96,317,0.637,318,0.637,319,0.652,320,0.96,321,0.637,322,0.637,323,1.154,324,0.637,325,0.938,326,1.154,327,0.637,328,0.609,329,0.637,330,0.637,331,0.652,332,0.637,333,1.128,334,0.623,335,0.637,336,0.637,337,0.637,338,0.637,339,1.469,340,1.154,341,0.637,342,0.637,343,0.637,344,0.637,345,0.623,346,0.96,347,0.877,348,0.637,349,1.256,350,0.637,351,0.652,352,0.652,353,1.18,354,0.652,355,0.652,356,0.637,357,0.96,358,0.637,359,0.652,360,0.652,361,0.623,362,1.256,363,0.652,364,0.652,365,0.652,366,0.652,367,0.652,368,0.938,369,0.637,370,0.637,371,0.637,372,0.637,373,0.637,374,0.637,375,0.96,376,0.637,377,0.938,378,0.637,379,0.637,380,0.637,381,0.637,382,0.637,383,0.637,384,0.637,385,0.637,386,0.637,387,0.637,388,0.637,389,0.637,390,0.637,391,0.637,392,0.637,393,0.637,394,0.96,395,0.637,396,0.637,397,0.637,398,0.637,399,0.637,400,0.637,401,0.637,402,1.128,403,0.637,404,0.637,405,0.96,406,0.637,407,0.637,408,0.637,409,0.637,410,1.256,411,0.637,412,0.652,413,0.637,414,0.637,415,0.637,416,1.256,417,0.637,418,0.96,419,0.637,420,1.154,421,0.637,422,0.96,423,0.637,424,1.284,425,0.637,426,0.938,427,0.637,428,0.96,429,0.637,430,0.637,431,0.637,432,0.96,433,0.637,434,0.938,435,0.652,436,0.652,437,0.637,438,0.637,439,0.938,440,0.917,441,0.877,442,0.637,443,0.596,444,1.181,445,1.443,446,0.637,447,0.637,448,0.637,449,0.637,450,0.637,451,0.637,452,0.637,453,0.637,454,0.637,455,0.637,456,0.637,457,0.637,458,0.637,459,0.637,460,0.637,461,0.637,462,1.154,463,1.154,464,1.48,465,0.637,466,0.637,467,0.96,468,0.637,469,0.652,470,1.154,471,1.154,472,0.637,473,0.652,474,0.637,475,0.652,476,0.96,477,0.637,478,1.079,479,0.652,480,0.652,481,0.637,482,0.652,483,0.637,484,0.637,485,0.96,486,0.652,487,0.96,488,0.96,489,0.96,490,1.313,491,0.637,492,0.652,493,0.652,494,0.96,495,0.637,496,0.652,497,0.652,498,0.507,499,0.637,500,1.511,501,1.511,502,0.96,503,0.623,504,0.623,505,0.623,506,0.96,507,0.637,508,0.637,509,0.637,510,1.256,511,1.546,512,0.623,513,0.623,514,0.96,515,1.313,516,1.313,517,0.637,518,0.637,519,0.652,520,0.652,521,0.652,522,0.652,523,0.96,524,0.623,525,0.623,526,1.128,527,0.96,528,0.637,529,0.637,530,0.637,531,0.96,532,0.652,533,0.319,534,0.637,535,0.569,536,1.251,537,1.349,538,1.318,539,1.511,540,0.917,541,0.652,542,0.637,543,0.519,544,0.637,545,0.637,546,1.154,547,0.652,548,0.652,549,0.96,550,0.652,551,0.652,552,0.637,553,0.652,554,1.318,555,0.652,556,1.48,557,0.652,558,0.652,559,0.652,560,0.652,561,0.652,562,1.154,563,0.652,564,0.652,565,0.652,566,0.652,567,0.652,568,0.637,569,0.652,570,0.652,571,0.652,572,0.652,573,0.652,574,0.652,575,0.652,576,0.652,577,0.652,578,0.652,579,0.652,580,0.637,581,0.652,582,1.2,583,0.652,584,0.652,585,0.652,586,0.652,587,0.652,588,0.96,589,0.652,590,0.637,591,0.652,592,0.652,593,0.652,594,0.652,595,0.652,596,0.637,597,0.637,598,0.652,599,0.652,600,0.652,601,0.637,602,0.637,603,0.652,604,0.652,605,0.637,606,0.652,607,0.652,608,0.652,609,0.652,610,0.637,611,0.652,612,0.637,613,0.652,614,0.652,615,0.637,616,0.652,617,0.652]],["title/interfaces/ConfirmationState.html",[232,0.2,345,0.902]],["body/interfaces/ConfirmationState.html",[0,0.149,3,0.028,4,0.041,5,0.028,7,0.034,8,0.471,12,0.743,25,0.261,29,0.009,30,0.462,31,0.249,33,0.264,45,0.342,67,0.119,81,0.578,84,0.591,89,0.605,109,0.686,133,0.886,161,1.518,184,0.314,191,0.003,192,0.005,193,0.003,220,0.647,232,0.404,234,0.404,237,0.491,245,0.413,280,0.97,281,0.514,282,0.647,283,0.662,284,1.883,285,0.565,286,0.97,287,1.386,288,0.647,289,0.97,290,0.647,291,1.164,292,0.647,293,1.164,294,0.647,295,0.647,296,0.647,297,0.949,298,0.97,299,0.647,300,0.647,301,0.647,302,0.647,303,0.647,304,1.237,305,0.97,306,0.647,307,0.647,308,0.633,309,0.647,310,0.647,311,0.97,312,0.949,313,0.949,314,0.662,315,1.323,316,0.97,317,0.647,318,0.647,319,0.662,320,0.97,321,0.647,322,0.647,323,1.164,324,0.647,325,0.949,326,1.164,327,0.647,328,0.618,329,0.647,330,0.647,331,0.662,332,0.647,333,1.518,334,0.633,335,0.647,336,0.647,337,0.647,338,0.647,339,1.476,340,1.164,341,0.647,342,0.647,343,0.647,344,0.647,345,0.949,346,0.97,347,0.886,348,0.647,349,1.265,350,0.647,351,0.662,352,0.662,353,1.191,354,0.662,355,0.662,356,0.647,357,0.97,358,0.647,359,0.662,360,0.662,361,0.633,362,1.265,363,0.662,364,0.662,365,0.662,366,0.662,367,0.662,368,0.949,369,0.647,370,0.647,371,0.647,372,0.647,373,0.647,374,0.647,375,0.97,376,0.647,377,0.949,378,0.647,379,0.647,380,0.647,381,0.647,382,0.647,383,0.647,384,0.647,385,0.647,386,0.647,387,0.647,388,0.647,389,0.647,390,0.647,391,0.647,392,0.647,393,0.647,394,0.97,395,0.647,396,0.647,397,0.647,398,0.647,399,0.647,400,0.647,401,0.647,402,1.138,403,0.647,404,0.647,405,0.97,406,0.647,407,0.647,408,0.647,409,0.647,410,1.265,411,0.647,412,0.662,413,0.647,414,0.647,415,0.647,416,1.265,417,0.647,418,0.97,419,0.647,420,1.164,421,0.647,422,0.97,423,0.647,424,1.294,425,0.647,426,0.949,427,0.647,428,0.97,429,0.647,430,0.647,431,0.647,432,0.97,433,0.647,434,0.949,435,0.662,436,0.662,437,0.647,438,0.647,439,0.949,440,0.928,441,0.886,442,0.647,443,0.605,444,1.184,445,1.447,446,0.647,447,0.647,448,0.647,449,0.647,450,0.647,451,0.647,452,0.647,453,0.647,454,0.647,455,0.647,456,0.647,457,0.647,458,0.647,459,0.647,460,0.647,461,0.647,462,1.164,463,1.164,464,1.488,465,0.647,466,0.647,467,0.97,468,0.647,469,0.662,470,1.164,471,1.164,472,0.647,473,0.662,474,0.647,475,0.662,476,0.97,477,0.647,478,1.088,479,0.662,480,0.662,481,0.647,482,0.662,483,0.647,484,0.647,485,0.97,486,0.662,487,0.97,488,0.97,489,0.97,490,1.323,491,0.647,492,0.662,493,0.662,494,0.97,495,0.647,496,0.662,497,0.662,498,0.514,499,0.647,500,1.138,501,1.138,502,0.97,503,0.633,504,0.633,505,0.633,506,0.97,507,0.647,508,0.647,509,0.647,510,0.949,511,1.164,512,0.633,513,0.633,514,0.647,515,0.662,516,0.662,517,0.647,518,0.647,519,0.662,520,0.662,521,0.662,522,0.662,523,0.97,524,0.633,525,0.633,526,1.138,527,0.97,528,0.647,529,0.647,530,0.647,531,0.97,532,0.662,533,0.323,534,0.647,535,0.578,536,1.252,537,1.354,538,1.324,539,1.518,540,0.928,541,0.662,542,0.647,543,0.527,544,0.647,545,0.647,546,1.164,547,0.662,548,0.662,549,0.97,550,0.662,551,0.662,552,0.647,553,0.662,554,1.324,555,0.662,556,1.488,557,0.662,558,0.662,559,0.662,560,0.662,561,0.662,562,1.164,563,0.662,564,0.662,565,0.662,566,0.662,567,0.662,568,0.647,569,0.662,570,0.662,571,0.662,572,0.662,573,0.662,574,0.662,575,0.662,576,0.662,577,0.662,578,0.662,579,0.662,580,0.647,581,0.662,582,1.209,583,0.662,584,0.662,585,0.662,586,0.662,587,0.662,588,0.97,589,0.662,590,0.647,591,0.662,592,0.662,593,0.662,594,0.662,595,0.662,596,0.647,597,0.647,598,0.662,599,0.662,600,0.662,601,0.647,602,0.647,603,0.662,604,0.662,605,0.647,606,0.662,607,0.662,608,0.662,609,0.662,610,0.647,611,0.662,612,0.647,613,0.662,614,0.662,615,0.647,616,0.662,617,0.662]],["title/classes/ConstantsInterceptorFactory.html",[0,0.213,792,3.714]],["body/classes/ConstantsInterceptorFactory.html",[0,0.314,2,1.458,3,0.058,4,0.058,5,0.058,7,0.071,14,1.244,17,3.19,18,1.059,26,0.962,28,1.791,29,0.009,30,0.379,31,0.213,32,1.034,33,0.196,41,1.059,51,1.157,55,2.915,56,4.312,57,1.831,58,1.791,59,2.248,67,0.106,76,1.395,79,1.034,145,5.628,190,1.491,191,0.006,192,0.007,193,0.006,232,0.295,237,1.034,621,5.834,624,5.549,625,4.729,629,4.312,685,2.492,792,6.847,793,6.011,794,3.347,795,6.801,796,6.801,797,6.011,798,5.102,799,6.011,800,6.011]],["title/classes/ContentBuilder.html",[0,0.213,646,2.302]],["body/classes/ContentBuilder.html",[0,0.267,2,1.237,3,0.049,4,0.049,5,0.049,7,0.06,8,0.704,12,1.112,14,1.125,16,2.956,18,1.449,22,3.617,25,0.584,26,1.281,28,1.911,29,0.009,30,0.474,31,0.238,32,1.296,33,0.265,41,1.125,51,1.047,57,1.657,58,1.621,59,1.907,61,1.293,67,0.098,71,3.493,76,1.183,79,1.357,190,1.585,191,0.005,192,0.007,193,0.005,203,2.16,232,0.25,533,0.791,543,1.419,646,3.95,647,4.238,648,4.781,650,4.007,651,4.443,652,4.581,653,4.581,654,4.581,655,4.581,656,3.95,665,3.493,666,4.894,668,3.493,670,5.046,671,3.493,673,3.493,776,4.088,778,4.088,781,3.216,801,5.098,802,4.656,803,7.227,804,5.767,805,5.767,806,5.767,807,5.767,808,5.767,809,5.767,810,5.767,811,5.767,812,4.064,813,4.064,814,5.098,815,5.098,816,7.532,817,5.098,818,5.098,819,4.064,820,4.064,821,5.098,822,4.064,823,4.064]],["title/classes/ContentBuilder-1.html",[0,0.178,194,2.241,646,1.933]],["body/classes/ContentBuilder-1.html",[0,0.299,2,1.04,3,0.041,4,0.041,5,0.041,7,0.051,8,0.629,9,4.013,12,1.084,14,1.006,16,2.94,18,1.407,19,3.233,22,3.636,25,0.522,26,1.174,28,1.087,29,0.009,30,0.449,31,0.207,32,0.737,33,0.257,41,1.006,51,1.053,57,1.481,58,1.449,59,1.603,60,2.604,61,1.087,64,5.117,65,3.233,67,0.096,71,2.937,76,1.49,79,1.408,92,3.108,100,3.233,101,5.287,109,0.458,113,4.307,126,3.749,131,3.417,135,4.217,159,3.417,172,6.201,183,3.03,184,0.629,185,4.552,190,1.417,191,0.005,192,0.006,193,0.005,203,1.816,232,0.21,347,0.888,443,0.909,533,0.809,646,3.636,647,3.901,648,4.719,650,3.752,651,4.16,656,4.307,666,4.333,726,3.075,742,3.638,743,3.638,744,3.913,746,3.638,747,4.552,775,4.887,776,4.656,777,4.817,778,4.656,781,4.628,784,3.417,788,3.638,789,4.097,802,3.915,812,3.417,813,3.417,819,3.417,820,3.417,822,3.417,823,3.417,824,3.915,825,6.461,826,4.849,827,4.849,828,4.849,829,4.849,830,4.847,831,3.915,832,6.256,833,5.216,834,3.915,835,3.915,836,3.915,837,5.866,838,3.915,839,2.604,840,3.915,841,3.915,842,3.915,843,3.915,844,3.417,845,3.915,846,6.054,847,5.216,848,3.915,849,3.915,850,5.866,851,3.915,852,3.915,853,3.915,854,5.216,855,3.915,856,3.915,857,3.915,858,3.915,859,3.915,860,3.915,861,3.915,862,5.216,863,3.915,864,3.915,865,3.915,866,3.915]],["title/interfaces/CreativeWork.html",[232,0.2,317,0.922]],["body/interfaces/CreativeWork.html",[0,0.149,3,0.027,4,0.041,5,0.027,7,0.034,8,0.47,12,0.741,25,0.26,29,0.009,30,0.475,31,0.25,33,0.265,45,0.341,67,0.119,81,0.576,84,0.589,89,0.603,109,0.685,133,0.884,161,1.517,184,0.313,191,0.003,192,0.005,193,0.003,220,0.645,232,0.403,234,0.403,237,0.489,245,0.411,280,0.968,281,0.513,282,0.645,283,0.66,284,1.882,285,0.563,286,0.968,287,1.384,288,0.645,289,0.968,290,0.645,291,1.162,292,0.645,293,1.162,294,0.645,295,0.645,296,0.645,297,0.947,298,1.292,299,0.645,300,0.645,301,0.645,302,0.645,303,0.645,304,1.235,305,0.968,306,0.645,307,0.645,308,0.631,309,0.645,310,0.645,311,0.968,312,0.947,313,0.947,314,0.66,315,1.321,316,0.968,317,0.968,318,0.645,319,1.321,320,0.968,321,0.645,322,0.645,323,1.162,324,0.645,325,0.947,326,1.162,327,0.645,328,0.617,329,0.645,330,0.645,331,0.66,332,0.645,333,1.136,334,0.631,335,0.645,336,0.645,337,0.645,338,0.645,339,1.474,340,1.162,341,0.645,342,0.645,343,0.645,344,0.645,345,0.631,346,0.968,347,0.884,348,0.645,349,1.263,350,0.645,351,0.66,352,0.66,353,1.189,354,0.66,355,0.66,356,0.645,357,0.968,358,0.645,359,0.66,360,0.66,361,0.631,362,1.263,363,0.66,364,0.66,365,0.66,366,0.66,367,0.66,368,0.947,369,0.645,370,0.645,371,0.645,372,0.645,373,0.645,374,0.645,375,0.968,376,0.645,377,0.947,378,0.645,379,0.645,380,0.645,381,0.645,382,0.645,383,0.645,384,0.645,385,0.645,386,0.645,387,0.645,388,0.645,389,0.645,390,0.645,391,0.645,392,0.645,393,0.645,394,0.968,395,0.645,396,0.645,397,0.645,398,0.645,399,0.645,400,0.645,401,0.645,402,1.136,403,0.645,404,0.645,405,0.968,406,0.645,407,0.645,408,0.645,409,0.645,410,1.263,411,0.645,412,0.66,413,0.645,414,0.645,415,0.645,416,1.263,417,0.645,418,0.968,419,0.645,420,1.162,421,0.645,422,0.968,423,0.645,424,1.292,425,0.645,426,0.947,427,0.645,428,0.968,429,0.645,430,0.645,431,0.645,432,0.968,433,0.645,434,0.947,435,0.66,436,0.66,437,0.645,438,0.645,439,0.947,440,0.925,441,0.884,442,0.645,443,0.603,444,1.183,445,1.446,446,0.645,447,0.645,448,0.645,449,0.645,450,0.645,451,0.645,452,0.645,453,0.645,454,0.645,455,0.645,456,0.645,457,0.645,458,0.645,459,0.645,460,0.645,461,0.645,462,1.162,463,1.162,464,1.487,465,0.645,466,0.645,467,0.968,468,0.645,469,0.66,470,1.162,471,1.162,472,0.645,473,0.66,474,0.645,475,0.66,476,0.968,477,0.645,478,1.086,479,0.66,480,0.66,481,0.645,482,0.66,483,0.645,484,0.645,485,0.968,486,0.66,487,0.968,488,0.968,489,0.968,490,1.321,491,0.645,492,0.66,493,0.66,494,0.968,495,0.645,496,0.66,497,0.66,498,0.513,499,0.645,500,1.136,501,1.136,502,0.968,503,0.631,504,0.631,505,0.631,506,0.968,507,0.645,508,0.645,509,0.645,510,0.947,511,1.162,512,0.631,513,0.631,514,0.645,515,0.66,516,0.66,517,0.645,518,0.645,519,0.66,520,0.66,521,0.66,522,0.66,523,0.968,524,0.631,525,0.631,526,1.136,527,0.968,528,0.645,529,0.645,530,0.645,531,0.968,532,0.66,533,0.322,534,0.645,535,0.576,536,1.252,537,1.353,538,1.323,539,1.517,540,0.925,541,0.66,542,0.645,543,0.525,544,0.645,545,0.645,546,1.162,547,0.66,548,0.66,549,0.968,550,0.66,551,0.66,552,0.645,553,0.66,554,1.323,555,0.66,556,1.487,557,0.66,558,0.66,559,0.66,560,0.66,561,0.66,562,1.162,563,0.66,564,0.66,565,0.66,566,0.66,567,0.66,568,0.645,569,0.66,570,0.66,571,0.66,572,0.66,573,0.66,574,0.66,575,0.66,576,0.66,577,0.66,578,0.66,579,0.66,580,0.645,581,0.66,582,1.207,583,0.66,584,0.66,585,0.66,586,0.66,587,0.66,588,0.968,589,0.66,590,0.645,591,0.66,592,0.66,593,0.66,594,0.66,595,0.66,596,0.645,597,0.645,598,0.66,599,0.66,600,0.66,601,0.645,602,0.645,603,0.66,604,0.66,605,0.645,606,0.66,607,0.66,608,0.66,609,0.66,610,0.645,611,0.66,612,0.645,613,0.66,614,0.66,615,0.645,616,0.66,617,0.66]],["title/interfaces/CustomHandlerInput.html",[232,0.2,867,2.67]],["body/interfaces/CustomHandlerInput.html",[0,0.388,3,0.051,4,0.051,5,0.051,7,0.063,8,0.722,18,0.937,24,4.121,25,0.6,29,0.009,31,0.23,33,0.173,45,0.891,51,1.217,55,3.149,57,1.845,58,1.664,59,1.989,61,1.349,67,0.114,68,3.008,76,1.522,79,1.378,109,0.794,166,4.137,184,0.783,190,1.319,191,0.006,192,0.007,193,0.006,232,0.374,234,0.619,244,3.984,245,0.949,533,0.603,628,2.778,682,3.501,684,3.596,685,1.768,686,3.23,702,3.699,839,3.984,867,4.306,868,3.491,869,4.874,870,4.872,871,3.491,872,3.23,873,5.167,874,5.446,875,4.493,876,4.874,877,3.643,878,4.669,879,3.643,880,3.643,881,3.643,882,4.493,883,3.643,884,3.491,885,4.306,886,3.843,887,4.306,888,4.306,889,4.306,890,3.643,891,4.493,892,3.491]],["title/interfaces/CustomeRequestEnvelope.html",[232,0.2,869,2.67]],["body/interfaces/CustomeRequestEnvelope.html",[0,0.388,3,0.051,4,0.051,5,0.051,7,0.063,8,0.722,18,0.937,24,3.94,25,0.6,29,0.009,31,0.23,33,0.173,45,0.891,51,1.217,55,3.065,57,1.845,58,1.664,59,1.989,61,1.349,67,0.114,68,3.008,76,1.522,79,1.378,109,0.794,166,4.137,184,0.783,190,1.319,191,0.006,192,0.007,193,0.006,232,0.374,234,0.619,244,3.984,245,1.104,533,0.603,628,2.778,682,3.501,684,3.596,685,1.768,686,3.23,702,3.699,839,3.984,867,3.491,868,3.491,869,4.669,870,4.872,871,3.491,872,3.23,873,5.167,874,5.446,875,4.493,876,4.874,877,4.872,878,4.669,879,3.643,880,3.643,881,3.643,882,4.493,883,3.643,884,3.491,885,4.306,886,3.843,887,4.306,888,4.306,889,4.306,890,3.643,891,4.493,892,3.491]],["title/classes/DBClient.html",[0,0.213,893,3.451]],["body/classes/DBClient.html",[0,0.267,2,1.241,3,0.049,4,0.049,5,0.049,7,0.061,8,0.705,11,5.522,14,1.128,16,2.957,17,4.081,18,1.39,22,3.624,25,0.639,26,1.248,28,1.772,29,0.009,30,0.44,31,0.235,32,1.202,33,0.266,40,3.106,41,1.128,45,0.879,51,1.049,58,1.297,67,0.098,75,5.686,76,1.699,79,1.202,90,2.554,91,2.554,92,2.166,93,2.554,94,2.412,95,2.554,96,2.554,97,5.017,102,5.522,104,4.203,125,5.017,126,4.95,152,5.951,184,0.705,191,0.008,192,0.007,193,0.005,199,5.57,232,0.314,237,1.101,273,4.038,498,1.321,631,3.504,637,5.66,893,5.433,894,4.671,895,6.688,896,5.785,897,6.528,898,6.215,899,7.241,900,7.025,901,5.785,902,5.785,903,5.785,904,5.785,905,5.785,906,5.785,907,6.215,908,5.785,909,4.671,910,4.671,911,4.671,912,4.671,913,4.671,914,6.382,915,4.671,916,6.382,917,4.671,918,5.846,919,4.671,920,4.671,921,5.846,922,4.671]],["title/interfaces/DBConfig.html",[232,0.2,898,3.451]],["body/interfaces/DBConfig.html",[0,0.283,3,0.052,4,0.052,5,0.052,7,0.064,8,0.73,11,5.781,16,2.728,17,3.519,18,1.263,22,3.066,25,0.683,29,0.009,31,0.216,32,1.342,33,0.262,45,0.796,51,1.087,58,1.374,67,0.101,75,5.781,76,1.733,79,1.233,90,2.704,91,2.704,92,2.294,93,2.704,94,2.553,95,2.704,96,2.704,97,5.119,102,5.634,104,4.354,125,4.544,126,5.032,152,5.882,184,0.73,191,0.008,192,0.007,193,0.006,199,4.316,232,0.326,234,0.511,237,1.141,273,4.183,498,1.383,631,3.71,637,5.498,893,4.595,894,4.945,895,7.001,897,6.341,898,6.084,900,7.215,907,5.628,909,4.945,910,4.945,911,4.945,912,4.945,913,4.945,914,6.547,915,4.945,916,6.547,917,4.945,918,6.057,919,4.945,920,4.945,921,6.057,922,4.945]],["title/interfaces/DBItem.html",[232,0.2,907,3.451]],["body/interfaces/DBItem.html",[0,0.289,3,0.053,4,0.053,5,0.053,11,5.065,16,2.747,17,3.564,18,1.275,22,3.13,25,0.614,26,0.884,29,0.009,33,0.261,45,0.806,51,1.101,58,1.403,67,0.102,75,5.815,76,1.746,79,1.245,90,2.761,91,2.761,92,2.342,93,2.761,94,2.607,95,2.761,96,2.761,97,5.156,102,5.675,104,4.41,125,4.602,126,5.062,152,5.912,184,0.74,191,0.008,192,0.007,193,0.006,199,4.407,232,0.33,234,0.522,236,4.693,237,1.245,273,4.237,498,1.212,631,3.788,637,5.531,893,4.693,894,5.05,895,6.135,897,6.386,898,5.7,900,7.042,907,6.14,909,5.05,910,5.05,911,5.05,912,5.05,913,5.05,914,6.608,915,5.05,916,6.608,917,5.05,918,6.135,919,5.05,920,5.05,921,6.135,922,5.05,923,6.255]],["title/classes/DeviceAPIClient.html",[0,0.213,924,4.066]],["body/classes/DeviceAPIClient.html",[0,0.309,2,1.433,3,0.057,4,0.057,5,0.057,7,0.07,8,0.77,14,1.231,16,2.718,17,4.224,18,1.402,26,1.191,28,1.773,29,0.009,30,0.44,31,0.224,32,1.202,33,0.262,41,1.231,45,0.923,51,1.146,57,1.533,58,1.499,60,3.589,61,1.499,67,0.083,79,1.202,109,0.747,190,1.466,191,0.006,192,0.007,193,0.006,196,5.613,203,2.503,498,1.388,924,6.988,925,6.684,926,8.42,927,8.42,928,7.907,929,6.684,930,6.684,931,6.684,932,7.692,933,6.684,934,6.684,935,6.684,936,6.684]],["title/interfaces/DynamoDBSkillConfig.html",[232,0.2,636,3.066]],["body/interfaces/DynamoDBSkillConfig.html",[3,0.058,4,0.058,5,0.058,7,0.071,8,0.774,25,0.545,29,0.009,31,0.225,33,0.256,51,1.152,57,1.823,58,1.512,67,0.109,109,0.799,191,0.006,192,0.007,193,0.006,232,0.379,234,0.563,618,6.15,619,4.277,620,4.753,621,4.496,622,5.06,623,6.467,624,4.277,625,4.432,626,5.299,627,4.814,628,2.977,629,4.277,630,4.753,631,4.814,632,5.601,633,5.299,634,5.06,635,5.06,636,5.634,637,5.535,638,4.753,639,4.277,640,4.496,641,4.496,642,4.496,643,4.496]],["title/interfaces/ErrorHandlerBuilder.html",[232,0.2,937,3.714]],["body/interfaces/ErrorHandlerBuilder.html",[0,0.249,3,0.046,4,0.046,5,0.046,7,0.056,14,1.077,18,0.838,24,2.524,26,1.081,28,1.551,29,0.009,30,0.385,31,0.204,32,1.052,33,0.26,41,1.19,45,0.571,51,1.209,55,3.117,57,1.85,58,1.714,59,1.779,61,1.207,67,0.106,68,2.182,76,1.823,79,1.338,94,3.186,191,0.005,192,0.006,193,0.005,232,0.234,234,0.449,237,0.818,245,0.688,533,0.693,535,0.964,540,1.032,625,3.857,627,5.427,650,3.701,682,2.243,684,3.363,685,1.581,687,5.041,689,4.436,702,3.459,703,4.189,740,5.584,744,4.189,756,6.171,776,3.583,778,4.178,786,5.563,789,4.386,794,2.124,798,4.037,844,3.792,937,7.013,938,6.513,939,4.345,940,6.756,941,5.381,942,6.113,943,5.381,944,6.895,945,5.381,946,6.113,947,4.757,948,4.757,949,4.757,950,4.757,951,6.513,952,4.757,953,6.113,954,6.113,955,4.757,956,6.113,957,4.757,958,6.113,959,4.757,960,6.113,961,6.113,962,6.113,963,7.13,964,6.113,965,6.113,966,6.113,967,4.345,968,6.171,969,4.757,970,4.757,971,4.757,972,4.757,973,4.757,974,4.757,975,4.757,976,4.757,977,4.757,978,6.113,979,4.757,980,4.757,981,4.757,982,4.757,983,6.113,984,4.345,985,3.792,986,4.757,987,4.757,988,4.757,989,4.757,990,4.757,991,4.757,992,4.757,993,4.757,994,4.757,995,4.757,996,4.757,997,4.757,998,4.757,999,4.757,1000,4.757,1001,4.757,1002,4.757,1003,4.757,1004,4.757]],["title/interfaces/Factory.html",[232,0.2,540,0.882]],["body/interfaces/Factory.html",[0,0.147,3,0.027,4,0.041,5,0.027,7,0.033,12,0.82,14,0.747,25,0.258,26,0.678,28,0.715,29,0.009,30,0.466,31,0.249,32,0.485,33,0.266,41,0.747,45,0.338,67,0.119,81,0.571,84,0.584,89,0.598,109,0.683,133,0.879,161,1.513,184,0.31,191,0.003,192,0.004,193,0.003,220,0.639,232,0.403,234,0.4,237,0.877,245,0.408,280,0.962,281,0.919,282,0.639,283,0.654,284,1.881,285,0.558,286,0.962,287,1.379,288,0.639,289,0.962,290,0.639,291,1.156,292,0.639,293,1.156,294,0.639,295,0.639,296,0.639,297,0.94,298,0.962,299,0.639,300,0.639,301,0.639,302,0.639,303,0.639,304,1.23,305,0.962,306,0.639,307,0.639,308,0.625,309,0.639,310,0.639,311,0.962,312,0.94,313,0.94,314,0.654,315,1.315,316,0.962,317,0.639,318,0.639,319,0.654,320,0.962,321,0.639,322,0.639,323,1.156,324,0.639,325,0.94,326,1.156,327,0.639,328,0.611,329,0.639,330,0.639,331,0.654,332,0.639,333,1.13,334,0.625,335,0.639,336,0.639,337,0.639,338,0.639,339,1.47,340,1.156,341,0.639,342,0.639,343,0.639,344,0.639,345,0.625,346,0.962,347,0.879,348,0.639,349,1.258,350,0.639,351,0.654,352,0.654,353,1.182,354,0.654,355,0.654,356,0.639,357,0.962,358,0.639,359,0.654,360,0.654,361,0.625,362,1.258,363,0.654,364,0.654,365,0.654,366,0.654,367,0.654,368,0.94,369,0.639,370,0.639,371,0.639,372,0.639,373,0.639,374,0.639,375,0.962,376,0.639,377,0.94,378,0.639,379,0.639,380,0.639,381,0.639,382,0.639,383,0.639,384,0.639,385,0.639,386,0.639,387,0.639,388,0.639,389,0.639,390,0.639,391,0.639,392,0.639,393,0.639,394,0.962,395,0.639,396,0.639,397,0.639,398,0.639,399,0.639,400,0.639,401,0.639,402,1.13,403,0.639,404,0.639,405,0.962,406,0.639,407,0.639,408,0.639,409,0.639,410,1.258,411,0.639,412,0.654,413,0.639,414,0.639,415,0.639,416,1.258,417,0.639,418,0.962,419,0.639,420,1.156,421,0.639,422,0.962,423,0.639,424,1.286,425,0.639,426,0.94,427,0.639,428,0.962,429,0.639,430,0.639,431,0.639,432,0.962,433,0.639,434,0.94,435,0.654,436,0.654,437,0.639,438,0.639,439,0.94,440,0.919,441,0.879,442,0.639,443,0.598,444,1.182,445,1.444,446,0.639,447,0.639,448,0.639,449,0.639,450,0.639,451,0.639,452,0.639,453,0.639,454,0.639,455,0.639,456,0.639,457,0.639,458,0.639,459,0.639,460,0.639,461,0.639,462,1.156,463,1.156,464,1.482,465,0.639,466,0.639,467,0.962,468,0.639,469,0.654,470,1.156,471,1.156,472,0.639,473,0.654,474,0.639,475,0.654,476,0.962,477,0.639,478,1.081,479,0.654,480,0.654,481,0.639,482,0.654,483,0.639,484,0.639,485,0.962,486,0.654,487,0.962,488,0.962,489,0.962,490,1.315,491,0.639,492,0.654,493,0.654,494,0.962,495,0.639,496,0.654,497,0.654,498,0.508,499,0.639,500,1.13,501,1.13,502,0.962,503,0.625,504,0.625,505,0.625,506,0.962,507,0.639,508,0.639,509,0.639,510,0.94,511,1.156,512,0.625,513,0.625,514,0.639,515,0.654,516,0.654,517,0.639,518,0.639,519,0.654,520,0.654,521,0.654,522,0.654,523,0.962,524,0.625,525,0.625,526,1.13,527,0.962,528,0.639,529,0.639,530,0.639,531,0.962,532,0.654,533,0.32,534,0.639,535,0.571,536,1.251,537,1.35,538,1.319,539,1.513,540,1.23,541,0.984,542,1.156,543,0.941,544,1.286,545,0.962,546,1.156,547,0.654,548,0.654,549,0.962,550,0.654,551,0.654,552,0.639,553,0.654,554,1.319,555,0.654,556,1.482,557,0.654,558,0.654,559,0.654,560,0.654,561,0.654,562,1.156,563,0.654,564,0.654,565,0.654,566,0.654,567,0.654,568,0.639,569,0.654,570,0.654,571,0.654,572,0.654,573,0.654,574,0.654,575,0.654,576,0.654,577,0.654,578,0.654,579,0.654,580,0.639,581,0.654,582,1.202,583,0.654,584,0.654,585,0.654,586,0.654,587,0.654,588,0.962,589,0.654,590,0.639,591,0.654,592,0.654,593,0.654,594,0.654,595,0.654,596,0.639,597,0.639,598,0.654,599,0.654,600,0.654,601,0.639,602,0.639,603,0.654,604,0.654,605,0.639,606,0.654,607,0.654,608,0.654,609,0.654,610,0.639,611,0.654,612,0.639,613,0.654,614,0.654,615,0.639,616,0.654,617,0.654,1005,4.239,1006,3.188,1007,3.188]],["title/classes/FallbackIntentFactory.html",[0,0.213,889,2.67]],["body/classes/FallbackIntentFactory.html",[0,0.386,2,1.273,3,0.051,4,0.051,5,0.051,7,0.062,14,1.146,18,0.924,24,3.75,25,0.646,26,1.04,28,1.331,29,0.009,30,0.33,31,0.229,32,0.902,33,0.171,41,1.146,45,0.887,51,1.211,55,3.051,57,1.833,58,1.65,59,1.962,61,1.331,67,0.113,68,2.983,76,1.509,79,1.375,109,0.756,166,4.102,184,0.778,190,1.301,191,0.006,192,0.007,193,0.006,232,0.373,234,0.495,244,4.293,245,0.941,533,0.595,628,2.755,682,3.484,684,3.7,685,1.744,686,3.186,702,3.755,839,4.614,867,3.444,868,3.444,869,4.269,870,4.842,871,3.444,872,3.186,873,5.248,874,5.432,875,4.455,876,4.987,877,3.594,878,4.851,879,3.594,880,4.455,881,3.594,882,4.455,883,3.594,884,3.444,885,4.269,886,3.81,887,4.269,888,4.269,889,4.64,890,3.594,891,4.455,892,3.444,1008,5.934,1009,5.934]],["title/interfaces/FlashBriefingContent.html",[232,0.2,1010,3.714]],["body/interfaces/FlashBriefingContent.html",[3,0.058,4,0.058,5,0.058,7,0.072,8,0.779,29,0.009,31,0.243,32,1.217,33,0.272,67,0.1,142,5.506,191,0.006,192,0.007,193,0.006,232,0.296,234,0.569,347,1.249,1010,6.855,1011,6.028,1012,5.116,1013,6.82,1014,8.001,1015,6.82,1016,6.82,1017,6.82,1018,6.82,1019,8.759,1020,8.759,1021,8.759,1022,8.759,1023,8.759,1024,8.759,1025,6.028]],["title/interfaces/Game.html",[232,0.2,304,0.882]],["body/interfaces/Game.html",[0,0.149,3,0.027,4,0.041,5,0.027,7,0.034,8,0.47,12,0.741,25,0.26,29,0.009,30,0.475,31,0.25,33,0.265,45,0.341,67,0.119,81,0.576,84,0.589,89,0.603,109,0.685,133,0.884,161,1.517,184,0.313,191,0.003,192,0.005,193,0.003,220,0.645,232,0.403,234,0.403,237,0.489,245,0.411,280,0.968,281,0.513,282,0.645,283,0.66,284,1.882,285,0.563,286,0.968,287,1.384,288,0.645,289,0.968,290,0.645,291,1.162,292,0.645,293,1.162,294,0.645,295,0.645,296,0.645,297,0.947,298,0.968,299,0.645,300,0.645,301,0.645,302,0.645,303,0.645,304,1.323,305,0.968,306,0.645,307,0.645,308,0.631,309,0.645,310,0.645,311,0.968,312,0.947,313,0.947,314,0.66,315,1.321,316,0.968,317,0.645,318,0.645,319,0.66,320,1.292,321,0.645,322,0.645,323,1.162,324,0.645,325,0.947,326,1.162,327,0.645,328,0.617,329,0.645,330,0.645,331,1.321,332,0.645,333,1.136,334,0.631,335,0.645,336,0.645,337,0.645,338,0.645,339,1.474,340,1.162,341,0.645,342,0.645,343,0.645,344,0.645,345,0.631,346,0.968,347,0.884,348,0.645,349,1.263,350,0.645,351,0.66,352,0.66,353,1.189,354,0.66,355,0.66,356,0.645,357,0.968,358,0.645,359,0.66,360,0.66,361,0.631,362,1.263,363,0.66,364,0.66,365,0.66,366,0.66,367,0.66,368,0.947,369,0.645,370,0.645,371,0.645,372,0.645,373,0.645,374,0.645,375,0.968,376,0.645,377,0.947,378,0.645,379,0.645,380,0.645,381,0.645,382,0.645,383,0.645,384,0.645,385,0.645,386,0.645,387,0.645,388,0.645,389,0.645,390,0.645,391,0.645,392,0.645,393,0.645,394,0.968,395,0.645,396,0.645,397,0.645,398,0.645,399,0.645,400,0.645,401,0.645,402,1.136,403,0.645,404,0.645,405,0.968,406,0.645,407,0.645,408,0.645,409,0.645,410,1.263,411,0.645,412,0.66,413,0.645,414,0.645,415,0.645,416,1.263,417,0.645,418,0.968,419,0.645,420,1.162,421,0.645,422,0.968,423,0.645,424,1.292,425,0.645,426,0.947,427,0.645,428,0.968,429,0.645,430,0.645,431,0.645,432,0.968,433,0.645,434,0.947,435,0.66,436,0.66,437,0.645,438,0.645,439,0.947,440,0.925,441,0.884,442,0.645,443,0.603,444,1.183,445,1.446,446,0.645,447,0.645,448,0.645,449,0.645,450,0.645,451,0.645,452,0.645,453,0.645,454,0.645,455,0.645,456,0.645,457,0.645,458,0.645,459,0.645,460,0.645,461,0.645,462,1.162,463,1.162,464,1.487,465,0.645,466,0.645,467,0.968,468,0.645,469,0.66,470,1.162,471,1.162,472,0.645,473,0.66,474,0.645,475,0.66,476,0.968,477,0.645,478,1.086,479,0.66,480,0.66,481,0.645,482,0.66,483,0.645,484,0.645,485,0.968,486,0.66,487,0.968,488,0.968,489,0.968,490,1.321,491,0.645,492,0.66,493,0.66,494,0.968,495,0.645,496,0.66,497,0.66,498,0.513,499,0.645,500,1.136,501,1.136,502,0.968,503,0.631,504,0.631,505,0.631,506,0.968,507,0.645,508,0.645,509,0.645,510,0.947,511,1.162,512,0.631,513,0.631,514,0.645,515,0.66,516,0.66,517,0.645,518,0.645,519,0.66,520,0.66,521,0.66,522,0.66,523,0.968,524,0.631,525,0.631,526,1.136,527,0.968,528,0.645,529,0.645,530,0.645,531,0.968,532,0.66,533,0.322,534,0.645,535,0.576,536,1.252,537,1.353,538,1.323,539,1.517,540,0.925,541,0.66,542,0.645,543,0.525,544,0.645,545,0.645,546,1.162,547,0.66,548,0.66,549,0.968,550,0.66,551,0.66,552,0.645,553,0.66,554,1.323,555,0.66,556,1.487,557,0.66,558,0.66,559,0.66,560,0.66,561,0.66,562,1.162,563,0.66,564,0.66,565,0.66,566,0.66,567,0.66,568,0.645,569,0.66,570,0.66,571,0.66,572,0.66,573,0.66,574,0.66,575,0.66,576,0.66,577,0.66,578,0.66,579,0.66,580,0.645,581,0.66,582,1.207,583,0.66,584,0.66,585,0.66,586,0.66,587,0.66,588,0.968,589,0.66,590,0.645,591,0.66,592,0.66,593,0.66,594,0.66,595,0.66,596,0.645,597,0.645,598,0.66,599,0.66,600,0.66,601,0.645,602,0.645,603,0.66,604,0.66,605,0.645,606,0.66,607,0.66,608,0.66,609,0.66,610,0.645,611,0.66,612,0.645,613,0.66,614,0.66,615,0.645,616,0.66,617,0.66]],["title/interfaces/GameInvite.html",[232,0.2,329,0.922]],["body/interfaces/GameInvite.html",[0,0.148,3,0.027,4,0.041,5,0.027,7,0.034,8,0.469,12,0.74,25,0.259,29,0.009,30,0.461,31,0.25,33,0.264,45,0.34,67,0.119,81,0.574,84,0.587,89,0.601,109,0.684,133,0.882,161,1.515,184,0.312,191,0.003,192,0.004,193,0.003,220,0.643,232,0.403,234,0.402,237,0.488,245,0.41,280,0.966,281,0.511,282,0.643,283,0.658,284,1.882,285,0.561,286,0.966,287,1.383,288,0.643,289,0.966,290,0.643,291,1.16,292,0.643,293,1.16,294,0.643,295,0.643,296,0.643,297,1.261,298,0.966,299,0.643,300,0.643,301,0.643,302,0.643,303,0.643,304,1.233,305,0.966,306,0.643,307,0.643,308,0.629,309,0.643,310,0.643,311,0.966,312,0.944,313,0.944,314,0.658,315,1.319,316,0.966,317,0.643,318,0.643,319,0.658,320,0.966,321,0.643,322,0.643,323,1.55,324,0.643,325,0.944,326,1.55,327,0.643,328,0.615,329,0.966,330,1.29,331,0.658,332,0.643,333,1.134,334,0.629,335,0.643,336,0.643,337,0.643,338,0.643,339,1.473,340,1.16,341,0.643,342,0.643,343,0.643,344,0.643,345,0.629,346,0.966,347,0.882,348,0.643,349,1.261,350,0.643,351,0.658,352,0.658,353,1.186,354,0.658,355,0.658,356,0.643,357,0.966,358,0.643,359,0.658,360,0.658,361,0.629,362,1.261,363,0.658,364,0.658,365,0.658,366,0.658,367,0.658,368,0.944,369,0.643,370,0.643,371,0.643,372,0.643,373,0.643,374,0.643,375,0.966,376,0.643,377,0.944,378,0.643,379,0.643,380,0.643,381,0.643,382,0.643,383,0.643,384,0.643,385,0.643,386,0.643,387,0.643,388,0.643,389,0.643,390,0.643,391,0.643,392,0.643,393,0.643,394,0.966,395,0.643,396,0.643,397,0.643,398,0.643,399,0.643,400,0.643,401,0.643,402,1.134,403,0.643,404,0.643,405,0.966,406,0.643,407,0.643,408,0.643,409,0.643,410,1.261,411,0.643,412,0.658,413,0.643,414,0.643,415,0.643,416,1.261,417,0.643,418,0.966,419,0.643,420,1.16,421,0.643,422,0.966,423,0.643,424,1.29,425,0.643,426,0.944,427,0.643,428,0.966,429,0.643,430,0.643,431,0.643,432,0.966,433,0.643,434,0.944,435,0.658,436,0.658,437,0.643,438,0.643,439,0.944,440,0.923,441,0.882,442,0.643,443,0.601,444,1.183,445,1.445,446,0.643,447,0.643,448,0.643,449,0.643,450,0.643,451,0.643,452,0.643,453,0.643,454,0.643,455,0.643,456,0.643,457,0.643,458,0.643,459,0.643,460,0.643,461,0.643,462,1.16,463,1.16,464,1.485,465,0.643,466,0.643,467,0.966,468,0.643,469,0.658,470,1.16,471,1.16,472,0.643,473,0.658,474,0.643,475,0.658,476,0.966,477,0.643,478,1.084,479,0.658,480,0.658,481,0.643,482,0.658,483,0.643,484,0.643,485,0.966,486,0.658,487,0.966,488,0.966,489,0.966,490,1.319,491,0.643,492,0.658,493,0.658,494,0.966,495,0.643,496,0.658,497,0.658,498,0.511,499,0.643,500,1.134,501,1.134,502,0.966,503,0.629,504,0.629,505,0.629,506,0.966,507,0.643,508,0.643,509,0.643,510,0.944,511,1.16,512,0.629,513,0.629,514,0.643,515,0.658,516,0.658,517,0.643,518,0.643,519,0.658,520,0.658,521,0.658,522,0.658,523,0.966,524,0.629,525,0.629,526,1.134,527,0.966,528,0.643,529,0.643,530,0.643,531,0.966,532,0.658,533,0.321,534,0.643,535,0.574,536,1.252,537,1.352,538,1.322,539,1.515,540,0.923,541,0.658,542,0.643,543,0.523,544,0.643,545,0.643,546,1.16,547,0.658,548,0.658,549,0.966,550,0.658,551,0.658,552,0.643,553,0.658,554,1.322,555,0.658,556,1.485,557,0.658,558,0.658,559,0.658,560,0.658,561,0.658,562,1.16,563,0.658,564,0.658,565,0.658,566,0.658,567,0.658,568,0.643,569,0.658,570,0.658,571,0.658,572,0.658,573,0.658,574,0.658,575,0.658,576,0.658,577,0.658,578,0.658,579,0.658,580,0.643,581,0.658,582,1.205,583,0.658,584,0.658,585,0.658,586,0.658,587,0.658,588,0.966,589,0.658,590,0.643,591,0.658,592,0.658,593,0.658,594,0.658,595,0.658,596,0.643,597,0.643,598,0.658,599,0.658,600,0.658,601,0.643,602,0.643,603,0.658,604,0.658,605,0.643,606,0.658,607,0.658,608,0.658,609,0.658,610,0.643,611,0.658,612,0.643,613,0.658,614,0.658,615,0.643,616,0.658,617,0.658]],["title/interfaces/GameStatistic.html",[232,0.2,420,0.922]],["body/interfaces/GameStatistic.html",[0,0.149,3,0.027,4,0.041,5,0.027,7,0.034,8,0.47,12,0.741,25,0.26,29,0.009,30,0.462,31,0.25,33,0.264,45,0.341,67,0.119,81,0.576,84,0.589,89,0.603,109,0.685,133,0.884,161,1.569,184,0.313,191,0.003,192,0.005,193,0.003,220,0.645,232,0.403,234,0.403,237,0.489,245,0.411,280,0.968,281,0.513,282,0.645,283,0.66,284,1.882,285,0.563,286,0.968,287,1.384,288,0.645,289,0.968,290,0.645,291,1.162,292,0.645,293,1.162,294,0.645,295,0.645,296,0.645,297,0.947,298,0.968,299,0.645,300,0.645,301,0.645,302,0.645,303,0.645,304,1.235,305,0.968,306,0.645,307,0.645,308,0.631,309,0.645,310,0.645,311,0.968,312,0.947,313,0.947,314,0.66,315,1.321,316,0.968,317,0.645,318,0.645,319,0.66,320,0.968,321,0.645,322,0.645,323,1.162,324,0.645,325,0.947,326,1.162,327,0.645,328,0.617,329,0.645,330,0.645,331,0.66,332,0.645,333,1.136,334,0.631,335,0.645,336,0.645,337,0.645,338,0.645,339,1.474,340,1.162,341,0.645,342,0.645,343,0.645,344,0.645,345,0.631,346,0.968,347,0.884,348,0.645,349,1.263,350,0.645,351,0.66,352,0.66,353,1.189,354,0.66,355,0.66,356,0.645,357,0.968,358,0.645,359,0.66,360,0.66,361,0.631,362,1.263,363,0.66,364,0.66,365,0.66,366,0.66,367,0.66,368,0.947,369,0.645,370,0.645,371,0.645,372,0.645,373,0.645,374,0.645,375,0.968,376,0.645,377,0.947,378,0.645,379,0.645,380,0.645,381,0.645,382,0.645,383,0.645,384,0.645,385,0.645,386,0.645,387,0.645,388,0.645,389,0.645,390,0.645,391,0.645,392,0.645,393,0.645,394,0.968,395,0.645,396,0.645,397,0.645,398,0.645,399,0.645,400,0.645,401,0.645,402,1.136,403,0.645,404,0.645,405,0.968,406,0.645,407,0.645,408,0.645,409,0.645,410,1.263,411,0.645,412,0.66,413,0.645,414,0.645,415,0.645,416,1.263,417,0.645,418,0.968,419,0.645,420,1.292,421,0.645,422,1.292,423,1.292,424,1.508,425,0.645,426,0.947,427,0.645,428,0.968,429,0.645,430,0.645,431,0.645,432,0.968,433,0.645,434,0.947,435,0.66,436,0.66,437,0.645,438,0.645,439,0.947,440,0.925,441,0.884,442,0.645,443,0.603,444,1.183,445,1.446,446,0.645,447,0.645,448,0.645,449,0.645,450,0.645,451,0.645,452,0.645,453,0.645,454,0.645,455,0.645,456,0.645,457,0.645,458,0.645,459,0.645,460,0.645,461,0.645,462,1.162,463,1.162,464,1.487,465,0.645,466,0.645,467,0.968,468,0.645,469,0.66,470,1.162,471,1.162,472,0.645,473,0.66,474,0.645,475,0.66,476,0.968,477,0.645,478,1.086,479,0.66,480,0.66,481,0.645,482,0.66,483,0.645,484,0.645,485,0.968,486,0.66,487,0.968,488,0.968,489,0.968,490,1.321,491,0.645,492,0.66,493,0.66,494,0.968,495,0.645,496,0.66,497,0.66,498,0.513,499,0.645,500,1.136,501,1.136,502,0.968,503,0.631,504,0.631,505,0.631,506,0.968,507,0.645,508,0.645,509,0.645,510,0.947,511,1.162,512,0.631,513,0.631,514,0.645,515,0.66,516,0.66,517,0.645,518,0.645,519,0.66,520,0.66,521,0.66,522,0.66,523,0.968,524,0.631,525,0.631,526,1.136,527,0.968,528,0.645,529,0.645,530,0.645,531,0.968,532,0.66,533,0.322,534,0.645,535,0.576,536,1.252,537,1.353,538,1.323,539,1.517,540,0.925,541,0.66,542,0.645,543,0.525,544,0.645,545,0.645,546,1.162,547,0.66,548,0.66,549,0.968,550,0.66,551,0.66,552,0.645,553,0.66,554,1.323,555,0.66,556,1.487,557,0.66,558,0.66,559,0.66,560,0.66,561,0.66,562,1.162,563,0.66,564,0.66,565,0.66,566,0.66,567,0.66,568,0.645,569,0.66,570,0.66,571,0.66,572,0.66,573,0.66,574,0.66,575,0.66,576,0.66,577,0.66,578,0.66,579,0.66,580,0.645,581,0.66,582,1.207,583,0.66,584,0.66,585,0.66,586,0.66,587,0.66,588,0.968,589,0.66,590,0.645,591,0.66,592,0.66,593,0.66,594,0.66,595,0.66,596,0.645,597,0.645,598,0.66,599,0.66,600,0.66,601,0.645,602,0.645,603,0.66,604,0.66,605,0.645,606,0.66,607,0.66,608,0.66,609,0.66,610,0.645,611,0.66,612,0.645,613,0.66,614,0.66,615,0.645,616,0.66,617,0.66]],["title/interfaces/Goal.html",[232,0.2,413,0.922]],["body/interfaces/Goal.html",[0,0.149,3,0.027,4,0.041,5,0.027,7,0.034,8,0.47,12,0.741,25,0.26,29,0.009,30,0.462,31,0.25,33,0.265,45,0.341,67,0.119,81,0.576,84,0.589,89,0.603,109,0.685,133,0.884,161,1.569,184,0.313,191,0.003,192,0.005,193,0.003,220,0.645,232,0.403,234,0.403,237,0.489,245,0.411,280,0.968,281,0.513,282,0.645,283,0.66,284,1.882,285,0.563,286,0.968,287,1.384,288,0.645,289,0.968,290,0.645,291,1.162,292,0.645,293,1.162,294,0.645,295,0.645,296,0.645,297,0.947,298,0.968,299,0.645,300,0.645,301,0.645,302,0.645,303,0.645,304,1.235,305,0.968,306,0.645,307,0.645,308,0.631,309,0.645,310,0.645,311,0.968,312,0.947,313,0.947,314,0.66,315,1.321,316,0.968,317,0.645,318,0.645,319,0.66,320,0.968,321,0.645,322,0.645,323,1.162,324,0.645,325,0.947,326,1.162,327,0.645,328,0.617,329,0.645,330,0.645,331,0.66,332,0.645,333,1.136,334,0.631,335,0.645,336,0.645,337,0.645,338,0.645,339,1.474,340,1.162,341,0.645,342,0.645,343,0.645,344,0.645,345,0.631,346,0.968,347,0.884,348,0.645,349,1.263,350,0.645,351,0.66,352,0.66,353,1.189,354,0.66,355,0.66,356,0.645,357,0.968,358,0.645,359,0.66,360,0.66,361,0.631,362,1.263,363,0.66,364,0.66,365,0.66,366,0.66,367,0.66,368,0.947,369,0.645,370,0.645,371,0.645,372,0.645,373,0.645,374,0.645,375,0.968,376,0.645,377,0.947,378,0.645,379,0.645,380,0.645,381,0.645,382,0.645,383,0.645,384,0.645,385,0.645,386,0.645,387,0.645,388,0.645,389,0.645,390,0.645,391,0.645,392,0.645,393,0.645,394,0.968,395,0.645,396,0.645,397,0.645,398,0.645,399,0.645,400,0.645,401,0.645,402,1.136,403,0.645,404,0.645,405,0.968,406,0.645,407,0.645,408,0.645,409,0.645,410,1.263,411,0.645,412,0.66,413,0.968,414,1.292,415,1.292,416,1.263,417,0.645,418,0.968,419,0.645,420,1.162,421,0.645,422,0.968,423,0.645,424,1.292,425,0.645,426,0.947,427,0.645,428,0.968,429,0.645,430,0.645,431,0.645,432,0.968,433,0.645,434,0.947,435,0.66,436,0.66,437,0.645,438,0.645,439,0.947,440,0.925,441,0.884,442,0.645,443,0.603,444,1.183,445,1.446,446,0.645,447,0.645,448,0.645,449,0.645,450,0.645,451,0.645,452,0.645,453,0.645,454,0.645,455,0.645,456,0.645,457,0.645,458,0.645,459,0.645,460,0.645,461,0.645,462,1.162,463,1.162,464,1.487,465,0.645,466,0.645,467,0.968,468,0.645,469,0.66,470,1.162,471,1.162,472,0.645,473,0.66,474,0.645,475,0.66,476,0.968,477,0.645,478,1.086,479,0.66,480,0.66,481,0.645,482,0.66,483,0.645,484,0.645,485,0.968,486,0.66,487,0.968,488,0.968,489,0.968,490,1.321,491,0.645,492,0.66,493,0.66,494,0.968,495,0.645,496,0.66,497,0.66,498,0.513,499,0.645,500,1.136,501,1.136,502,0.968,503,0.631,504,0.631,505,0.631,506,0.968,507,0.645,508,0.645,509,0.645,510,0.947,511,1.162,512,0.631,513,0.631,514,0.645,515,0.66,516,0.66,517,0.645,518,0.645,519,0.66,520,0.66,521,0.66,522,0.66,523,0.968,524,0.631,525,0.631,526,1.136,527,0.968,528,0.645,529,0.645,530,0.645,531,0.968,532,0.66,533,0.322,534,0.645,535,0.576,536,1.252,537,1.353,538,1.323,539,1.517,540,0.925,541,0.66,542,0.645,543,0.525,544,0.645,545,0.645,546,1.162,547,0.66,548,0.66,549,0.968,550,0.66,551,0.66,552,0.645,553,0.66,554,1.323,555,0.66,556,1.487,557,0.66,558,0.66,559,0.66,560,0.66,561,0.66,562,1.162,563,0.66,564,0.66,565,0.66,566,0.66,567,0.66,568,0.645,569,0.66,570,0.66,571,0.66,572,0.66,573,0.66,574,0.66,575,0.66,576,0.66,577,0.66,578,0.66,579,0.66,580,0.645,581,0.66,582,1.207,583,0.66,584,0.66,585,0.66,586,0.66,587,0.66,588,0.968,589,0.66,590,0.645,591,0.66,592,0.66,593,0.66,594,0.66,595,0.66,596,0.645,597,0.645,598,0.66,599,0.66,600,0.66,601,0.645,602,0.645,603,0.66,604,0.66,605,0.645,606,0.66,607,0.66,608,0.66,609,0.66,610,0.645,611,0.66,612,0.645,613,0.66,614,0.66,615,0.645,616,0.66,617,0.66]],["title/classes/HandlerBuilder.html",[0,0.213,681,2.47]],["body/classes/HandlerBuilder.html",[0,0.335,2,1.244,3,0.05,4,0.05,5,0.05,7,0.061,8,0.706,14,1.129,16,2.554,18,1.463,25,0.469,26,1.263,28,1.859,29,0.009,30,0.462,31,0.24,32,1.261,41,0.903,45,0.77,51,1.051,55,3.224,57,1.663,58,1.626,59,1.917,61,1.3,67,0.106,68,2.351,76,1.189,79,1.343,176,4.954,183,2.72,184,0.706,190,1.818,191,0.005,192,0.007,193,0.005,203,2.963,245,0.742,533,0.727,628,2.963,681,4.249,682,3.862,683,5.275,684,3.897,685,1.704,687,4.812,688,5.018,689,4.592,690,5.018,691,5.018,699,3.866,700,5.018,702,3.11,703,3.512,705,3.866,707,3.866,720,3.866,794,2.289,1026,4.682,1027,5.799,1028,5.799,1029,5.799,1030,5.799,1031,5.799,1032,5.799,1033,5.799,1034,5.799,1035,4.682,1036,4.682,1037,4.682,1038,5.855,1039,4.682,1040,4.682,1041,4.682,1042,4.682,1043,4.682,1044,4.682,1045,4.682,1046,4.598,1047,5.855]],["title/classes/HandlerBuilder-1.html",[0,0.178,194,2.241,681,2.074]],["body/classes/HandlerBuilder-1.html",[0,0.269,2,1.248,3,0.05,4,0.05,5,0.05,7,0.061,8,0.707,14,1.132,16,2.812,18,1.461,26,1.274,28,1.861,29,0.009,30,0.462,31,0.238,32,1.262,41,0.906,51,1.053,55,2.892,57,1.334,58,1.304,59,1.923,61,1.304,67,0.09,68,2.359,79,1.344,176,4.958,183,2.729,184,0.566,190,1.873,191,0.005,192,0.007,193,0.005,203,3.108,244,3.901,245,0.744,628,2.967,681,4.255,682,3.863,683,5.283,684,3.91,687,4.817,688,5.025,689,4.599,690,5.025,691,5.025,699,3.878,700,5.025,702,3.116,703,3.523,705,3.878,707,3.878,720,3.878,968,6.398,1035,4.697,1036,4.697,1037,4.697,1038,4.697,1039,4.697,1040,4.697,1041,4.697,1042,4.697,1043,4.697,1044,4.697,1045,4.697,1048,5.817,1049,6.398,1050,5.817,1051,5.817,1052,5.817,1053,5.817,1054,5.817,1055,5.817,1056,5.817,1057,5.817,1058,5.817,1059,5.584,1060,6.398,1061,5.817,1062,5.817]],["title/interfaces/HandlerBuilderInterface.html",[232,0.2,1049,3.714]],["body/interfaces/HandlerBuilderInterface.html",[3,0.054,4,0.054,5,0.054,7,0.066,8,0.744,14,1.189,25,0.51,26,1.236,28,1.914,29,0.009,30,0.475,31,0.245,32,1.298,41,1.362,45,0.872,51,1.107,55,3.191,57,1.751,58,1.713,59,2.085,61,1.414,67,0.109,176,4.432,191,0.006,192,0.007,193,0.006,232,0.274,234,0.527,533,0.823,628,3.076,682,3.886,684,3.918,687,4.955,688,4.843,689,4.432,690,4.843,691,4.843,699,5.091,700,5.209,702,2.705,703,4.626,705,5.091,707,5.091,1049,7.417,1059,5.381,1060,5.093,1063,5.575,1064,6.308,1065,6.308,1066,6.308,1067,6.308,1068,6.308]],["title/classes/HandlerFactory.html",[0,0.213,1046,2.917]],["body/classes/HandlerFactory.html",[0,0.354,2,1.362,3,0.054,4,0.054,5,0.054,7,0.067,14,1.194,16,2.05,18,1.414,25,0.513,26,0.898,29,0.009,31,0.204,41,0.989,45,0.814,51,1.111,55,3.286,57,1.758,58,1.72,59,2.1,61,1.424,67,0.109,68,2.575,76,1.303,79,1.369,176,4.781,183,2.979,184,0.747,190,1.393,191,0.006,192,0.007,193,0.006,245,0.813,533,0.769,628,2.872,681,4.424,682,3.753,683,4.234,684,3.812,685,2.421,687,3.686,688,4.027,689,3.686,690,4.027,691,4.027,700,4.027,702,2.724,720,4.234,794,3.377,1026,5.128,1035,5.128,1036,5.128,1037,5.128,1038,6.192,1039,5.128,1040,5.128,1041,5.128,1042,5.128,1043,5.128,1044,5.128,1045,5.128,1046,5.224,1047,6.192,1069,6.351]],["title/classes/HandlerFactory-1.html",[0,0.178,194,2.241,1046,2.449]],["body/classes/HandlerFactory-1.html",[0,0.389,2,1.428,3,0.057,4,0.057,5,0.057,7,0.07,14,1.229,18,1.309,26,0.942,28,1.493,29,0.009,30,0.371,31,0.232,32,1.013,33,0.261,40,3.576,41,1.037,51,1.218,61,1.493,67,0.112,79,1.322,183,3.124,184,0.846,191,0.006,192,0.007,193,0.006,676,4.236,681,4.764,685,2.607,794,3.502,886,3.45,1046,5.003,1070,5.377,1071,6.66,1072,6.657,1073,6.66,1074,5.559,1075,6.37,1076,6.37,1077,4.997,1078,5.377,1079,4.034,1080,5.377,1081,5.377,1082,5.377,1083,4.997]],["title/classes/ISPContentBuilder.html",[0,0.213,830,3.451]],["body/classes/ISPContentBuilder.html",[0,0.268,2,0.888,3,0.035,4,0.035,5,0.035,7,0.043,8,0.564,9,4.509,12,1.039,14,0.903,16,2.958,18,1.456,19,4.834,22,3.349,25,0.469,26,1.301,28,1.822,29,0.009,30,0.485,31,0.232,32,1.312,33,0.262,40,3.113,41,1.312,51,0.97,57,1.329,58,1.3,59,1.368,60,2.222,61,0.928,64,5.471,65,2.759,67,0.09,71,2.507,76,1.372,79,1.387,92,2.963,100,3.865,101,5.331,109,0.548,113,3.865,126,3.365,131,2.916,135,3.884,159,2.916,172,6.224,183,2.719,184,0.564,185,4.085,190,1.271,191,0.004,192,0.005,193,0.004,203,1.55,232,0.18,347,0.758,443,0.776,533,0.814,543,0.946,646,4.357,647,3.593,648,4.625,650,3.511,651,3.893,652,3.365,653,3.365,654,3.365,655,3.365,656,4.391,657,4.523,658,2.624,659,2.624,660,2.624,663,2.624,664,2.624,665,2.507,666,4.582,667,2.624,668,2.507,669,2.624,670,2.402,671,2.507,672,2.624,673,2.507,674,2.624,726,2.624,742,3.105,743,3.105,744,3.511,746,3.105,747,4.085,775,4.623,776,4.544,777,4.592,778,4.544,781,4.412,784,4.085,788,3.105,789,3.676,802,3.341,812,2.916,813,2.916,819,2.916,820,2.916,822,2.916,823,2.916,824,3.341,830,5.02,831,3.341,832,5.854,833,4.681,834,5.403,835,5.403,836,5.854,837,5.854,838,4.681,839,3.113,840,5.854,841,3.341,842,3.341,843,3.341,844,2.916,845,3.341,846,5.727,847,4.681,848,5.854,849,3.341,850,6.388,851,5.854,852,3.341,853,5.854,854,4.681,855,5.854,856,3.341,857,5.854,858,3.341,859,5.854,860,5.854,861,3.341,862,5.403,863,5.854,864,3.341,865,5.854,866,3.341,1084,5.798,1085,4.139,1086,4.139,1087,4.139,1088,4.139,1089,4.139,1090,4.139,1091,4.139,1092,4.139,1093,4.139,1094,4.139,1095,4.139,1096,4.139,1097,4.139,1098,4.139,1099,4.139,1100,4.139,1101,4.139]],["title/classes/ISPProductClient.html",[0,0.213,108,3.451]],["body/classes/ISPProductClient.html",[0,0.242,1,5.973,2,0.769,3,0.031,4,0.031,5,0.031,6,2.895,7,0.038,8,0.509,9,4.76,10,4.988,11,5.426,12,0.79,13,4.635,14,0.815,15,4.988,16,1.994,17,4.27,18,1.441,19,4.118,20,4.988,21,5.484,22,3.092,24,2.898,25,0.61,26,1.281,28,1.855,29,0.009,30,0.48,31,0.241,32,1.258,33,0.266,37,3.169,39,6.691,40,3.317,41,1.354,42,4.635,43,3.169,45,0.953,46,3.169,48,3.169,51,1.047,52,3.925,53,2.69,54,2.895,55,2.752,56,3.917,57,1.2,58,1.173,59,1.185,60,1.925,61,0.804,62,3.169,63,3.169,64,3.318,65,2.39,66,5.095,67,0.077,68,2.122,69,4.224,70,2.895,71,3.169,72,2.69,73,2.895,74,2.895,75,4.118,76,1.755,77,4.353,78,3.169,79,1.393,80,3.169,81,0.642,82,3.169,83,2.69,84,0.657,85,2.69,86,2.895,87,2.895,88,2.69,89,0.672,90,3.189,91,3.652,92,2.704,93,3.189,94,3.011,95,1.583,96,1.583,97,4.716,98,3.169,99,4.624,100,4.528,101,5.324,102,3.488,103,5.095,104,4.519,105,2.69,106,3.925,107,4.624,108,4.635,109,0.495,110,4.988,111,6.384,112,7.195,113,5.588,114,6.003,115,3.169,116,3.169,117,3.169,118,3.169,119,3.169,120,6.003,121,6.384,122,4.624,123,6.003,124,5.842,125,4.716,126,4.519,127,6.665,128,6.003,129,4.624,130,6.003,131,3.687,132,4.624,133,0.959,134,4.624,135,3.036,136,6.003,137,4.624,138,6.003,139,6.384,140,3.169,141,4.635,142,4.224,143,4.624,144,6.003,145,3.687,146,3.169,147,6.003,148,4.624,149,4.624,150,3.169,151,3.169,152,5.027,153,5.46,154,4.118,155,3.169,156,3.169,157,6.003,158,3.169,159,5.624,160,5.484,161,1.607,162,6.665,163,5.46,164,5.46,165,4.815,166,2.917,167,3.169,168,4.624,169,5.46,170,4.624,171,3.169,172,5.314,173,5.46,174,2.526,175,4.624,176,4.519,177,6.003,178,4.624,179,5.46,180,4.624,181,4.624,182,4.624,183,2.454,184,0.509,185,2.526,186,3.169,187,3.169,188,3.169,189,3.169,190,1.355,191,0.003,192,0.005,193,0.003,203,1.959,657,4.371,1012,5.095,1102,6.178,1103,3.585,1104,5.232,1105,3.585,1106,3.585,1107,3.585,1108,3.585,1109,3.585,1110,3.585,1111,3.585,1112,3.585,1113,3.585,1114,3.585,1115,3.585,1116,3.585,1117,3.585,1118,3.585,1119,3.585,1120,3.585,1121,3.585,1122,3.585,1123,3.585,1124,3.585,1125,3.585,1126,3.585,1127,3.318,1128,3.585,1129,3.585,1130,3.585,1131,3.585,1132,3.585,1133,3.585]],["title/classes/IntentHandlerBuilder.html",[0,0.213,1074,3.241]],["body/classes/IntentHandlerBuilder.html",[0,0.276,2,1.28,3,0.051,4,0.051,5,0.051,7,0.063,8,0.719,14,1.15,16,2.778,18,1.459,22,3.695,26,1.295,28,1.93,29,0.009,30,0.479,31,0.243,32,1.309,33,0.248,41,0.929,51,1.162,55,2.178,57,1.368,61,1.338,67,0.092,79,1.123,109,0.698,176,4.284,190,1.887,191,0.006,192,0.007,193,0.006,203,3.136,273,3.327,628,2.234,657,4.821,676,3.204,681,4.918,682,3.862,683,4.921,684,3.798,687,4.652,688,4.681,689,4.284,690,4.681,691,4.681,693,4.818,694,4.818,695,4.818,698,4.818,699,3.978,700,4.681,701,4.818,702,2.559,703,3.614,704,4.818,705,3.978,706,4.818,707,3.978,708,4.818,710,5.274,720,3.978,722,5.274,872,3.204,1059,5.202,1072,6.578,1074,5.648,1134,5.967,1135,5.967,1136,5.967,1137,5.967,1138,5.967,1139,5.967,1140,7.382]],["title/classes/IntentHandlerFactory.html",[0,0.213,1077,3.451]],["body/classes/IntentHandlerFactory.html",[0,0.389,2,1.433,3,0.057,4,0.057,5,0.057,7,0.07,14,1.231,18,1.311,26,0.945,28,1.499,29,0.009,30,0.372,31,0.224,32,1.016,33,0.255,40,3.589,41,1.041,51,1.22,61,1.499,67,0.112,79,1.323,183,3.135,184,0.847,191,0.006,192,0.007,193,0.006,676,4.245,681,4.673,685,2.61,794,3.505,886,3.462,1046,4.238,1070,5.396,1072,6.529,1074,5.933,1075,6.384,1076,6.384,1077,5.932,1078,5.396,1079,4.048,1080,5.396,1081,5.396,1082,5.396,1083,5.015,1141,6.684,1142,6.684]],["title/classes/LaunchRequestFactory.html",[0,0.213,1083,3.451]],["body/classes/LaunchRequestFactory.html",[0,0.39,2,1.445,3,0.058,4,0.058,5,0.058,7,0.071,14,1.237,18,1.316,26,0.953,29,0.009,31,0.212,33,0.243,41,1.049,51,1.224,61,1.511,67,0.112,79,1.327,183,3.161,184,0.85,191,0.006,192,0.007,193,0.006,676,4.266,681,4.779,685,2.615,794,3.56,886,3.49,1046,4.273,1070,5.441,1072,6.339,1074,5.598,1075,6.414,1076,6.414,1077,5.056,1078,5.441,1079,4.081,1080,5.441,1081,5.441,1082,5.441,1083,5.961,1143,6.739]],["title/classes/LaunchRequestHandlerFactory.html",[0,0.213,888,2.67]],["body/classes/LaunchRequestHandlerFactory.html",[0,0.385,2,1.264,3,0.05,4,0.05,5,0.05,7,0.062,14,1.141,18,0.918,24,3.74,25,0.644,26,1.036,28,1.643,29,0.009,30,0.408,31,0.236,32,1.114,33,0.229,41,1.141,45,0.885,51,1.208,55,3.044,57,1.828,58,1.643,59,1.949,61,1.322,67,0.113,68,2.971,76,1.503,79,1.374,109,0.754,166,4.086,184,0.776,190,1.293,191,0.006,192,0.007,193,0.006,232,0.372,234,0.492,244,4.281,245,0.937,533,0.591,628,2.744,682,3.477,684,3.695,685,1.732,686,3.166,702,3.749,839,4.478,867,3.422,868,3.422,869,4.253,870,4.829,871,3.422,872,3.166,873,5.242,874,5.426,875,4.438,876,4.978,877,3.571,878,4.84,879,3.571,880,4.438,881,3.571,882,4.438,883,3.571,884,3.422,885,4.253,886,3.795,887,4.253,888,4.627,889,4.253,890,3.571,891,4.438,892,3.422,1144,5.896,1145,5.896,1146,5.896]],["title/classes/LaunchRequestrBuilder.html",[0,0.213,1147,4.066]],["body/classes/LaunchRequestrBuilder.html",[0,0.284,2,1.318,3,0.053,4,0.053,5,0.053,7,0.064,8,0.732,14,1.171,16,2.426,18,1.458,26,1.286,28,1.897,29,0.009,30,0.471,31,0.241,32,1.287,41,0.957,51,1.177,55,2.243,57,1.409,61,1.378,67,0.094,79,1.143,109,0.711,176,4.363,190,1.903,191,0.006,192,0.007,193,0.006,203,3.168,273,3.427,628,2.301,657,4.848,676,3.3,681,4.938,682,3.875,683,5.011,684,3.815,687,4.713,688,4.767,689,4.363,690,4.767,691,4.767,693,4.962,694,4.962,695,4.962,698,4.962,699,4.097,700,4.767,701,4.962,702,2.635,703,3.722,704,4.962,705,4.097,706,4.962,707,4.097,708,4.962,720,4.097,871,3.567,872,3.3,892,3.567,1059,5.297,1147,7.178,1148,6.146,1149,6.146]],["title/classes/ListManagementAPIClient.html",[0,0.213,1150,4.066]],["body/classes/ListManagementAPIClient.html",[0,0.247,2,1.147,3,0.046,4,0.046,5,0.046,7,0.056,8,0.671,14,1.073,16,2.459,17,4.42,18,1.467,26,1.274,28,1.97,29,0.009,30,0.489,31,0.239,32,1.336,33,0.271,41,1.394,45,0.987,51,1.104,57,1.226,58,1.199,60,2.871,61,1.199,67,0.067,79,1.336,104,3.997,106,4.011,109,0.651,133,1.396,190,1.172,191,0.005,192,0.006,193,0.005,196,5.08,203,2.002,245,1.153,498,1.283,1150,6.088,1151,4.726,1152,7.62,1153,7.62,1154,7.62,1155,7.62,1156,7.62,1157,7.62,1158,8.047,1159,7.113,1160,7.62,1161,7.62,1162,6.888,1163,5.347,1164,5.347,1165,7.62,1166,5.347,1167,5.347,1168,7.62,1169,5.347,1170,9.181,1171,5.347,1172,5.347,1173,5.347,1174,8.878,1175,5.347,1176,5.347,1177,7.113,1178,5.347,1179,5.347,1180,5.347,1181,5.347,1182,5.347,1183,5.347,1184,7.62,1185,5.347,1186,5.347,1187,7.62,1188,5.347,1189,5.347,1190,5.347,1191,4.726,1192,4.726,1193,4.726,1194,5.347,1195,6.888,1196,6.888,1197,5.347,1198,5.347,1199,5.347,1200,5.347,1201,5.347]],["title/interfaces/LocalizedAttribute.html",[232,0.2,439,0.902]],["body/interfaces/LocalizedAttribute.html",[0,0.149,3,0.027,4,0.041,5,0.027,7,0.034,8,0.47,12,0.989,25,0.26,26,0.455,29,0.009,30,0.467,31,0.249,33,0.265,45,0.341,67,0.119,81,0.576,84,0.589,89,0.603,109,0.685,133,0.884,161,1.517,184,0.313,191,0.003,192,0.005,193,0.003,220,0.645,232,0.403,234,0.403,236,2.413,237,0.489,245,0.411,280,0.968,281,0.77,282,0.645,283,0.66,284,1.882,285,0.563,286,0.968,287,1.384,288,0.645,289,0.968,290,0.645,291,1.162,292,0.645,293,1.162,294,0.645,295,0.645,296,0.645,297,0.947,298,0.968,299,0.645,300,0.645,301,0.645,302,0.645,303,0.645,304,1.235,305,0.968,306,0.645,307,0.645,308,0.631,309,0.645,310,0.645,311,0.968,312,0.947,313,0.947,314,0.66,315,1.321,316,0.968,317,0.645,318,0.645,319,0.66,320,0.968,321,0.645,322,0.645,323,1.162,324,0.645,325,0.947,326,1.162,327,0.645,328,0.617,329,0.645,330,0.645,331,0.66,332,0.645,333,1.136,334,0.631,335,0.645,336,0.645,337,0.645,338,0.645,339,1.474,340,1.162,341,0.645,342,0.645,343,0.645,344,0.645,345,0.631,346,0.968,347,0.884,348,0.645,349,1.263,350,0.645,351,0.66,352,0.66,353,1.189,354,0.66,355,0.66,356,0.645,357,0.968,358,0.645,359,0.66,360,0.66,361,0.631,362,1.263,363,0.66,364,0.66,365,0.66,366,0.66,367,0.66,368,0.947,369,0.645,370,0.645,371,0.645,372,0.645,373,0.645,374,0.645,375,0.968,376,0.645,377,0.947,378,0.645,379,0.645,380,0.645,381,0.645,382,0.645,383,0.645,384,0.645,385,0.645,386,0.645,387,0.645,388,0.645,389,0.645,390,0.645,391,0.645,392,0.645,393,0.645,394,0.968,395,0.645,396,0.645,397,0.645,398,0.645,399,0.645,400,0.645,401,0.645,402,1.136,403,0.645,404,0.645,405,0.968,406,0.645,407,0.645,408,0.645,409,0.645,410,1.263,411,0.645,412,0.66,413,0.645,414,0.645,415,0.645,416,1.263,417,0.645,418,0.968,419,0.645,420,1.162,421,0.645,422,0.968,423,0.645,424,1.292,425,0.645,426,0.947,427,0.645,428,0.968,429,0.645,430,0.645,431,0.645,432,0.968,433,0.645,434,0.947,435,0.66,436,0.66,437,0.645,438,0.645,439,1.136,440,0.925,441,0.884,442,0.645,443,0.603,444,1.183,445,1.446,446,0.645,447,0.645,448,0.645,449,0.645,450,0.645,451,0.645,452,0.645,453,0.645,454,0.645,455,0.645,456,0.645,457,0.645,458,0.645,459,0.645,460,0.645,461,0.645,462,1.162,463,1.162,464,1.487,465,0.645,466,0.645,467,0.968,468,0.645,469,0.66,470,1.162,471,1.162,472,0.645,473,0.66,474,0.645,475,0.66,476,0.968,477,0.645,478,1.086,479,0.66,480,0.66,481,0.645,482,0.66,483,0.645,484,0.645,485,0.968,486,0.66,487,0.968,488,0.968,489,0.968,490,1.321,491,0.645,492,0.66,493,0.66,494,0.968,495,0.645,496,0.66,497,0.66,498,0.513,499,0.645,500,1.136,501,1.136,502,0.968,503,0.631,504,0.631,505,0.631,506,0.968,507,0.645,508,0.645,509,0.645,510,0.947,511,1.162,512,0.631,513,0.631,514,0.645,515,0.66,516,0.66,517,0.645,518,0.645,519,0.66,520,0.66,521,0.66,522,0.66,523,0.968,524,0.631,525,0.631,526,1.136,527,0.968,528,0.645,529,0.645,530,0.645,531,0.968,532,0.66,533,0.322,534,0.645,535,0.576,536,1.252,537,1.353,538,1.323,539,1.517,540,0.925,541,0.66,542,0.645,543,0.525,544,0.645,545,0.645,546,1.162,547,0.66,548,0.66,549,0.968,550,0.66,551,0.66,552,0.645,553,0.66,554,1.323,555,0.66,556,1.487,557,0.66,558,0.66,559,0.66,560,0.66,561,0.66,562,1.162,563,0.66,564,0.66,565,0.66,566,0.66,567,0.66,568,0.645,569,0.66,570,0.66,571,0.66,572,0.66,573,0.66,574,0.66,575,0.66,576,0.66,577,0.66,578,0.66,579,0.66,580,0.645,581,0.66,582,1.207,583,0.66,584,0.66,585,0.66,586,0.66,587,0.66,588,0.968,589,0.66,590,0.645,591,0.66,592,0.66,593,0.66,594,0.66,595,0.66,596,0.645,597,0.645,598,0.66,599,0.66,600,0.66,601,0.645,602,0.645,603,0.66,604,0.66,605,0.645,606,0.66,607,0.66,608,0.66,609,0.66,610,0.645,611,0.66,612,0.645,613,0.66,614,0.66,615,0.645,616,0.66,617,0.66,1202,3.216]],["title/classes/LocalizedAttributesFactory.html",[0,0.213,1203,4.066]],["body/classes/LocalizedAttributesFactory.html",[0,0.32,2,1.484,3,0.059,4,0.059,5,0.059,7,0.073,12,1.032,14,1.257,18,1.078,26,0.979,29,0.009,33,0.232,41,1.078,51,1.003,61,1.552,67,0.086,76,1.419,79,1.299,190,1.518,191,0.006,192,0.008,193,0.006,234,0.578,237,1.227,281,1.287,285,1.211,440,1.547,542,1.388,543,1.317,544,1.388,545,1.388,685,2.51,794,3.473,1005,6.118,1203,7.133,1204,6.922,1205,6.922,1206,8.071,1207,6.922]],["title/interfaces/MergeObjectType.html",[232,0.2,1208,4.066]],["body/interfaces/MergeObjectType.html",[3,0.058,4,0.058,5,0.058,7,0.071,8,0.774,24,3.963,25,0.642,29,0.009,31,0.212,32,1.327,51,1.151,55,3.249,57,1.822,58,1.782,59,2.228,61,1.511,67,0.105,76,1.733,79,1.285,154,5.817,191,0.006,192,0.007,193,0.006,232,0.292,234,0.563,533,0.796,628,3.333,682,3.637,684,3.637,884,4.611,1208,7.468,1209,6.739,1210,6.739,1211,8.726,1212,6.739,1213,7.945,1214,6.739,1215,6.739]],["title/interfaces/MessageGroup.html",[232,0.2,434,0.902]],["body/interfaces/MessageGroup.html",[0,0.148,3,0.027,4,0.041,5,0.027,7,0.034,8,0.469,12,0.74,25,0.259,29,0.009,30,0.461,31,0.25,32,0.732,33,0.264,45,0.34,67,0.119,81,0.574,84,0.587,89,0.6,109,0.684,133,0.882,161,1.567,184,0.312,191,0.003,192,0.004,193,0.003,220,0.642,232,0.403,234,0.402,237,0.487,245,0.41,280,0.965,281,0.511,282,0.642,283,0.657,284,1.882,285,0.561,286,0.965,287,1.382,288,0.642,289,0.965,290,0.642,291,1.16,292,0.642,293,1.16,294,0.642,295,0.642,296,0.642,297,0.944,298,0.965,299,0.642,300,0.642,301,0.642,302,0.642,303,0.642,304,1.232,305,0.965,306,0.642,307,0.642,308,0.628,309,0.642,310,0.642,311,0.965,312,0.944,313,0.944,314,0.657,315,1.318,316,0.965,317,0.642,318,0.642,319,0.657,320,0.965,321,0.642,322,0.642,323,1.16,324,0.642,325,0.944,326,1.16,327,0.642,328,0.614,329,0.642,330,0.642,331,0.657,332,0.642,333,1.134,334,0.628,335,0.642,336,0.642,337,0.642,338,0.642,339,1.472,340,1.16,341,0.642,342,0.642,343,0.642,344,0.642,345,0.628,346,0.965,347,0.882,348,0.642,349,1.261,350,0.642,351,0.657,352,0.657,353,1.186,354,0.657,355,0.657,356,0.642,357,0.965,358,0.642,359,0.657,360,0.657,361,0.628,362,1.261,363,0.657,364,0.657,365,0.657,366,0.657,367,0.657,368,0.944,369,0.642,370,0.642,371,0.642,372,0.642,373,0.642,374,0.642,375,0.965,376,0.642,377,0.944,378,0.642,379,0.642,380,0.642,381,0.642,382,0.642,383,0.642,384,0.642,385,0.642,386,0.642,387,0.642,388,0.642,389,0.642,390,0.642,391,0.642,392,0.642,393,0.642,394,0.965,395,0.642,396,0.642,397,0.642,398,0.642,399,0.642,400,0.642,401,0.642,402,1.134,403,0.642,404,0.642,405,0.965,406,0.642,407,0.642,408,0.642,409,0.642,410,1.261,411,0.642,412,0.657,413,0.642,414,0.642,415,0.642,416,1.261,417,0.642,418,0.965,419,0.642,420,1.16,421,0.642,422,0.965,423,0.642,424,1.289,425,0.642,426,0.944,427,0.642,428,0.965,429,0.642,430,0.642,431,0.642,432,1.289,433,0.642,434,1.134,435,1.318,436,1.186,437,1.289,438,1.289,439,0.944,440,0.923,441,0.882,442,0.642,443,0.6,444,1.183,445,1.445,446,0.642,447,0.642,448,0.642,449,0.642,450,0.642,451,0.642,452,0.642,453,0.642,454,0.642,455,0.642,456,0.642,457,0.642,458,0.642,459,0.642,460,0.642,461,0.642,462,1.16,463,1.16,464,1.485,465,0.642,466,0.642,467,0.965,468,0.642,469,0.657,470,1.16,471,1.16,472,0.642,473,0.657,474,0.642,475,0.657,476,0.965,477,0.642,478,1.084,479,0.657,480,0.657,481,0.642,482,0.657,483,0.642,484,0.642,485,0.965,486,0.657,487,0.965,488,0.965,489,0.965,490,1.318,491,0.642,492,0.657,493,0.657,494,0.965,495,0.642,496,0.657,497,0.657,498,0.511,499,0.642,500,1.134,501,1.134,502,0.965,503,0.628,504,0.628,505,0.628,506,0.965,507,0.642,508,0.642,509,0.642,510,0.944,511,1.16,512,0.628,513,0.628,514,0.642,515,0.657,516,0.657,517,0.642,518,0.642,519,0.657,520,0.657,521,0.657,522,0.657,523,0.965,524,0.628,525,0.628,526,1.134,527,0.965,528,0.642,529,0.642,530,0.642,531,0.965,532,0.657,533,0.321,534,0.642,535,0.574,536,1.252,537,1.351,538,1.321,539,1.515,540,0.923,541,0.657,542,0.642,543,0.523,544,0.642,545,0.642,546,1.16,547,0.657,548,0.657,549,0.965,550,0.657,551,0.657,552,0.642,553,0.657,554,1.321,555,0.657,556,1.485,557,0.657,558,0.657,559,0.657,560,0.657,561,0.657,562,1.16,563,0.657,564,0.657,565,0.657,566,0.657,567,0.657,568,0.642,569,0.657,570,0.657,571,0.657,572,0.657,573,0.657,574,0.657,575,0.657,576,0.657,577,0.657,578,0.657,579,0.657,580,0.642,581,0.657,582,1.205,583,0.657,584,0.657,585,0.657,586,0.657,587,0.657,588,0.965,589,0.657,590,0.642,591,0.657,592,0.657,593,0.657,594,0.657,595,0.657,596,0.642,597,0.642,598,0.657,599,0.657,600,0.657,601,0.642,602,0.642,603,0.657,604,0.657,605,0.642,606,0.657,607,0.657,608,0.657,609,0.657,610,0.642,611,0.657,612,0.642,613,0.657,614,0.657,615,0.642,616,0.657,617,0.657]],["title/interfaces/MessageState.html",[232,0.2,425,0.922]],["body/interfaces/MessageState.html",[0,0.148,3,0.027,4,0.041,5,0.027,7,0.034,8,0.47,12,0.741,25,0.26,29,0.009,30,0.461,31,0.249,32,0.734,33,0.264,45,0.341,67,0.119,81,0.575,84,0.589,89,0.602,109,0.685,133,1.264,161,1.516,184,0.313,191,0.003,192,0.005,193,0.003,220,0.644,232,0.403,234,0.403,237,0.489,245,0.411,280,0.967,281,0.512,282,0.644,283,0.659,284,1.882,285,0.562,286,0.967,287,1.384,288,0.644,289,0.967,290,0.644,291,1.162,292,0.644,293,1.162,294,0.644,295,0.644,296,0.644,297,0.946,298,0.967,299,0.644,300,0.644,301,0.644,302,0.644,303,0.644,304,1.234,305,0.967,306,0.644,307,0.644,308,0.63,309,0.644,310,0.644,311,0.967,312,0.946,313,0.946,314,0.659,315,1.32,316,0.967,317,0.644,318,0.644,319,0.659,320,0.967,321,0.644,322,0.644,323,1.162,324,0.644,325,0.946,326,1.162,327,0.644,328,0.616,329,0.644,330,0.644,331,0.659,332,0.644,333,1.136,334,0.63,335,0.644,336,0.644,337,0.644,338,0.644,339,1.474,340,1.162,341,0.644,342,0.644,343,0.644,344,0.644,345,0.63,346,0.967,347,0.884,348,0.644,349,1.262,350,0.644,351,0.659,352,0.659,353,1.188,354,0.659,355,0.659,356,0.644,357,0.967,358,0.644,359,0.659,360,0.659,361,0.63,362,1.262,363,0.659,364,0.659,365,0.659,366,0.659,367,0.659,368,0.946,369,0.644,370,0.644,371,0.644,372,0.644,373,0.644,374,0.644,375,0.967,376,0.644,377,0.946,378,0.644,379,0.644,380,0.644,381,0.644,382,0.644,383,0.644,384,0.644,385,0.644,386,0.644,387,0.644,388,0.644,389,0.644,390,0.644,391,0.644,392,0.644,393,0.644,394,0.967,395,0.644,396,0.644,397,0.644,398,0.644,399,0.644,400,0.644,401,0.644,402,1.136,403,0.644,404,0.644,405,0.967,406,0.644,407,0.644,408,0.644,409,0.644,410,1.262,411,0.644,412,0.659,413,0.644,414,0.644,415,0.644,416,1.262,417,0.644,418,0.967,419,0.644,420,1.162,421,0.644,422,0.967,423,0.644,424,1.291,425,0.967,426,1.262,427,1.291,428,1.291,429,0.644,430,0.644,431,0.644,432,0.967,433,0.644,434,0.946,435,0.659,436,0.659,437,0.644,438,0.644,439,0.946,440,0.925,441,0.884,442,0.644,443,0.602,444,1.183,445,1.446,446,0.644,447,0.644,448,0.644,449,0.644,450,0.644,451,0.644,452,0.644,453,0.644,454,0.644,455,0.644,456,0.644,457,0.644,458,0.644,459,0.644,460,0.644,461,0.644,462,1.162,463,1.162,464,1.486,465,0.644,466,0.644,467,0.967,468,0.644,469,0.659,470,1.162,471,1.162,472,0.644,473,0.659,474,0.644,475,0.659,476,0.967,477,0.644,478,1.086,479,0.659,480,0.659,481,0.644,482,0.659,483,0.644,484,0.644,485,0.967,486,0.659,487,0.967,488,0.967,489,0.967,490,1.32,491,0.644,492,0.659,493,0.659,494,0.967,495,0.644,496,0.659,497,0.659,498,0.512,499,0.644,500,1.136,501,1.136,502,0.967,503,0.63,504,0.63,505,0.63,506,0.967,507,0.644,508,0.644,509,0.644,510,0.946,511,1.162,512,0.63,513,0.63,514,0.644,515,0.659,516,0.659,517,0.644,518,0.644,519,0.659,520,0.659,521,0.659,522,0.659,523,0.967,524,0.63,525,0.63,526,1.136,527,0.967,528,0.644,529,0.644,530,0.644,531,0.967,532,0.659,533,0.322,534,0.644,535,0.575,536,1.252,537,1.353,538,1.322,539,1.516,540,0.925,541,0.659,542,0.644,543,0.525,544,0.644,545,0.644,546,1.162,547,0.659,548,0.659,549,0.967,550,0.659,551,0.659,552,0.644,553,0.659,554,1.322,555,0.659,556,1.486,557,0.659,558,0.659,559,0.659,560,0.659,561,0.659,562,1.162,563,0.659,564,0.659,565,0.659,566,0.659,567,0.659,568,0.644,569,0.659,570,0.659,571,0.659,572,0.659,573,0.659,574,0.659,575,0.659,576,0.659,577,0.659,578,0.659,579,0.659,580,0.644,581,0.659,582,1.207,583,0.659,584,0.659,585,0.659,586,0.659,587,0.659,588,0.967,589,0.659,590,0.644,591,0.659,592,0.659,593,0.659,594,0.659,595,0.659,596,0.644,597,0.644,598,0.659,599,0.659,600,0.659,601,0.644,602,0.644,603,0.659,604,0.659,605,0.644,606,0.659,607,0.659,608,0.659,609,0.659,610,0.644,611,0.659,612,0.644,613,0.659,614,0.659,615,0.644,616,0.659,617,0.659]],["title/classes/MockAttributeManager.html",[0,0.213,243,3.714]],["body/classes/MockAttributeManager.html",[0,0.242,2,1.125,3,0.045,4,0.045,5,0.045,7,0.055,8,0.662,9,4.682,14,1.059,18,1.449,26,1.271,28,1.693,29,0.009,30,0.42,31,0.23,32,1.148,33,0.151,41,1.345,51,0.986,55,3.151,56,5.378,57,1.202,58,1.176,68,3.439,76,1.795,79,1.259,90,2.315,91,2.315,92,1.964,93,2.315,94,2.186,95,2.315,96,2.315,124,5.664,125,4.838,184,0.511,190,1.752,191,0.008,192,0.006,193,0.005,203,2.991,232,0.228,233,7.496,235,4.635,237,0.797,239,4.635,240,4.635,241,7.316,242,4.635,243,6.095,244,3.652,245,0.966,246,6.673,247,6.673,248,7.061,249,6.012,250,6.012,251,7.061,252,4.635,253,6.673,254,7.819,255,6.673,256,6.673,257,6.012,258,7.061,259,4.635,260,4.635,261,6.673,262,4.635,263,4.635,264,4.635,265,7.061,266,6.673,267,7.497,268,7.736,269,6.673,270,6.012,271,6.012,272,7.061,273,4.21,274,4.635,275,4.635,276,4.635,277,4.635,278,6.012,279,6.012,697,6.095,1216,5.244,1217,5.244,1218,5.244,1219,5.244,1220,5.244,1221,5.244,1222,5.244,1223,5.244,1224,5.244,1225,5.244,1226,5.244,1227,5.244,1228,5.244,1229,5.244]],["title/interfaces/Occasion.html",[232,0.2,349,0.902]],["body/interfaces/Occasion.html",[0,0.147,3,0.027,4,0.041,5,0.027,7,0.033,8,0.467,12,0.737,25,0.257,29,0.009,30,0.461,31,0.25,32,0.729,33,0.265,45,0.338,67,0.119,81,0.57,84,0.583,89,0.597,109,0.683,133,0.878,161,1.512,184,0.31,191,0.003,192,0.004,193,0.003,220,0.639,232,0.403,234,0.4,237,0.484,245,0.407,280,0.961,281,0.508,282,0.639,283,0.653,284,1.881,285,0.557,286,0.961,287,1.378,288,0.639,289,0.961,290,0.639,291,1.155,292,0.639,293,1.155,294,0.639,295,0.639,296,0.639,297,0.94,298,0.961,299,0.639,300,0.639,301,0.639,302,0.639,303,0.639,304,1.229,305,0.961,306,0.639,307,0.639,308,0.624,309,0.639,310,0.639,311,0.961,312,0.94,313,0.94,314,0.653,315,1.481,316,1.378,317,0.639,318,0.639,319,0.653,320,0.961,321,0.639,322,0.639,323,1.155,324,0.639,325,0.94,326,1.155,327,0.639,328,0.61,329,0.639,330,0.639,331,0.653,332,0.639,333,1.13,334,0.624,335,0.639,336,0.639,337,0.639,338,0.639,339,1.469,340,1.546,341,0.639,342,0.639,343,0.639,344,0.639,345,0.624,346,1.285,347,1.174,348,0.639,349,1.348,350,1.285,351,0.653,352,1.314,353,1.181,354,0.653,355,0.653,356,1.285,357,0.961,358,0.639,359,0.653,360,0.653,361,0.624,362,1.257,363,0.653,364,0.653,365,0.653,366,0.653,367,0.653,368,0.94,369,0.639,370,0.639,371,0.639,372,0.639,373,0.639,374,0.639,375,0.961,376,0.639,377,0.94,378,0.639,379,0.639,380,0.639,381,0.639,382,0.639,383,0.639,384,0.639,385,0.639,386,0.639,387,0.639,388,0.639,389,0.639,390,0.639,391,0.639,392,0.639,393,0.639,394,0.961,395,0.639,396,0.639,397,0.639,398,0.639,399,0.639,400,0.639,401,0.639,402,1.13,403,0.639,404,0.639,405,0.961,406,0.639,407,0.639,408,0.639,409,0.639,410,1.257,411,0.639,412,0.653,413,0.639,414,0.639,415,0.639,416,1.257,417,0.639,418,0.961,419,0.639,420,1.155,421,0.639,422,0.961,423,0.639,424,1.285,425,0.639,426,0.94,427,0.639,428,0.961,429,0.639,430,0.639,431,0.639,432,0.961,433,0.639,434,0.94,435,0.653,436,0.653,437,0.639,438,0.639,439,0.94,440,0.919,441,0.878,442,0.639,443,0.597,444,1.182,445,1.444,446,0.639,447,0.639,448,0.639,449,0.639,450,0.639,451,0.639,452,0.639,453,0.639,454,0.639,455,0.639,456,0.639,457,0.639,458,0.639,459,0.639,460,0.639,461,0.639,462,1.155,463,1.155,464,1.481,465,0.639,466,0.639,467,0.961,468,0.639,469,0.653,470,1.155,471,1.155,472,0.639,473,0.653,474,0.639,475,0.653,476,0.961,477,0.639,478,1.08,479,0.653,480,0.653,481,0.639,482,0.653,483,0.639,484,0.639,485,0.961,486,0.653,487,0.961,488,0.961,489,0.961,490,1.314,491,0.639,492,0.653,493,0.653,494,0.961,495,0.639,496,0.653,497,0.653,498,0.508,499,0.639,500,1.13,501,1.13,502,0.961,503,0.624,504,0.624,505,0.624,506,0.961,507,0.639,508,0.639,509,0.639,510,0.94,511,1.155,512,0.624,513,0.624,514,0.639,515,0.653,516,0.653,517,0.639,518,0.639,519,0.653,520,0.653,521,0.653,522,0.653,523,0.961,524,0.624,525,0.624,526,1.13,527,0.961,528,0.639,529,0.639,530,0.639,531,0.961,532,0.653,533,0.319,534,0.639,535,0.57,536,1.251,537,1.349,538,1.319,539,1.512,540,0.919,541,0.653,542,0.639,543,0.52,544,0.639,545,0.639,546,1.155,547,0.653,548,0.653,549,0.961,550,0.653,551,0.653,552,0.639,553,0.653,554,1.319,555,0.653,556,1.481,557,0.653,558,0.653,559,0.653,560,0.653,561,0.653,562,1.155,563,0.653,564,0.653,565,0.653,566,0.653,567,0.653,568,0.639,569,0.653,570,0.653,571,0.653,572,0.653,573,0.653,574,0.653,575,0.653,576,0.653,577,0.653,578,0.653,579,0.653,580,0.639,581,0.653,582,1.201,583,0.653,584,0.653,585,0.653,586,0.653,587,0.653,588,0.961,589,0.653,590,0.639,591,0.653,592,0.653,593,0.653,594,0.653,595,0.653,596,0.639,597,0.639,598,0.653,599,0.653,600,0.653,601,0.639,602,0.639,603,0.653,604,0.653,605,0.639,606,0.653,607,0.653,608,0.653,609,0.653,610,0.639,611,0.653,612,0.639,613,0.653,614,0.653,615,0.639,616,0.653,617,0.653]],["title/interfaces/Ogranization.html",[232,0.2,346,0.922]],["body/interfaces/Ogranization.html",[0,0.149,3,0.028,4,0.041,5,0.028,7,0.034,8,0.471,12,0.743,25,0.261,29,0.009,30,0.475,31,0.249,33,0.265,45,0.342,67,0.119,81,0.578,84,0.591,89,0.605,109,0.686,133,0.886,161,1.518,184,0.314,191,0.003,192,0.005,193,0.003,220,0.647,232,0.404,234,0.404,237,0.491,245,0.413,280,0.97,281,0.514,282,0.647,283,0.662,284,1.883,285,0.565,286,0.97,287,1.386,288,0.647,289,0.97,290,0.647,291,1.164,292,0.647,293,1.164,294,0.647,295,0.647,296,0.647,297,0.949,298,0.97,299,0.647,300,0.647,301,0.647,302,0.647,303,0.647,304,1.237,305,0.97,306,0.647,307,0.647,308,0.633,309,0.647,310,0.647,311,0.97,312,0.949,313,0.949,314,0.662,315,1.323,316,0.97,317,0.647,318,0.647,319,0.662,320,0.97,321,0.647,322,0.647,323,1.164,324,0.647,325,0.949,326,1.164,327,0.647,328,0.618,329,0.647,330,0.647,331,0.662,332,0.647,333,1.138,334,0.633,335,0.647,336,0.647,337,0.647,338,0.647,339,1.476,340,1.164,341,0.647,342,0.647,343,0.647,344,0.647,345,0.633,346,1.164,347,0.886,348,0.647,349,1.265,350,0.647,351,0.662,352,0.662,353,1.191,354,0.662,355,0.662,356,0.647,357,0.97,358,0.647,359,0.662,360,0.662,361,0.633,362,1.265,363,0.662,364,0.662,365,0.662,366,0.662,367,0.662,368,0.949,369,0.647,370,0.647,371,0.647,372,0.647,373,0.647,374,0.647,375,0.97,376,0.647,377,0.949,378,0.647,379,0.647,380,0.647,381,0.647,382,0.647,383,0.647,384,0.647,385,0.647,386,0.647,387,0.647,388,0.647,389,0.647,390,0.647,391,0.647,392,0.647,393,0.647,394,0.97,395,0.647,396,0.647,397,0.647,398,0.647,399,0.647,400,0.647,401,0.647,402,1.138,403,0.647,404,0.647,405,0.97,406,0.647,407,0.647,408,0.647,409,0.647,410,1.265,411,0.647,412,0.662,413,0.647,414,0.647,415,0.647,416,1.265,417,0.647,418,0.97,419,0.647,420,1.164,421,0.647,422,0.97,423,0.647,424,1.294,425,0.647,426,0.949,427,0.647,428,0.97,429,0.647,430,0.647,431,0.647,432,0.97,433,0.647,434,0.949,435,0.662,436,0.662,437,0.647,438,0.647,439,0.949,440,0.928,441,0.886,442,0.647,443,0.605,444,1.184,445,1.447,446,0.647,447,0.647,448,0.647,449,0.647,450,0.647,451,0.647,452,0.647,453,0.647,454,0.647,455,0.647,456,0.647,457,0.647,458,0.647,459,0.647,460,0.647,461,0.647,462,1.164,463,1.164,464,1.488,465,0.647,466,0.647,467,0.97,468,0.647,469,0.662,470,1.164,471,1.164,472,0.647,473,0.662,474,0.647,475,0.662,476,0.97,477,0.647,478,1.088,479,0.662,480,0.662,481,0.647,482,0.662,483,0.647,484,0.647,485,0.97,486,0.662,487,0.97,488,0.97,489,0.97,490,1.323,491,0.647,492,0.662,493,0.662,494,0.97,495,0.647,496,0.662,497,0.662,498,0.514,499,0.647,500,1.138,501,1.138,502,0.97,503,0.633,504,0.633,505,0.633,506,0.97,507,0.647,508,0.647,509,0.647,510,0.949,511,1.164,512,0.633,513,0.633,514,0.647,515,0.662,516,0.662,517,0.647,518,0.647,519,0.662,520,0.662,521,0.662,522,0.662,523,0.97,524,0.633,525,0.633,526,1.138,527,0.97,528,0.647,529,0.647,530,0.647,531,0.97,532,0.662,533,0.323,534,0.647,535,0.578,536,1.252,537,1.354,538,1.324,539,1.518,540,0.928,541,0.662,542,0.647,543,0.527,544,0.647,545,0.647,546,1.164,547,0.662,548,0.662,549,0.97,550,0.662,551,0.662,552,0.647,553,0.662,554,1.324,555,0.662,556,1.488,557,0.662,558,0.662,559,0.662,560,0.662,561,0.662,562,1.164,563,0.662,564,0.662,565,0.662,566,0.662,567,0.662,568,0.647,569,0.662,570,0.662,571,0.662,572,0.662,573,0.662,574,0.662,575,0.662,576,0.662,577,0.662,578,0.662,579,0.662,580,0.647,581,0.662,582,1.209,583,0.662,584,0.662,585,0.662,586,0.662,587,0.662,588,0.97,589,0.662,590,0.647,591,0.662,592,0.662,593,0.662,594,0.662,595,0.662,596,0.647,597,0.647,598,0.662,599,0.662,600,0.662,601,0.647,602,0.647,603,0.662,604,0.662,605,0.647,606,0.662,607,0.662,608,0.662,609,0.662,610,0.647,611,0.662,612,0.647,613,0.662,614,0.662,615,0.647,616,0.662,617,0.662]],["title/interfaces/Order.html",[232,0.2,368,0.902]],["body/interfaces/Order.html",[0,0.149,3,0.028,4,0.041,5,0.028,7,0.034,8,0.471,12,0.742,25,0.26,29,0.009,30,0.462,31,0.25,33,0.264,45,0.342,67,0.119,81,0.577,84,0.59,89,0.604,109,0.686,133,0.886,161,1.517,184,0.314,191,0.003,192,0.005,193,0.003,220,0.646,232,0.404,234,0.404,237,0.49,245,0.412,280,0.97,281,0.514,282,0.646,283,0.661,284,1.883,285,0.564,286,0.97,287,1.386,288,0.646,289,0.97,290,0.646,291,1.164,292,0.646,293,1.164,294,0.646,295,0.646,296,0.646,297,0.948,298,0.97,299,0.646,300,0.646,301,0.646,302,0.646,303,0.646,304,1.236,305,0.97,306,0.646,307,0.646,308,0.632,309,0.646,310,0.646,311,0.97,312,0.948,313,0.948,314,0.661,315,1.322,316,0.97,317,0.646,318,0.646,319,0.661,320,0.97,321,0.646,322,0.646,323,1.164,324,0.646,325,0.948,326,1.164,327,0.646,328,0.618,329,0.646,330,0.646,331,0.661,332,0.646,333,1.138,334,0.632,335,0.646,336,0.646,337,0.646,338,0.646,339,1.475,340,1.164,341,0.646,342,0.646,343,0.646,344,0.646,345,0.632,346,0.97,347,0.886,348,0.646,349,1.264,350,0.646,351,0.661,352,0.661,353,1.19,354,0.661,355,0.661,356,0.646,357,0.97,358,0.646,359,0.661,360,0.661,361,0.632,362,1.264,363,0.661,364,0.661,365,0.661,366,0.661,367,0.661,368,1.138,369,1.293,370,0.646,371,0.646,372,0.646,373,0.646,374,0.646,375,0.97,376,0.646,377,0.948,378,0.646,379,0.646,380,0.646,381,0.646,382,0.646,383,0.646,384,0.646,385,0.646,386,0.646,387,0.646,388,0.646,389,0.646,390,0.646,391,0.646,392,0.646,393,0.646,394,0.97,395,0.646,396,0.646,397,0.646,398,0.646,399,0.646,400,0.646,401,0.646,402,1.138,403,0.646,404,0.646,405,0.97,406,0.646,407,0.646,408,0.646,409,0.646,410,1.264,411,0.646,412,0.661,413,0.646,414,0.646,415,0.646,416,1.264,417,0.646,418,0.97,419,0.646,420,1.164,421,0.646,422,0.97,423,0.646,424,1.293,425,0.646,426,0.948,427,0.646,428,0.97,429,0.646,430,0.646,431,0.646,432,0.97,433,0.646,434,0.948,435,0.661,436,0.661,437,0.646,438,0.646,439,0.948,440,0.927,441,0.886,442,0.646,443,0.604,444,1.184,445,1.447,446,0.646,447,0.646,448,0.646,449,0.646,450,0.646,451,0.646,452,0.646,453,0.646,454,0.646,455,0.646,456,0.646,457,0.646,458,0.646,459,0.646,460,0.646,461,0.646,462,1.164,463,1.164,464,1.488,465,0.646,466,0.646,467,0.97,468,0.646,469,0.661,470,1.164,471,1.164,472,0.646,473,0.661,474,0.646,475,0.661,476,0.97,477,0.646,478,1.088,479,0.661,480,0.661,481,0.646,482,0.661,483,0.646,484,0.646,485,0.97,486,0.661,487,0.97,488,0.97,489,0.97,490,1.322,491,0.646,492,0.661,493,0.661,494,0.97,495,0.646,496,0.661,497,0.661,498,0.514,499,0.646,500,1.138,501,1.138,502,0.97,503,0.632,504,0.632,505,0.632,506,0.97,507,0.646,508,0.646,509,0.646,510,0.948,511,1.164,512,0.632,513,0.632,514,0.646,515,0.661,516,0.661,517,0.646,518,0.646,519,0.661,520,0.661,521,0.661,522,0.661,523,0.97,524,0.632,525,0.632,526,1.138,527,0.97,528,0.646,529,0.646,530,0.646,531,0.97,532,0.661,533,0.323,534,0.646,535,0.577,536,1.252,537,1.354,538,1.324,539,1.518,540,0.927,541,0.661,542,0.646,543,0.526,544,0.646,545,0.646,546,1.164,547,0.661,548,0.661,549,0.97,550,0.661,551,0.661,552,0.646,553,0.661,554,1.324,555,0.661,556,1.488,557,0.661,558,0.661,559,0.661,560,0.661,561,0.661,562,1.164,563,0.661,564,0.661,565,0.661,566,0.661,567,0.661,568,0.646,569,0.661,570,0.661,571,0.661,572,0.661,573,0.661,574,0.661,575,0.661,576,0.661,577,0.661,578,0.661,579,0.661,580,0.646,581,0.661,582,1.209,583,0.661,584,0.661,585,0.661,586,0.661,587,0.661,588,0.97,589,0.661,590,0.646,591,0.661,592,0.661,593,0.661,594,0.661,595,0.661,596,0.646,597,0.646,598,0.661,599,0.661,600,0.661,601,0.646,602,0.646,603,0.661,604,0.661,605,0.646,606,0.661,607,0.661,608,0.661,609,0.661,610,0.646,611,0.661,612,0.646,613,0.661,614,0.661,615,0.646,616,0.661,617,0.661,1127,3.066]],["title/interfaces/OrderState.html",[232,0.2,361,0.902]],["body/interfaces/OrderState.html",[0,0.148,3,0.027,4,0.041,5,0.027,7,0.034,8,0.468,12,0.739,25,0.259,29,0.009,30,0.461,31,0.25,32,0.977,33,0.264,45,0.34,67,0.119,81,0.573,84,0.586,89,0.6,109,0.684,133,1.262,161,1.515,184,0.312,191,0.003,192,0.004,193,0.003,220,0.642,232,0.403,234,0.402,237,0.487,245,0.409,280,0.965,281,0.51,282,0.642,283,0.656,284,1.882,285,0.56,286,0.965,287,1.381,288,0.642,289,0.965,290,0.642,291,1.159,292,0.642,293,1.159,294,0.642,295,0.642,296,0.642,297,0.943,298,0.965,299,0.642,300,0.642,301,0.642,302,0.642,303,0.642,304,1.232,305,0.965,306,0.642,307,0.642,308,0.628,309,0.642,310,0.642,311,0.965,312,0.943,313,0.943,314,0.656,315,1.484,316,0.965,317,0.642,318,0.642,319,0.656,320,0.965,321,0.642,322,0.642,323,1.159,324,0.642,325,0.943,326,1.159,327,0.642,328,0.614,329,0.642,330,0.642,331,0.656,332,0.642,333,1.133,334,0.628,335,0.642,336,0.642,337,0.642,338,0.642,339,1.472,340,1.159,341,0.642,342,0.642,343,0.642,344,0.642,345,0.628,346,0.965,347,0.881,348,0.642,349,1.26,350,0.642,351,0.656,352,0.656,353,1.185,354,0.656,355,0.656,356,0.642,357,1.289,358,0.642,359,0.656,360,0.656,361,0.943,362,1.419,363,1.318,364,0.656,365,0.656,366,0.656,367,1.318,368,0.943,369,0.642,370,0.642,371,0.642,372,0.642,373,0.642,374,0.642,375,0.965,376,0.642,377,0.943,378,0.642,379,0.642,380,0.642,381,0.642,382,0.642,383,0.642,384,0.642,385,0.642,386,0.642,387,0.642,388,0.642,389,0.642,390,0.642,391,0.642,392,0.642,393,0.642,394,0.965,395,0.642,396,0.642,397,0.642,398,0.642,399,0.642,400,0.642,401,0.642,402,1.133,403,0.642,404,0.642,405,0.965,406,0.642,407,0.642,408,0.642,409,0.642,410,1.26,411,0.642,412,0.656,413,0.642,414,0.642,415,0.642,416,1.26,417,0.642,418,0.965,419,0.642,420,1.159,421,0.642,422,0.965,423,0.642,424,1.289,425,0.642,426,0.943,427,0.642,428,0.965,429,0.642,430,0.642,431,0.642,432,0.965,433,0.642,434,0.943,435,0.656,436,0.656,437,0.642,438,0.642,439,0.943,440,0.922,441,0.881,442,0.642,443,0.6,444,1.183,445,1.445,446,0.642,447,0.642,448,0.642,449,0.642,450,0.642,451,0.642,452,0.642,453,0.642,454,0.642,455,0.642,456,0.642,457,0.642,458,0.642,459,0.642,460,0.642,461,0.642,462,1.159,463,1.159,464,1.484,465,0.642,466,0.642,467,0.965,468,0.642,469,0.656,470,1.159,471,1.159,472,0.642,473,0.656,474,0.642,475,0.656,476,0.965,477,0.642,478,1.083,479,0.656,480,0.656,481,0.642,482,0.656,483,0.642,484,0.642,485,0.965,486,0.656,487,0.965,488,0.965,489,0.965,490,1.318,491,0.642,492,0.656,493,0.656,494,0.965,495,0.642,496,0.656,497,0.656,498,0.51,499,0.642,500,1.133,501,1.133,502,0.965,503,0.628,504,0.628,505,0.628,506,0.965,507,0.642,508,0.642,509,0.642,510,0.943,511,1.159,512,0.628,513,0.628,514,0.642,515,0.656,516,0.656,517,0.642,518,0.642,519,0.656,520,0.656,521,0.656,522,0.656,523,0.965,524,0.628,525,0.628,526,1.133,527,0.965,528,0.642,529,0.642,530,0.642,531,0.965,532,0.656,533,0.321,534,0.642,535,0.573,536,1.252,537,1.351,538,1.321,539,1.514,540,0.922,541,0.656,542,0.642,543,0.523,544,0.642,545,0.642,546,1.159,547,0.656,548,0.656,549,0.965,550,0.656,551,0.656,552,0.642,553,0.656,554,1.321,555,0.656,556,1.484,557,0.656,558,0.656,559,0.656,560,0.656,561,0.656,562,1.159,563,0.656,564,0.656,565,0.656,566,0.656,567,0.656,568,0.642,569,0.656,570,0.656,571,0.656,572,0.656,573,0.656,574,0.656,575,0.656,576,0.656,577,0.656,578,0.656,579,0.656,580,0.642,581,0.656,582,1.204,583,0.656,584,0.656,585,0.656,586,0.656,587,0.656,588,0.965,589,0.656,590,0.642,591,0.656,592,0.656,593,0.656,594,0.656,595,0.656,596,0.642,597,0.642,598,0.656,599,0.656,600,0.656,601,0.642,602,0.642,603,0.656,604,0.656,605,0.642,606,0.656,607,0.656,608,0.656,609,0.656,610,0.642,611,0.656,612,0.642,613,0.656,614,0.656,615,0.642,616,0.656,617,0.656]],["title/classes/ParameterFactory.html",[0,0.213,1230,2.092]],["body/classes/ParameterFactory.html",[0,0.291,2,1.348,3,0.054,4,0.054,5,0.054,7,0.066,14,1.187,18,0.979,26,0.889,29,0.009,30,0.486,31,0.203,33,0.219,41,0.979,51,1.266,61,1.41,67,0.078,76,1.682,79,1.388,81,1.365,84,1.396,90,3.365,91,3.365,92,2.854,93,3.365,94,3.177,95,3.365,96,3.365,190,1.379,191,0.006,192,0.007,193,0.006,234,0.525,281,1.215,285,1.1,312,1.233,313,1.494,318,1.261,441,1.152,444,0.846,445,1.371,487,1.261,491,1.261,536,1.195,537,1.075,538,1.075,554,1.075,582,1.428,601,1.261,602,1.261,605,1.261,685,2.41,714,3.807,794,3.365,1230,3.467,1231,6.287,1232,6.287,1233,5.718,1234,3.986,1235,6.287,1236,6.287,1237,6.287,1238,6.287,1239,5.557,1240,6.287,1241,5.557,1242,6.287,1243,5.557,1244,6.287,1245,4.716,1246,5.557,1247,6.287,1248,5.557,1249,6.737,1250,6.287,1251,6.287,1252,6.287,1253,6.287,1254,3.807]],["title/classes/ParameterFactory-1.html",[0,0.178,194,2.241,1230,1.757]],["body/classes/ParameterFactory-1.html",[0,0.287,2,1.331,3,0.053,4,0.053,5,0.053,7,0.065,14,1.178,18,0.967,26,0.878,29,0.009,30,0.499,31,0.202,33,0.235,41,0.967,51,1.261,61,1.392,67,0.077,76,1.673,79,1.406,90,2.74,91,2.74,92,2.324,93,2.74,94,2.588,95,2.74,96,2.74,133,1.386,190,1.361,191,0.006,192,0.007,193,0.006,234,0.518,281,1.206,285,1.086,312,1.217,316,1.245,333,1.217,334,1.217,345,1.599,348,1.245,349,1.599,350,1.517,356,1.245,444,0.835,445,1.363,478,1.163,484,1.245,485,1.517,536,1.098,537,1.062,538,1.062,554,1.062,582,1.417,588,1.517,590,1.245,596,1.245,597,1.245,685,2.397,714,3.76,794,3.351,1230,3.44,1233,5.674,1234,3.936,1245,4.657,1254,3.76,1255,6.208,1256,6.208,1257,6.208,1258,6.208,1259,6.208,1260,5.487,1261,7.563,1262,5.487,1263,6.208,1264,5.487,1265,6.208,1266,5.487,1267,6.208,1268,5.487,1269,6.208,1270,5.487,1271,6.208,1272,6.208]],["title/classes/ParameterFactory-2.html",[0,0.178,1230,1.757,1273,3.118]],["body/classes/ParameterFactory-2.html",[0,0.294,2,1.366,3,0.054,4,0.054,5,0.054,7,0.067,14,1.196,18,0.992,26,0.9,29,0.009,30,0.459,41,0.992,51,1.241,61,1.428,67,0.079,76,1.756,79,1.391,90,3.391,91,3.391,92,2.876,93,3.391,94,3.202,95,3.391,96,3.391,190,1.396,191,0.006,192,0.007,193,0.006,234,0.532,281,1.225,297,1.506,426,1.506,427,1.54,433,1.277,434,1.249,437,1.54,438,1.54,444,0.857,445,1.378,476,1.277,477,1.277,478,1.44,536,1.11,537,1.089,538,1.089,554,1.089,685,2.424,714,3.857,794,3.38,1230,3.494,1234,4.038,1254,3.857,1274,6.368,1275,6.368,1276,6.368,1277,6.368,1278,6.368,1279,6.368,1280,6.368,1281,5.628,1282,6.368,1283,5.628,1284,6.368,1285,5.628,1286,6.368,1287,5.628,1288,6.368,1289,5.628,1290,6.368,1291,6.368,1292,6.368]],["title/classes/ParameterFactory-3.html",[0,0.178,1230,1.757,1293,3.118]],["body/classes/ParameterFactory-3.html",[0,0.296,2,1.375,3,0.055,4,0.055,5,0.055,7,0.067,14,1.201,18,0.999,26,0.907,29,0.009,30,0.478,33,0.184,41,0.999,51,1.273,61,1.438,67,0.08,76,1.697,79,1.383,90,2.831,91,2.831,92,2.401,93,2.831,94,2.673,95,2.831,96,2.831,133,1.413,190,1.406,191,0.006,192,0.007,193,0.006,234,0.535,281,1.23,285,1.122,358,1.286,361,1.257,362,1.257,368,1.512,369,1.286,370,1.286,444,0.863,445,1.382,478,1.202,481,1.286,483,1.286,536,1.113,537,1.097,538,1.097,554,1.097,580,1.286,582,1.609,685,2.431,714,3.883,794,3.388,1230,3.508,1233,5.787,1234,4.066,1245,5.787,1254,3.883,1294,6.412,1295,6.412,1296,6.412,1297,6.412,1298,6.412,1299,5.667,1300,6.412,1301,5.667,1302,6.412,1303,5.667,1304,6.412,1305,5.667,1306,6.412,1307,6.412]],["title/classes/ParameterFactory-4.html",[0,0.178,1230,1.757,1308,3.118]],["body/classes/ParameterFactory-4.html",[0,0.293,2,1.357,3,0.054,4,0.054,5,0.054,7,0.066,14,1.192,18,0.986,26,0.895,29,0.009,30,0.509,31,0.204,33,0.22,41,0.986,51,1.238,61,1.419,67,0.079,76,1.687,79,1.39,90,3.379,91,3.379,92,2.866,93,3.379,94,3.19,95,3.379,96,3.379,190,1.388,191,0.006,192,0.007,193,0.006,234,0.529,281,1.22,285,1.108,304,1.467,325,1.501,330,1.269,332,1.269,444,0.852,445,1.375,494,1.269,495,1.269,536,1.107,537,1.082,538,1.082,554,1.082,610,1.269,612,1.269,615,1.269,685,2.417,714,3.833,794,3.373,1230,3.481,1234,4.014,1254,3.833,1309,6.33,1310,6.33,1311,6.33,1312,6.33,1313,6.33,1314,6.33,1315,5.595,1316,6.33,1317,5.595,1318,6.764,1319,6.33,1320,5.595,1321,6.33,1322,5.595,1323,6.33,1324,5.595,1325,6.33,1326,6.33,1327,6.33]],["title/classes/ParameterFactory-5.html",[0,0.178,1230,1.757,1328,3.118]],["body/classes/ParameterFactory-5.html",[0,0.282,2,1.307,3,0.052,4,0.052,5,0.052,7,0.064,14,1.165,18,0.949,26,0.862,29,0.009,30,0.491,33,0.243,41,0.949,51,1.173,61,1.367,67,0.076,76,1.776,79,1.371,90,2.691,91,2.691,92,2.282,93,2.691,94,2.541,95,2.691,96,2.691,141,5.611,161,1.551,165,5.625,190,1.337,191,0.006,192,0.007,193,0.006,234,0.509,281,1.193,285,1.067,339,1.698,414,1.222,415,1.79,416,1.466,417,1.5,419,1.5,421,1.5,423,1.5,424,1.822,441,1.117,444,1.089,445,1.352,472,1.222,474,1.222,536,1.089,537,1.042,538,1.042,554,1.042,568,1.222,685,2.378,794,3.33,1230,3.402,1234,3.865,1254,3.691,1329,6.095,1330,6.095,1331,6.095,1332,6.095,1333,6.095,1334,6.095,1335,7.479,1336,5.387,1337,6.095,1338,6.095,1339,5.387,1340,6.095,1341,5.387,1342,6.095,1343,6.095,1344,5.387,1345,6.095,1346,6.095,1347,6.095,1348,6.095,1349,6.095]],["title/classes/ParameterFactory-6.html",[0,0.178,1230,1.757,1350,3.118]],["body/classes/ParameterFactory-6.html",[0,0.299,2,1.387,3,0.055,4,0.055,5,0.055,7,0.068,14,1.207,18,1.007,26,0.915,29,0.009,30,0.36,41,1.007,51,1.203,61,1.45,67,0.081,76,1.326,79,1.386,90,2.855,91,2.855,92,2.422,93,2.855,94,2.696,95,2.855,96,2.855,141,4.852,190,1.418,191,0.006,192,0.007,193,0.006,234,0.54,281,1.236,285,1.132,377,1.52,402,1.268,403,1.555,404,1.555,441,1.185,444,0.87,445,1.388,465,1.297,466,1.665,467,1.297,536,1.216,537,1.106,538,1.106,539,1.268,549,1.555,552,1.297,554,1.106,685,2.44,794,3.398,1230,3.527,1254,3.917,1351,6.468,1352,6.468,1353,6.468,1354,6.468,1355,5.717,1356,7.753,1357,5.717,1358,8.304,1359,5.717,1360,6.468,1361,6.468,1362,5.717,1363,6.468,1364,6.468]],["title/classes/ParameterFactory-7.html",[0,0.178,1230,1.757,1365,3.118]],["body/classes/ParameterFactory-7.html",[0,0.306,2,1.419,3,0.057,4,0.072,5,0.057,7,0.069,14,1.224,18,1.031,26,0.936,29,0.009,30,0.368,31,0.21,33,0.19,41,1.031,51,1.257,61,1.484,67,0.082,76,1.612,79,1.366,90,2.922,91,2.922,92,2.478,93,2.922,94,2.759,95,2.922,96,2.922,190,1.451,191,0.006,192,0.007,193,0.006,234,0.553,281,1.253,410,1.644,411,1.327,444,0.891,445,1.401,468,1.327,536,1.128,537,1.132,538,1.132,554,1.132,685,2.464,714,4.008,794,3.424,1230,3.575,1234,4.197,1254,4.008,1366,6.618,1367,6.618,1368,6.618,1369,6.618,1370,6.618,1371,5.85,1372,6.618,1373,5.85,1374,6.618,1375,6.618]],["title/interfaces/ParcelDelivery.html",[232,0.2,357,0.922]],["body/interfaces/ParcelDelivery.html",[0,0.149,3,0.028,4,0.041,5,0.028,7,0.034,8,0.471,12,0.743,25,0.261,29,0.009,30,0.462,31,0.249,33,0.264,45,0.342,67,0.119,81,0.578,84,0.591,89,0.605,109,0.686,133,0.886,161,1.518,184,0.314,191,0.003,192,0.005,193,0.003,220,0.647,232,0.404,234,0.404,237,0.491,245,0.413,280,0.97,281,0.514,282,0.647,283,0.662,284,1.883,285,0.565,286,0.97,287,1.386,288,0.647,289,0.97,290,0.647,291,1.164,292,0.647,293,1.164,294,0.647,295,0.647,296,0.647,297,0.949,298,0.97,299,0.647,300,0.647,301,0.647,302,0.647,303,0.647,304,1.237,305,0.97,306,0.647,307,0.647,308,0.633,309,0.647,310,0.647,311,0.97,312,0.949,313,0.949,314,0.662,315,1.488,316,0.97,317,0.647,318,0.647,319,0.662,320,0.97,321,0.647,322,0.647,323,1.164,324,0.647,325,0.949,326,1.164,327,0.647,328,0.618,329,0.647,330,0.647,331,0.662,332,0.647,333,1.138,334,0.633,335,0.647,336,0.647,337,0.647,338,0.647,339,1.476,340,1.164,341,0.647,342,0.647,343,0.647,344,0.647,345,0.633,346,0.97,347,0.886,348,0.647,349,1.265,350,0.647,351,0.662,352,0.662,353,1.191,354,0.662,355,0.662,356,0.647,357,1.164,358,1.294,359,0.662,360,0.662,361,0.633,362,1.265,363,0.662,364,0.662,365,0.662,366,0.662,367,0.662,368,0.949,369,0.647,370,0.647,371,0.647,372,0.647,373,0.647,374,0.647,375,0.97,376,0.647,377,0.949,378,0.647,379,0.647,380,0.647,381,0.647,382,0.647,383,0.647,384,0.647,385,0.647,386,0.647,387,0.647,388,0.647,389,0.647,390,0.647,391,0.647,392,0.647,393,0.647,394,0.97,395,0.647,396,0.647,397,0.647,398,0.647,399,0.647,400,0.647,401,0.647,402,1.138,403,0.647,404,0.647,405,0.97,406,0.647,407,0.647,408,0.647,409,0.647,410,1.265,411,0.647,412,0.662,413,0.647,414,0.647,415,0.647,416,1.265,417,0.647,418,0.97,419,0.647,420,1.164,421,0.647,422,0.97,423,0.647,424,1.294,425,0.647,426,0.949,427,0.647,428,0.97,429,0.647,430,0.647,431,0.647,432,0.97,433,0.647,434,0.949,435,0.662,436,0.662,437,0.647,438,0.647,439,0.949,440,0.928,441,0.886,442,0.647,443,0.605,444,1.184,445,1.447,446,0.647,447,0.647,448,0.647,449,0.647,450,0.647,451,0.647,452,0.647,453,0.647,454,0.647,455,0.647,456,0.647,457,0.647,458,0.647,459,0.647,460,0.647,461,0.647,462,1.164,463,1.164,464,1.488,465,0.647,466,0.647,467,0.97,468,0.647,469,0.662,470,1.164,471,1.164,472,0.647,473,0.662,474,0.647,475,0.662,476,0.97,477,0.647,478,1.088,479,0.662,480,0.662,481,0.647,482,0.662,483,0.647,484,0.647,485,0.97,486,0.662,487,0.97,488,0.97,489,0.97,490,1.323,491,0.647,492,0.662,493,0.662,494,0.97,495,0.647,496,0.662,497,0.662,498,0.514,499,0.647,500,1.138,501,1.138,502,0.97,503,0.633,504,0.633,505,0.633,506,0.97,507,0.647,508,0.647,509,0.647,510,0.949,511,1.164,512,0.633,513,0.633,514,0.647,515,0.662,516,0.662,517,0.647,518,0.647,519,0.662,520,0.662,521,0.662,522,0.662,523,0.97,524,0.633,525,0.633,526,1.138,527,0.97,528,0.647,529,0.647,530,0.647,531,0.97,532,0.662,533,0.323,534,0.647,535,0.578,536,1.252,537,1.354,538,1.324,539,1.518,540,0.928,541,0.662,542,0.647,543,0.527,544,0.647,545,0.647,546,1.164,547,0.662,548,0.662,549,0.97,550,0.662,551,0.662,552,0.647,553,0.662,554,1.324,555,0.662,556,1.488,557,0.662,558,0.662,559,0.662,560,0.662,561,0.662,562,1.164,563,0.662,564,0.662,565,0.662,566,0.662,567,0.662,568,0.647,569,0.662,570,0.662,571,0.662,572,0.662,573,0.662,574,0.662,575,0.662,576,0.662,577,0.662,578,0.662,579,0.662,580,0.647,581,0.662,582,1.209,583,0.662,584,0.662,585,0.662,586,0.662,587,0.662,588,0.97,589,0.662,590,0.647,591,0.662,592,0.662,593,0.662,594,0.662,595,0.662,596,0.647,597,0.647,598,0.662,599,0.662,600,0.662,601,0.647,602,0.647,603,0.662,604,0.662,605,0.647,606,0.662,607,0.662,608,0.662,609,0.662,610,0.647,611,0.662,612,0.647,613,0.662,614,0.662,615,0.647,616,0.662,617,0.662]],["title/interfaces/Payload.html",[232,0.2,444,0.619]],["body/interfaces/Payload.html",[0,0.149,3,0.028,4,0.041,5,0.028,7,0.034,8,0.471,12,0.743,25,0.261,29,0.009,30,0.462,31,0.249,33,0.264,45,0.342,67,0.119,81,0.578,84,0.591,89,0.605,109,0.686,133,0.886,161,1.518,184,0.314,191,0.003,192,0.005,193,0.003,220,0.647,232,0.404,234,0.404,237,0.491,245,0.413,280,0.97,281,0.514,282,0.647,283,0.662,284,1.883,285,0.565,286,0.97,287,1.386,288,0.647,289,0.97,290,0.647,291,1.164,292,0.647,293,1.164,294,0.647,295,0.647,296,0.647,297,0.949,298,0.97,299,0.647,300,0.647,301,0.647,302,0.647,303,0.647,304,1.237,305,0.97,306,0.647,307,0.647,308,0.633,309,0.647,310,0.647,311,0.97,312,0.949,313,0.949,314,0.662,315,1.323,316,0.97,317,0.647,318,0.647,319,0.662,320,0.97,321,0.647,322,0.647,323,1.164,324,0.647,325,0.949,326,1.164,327,0.647,328,0.618,329,0.647,330,0.647,331,0.662,332,0.647,333,1.138,334,0.633,335,0.647,336,0.647,337,0.647,338,0.647,339,1.476,340,1.164,341,0.647,342,0.647,343,0.647,344,0.647,345,0.633,346,0.97,347,0.886,348,0.647,349,1.265,350,0.647,351,0.662,352,0.662,353,1.191,354,0.662,355,0.662,356,0.647,357,0.97,358,0.647,359,0.662,360,0.662,361,0.633,362,1.265,363,0.662,364,0.662,365,0.662,366,0.662,367,0.662,368,0.949,369,0.647,370,0.647,371,0.647,372,0.647,373,0.647,374,0.647,375,0.97,376,0.647,377,0.949,378,0.647,379,0.647,380,0.647,381,0.647,382,0.647,383,0.647,384,0.647,385,0.647,386,0.647,387,0.647,388,0.647,389,0.647,390,0.647,391,0.647,392,0.647,393,0.647,394,0.97,395,0.647,396,0.647,397,0.647,398,0.647,399,0.647,400,0.647,401,0.647,402,1.138,403,0.647,404,0.647,405,0.97,406,0.647,407,0.647,408,0.647,409,0.647,410,1.265,411,0.647,412,0.662,413,0.647,414,0.647,415,0.647,416,1.265,417,0.647,418,0.97,419,0.647,420,1.164,421,0.647,422,0.97,423,0.647,424,1.294,425,0.647,426,0.949,427,0.647,428,0.97,429,0.647,430,0.647,431,0.647,432,0.97,433,0.647,434,0.949,435,0.662,436,0.662,437,0.647,438,0.647,439,0.949,440,0.928,441,0.886,442,0.647,443,0.605,444,1.189,445,1.447,446,0.647,447,0.647,448,0.647,449,0.647,450,0.647,451,0.647,452,0.647,453,0.647,454,0.647,455,0.647,456,0.647,457,0.647,458,0.647,459,0.647,460,0.647,461,0.647,462,1.164,463,1.164,464,1.488,465,0.647,466,1.294,467,1.294,468,0.647,469,0.662,470,1.164,471,1.164,472,0.647,473,0.662,474,0.647,475,0.662,476,0.97,477,0.647,478,1.088,479,0.662,480,0.662,481,0.647,482,0.662,483,0.647,484,0.647,485,0.97,486,0.662,487,0.97,488,0.97,489,0.97,490,1.323,491,0.647,492,0.662,493,0.662,494,0.97,495,0.647,496,0.662,497,0.662,498,0.514,499,0.647,500,1.138,501,1.138,502,0.97,503,0.633,504,0.633,505,0.633,506,0.97,507,0.647,508,0.647,509,0.647,510,0.949,511,1.164,512,0.633,513,0.633,514,0.647,515,0.662,516,0.662,517,0.647,518,0.647,519,0.662,520,0.662,521,0.662,522,0.662,523,0.97,524,0.633,525,0.633,526,1.138,527,0.97,528,0.647,529,0.647,530,0.647,531,0.97,532,0.662,533,0.323,534,0.647,535,0.578,536,1.252,537,1.354,538,1.324,539,1.518,540,0.928,541,0.662,542,0.647,543,0.527,544,0.647,545,0.647,546,1.164,547,0.662,548,0.662,549,0.97,550,0.662,551,0.662,552,0.647,553,0.662,554,1.324,555,0.662,556,1.488,557,0.662,558,0.662,559,0.662,560,0.662,561,0.662,562,1.164,563,0.662,564,0.662,565,0.662,566,0.662,567,0.662,568,0.647,569,0.662,570,0.662,571,0.662,572,0.662,573,0.662,574,0.662,575,0.662,576,0.662,577,0.662,578,0.662,579,0.662,580,0.647,581,0.662,582,1.209,583,0.662,584,0.662,585,0.662,586,0.662,587,0.662,588,0.97,589,0.662,590,0.647,591,0.662,592,0.662,593,0.662,594,0.662,595,0.662,596,0.647,597,0.647,598,0.662,599,0.662,600,0.662,601,0.647,602,0.647,603,0.662,604,0.662,605,0.647,606,0.662,607,0.662,608,0.662,609,0.662,610,0.647,611,0.662,612,0.647,613,0.662,614,0.662,615,0.647,616,0.662,617,0.662]],["title/interfaces/Payload-1.html",[194,2.241,232,0.168,444,0.52]],["body/interfaces/Payload-1.html",[0,0.149,3,0.028,4,0.041,5,0.028,7,0.034,8,0.471,12,0.743,25,0.261,29,0.009,30,0.462,31,0.249,33,0.264,45,0.342,67,0.119,81,0.578,84,0.591,89,0.605,109,0.686,133,0.886,161,1.518,184,0.314,191,0.003,192,0.005,193,0.003,220,0.647,232,0.404,234,0.404,237,0.491,245,0.413,280,0.97,281,0.514,282,0.647,283,0.662,284,1.883,285,0.565,286,0.97,287,1.386,288,0.647,289,0.97,290,0.647,291,1.164,292,0.647,293,1.164,294,0.647,295,0.647,296,0.647,297,0.949,298,0.97,299,0.647,300,0.647,301,0.647,302,0.647,303,0.647,304,1.237,305,0.97,306,0.647,307,0.647,308,0.633,309,0.647,310,0.647,311,0.97,312,0.949,313,0.949,314,0.662,315,1.323,316,0.97,317,0.647,318,0.647,319,0.662,320,0.97,321,0.647,322,0.647,323,1.164,324,0.647,325,0.949,326,1.164,327,0.647,328,0.618,329,0.647,330,0.647,331,0.662,332,0.647,333,1.138,334,0.633,335,0.647,336,0.647,337,0.647,338,0.647,339,1.476,340,1.164,341,0.647,342,0.647,343,0.647,344,0.647,345,0.633,346,0.97,347,0.886,348,0.647,349,1.265,350,0.647,351,0.662,352,0.662,353,1.191,354,0.662,355,0.662,356,0.647,357,0.97,358,0.647,359,0.662,360,0.662,361,0.633,362,1.265,363,0.662,364,0.662,365,0.662,366,0.662,367,0.662,368,0.949,369,0.647,370,0.647,371,0.647,372,0.647,373,0.647,374,0.647,375,0.97,376,0.647,377,0.949,378,0.647,379,0.647,380,0.647,381,0.647,382,0.647,383,0.647,384,0.647,385,0.647,386,0.647,387,0.647,388,0.647,389,0.647,390,0.647,391,0.647,392,0.647,393,0.647,394,0.97,395,0.647,396,0.647,397,0.647,398,0.647,399,0.647,400,0.647,401,0.647,402,1.138,403,0.647,404,0.647,405,0.97,406,0.647,407,0.647,408,0.647,409,0.647,410,1.476,411,0.647,412,0.662,413,0.647,414,0.647,415,0.647,416,1.265,417,0.647,418,0.97,419,0.647,420,1.164,421,0.647,422,0.97,423,0.647,424,1.294,425,0.647,426,0.949,427,0.647,428,0.97,429,0.647,430,0.647,431,0.647,432,0.97,433,0.647,434,0.949,435,0.662,436,0.662,437,0.647,438,0.647,439,0.949,440,0.928,441,0.886,442,0.647,443,0.605,444,1.189,445,1.447,446,0.647,447,0.647,448,0.647,449,0.647,450,0.647,451,0.647,452,0.647,453,0.647,454,0.647,455,0.647,456,0.647,457,0.647,458,0.647,459,0.647,460,0.647,461,0.647,462,1.164,463,1.164,464,1.488,465,0.647,466,0.647,467,0.97,468,0.647,469,1.191,470,1.164,471,1.164,472,0.647,473,0.662,474,0.647,475,0.662,476,0.97,477,0.647,478,1.088,479,0.662,480,0.662,481,0.647,482,0.662,483,0.647,484,0.647,485,0.97,486,0.662,487,0.97,488,0.97,489,0.97,490,1.323,491,0.647,492,0.662,493,0.662,494,0.97,495,0.647,496,0.662,497,0.662,498,0.514,499,0.647,500,1.138,501,1.138,502,0.97,503,0.633,504,0.633,505,0.633,506,0.97,507,0.647,508,0.647,509,0.647,510,0.949,511,1.164,512,0.633,513,0.633,514,0.647,515,0.662,516,0.662,517,0.647,518,0.647,519,0.662,520,0.662,521,0.662,522,0.662,523,0.97,524,0.633,525,0.633,526,1.138,527,0.97,528,0.647,529,0.647,530,0.647,531,0.97,532,0.662,533,0.323,534,0.647,535,0.578,536,1.252,537,1.354,538,1.324,539,1.518,540,0.928,541,0.662,542,0.647,543,0.527,544,0.647,545,0.647,546,1.164,547,0.662,548,0.662,549,0.97,550,0.662,551,0.662,552,0.647,553,0.662,554,1.324,555,0.662,556,1.488,557,0.662,558,0.662,559,0.662,560,0.662,561,0.662,562,1.164,563,0.662,564,0.662,565,0.662,566,0.662,567,0.662,568,0.647,569,0.662,570,0.662,571,0.662,572,0.662,573,0.662,574,0.662,575,0.662,576,0.662,577,0.662,578,0.662,579,0.662,580,0.647,581,0.662,582,1.209,583,0.662,584,0.662,585,0.662,586,0.662,587,0.662,588,0.97,589,0.662,590,0.647,591,0.662,592,0.662,593,0.662,594,0.662,595,0.662,596,0.647,597,0.647,598,0.662,599,0.662,600,0.662,601,0.647,602,0.647,603,0.662,604,0.662,605,0.647,606,0.662,607,0.662,608,0.662,609,0.662,610,0.647,611,0.662,612,0.647,613,0.662,614,0.662,615,0.647,616,0.662,617,0.662]],["title/interfaces/Payload-2.html",[232,0.168,444,0.52,1273,3.118]],["body/interfaces/Payload-2.html",[0,0.148,3,0.027,4,0.041,5,0.027,7,0.034,8,0.47,12,0.741,25,0.26,29,0.009,30,0.461,31,0.249,32,0.734,33,0.264,45,0.341,67,0.119,81,0.575,84,0.589,89,0.602,109,0.685,133,0.884,161,1.516,184,0.313,191,0.003,192,0.005,193,0.003,220,0.644,232,0.403,234,0.403,237,0.489,245,0.411,280,0.967,281,0.512,282,0.644,283,0.659,284,1.882,285,0.562,286,0.967,287,1.384,288,0.644,289,0.967,290,0.644,291,1.162,292,0.644,293,1.162,294,0.644,295,0.644,296,0.644,297,0.946,298,0.967,299,0.644,300,0.644,301,0.644,302,0.644,303,0.644,304,1.234,305,0.967,306,0.644,307,0.644,308,0.63,309,0.644,310,0.644,311,0.967,312,0.946,313,0.946,314,0.659,315,1.32,316,0.967,317,0.644,318,0.644,319,0.659,320,0.967,321,0.644,322,0.644,323,1.162,324,0.644,325,0.946,326,1.162,327,0.644,328,0.616,329,0.644,330,0.644,331,0.659,332,0.644,333,1.136,334,0.63,335,0.644,336,0.644,337,0.644,338,0.644,339,1.474,340,1.162,341,0.644,342,0.644,343,0.644,344,0.644,345,0.63,346,0.967,347,0.884,348,0.644,349,1.262,350,0.644,351,0.659,352,0.659,353,1.188,354,0.659,355,0.659,356,0.644,357,0.967,358,0.644,359,0.659,360,0.659,361,0.63,362,1.262,363,0.659,364,0.659,365,0.659,366,0.659,367,0.659,368,0.946,369,0.644,370,0.644,371,0.644,372,0.644,373,0.644,374,0.644,375,0.967,376,0.644,377,0.946,378,0.644,379,0.644,380,0.644,381,0.644,382,0.644,383,0.644,384,0.644,385,0.644,386,0.644,387,0.644,388,0.644,389,0.644,390,0.644,391,0.644,392,0.644,393,0.644,394,0.967,395,0.644,396,0.644,397,0.644,398,0.644,399,0.644,400,0.644,401,0.644,402,1.136,403,0.644,404,0.644,405,0.967,406,0.644,407,0.644,408,0.644,409,0.644,410,1.262,411,0.644,412,0.659,413,0.644,414,0.644,415,0.644,416,1.474,417,0.644,418,0.967,419,0.644,420,1.162,421,0.644,422,0.967,423,0.644,424,1.291,425,0.644,426,0.946,427,0.644,428,0.967,429,0.644,430,0.644,431,0.644,432,0.967,433,0.644,434,0.946,435,0.659,436,0.659,437,0.644,438,0.644,439,0.946,440,0.925,441,0.884,442,0.644,443,0.602,444,1.188,445,1.446,446,0.644,447,0.644,448,0.644,449,0.644,450,0.644,451,0.644,452,0.644,453,0.644,454,0.644,455,0.644,456,0.644,457,0.644,458,0.644,459,0.644,460,0.644,461,0.644,462,1.162,463,1.162,464,1.486,465,0.644,466,0.644,467,0.967,468,0.644,469,0.659,470,1.162,471,1.162,472,0.644,473,1.32,474,1.162,475,1.188,476,0.967,477,0.644,478,1.086,479,0.659,480,0.659,481,0.644,482,0.659,483,0.644,484,0.644,485,0.967,486,0.659,487,0.967,488,0.967,489,0.967,490,1.32,491,0.644,492,0.659,493,0.659,494,0.967,495,0.644,496,0.659,497,0.659,498,0.512,499,0.644,500,1.136,501,1.136,502,0.967,503,0.63,504,0.63,505,0.63,506,0.967,507,0.644,508,0.644,509,0.644,510,0.946,511,1.162,512,0.63,513,0.63,514,0.644,515,0.659,516,0.659,517,0.644,518,0.644,519,0.659,520,0.659,521,0.659,522,0.659,523,0.967,524,0.63,525,0.63,526,1.136,527,0.967,528,0.644,529,0.644,530,0.644,531,0.967,532,0.659,533,0.322,534,0.644,535,0.575,536,1.252,537,1.353,538,1.322,539,1.516,540,0.925,541,0.659,542,0.644,543,0.525,544,0.644,545,0.644,546,1.162,547,0.659,548,0.659,549,0.967,550,0.659,551,0.659,552,0.644,553,0.659,554,1.322,555,0.659,556,1.486,557,0.659,558,0.659,559,0.659,560,0.659,561,0.659,562,1.162,563,0.659,564,0.659,565,0.659,566,0.659,567,0.659,568,0.644,569,0.659,570,0.659,571,0.659,572,0.659,573,0.659,574,0.659,575,0.659,576,0.659,577,0.659,578,0.659,579,0.659,580,0.644,581,0.659,582,1.207,583,0.659,584,0.659,585,0.659,586,0.659,587,0.659,588,0.967,589,0.659,590,0.644,591,0.659,592,0.659,593,0.659,594,0.659,595,0.659,596,0.644,597,0.644,598,0.659,599,0.659,600,0.659,601,0.644,602,0.644,603,0.659,604,0.659,605,0.644,606,0.659,607,0.659,608,0.659,609,0.659,610,0.644,611,0.659,612,0.644,613,0.659,614,0.659,615,0.644,616,0.659,617,0.659]],["title/interfaces/Payload-3.html",[232,0.168,444,0.52,1293,3.118]],["body/interfaces/Payload-3.html",[0,0.149,3,0.027,4,0.041,5,0.027,7,0.034,8,0.47,12,0.741,25,0.26,29,0.009,30,0.462,31,0.25,33,0.264,45,0.341,67,0.119,81,0.576,84,0.589,89,0.603,109,0.685,133,0.884,161,1.517,184,0.313,191,0.003,192,0.005,193,0.003,220,0.645,232,0.403,234,0.403,237,0.489,245,0.411,280,0.968,281,0.513,282,0.645,283,0.66,284,1.882,285,0.563,286,0.968,287,1.384,288,0.645,289,0.968,290,0.645,291,1.162,292,0.645,293,1.162,294,0.645,295,0.645,296,0.645,297,0.947,298,0.968,299,0.645,300,0.645,301,0.645,302,0.645,303,0.645,304,1.235,305,0.968,306,0.645,307,0.645,308,0.631,309,0.645,310,0.645,311,0.968,312,0.947,313,0.947,314,0.66,315,1.321,316,0.968,317,0.645,318,0.645,319,0.66,320,0.968,321,0.645,322,0.645,323,1.162,324,0.645,325,0.947,326,1.162,327,0.645,328,0.617,329,0.645,330,0.645,331,0.66,332,0.645,333,1.136,334,0.631,335,0.645,336,0.645,337,0.645,338,0.645,339,1.474,340,1.162,341,0.645,342,0.645,343,0.645,344,0.645,345,0.631,346,0.968,347,0.884,348,0.645,349,1.263,350,0.645,351,0.66,352,0.66,353,1.189,354,0.66,355,0.66,356,0.645,357,0.968,358,0.645,359,0.66,360,0.66,361,0.631,362,1.263,363,0.66,364,0.66,365,0.66,366,0.66,367,0.66,368,0.947,369,0.645,370,0.645,371,0.645,372,0.645,373,0.645,374,0.645,375,0.968,376,0.645,377,0.947,378,0.645,379,0.645,380,0.645,381,0.645,382,0.645,383,0.645,384,0.645,385,0.645,386,0.645,387,0.645,388,0.645,389,0.645,390,0.645,391,0.645,392,0.645,393,0.645,394,0.968,395,0.645,396,0.645,397,0.645,398,0.645,399,0.645,400,0.645,401,0.645,402,1.136,403,0.645,404,0.645,405,0.968,406,0.645,407,0.645,408,0.645,409,0.645,410,1.263,411,0.645,412,0.66,413,0.645,414,0.645,415,0.645,416,1.263,417,0.645,418,0.968,419,0.645,420,1.162,421,0.645,422,0.968,423,0.645,424,1.292,425,0.645,426,0.947,427,0.645,428,0.968,429,0.645,430,0.645,431,0.645,432,0.968,433,0.645,434,1.354,435,0.66,436,0.66,437,0.645,438,0.645,439,0.947,440,0.925,441,0.884,442,0.645,443,0.603,444,1.188,445,1.446,446,0.645,447,0.645,448,0.645,449,0.645,450,0.645,451,0.645,452,0.645,453,0.645,454,0.645,455,0.645,456,0.645,457,0.645,458,0.645,459,0.645,460,0.645,461,0.645,462,1.162,463,1.162,464,1.487,465,0.645,466,0.645,467,0.968,468,0.645,469,0.66,470,1.162,471,1.162,472,0.645,473,0.66,474,0.645,475,0.66,476,0.968,477,0.645,478,1.359,479,1.189,480,1.189,481,0.645,482,0.66,483,0.645,484,0.645,485,0.968,486,0.66,487,0.968,488,0.968,489,0.968,490,1.321,491,0.645,492,0.66,493,0.66,494,0.968,495,0.645,496,0.66,497,0.66,498,0.513,499,0.645,500,1.136,501,1.136,502,0.968,503,0.631,504,0.631,505,0.631,506,0.968,507,0.645,508,0.645,509,0.645,510,0.947,511,1.162,512,0.631,513,0.631,514,0.645,515,0.66,516,0.66,517,0.645,518,0.645,519,0.66,520,0.66,521,0.66,522,0.66,523,0.968,524,0.631,525,0.631,526,1.136,527,0.968,528,0.645,529,0.645,530,0.645,531,0.968,532,0.66,533,0.322,534,0.645,535,0.576,536,1.252,537,1.353,538,1.323,539,1.517,540,0.925,541,0.66,542,0.645,543,0.525,544,0.645,545,0.645,546,1.162,547,0.66,548,0.66,549,0.968,550,0.66,551,0.66,552,0.645,553,0.66,554,1.323,555,0.66,556,1.487,557,0.66,558,0.66,559,0.66,560,0.66,561,0.66,562,1.162,563,0.66,564,0.66,565,0.66,566,0.66,567,0.66,568,0.645,569,0.66,570,0.66,571,0.66,572,0.66,573,0.66,574,0.66,575,0.66,576,0.66,577,0.66,578,0.66,579,0.66,580,0.645,581,0.66,582,1.207,583,0.66,584,0.66,585,0.66,586,0.66,587,0.66,588,0.968,589,0.66,590,0.645,591,0.66,592,0.66,593,0.66,594,0.66,595,0.66,596,0.645,597,0.645,598,0.66,599,0.66,600,0.66,601,0.645,602,0.645,603,0.66,604,0.66,605,0.645,606,0.66,607,0.66,608,0.66,609,0.66,610,0.645,611,0.66,612,0.645,613,0.66,614,0.66,615,0.645,616,0.66,617,0.66]],["title/interfaces/Payload-4.html",[232,0.168,444,0.52,1308,3.118]],["body/interfaces/Payload-4.html",[0,0.149,3,0.027,4,0.041,5,0.027,7,0.034,8,0.47,12,0.741,25,0.26,29,0.009,30,0.462,31,0.25,33,0.264,45,0.341,67,0.119,81,0.576,84,0.589,89,0.603,109,0.685,133,0.884,161,1.517,184,0.313,191,0.003,192,0.005,193,0.003,220,0.645,232,0.403,234,0.403,237,0.489,245,0.411,280,0.968,281,0.513,282,0.645,283,0.66,284,1.882,285,0.563,286,0.968,287,1.384,288,0.645,289,0.968,290,0.645,291,1.162,292,0.645,293,1.162,294,0.645,295,0.645,296,0.645,297,0.947,298,0.968,299,0.645,300,0.645,301,0.645,302,0.645,303,0.645,304,1.235,305,0.968,306,0.645,307,0.645,308,0.631,309,0.645,310,0.645,311,0.968,312,0.947,313,0.947,314,0.66,315,1.321,316,0.968,317,0.645,318,0.645,319,0.66,320,0.968,321,0.645,322,0.645,323,1.162,324,0.645,325,0.947,326,1.162,327,0.645,328,0.617,329,0.645,330,0.645,331,0.66,332,0.645,333,1.136,334,0.631,335,0.645,336,0.645,337,0.645,338,0.645,339,1.474,340,1.162,341,0.645,342,0.645,343,0.645,344,0.645,345,0.631,346,0.968,347,0.884,348,0.645,349,1.263,350,0.645,351,0.66,352,0.66,353,1.189,354,0.66,355,0.66,356,0.645,357,0.968,358,0.645,359,0.66,360,0.66,361,0.631,362,1.263,363,0.66,364,0.66,365,0.66,366,0.66,367,0.66,368,1.354,369,0.645,370,0.645,371,0.645,372,0.645,373,0.645,374,0.645,375,0.968,376,0.645,377,0.947,378,0.645,379,0.645,380,0.645,381,0.645,382,0.645,383,0.645,384,0.645,385,0.645,386,0.645,387,0.645,388,0.645,389,0.645,390,0.645,391,0.645,392,0.645,393,0.645,394,0.968,395,0.645,396,0.645,397,0.645,398,0.645,399,0.645,400,0.645,401,0.645,402,1.136,403,0.645,404,0.645,405,0.968,406,0.645,407,0.645,408,0.645,409,0.645,410,1.263,411,0.645,412,0.66,413,0.645,414,0.645,415,0.645,416,1.263,417,0.645,418,0.968,419,0.645,420,1.162,421,0.645,422,0.968,423,0.645,424,1.292,425,0.645,426,0.947,427,0.645,428,0.968,429,0.645,430,0.645,431,0.645,432,0.968,433,0.645,434,0.947,435,0.66,436,0.66,437,0.645,438,0.645,439,0.947,440,0.925,441,0.884,442,0.645,443,0.603,444,1.188,445,1.446,446,0.645,447,0.645,448,0.645,449,0.645,450,0.645,451,0.645,452,0.645,453,0.645,454,0.645,455,0.645,456,0.645,457,0.645,458,0.645,459,0.645,460,0.645,461,0.645,462,1.162,463,1.162,464,1.487,465,0.645,466,0.645,467,0.968,468,0.645,469,0.66,470,1.162,471,1.162,472,0.645,473,0.66,474,0.645,475,0.66,476,0.968,477,0.645,478,1.359,479,0.66,480,0.66,481,0.645,482,1.189,483,1.162,484,0.645,485,0.968,486,0.66,487,0.968,488,0.968,489,0.968,490,1.321,491,0.645,492,0.66,493,0.66,494,0.968,495,0.645,496,0.66,497,0.66,498,0.513,499,0.645,500,1.136,501,1.136,502,0.968,503,0.631,504,0.631,505,0.631,506,0.968,507,0.645,508,0.645,509,0.645,510,0.947,511,1.162,512,0.631,513,0.631,514,0.645,515,0.66,516,0.66,517,0.645,518,0.645,519,0.66,520,0.66,521,0.66,522,0.66,523,0.968,524,0.631,525,0.631,526,1.136,527,0.968,528,0.645,529,0.645,530,0.645,531,0.968,532,0.66,533,0.322,534,0.645,535,0.576,536,1.252,537,1.353,538,1.323,539,1.517,540,0.925,541,0.66,542,0.645,543,0.525,544,0.645,545,0.645,546,1.162,547,0.66,548,0.66,549,0.968,550,0.66,551,0.66,552,0.645,553,0.66,554,1.323,555,0.66,556,1.487,557,0.66,558,0.66,559,0.66,560,0.66,561,0.66,562,1.162,563,0.66,564,0.66,565,0.66,566,0.66,567,0.66,568,0.645,569,0.66,570,0.66,571,0.66,572,0.66,573,0.66,574,0.66,575,0.66,576,0.66,577,0.66,578,0.66,579,0.66,580,0.645,581,0.66,582,1.207,583,0.66,584,0.66,585,0.66,586,0.66,587,0.66,588,0.968,589,0.66,590,0.645,591,0.66,592,0.66,593,0.66,594,0.66,595,0.66,596,0.645,597,0.645,598,0.66,599,0.66,600,0.66,601,0.645,602,0.645,603,0.66,604,0.66,605,0.645,606,0.66,607,0.66,608,0.66,609,0.66,610,0.645,611,0.66,612,0.645,613,0.66,614,0.66,615,0.645,616,0.66,617,0.66]],["title/interfaces/Payload-5.html",[232,0.168,444,0.52,1328,3.118]],["body/interfaces/Payload-5.html",[0,0.149,3,0.027,4,0.041,5,0.027,7,0.034,8,0.47,12,0.741,25,0.26,29,0.009,30,0.462,31,0.25,33,0.264,45,0.341,67,0.119,81,0.576,84,0.589,89,0.603,109,0.685,133,0.884,161,1.517,184,0.313,191,0.003,192,0.005,193,0.003,220,0.645,232,0.403,234,0.403,237,0.489,245,0.411,280,0.968,281,0.513,282,0.645,283,0.66,284,1.882,285,0.563,286,0.968,287,1.384,288,0.645,289,0.968,290,0.645,291,1.162,292,0.645,293,1.162,294,0.645,295,0.645,296,0.645,297,0.947,298,0.968,299,0.645,300,0.645,301,0.645,302,0.645,303,0.645,304,1.235,305,0.968,306,0.645,307,0.645,308,0.631,309,0.645,310,0.645,311,0.968,312,0.947,313,0.947,314,0.66,315,1.321,316,0.968,317,0.645,318,0.645,319,0.66,320,0.968,321,0.645,322,0.645,323,1.162,324,0.645,325,0.947,326,1.162,327,0.645,328,0.617,329,0.645,330,0.645,331,0.66,332,0.645,333,1.136,334,0.631,335,0.645,336,0.645,337,0.645,338,0.645,339,1.474,340,1.162,341,0.645,342,0.645,343,0.645,344,0.645,345,0.631,346,0.968,347,0.884,348,0.645,349,1.474,350,0.645,351,0.66,352,0.66,353,1.189,354,0.66,355,0.66,356,0.645,357,0.968,358,0.645,359,0.66,360,0.66,361,0.631,362,1.263,363,0.66,364,0.66,365,0.66,366,0.66,367,0.66,368,0.947,369,0.645,370,0.645,371,0.645,372,0.645,373,0.645,374,0.645,375,0.968,376,0.645,377,0.947,378,0.645,379,0.645,380,0.645,381,0.645,382,0.645,383,0.645,384,0.645,385,0.645,386,0.645,387,0.645,388,0.645,389,0.645,390,0.645,391,0.645,392,0.645,393,0.645,394,0.968,395,0.645,396,0.645,397,0.645,398,0.645,399,0.645,400,0.645,401,0.645,402,1.136,403,0.645,404,0.645,405,0.968,406,0.645,407,0.645,408,0.645,409,0.645,410,1.263,411,0.645,412,0.66,413,0.645,414,0.645,415,0.645,416,1.263,417,0.645,418,0.968,419,0.645,420,1.162,421,0.645,422,0.968,423,0.645,424,1.292,425,0.645,426,0.947,427,0.645,428,0.968,429,0.645,430,0.645,431,0.645,432,0.968,433,0.645,434,0.947,435,0.66,436,0.66,437,0.645,438,0.645,439,0.947,440,0.925,441,0.884,442,0.645,443,0.603,444,1.188,445,1.446,446,0.645,447,0.645,448,0.645,449,0.645,450,0.645,451,0.645,452,0.645,453,0.645,454,0.645,455,0.645,456,0.645,457,0.645,458,0.645,459,0.645,460,0.645,461,0.645,462,1.162,463,1.162,464,1.487,465,0.645,466,0.645,467,0.968,468,0.645,469,0.66,470,1.162,471,1.162,472,0.645,473,0.66,474,0.645,475,0.66,476,0.968,477,0.645,478,1.359,479,0.66,480,0.66,481,0.645,482,0.66,483,0.645,484,0.645,485,1.292,486,1.189,487,0.968,488,0.968,489,0.968,490,1.321,491,0.645,492,0.66,493,0.66,494,0.968,495,0.645,496,0.66,497,0.66,498,0.513,499,0.645,500,1.136,501,1.136,502,0.968,503,0.631,504,0.631,505,0.631,506,0.968,507,0.645,508,0.645,509,0.645,510,0.947,511,1.162,512,0.631,513,0.631,514,0.645,515,0.66,516,0.66,517,0.645,518,0.645,519,0.66,520,0.66,521,0.66,522,0.66,523,0.968,524,0.631,525,0.631,526,1.136,527,0.968,528,0.645,529,0.645,530,0.645,531,0.968,532,0.66,533,0.322,534,0.645,535,0.576,536,1.252,537,1.353,538,1.323,539,1.517,540,0.925,541,0.66,542,0.645,543,0.525,544,0.645,545,0.645,546,1.162,547,0.66,548,0.66,549,0.968,550,0.66,551,0.66,552,0.645,553,0.66,554,1.323,555,0.66,556,1.487,557,0.66,558,0.66,559,0.66,560,0.66,561,0.66,562,1.162,563,0.66,564,0.66,565,0.66,566,0.66,567,0.66,568,0.645,569,0.66,570,0.66,571,0.66,572,0.66,573,0.66,574,0.66,575,0.66,576,0.66,577,0.66,578,0.66,579,0.66,580,0.645,581,0.66,582,1.207,583,0.66,584,0.66,585,0.66,586,0.66,587,0.66,588,0.968,589,0.66,590,0.645,591,0.66,592,0.66,593,0.66,594,0.66,595,0.66,596,0.645,597,0.645,598,0.66,599,0.66,600,0.66,601,0.645,602,0.645,603,0.66,604,0.66,605,0.645,606,0.66,607,0.66,608,0.66,609,0.66,610,0.645,611,0.66,612,0.645,613,0.66,614,0.66,615,0.645,616,0.66,617,0.66]],["title/interfaces/Payload-6.html",[232,0.168,444,0.52,1350,3.118]],["body/interfaces/Payload-6.html",[0,0.149,3,0.027,4,0.041,5,0.027,7,0.034,8,0.47,12,0.741,25,0.26,29,0.009,30,0.462,31,0.25,33,0.264,45,0.341,67,0.119,81,0.576,84,1.18,89,0.603,109,0.685,133,0.884,161,1.517,184,0.313,191,0.003,192,0.005,193,0.003,220,0.645,232,0.403,234,0.403,237,0.489,245,0.411,280,0.968,281,0.513,282,0.645,283,0.66,284,1.882,285,0.563,286,0.968,287,1.384,288,0.645,289,0.968,290,0.645,291,1.162,292,0.645,293,1.162,294,0.645,295,0.645,296,0.645,297,0.947,298,0.968,299,0.645,300,0.645,301,0.645,302,0.645,303,0.645,304,1.235,305,0.968,306,0.645,307,0.645,308,0.631,309,0.645,310,0.645,311,0.968,312,0.947,313,1.354,314,0.66,315,1.321,316,0.968,317,0.645,318,0.645,319,0.66,320,0.968,321,0.645,322,0.645,323,1.162,324,0.645,325,0.947,326,1.162,327,0.645,328,0.617,329,0.645,330,0.645,331,0.66,332,0.645,333,1.136,334,0.631,335,0.645,336,0.645,337,0.645,338,0.645,339,1.474,340,1.162,341,0.645,342,0.645,343,0.645,344,0.645,345,0.631,346,0.968,347,0.884,348,0.645,349,1.263,350,0.645,351,0.66,352,0.66,353,1.189,354,0.66,355,0.66,356,0.645,357,0.968,358,0.645,359,0.66,360,0.66,361,0.631,362,1.263,363,0.66,364,0.66,365,0.66,366,0.66,367,0.66,368,0.947,369,0.645,370,0.645,371,0.645,372,0.645,373,0.645,374,0.645,375,0.968,376,0.645,377,0.947,378,0.645,379,0.645,380,0.645,381,0.645,382,0.645,383,0.645,384,0.645,385,0.645,386,0.645,387,0.645,388,0.645,389,0.645,390,0.645,391,0.645,392,0.645,393,0.645,394,0.968,395,0.645,396,0.645,397,0.645,398,0.645,399,0.645,400,0.645,401,0.645,402,1.136,403,0.645,404,0.645,405,0.968,406,0.645,407,0.645,408,0.645,409,0.645,410,1.263,411,0.645,412,0.66,413,0.645,414,0.645,415,0.645,416,1.263,417,0.645,418,0.968,419,0.645,420,1.162,421,0.645,422,0.968,423,0.645,424,1.292,425,0.645,426,0.947,427,0.645,428,0.968,429,0.645,430,0.645,431,0.645,432,0.968,433,0.645,434,0.947,435,0.66,436,0.66,437,0.645,438,0.645,439,0.947,440,0.925,441,0.884,442,0.645,443,0.603,444,1.188,445,1.446,446,0.645,447,0.645,448,0.645,449,0.645,450,0.645,451,0.645,452,0.645,453,0.645,454,0.645,455,0.645,456,0.645,457,0.645,458,0.645,459,0.645,460,0.645,461,0.645,462,1.162,463,1.162,464,1.487,465,0.645,466,0.645,467,0.968,468,0.645,469,0.66,470,1.162,471,1.162,472,0.645,473,0.66,474,0.645,475,0.66,476,0.968,477,0.645,478,1.086,479,0.66,480,0.66,481,0.645,482,0.66,483,0.645,484,0.645,485,0.968,486,0.66,487,0.968,488,0.968,489,0.968,490,1.321,491,0.645,492,1.189,493,1.189,494,0.968,495,0.645,496,0.66,497,0.66,498,0.513,499,0.645,500,1.136,501,1.136,502,0.968,503,0.631,504,0.631,505,0.631,506,0.968,507,0.645,508,0.645,509,0.645,510,0.947,511,1.162,512,0.631,513,0.631,514,0.645,515,0.66,516,0.66,517,0.645,518,0.645,519,0.66,520,0.66,521,0.66,522,0.66,523,0.968,524,0.631,525,0.631,526,1.136,527,0.968,528,0.645,529,0.645,530,0.645,531,0.968,532,0.66,533,0.322,534,0.645,535,0.576,536,1.252,537,1.353,538,1.323,539,1.517,540,0.925,541,0.66,542,0.645,543,0.525,544,0.645,545,0.645,546,1.162,547,0.66,548,0.66,549,0.968,550,0.66,551,0.66,552,0.645,553,0.66,554,1.323,555,0.66,556,1.487,557,0.66,558,0.66,559,0.66,560,0.66,561,0.66,562,1.162,563,0.66,564,0.66,565,0.66,566,0.66,567,0.66,568,0.645,569,0.66,570,0.66,571,0.66,572,0.66,573,0.66,574,0.66,575,0.66,576,0.66,577,0.66,578,0.66,579,0.66,580,0.645,581,0.66,582,1.207,583,0.66,584,0.66,585,0.66,586,0.66,587,0.66,588,0.968,589,0.66,590,0.645,591,0.66,592,0.66,593,0.66,594,0.66,595,0.66,596,0.645,597,0.645,598,0.66,599,0.66,600,0.66,601,0.645,602,0.645,603,0.66,604,0.66,605,0.645,606,0.66,607,0.66,608,0.66,609,0.66,610,0.645,611,0.66,612,0.645,613,0.66,614,0.66,615,0.645,616,0.66,617,0.66]],["title/interfaces/Payload-7.html",[232,0.168,444,0.52,1365,3.118]],["body/interfaces/Payload-7.html",[0,0.149,3,0.027,4,0.041,5,0.027,7,0.034,8,0.47,12,0.741,25,0.26,29,0.009,30,0.462,31,0.25,33,0.264,45,0.341,67,0.119,81,0.576,84,0.589,89,0.603,109,0.685,133,0.884,161,1.517,184,0.313,191,0.003,192,0.005,193,0.003,220,0.645,232,0.403,234,0.403,237,0.489,245,0.411,280,0.968,281,0.513,282,0.645,283,0.66,284,1.882,285,0.563,286,0.968,287,1.384,288,0.645,289,0.968,290,0.645,291,1.162,292,0.645,293,1.162,294,0.645,295,0.645,296,0.645,297,0.947,298,0.968,299,0.645,300,0.645,301,0.645,302,0.645,303,0.645,304,1.441,305,0.968,306,0.645,307,0.645,308,0.631,309,0.645,310,0.645,311,0.968,312,0.947,313,0.947,314,0.66,315,1.321,316,0.968,317,0.645,318,0.645,319,0.66,320,0.968,321,0.645,322,0.645,323,1.162,324,0.645,325,1.354,326,1.162,327,0.645,328,0.617,329,0.645,330,0.645,331,0.66,332,0.645,333,1.136,334,0.631,335,0.645,336,0.645,337,0.645,338,0.645,339,1.474,340,1.162,341,0.645,342,0.645,343,0.645,344,0.645,345,0.631,346,0.968,347,0.884,348,0.645,349,1.263,350,0.645,351,0.66,352,0.66,353,1.189,354,0.66,355,0.66,356,0.645,357,0.968,358,0.645,359,0.66,360,0.66,361,0.631,362,1.263,363,0.66,364,0.66,365,0.66,366,0.66,367,0.66,368,0.947,369,0.645,370,0.645,371,0.645,372,0.645,373,0.645,374,0.645,375,0.968,376,0.645,377,0.947,378,0.645,379,0.645,380,0.645,381,0.645,382,0.645,383,0.645,384,0.645,385,0.645,386,0.645,387,0.645,388,0.645,389,0.645,390,0.645,391,0.645,392,0.645,393,0.645,394,0.968,395,0.645,396,0.645,397,0.645,398,0.645,399,0.645,400,0.645,401,0.645,402,1.136,403,0.645,404,0.645,405,0.968,406,0.645,407,0.645,408,0.645,409,0.645,410,1.263,411,0.645,412,0.66,413,0.645,414,0.645,415,0.645,416,1.263,417,0.645,418,0.968,419,0.645,420,1.162,421,0.645,422,0.968,423,0.645,424,1.292,425,0.645,426,0.947,427,0.645,428,0.968,429,0.645,430,0.645,431,0.645,432,0.968,433,0.645,434,0.947,435,0.66,436,0.66,437,0.645,438,0.645,439,0.947,440,0.925,441,0.884,442,0.645,443,0.603,444,1.188,445,1.446,446,0.645,447,0.645,448,0.645,449,0.645,450,0.645,451,0.645,452,0.645,453,0.645,454,0.645,455,0.645,456,0.645,457,0.645,458,0.645,459,0.645,460,0.645,461,0.645,462,1.162,463,1.162,464,1.487,465,0.645,466,0.645,467,0.968,468,0.645,469,0.66,470,1.162,471,1.162,472,0.645,473,0.66,474,0.645,475,0.66,476,0.968,477,0.645,478,1.086,479,0.66,480,0.66,481,0.645,482,0.66,483,0.645,484,0.645,485,0.968,486,0.66,487,0.968,488,0.968,489,0.968,490,1.321,491,0.645,492,0.66,493,0.66,494,0.968,495,0.645,496,1.189,497,1.189,498,0.513,499,0.645,500,1.136,501,1.136,502,0.968,503,0.631,504,0.631,505,0.631,506,0.968,507,0.645,508,0.645,509,0.645,510,0.947,511,1.162,512,0.631,513,0.631,514,0.645,515,0.66,516,0.66,517,0.645,518,0.645,519,0.66,520,0.66,521,0.66,522,0.66,523,0.968,524,0.631,525,0.631,526,1.136,527,0.968,528,0.645,529,0.645,530,0.645,531,0.968,532,0.66,533,0.322,534,0.645,535,0.576,536,1.252,537,1.353,538,1.323,539,1.517,540,0.925,541,0.66,542,0.645,543,0.525,544,0.645,545,0.645,546,1.162,547,0.66,548,0.66,549,0.968,550,0.66,551,0.66,552,0.645,553,0.66,554,1.323,555,0.66,556,1.487,557,0.66,558,0.66,559,0.66,560,0.66,561,0.66,562,1.162,563,0.66,564,0.66,565,0.66,566,0.66,567,0.66,568,0.645,569,0.66,570,0.66,571,0.66,572,0.66,573,0.66,574,0.66,575,0.66,576,0.66,577,0.66,578,0.66,579,0.66,580,0.645,581,0.66,582,1.207,583,0.66,584,0.66,585,0.66,586,0.66,587,0.66,588,0.968,589,0.66,590,0.645,591,0.66,592,0.66,593,0.66,594,0.66,595,0.66,596,0.645,597,0.645,598,0.66,599,0.66,600,0.66,601,0.645,602,0.645,603,0.66,604,0.66,605,0.645,606,0.66,607,0.66,608,0.66,609,0.66,610,0.645,611,0.66,612,0.645,613,0.66,614,0.66,615,0.645,616,0.66,617,0.66]],["title/interfaces/PayloadBuilder.html",[232,0.2,536,0.619]],["body/interfaces/PayloadBuilder.html",[0,0.148,3,0.027,4,0.041,5,0.027,7,0.034,12,0.741,14,0.751,25,0.259,26,0.682,29,0.009,30,0.461,31,0.249,33,0.264,41,0.751,45,0.341,67,0.119,81,0.575,84,0.588,89,0.602,109,0.685,133,0.883,161,1.516,184,0.313,191,0.003,192,0.005,193,0.003,220,0.644,232,0.403,234,0.403,237,0.488,245,0.411,280,0.967,281,0.923,282,0.644,283,0.658,284,1.882,285,0.562,286,0.967,287,1.383,288,0.644,289,0.967,290,0.644,291,1.161,292,0.644,293,1.161,294,0.644,295,0.644,296,0.644,297,0.945,298,0.967,299,0.644,300,0.644,301,0.644,302,0.644,303,0.644,304,1.234,305,0.967,306,0.644,307,0.644,308,0.629,309,0.644,310,0.644,311,0.967,312,0.945,313,0.945,314,0.658,315,1.32,316,0.967,317,0.644,318,0.644,319,0.658,320,0.967,321,0.644,322,0.644,323,1.161,324,0.644,325,0.945,326,1.161,327,0.644,328,0.615,329,0.644,330,0.644,331,0.658,332,0.644,333,1.135,334,0.629,335,0.644,336,0.644,337,0.644,338,0.644,339,1.473,340,1.161,341,0.644,342,0.644,343,0.644,344,0.644,345,0.629,346,0.967,347,0.883,348,0.644,349,1.262,350,0.644,351,0.658,352,0.658,353,1.187,354,0.658,355,0.658,356,0.644,357,0.967,358,0.644,359,0.658,360,0.658,361,0.629,362,1.262,363,0.658,364,0.658,365,0.658,366,0.658,367,0.658,368,0.945,369,0.644,370,0.644,371,0.644,372,0.644,373,0.644,374,0.644,375,0.967,376,0.644,377,0.945,378,0.644,379,0.644,380,0.644,381,0.644,382,0.644,383,0.644,384,0.644,385,0.644,386,0.644,387,0.644,388,0.644,389,0.644,390,0.644,391,0.644,392,0.644,393,0.644,394,0.967,395,0.644,396,0.644,397,0.644,398,0.644,399,0.644,400,0.644,401,0.644,402,1.135,403,0.644,404,0.644,405,0.967,406,0.644,407,0.644,408,0.644,409,0.644,410,1.262,411,0.644,412,0.658,413,0.644,414,0.644,415,0.644,416,1.262,417,0.644,418,0.967,419,0.644,420,1.161,421,0.644,422,0.967,423,0.644,424,1.291,425,0.644,426,0.945,427,0.644,428,0.967,429,0.644,430,0.644,431,0.644,432,0.967,433,0.644,434,0.945,435,0.658,436,0.658,437,0.644,438,0.644,439,0.945,440,0.924,441,0.883,442,0.644,443,0.602,444,1.183,445,1.446,446,0.644,447,0.644,448,0.644,449,0.644,450,0.644,451,0.644,452,0.644,453,0.644,454,0.644,455,0.644,456,0.644,457,0.644,458,0.644,459,0.644,460,0.644,461,0.644,462,1.161,463,1.161,464,1.486,465,0.644,466,0.644,467,0.967,468,0.644,469,0.658,470,1.161,471,1.161,472,0.644,473,0.658,474,0.644,475,0.658,476,0.967,477,0.644,478,1.085,479,0.658,480,0.658,481,0.644,482,0.658,483,0.644,484,0.644,485,0.967,486,0.658,487,0.967,488,0.967,489,0.967,490,1.32,491,0.644,492,0.658,493,0.658,494,0.967,495,0.644,496,0.658,497,0.658,498,0.512,499,0.644,500,1.135,501,1.135,502,0.967,503,0.629,504,0.629,505,0.629,506,0.967,507,0.644,508,0.644,509,0.644,510,0.945,511,1.161,512,0.629,513,0.629,514,0.644,515,0.658,516,0.658,517,0.644,518,0.644,519,0.658,520,0.658,521,0.658,522,0.658,523,0.967,524,0.629,525,0.629,526,1.135,527,0.967,528,0.644,529,0.644,530,0.644,531,1.161,532,0.658,533,0.322,534,0.644,535,0.575,536,1.253,537,1.417,538,1.399,539,1.55,540,0.924,541,0.658,542,0.644,543,0.524,544,0.644,545,0.644,546,1.161,547,0.658,548,0.658,549,0.967,550,0.658,551,0.658,552,0.644,553,0.658,554,1.322,555,0.658,556,1.486,557,0.658,558,0.658,559,0.658,560,0.658,561,0.658,562,1.161,563,0.658,564,0.658,565,0.658,566,0.658,567,0.658,568,0.644,569,0.658,570,0.658,571,0.658,572,0.658,573,0.658,574,0.658,575,0.658,576,0.658,577,0.658,578,0.658,579,0.658,580,0.644,581,0.658,582,1.206,583,0.658,584,0.658,585,0.658,586,0.658,587,0.658,588,0.967,589,0.658,590,0.644,591,0.658,592,0.658,593,0.658,594,0.658,595,0.658,596,0.644,597,0.644,598,0.658,599,0.658,600,0.658,601,0.644,602,0.644,603,0.658,604,0.658,605,0.644,606,0.658,607,0.658,608,0.658,609,0.658,610,0.644,611,0.658,612,0.644,613,0.658,614,0.658,615,0.644,616,0.658,617,0.658,1376,3.21,1377,3.21]],["title/interfaces/PayloadBuilder-1.html",[194,2.241,232,0.168,536,0.52]],["body/interfaces/PayloadBuilder-1.html",[0,0.144,3,0.027,4,0.04,5,0.027,7,0.033,12,0.726,14,0.732,25,0.251,26,1.051,28,1.419,29,0.009,30,0.476,31,0.249,32,0.963,33,0.264,41,1.157,45,0.33,67,0.119,81,0.556,84,0.569,89,0.582,109,0.676,133,0.862,161,1.502,184,0.302,191,0.003,192,0.004,193,0.003,220,0.623,232,0.403,234,0.393,237,0.472,245,0.397,280,0.943,281,1.22,282,0.623,283,0.637,284,1.877,285,0.544,286,0.943,287,1.364,288,0.623,289,0.943,290,0.623,291,1.138,292,0.623,293,1.138,294,0.623,295,0.623,296,0.623,297,0.922,298,0.943,299,0.623,300,0.623,301,0.623,302,0.623,303,0.623,304,1.213,305,0.943,306,0.623,307,0.623,308,0.609,309,0.623,310,0.623,311,0.943,312,0.922,313,0.922,314,0.637,315,1.298,316,0.943,317,0.623,318,0.623,319,0.637,320,0.943,321,0.623,322,0.623,323,1.138,324,0.623,325,0.922,326,1.138,327,0.623,328,0.596,329,0.623,330,0.623,331,0.637,332,0.623,333,1.113,334,0.609,335,0.623,336,0.623,337,0.623,338,0.623,339,1.457,340,1.138,341,0.623,342,0.623,343,0.623,344,0.623,345,0.609,346,0.943,347,0.862,348,0.623,349,1.241,350,0.623,351,0.637,352,0.637,353,1.164,354,0.637,355,0.637,356,0.623,357,0.943,358,0.623,359,0.637,360,0.637,361,0.609,362,1.241,363,0.637,364,0.637,365,0.637,366,0.637,367,0.637,368,0.922,369,0.623,370,0.623,371,0.623,372,0.623,373,0.623,374,0.623,375,0.943,376,0.623,377,1.113,378,0.623,379,0.623,380,0.623,381,0.623,382,0.623,383,0.623,384,0.623,385,0.623,386,0.623,387,0.623,388,0.623,389,0.623,390,0.623,391,0.623,392,0.623,393,0.623,394,0.943,395,0.623,396,0.623,397,0.623,398,0.623,399,0.623,400,0.623,401,0.623,402,1.113,403,0.943,404,0.943,405,0.943,406,0.623,407,0.623,408,0.623,409,0.623,410,1.241,411,0.623,412,0.637,413,0.623,414,0.623,415,0.623,416,1.241,417,0.623,418,0.943,419,0.623,420,1.138,421,0.623,422,0.943,423,0.623,424,1.269,425,0.623,426,0.922,427,0.623,428,0.943,429,0.623,430,0.623,431,0.623,432,0.943,433,0.623,434,0.922,435,0.637,436,0.637,437,0.623,438,0.623,439,0.922,440,0.902,441,0.862,442,0.623,443,0.582,444,1.178,445,1.438,446,0.623,447,0.623,448,0.623,449,0.623,450,0.623,451,0.623,452,0.623,453,0.623,454,0.623,455,0.623,456,0.623,457,0.623,458,0.623,459,0.623,460,0.623,461,0.623,462,1.138,463,1.138,464,1.467,465,0.623,466,0.943,467,1.269,468,0.623,469,0.637,470,1.138,471,1.138,472,0.623,473,0.637,474,0.623,475,0.637,476,0.943,477,0.623,478,1.064,479,0.637,480,0.637,481,0.623,482,0.637,483,0.623,484,0.623,485,0.943,486,0.637,487,0.943,488,0.943,489,0.943,490,1.298,491,0.623,492,0.637,493,0.637,494,0.943,495,0.623,496,0.637,497,0.637,498,0.495,499,0.623,500,1.113,501,1.113,502,0.943,503,0.609,504,0.609,505,0.609,506,0.943,507,0.623,508,0.623,509,0.623,510,0.922,511,1.138,512,0.609,513,0.609,514,0.623,515,0.637,516,0.637,517,0.623,518,0.623,519,0.637,520,0.637,521,0.637,522,0.637,523,0.943,524,0.609,525,0.609,526,1.113,527,0.943,528,0.623,529,0.623,530,0.623,531,0.943,532,0.637,533,0.311,534,0.623,535,0.556,536,1.254,537,1.407,538,1.388,539,1.536,540,0.902,541,0.637,542,0.623,543,0.507,544,0.623,545,0.623,546,1.138,547,0.965,548,0.965,549,1.435,550,0.965,551,0.965,552,1.138,553,0.965,554,1.388,555,0.965,556,1.467,557,0.637,558,0.637,559,0.637,560,0.637,561,0.637,562,1.138,563,0.637,564,0.637,565,0.637,566,0.637,567,0.637,568,0.623,569,0.637,570,0.637,571,0.637,572,0.637,573,0.637,574,0.637,575,0.637,576,0.637,577,0.637,578,0.637,579,0.637,580,0.623,581,0.637,582,1.186,583,0.637,584,0.637,585,0.637,586,0.637,587,0.637,588,0.943,589,0.637,590,0.623,591,0.637,592,0.637,593,0.637,594,0.637,595,0.637,596,0.623,597,0.623,598,0.637,599,0.637,600,0.637,601,0.623,602,0.623,603,0.637,604,0.637,605,0.623,606,0.637,607,0.637,608,0.637,609,0.637,610,0.623,611,0.637,612,0.623,613,0.637,614,0.637,615,0.623,616,0.637,617,0.637,1355,4.157,1357,4.157,1359,4.157,1362,4.157,1378,3.107,1379,3.107,1380,3.107,1381,3.107,1382,3.107,1383,3.107,1384,3.107]],["title/interfaces/PayloadBuilder-2.html",[232,0.168,536,0.52,1273,3.118]],["body/interfaces/PayloadBuilder-2.html",[0,0.146,3,0.027,4,0.049,5,0.027,7,0.033,12,0.732,14,0.74,25,0.255,26,0.967,28,1.066,29,0.009,30,0.469,31,0.249,32,0.723,33,0.265,40,1.691,41,1.065,45,0.334,67,0.119,81,0.564,84,0.577,89,0.59,109,0.68,133,0.871,161,1.508,184,0.307,191,0.003,192,0.004,193,0.003,220,0.632,232,0.403,234,0.397,237,0.479,245,0.403,280,0.953,281,1.147,282,0.632,283,0.646,284,1.879,285,0.551,286,0.953,287,1.372,288,0.632,289,0.953,290,0.632,291,1.148,292,0.632,293,1.148,294,0.632,295,0.632,296,0.632,297,0.932,298,0.953,299,0.632,300,0.632,301,0.632,302,0.632,303,0.632,304,1.222,305,0.953,306,0.632,307,0.632,308,0.618,309,0.632,310,0.632,311,0.953,312,0.932,313,0.932,314,0.646,315,1.307,316,0.953,317,0.632,318,0.632,319,0.646,320,0.953,321,0.632,322,0.632,323,1.148,324,0.632,325,0.932,326,1.148,327,0.632,328,0.604,329,0.632,330,0.632,331,0.646,332,0.632,333,1.122,334,0.618,335,0.632,336,0.632,337,0.632,338,0.632,339,1.464,340,1.148,341,0.632,342,0.632,343,0.632,344,0.632,345,0.618,346,0.953,347,0.871,348,0.632,349,1.25,350,0.632,351,0.646,352,0.646,353,1.174,354,0.646,355,0.646,356,0.632,357,0.953,358,0.632,359,0.646,360,0.646,361,0.618,362,1.25,363,0.646,364,0.646,365,0.646,366,0.646,367,0.646,368,0.932,369,0.632,370,0.632,371,0.632,372,0.632,373,0.632,374,0.632,375,0.953,376,0.632,377,0.932,378,0.632,379,0.632,380,0.632,381,0.632,382,0.632,383,0.632,384,0.632,385,0.632,386,0.632,387,0.632,388,0.632,389,0.632,390,0.632,391,0.632,392,0.632,393,0.632,394,0.953,395,0.632,396,0.632,397,0.632,398,0.632,399,0.632,400,0.632,401,0.632,402,1.122,403,0.632,404,0.632,405,0.953,406,0.632,407,0.632,408,0.632,409,0.632,410,1.25,411,0.632,412,0.646,413,0.632,414,0.632,415,0.632,416,1.25,417,0.632,418,0.953,419,0.632,420,1.148,421,0.632,422,0.953,423,0.632,424,1.278,425,0.632,426,0.932,427,0.632,428,0.953,429,0.632,430,0.632,431,0.632,432,0.953,433,0.632,434,0.932,435,0.646,436,0.646,437,0.632,438,0.632,439,0.932,440,0.911,441,0.871,442,0.632,443,0.59,444,1.18,445,1.441,446,0.632,447,0.632,448,0.632,449,0.632,450,0.632,451,0.632,452,0.632,453,0.632,454,0.632,455,0.632,456,0.632,457,0.632,458,0.632,459,0.632,460,0.632,461,0.632,462,1.148,463,1.148,464,1.475,465,0.632,466,0.632,467,0.953,468,0.632,469,0.646,470,1.148,471,1.148,472,0.632,473,0.646,474,0.632,475,0.646,476,0.953,477,0.632,478,1.073,479,0.646,480,0.646,481,0.632,482,0.646,483,0.632,484,0.632,485,0.953,486,0.646,487,0.953,488,0.953,489,0.953,490,1.307,491,0.632,492,0.646,493,0.646,494,0.953,495,0.632,496,0.646,497,0.646,498,0.502,499,0.632,500,1.122,501,1.122,502,0.953,503,0.618,504,0.618,505,0.618,506,0.953,507,0.632,508,0.632,509,0.632,510,0.932,511,1.148,512,0.618,513,0.618,514,0.632,515,0.646,516,0.646,517,0.632,518,0.632,519,0.646,520,0.646,521,0.646,522,0.646,523,0.953,524,0.618,525,0.618,526,1.122,527,0.953,528,0.632,529,0.632,530,0.632,531,0.953,532,0.646,533,0.316,534,0.632,535,0.564,536,1.253,537,1.411,538,1.393,539,1.542,540,0.911,541,0.646,542,0.632,543,0.514,544,0.632,545,0.632,546,1.148,547,0.646,548,0.646,549,0.953,550,0.646,551,0.646,552,0.632,553,0.646,554,1.393,555,0.646,556,1.475,557,0.975,558,0.975,559,1.174,560,0.975,561,0.975,562,1.148,563,0.646,564,0.646,565,0.646,566,0.646,567,0.646,568,0.632,569,0.646,570,0.646,571,0.646,572,0.646,573,0.646,574,0.646,575,0.646,576,0.646,577,0.646,578,0.646,579,0.646,580,0.632,581,0.646,582,1.195,583,0.646,584,0.646,585,0.646,586,0.646,587,0.646,588,0.953,589,0.646,590,0.632,591,0.646,592,0.646,593,0.646,594,0.646,595,0.646,596,0.632,597,0.632,598,0.646,599,0.646,600,0.646,601,0.632,602,0.632,603,0.646,604,0.646,605,0.632,606,0.646,607,0.646,608,0.646,609,0.646,610,0.632,611,0.646,612,0.632,613,0.646,614,0.646,615,0.632,616,0.646,617,0.646,1371,4.201,1373,4.201,1385,3.15,1386,3.15,1387,3.15,1388,3.15,1389,3.15]],["title/interfaces/PayloadBuilder-3.html",[232,0.168,536,0.52,1293,3.118]],["body/interfaces/PayloadBuilder-3.html",[0,0.143,3,0.026,4,0.04,5,0.026,7,0.032,12,0.724,14,0.73,25,0.25,26,1.049,28,1.416,29,0.009,30,0.479,31,0.249,32,0.96,33,0.266,41,1.155,45,0.328,67,0.119,81,0.554,84,0.566,89,0.579,109,0.675,133,0.858,161,1.624,184,0.301,191,0.003,192,0.004,193,0.003,220,0.62,232,0.403,234,0.391,237,0.47,245,0.395,280,0.94,281,1.219,282,0.62,283,0.634,284,1.876,285,0.541,286,0.94,287,1.361,288,0.62,289,0.94,290,0.62,291,1.135,292,0.62,293,1.135,294,0.62,295,0.62,296,0.62,297,0.919,298,0.94,299,0.62,300,0.62,301,0.62,302,0.62,303,0.62,304,1.21,305,0.94,306,0.62,307,0.62,308,0.606,309,0.62,310,0.62,311,0.94,312,0.919,313,0.919,314,0.634,315,1.295,316,0.94,317,0.62,318,0.62,319,0.634,320,0.94,321,0.62,322,0.62,323,1.135,324,0.62,325,0.919,326,1.135,327,0.62,328,0.593,329,0.62,330,0.62,331,0.634,332,0.62,333,1.109,334,0.606,335,0.62,336,0.62,337,0.62,338,0.62,339,1.455,340,1.135,341,0.62,342,0.62,343,0.62,344,0.62,345,0.606,346,0.94,347,0.858,348,0.62,349,1.238,350,0.62,351,0.634,352,0.634,353,1.16,354,0.634,355,0.634,356,0.62,357,0.94,358,0.62,359,0.634,360,0.634,361,0.606,362,1.238,363,0.634,364,0.634,365,0.634,366,0.634,367,0.634,368,0.919,369,0.62,370,0.62,371,0.62,372,0.62,373,0.62,374,0.62,375,0.94,376,0.62,377,0.919,378,0.62,379,0.62,380,0.62,381,0.62,382,0.62,383,0.62,384,0.62,385,0.62,386,0.62,387,0.62,388,0.62,389,0.62,390,0.62,391,0.62,392,0.62,393,0.62,394,0.94,395,0.62,396,0.62,397,0.62,398,0.62,399,0.62,400,0.62,401,0.62,402,1.109,403,0.62,404,0.62,405,0.94,406,0.62,407,0.62,408,0.62,409,0.62,410,1.238,411,0.62,412,0.634,413,0.62,414,0.62,415,1.266,416,1.238,417,0.62,418,0.94,419,0.62,420,1.135,421,0.62,422,0.94,423,0.62,424,1.6,425,0.62,426,0.919,427,0.62,428,0.94,429,0.62,430,0.62,431,0.62,432,0.94,433,0.62,434,0.919,435,0.634,436,0.634,437,0.62,438,0.62,439,0.919,440,0.898,441,0.858,442,0.62,443,0.579,444,1.177,445,1.437,446,0.62,447,0.62,448,0.62,449,0.62,450,0.62,451,0.62,452,0.62,453,0.62,454,0.62,455,0.62,456,0.62,457,0.62,458,0.62,459,0.62,460,0.62,461,0.62,462,1.135,463,1.135,464,1.464,465,0.62,466,0.62,467,0.94,468,0.62,469,0.634,470,1.135,471,1.135,472,0.62,473,0.634,474,0.62,475,0.634,476,0.94,477,0.62,478,1.06,479,0.634,480,0.634,481,0.62,482,0.634,483,0.62,484,0.62,485,0.94,486,0.634,487,0.94,488,0.94,489,0.94,490,1.295,491,0.62,492,0.634,493,0.634,494,0.94,495,0.62,496,0.634,497,0.634,498,0.493,499,0.62,500,1.109,501,1.109,502,0.94,503,0.606,504,0.606,505,0.606,506,0.94,507,0.62,508,0.62,509,0.62,510,0.919,511,1.135,512,0.606,513,0.606,514,0.62,515,0.634,516,0.634,517,0.62,518,0.62,519,0.634,520,0.634,521,0.634,522,0.634,523,0.94,524,0.606,525,0.606,526,1.109,527,0.94,528,0.62,529,0.62,530,0.62,531,0.94,532,0.634,533,0.31,534,0.62,535,0.554,536,1.254,537,1.405,538,1.386,539,1.534,540,0.898,541,0.634,542,0.62,543,0.505,544,0.62,545,0.62,546,1.135,547,0.634,548,0.634,549,0.94,550,0.634,551,0.634,552,0.62,553,0.634,554,1.386,555,0.634,556,1.464,557,0.634,558,0.634,559,0.634,560,0.634,561,0.634,562,1.135,563,0.961,564,0.961,565,0.961,566,0.961,567,0.961,568,0.94,569,0.634,570,0.634,571,0.634,572,0.634,573,0.634,574,0.634,575,0.634,576,0.634,577,0.634,578,0.634,579,0.634,580,0.62,581,0.634,582,1.183,583,0.634,584,0.634,585,0.634,586,0.634,587,0.634,588,0.94,589,0.634,590,0.62,591,0.634,592,0.634,593,0.634,594,0.634,595,0.634,596,0.62,597,0.62,598,0.634,599,0.634,600,0.634,601,0.62,602,0.62,603,0.634,604,0.634,605,0.62,606,0.634,607,0.634,608,0.634,609,0.634,610,0.62,611,0.634,612,0.62,613,0.634,614,0.634,615,0.62,616,0.634,617,0.634,1336,4.141,1339,4.141,1341,4.141,1344,4.141,1390,3.091,1391,3.091,1392,3.091,1393,3.091,1394,3.091,1395,3.091,1396,3.091]],["title/interfaces/PayloadBuilder-4.html",[232,0.168,536,0.52,1308,3.118]],["body/interfaces/PayloadBuilder-4.html",[0,0.142,3,0.026,4,0.04,5,0.026,7,0.032,12,0.723,14,0.728,25,0.249,26,1.08,28,1.52,29,0.009,30,0.482,31,0.249,32,1.031,33,0.264,40,1.656,41,1.189,45,0.327,67,0.119,81,0.552,84,0.565,89,0.578,109,0.674,133,0.857,161,1.553,184,0.3,191,0.003,192,0.004,193,0.003,220,0.618,232,0.402,234,0.39,237,0.469,245,0.394,280,0.938,281,1.247,282,0.618,283,0.632,284,1.876,285,0.54,286,0.938,287,1.359,288,0.618,289,0.938,290,0.618,291,1.133,292,0.618,293,1.133,294,0.618,295,0.618,296,0.618,297,0.917,298,0.938,299,0.618,300,0.618,301,0.618,302,0.618,303,0.618,304,1.209,305,0.938,306,0.618,307,0.618,308,0.605,309,0.618,310,0.618,311,0.938,312,0.917,313,0.917,314,0.632,315,1.293,316,0.938,317,0.618,318,0.618,319,0.632,320,0.938,321,0.618,322,0.618,323,1.133,324,0.618,325,0.917,326,1.133,327,0.618,328,0.591,329,0.618,330,0.618,331,0.632,332,0.618,333,1.108,334,0.605,335,0.618,336,0.618,337,0.618,338,0.618,339,1.453,340,1.133,341,0.618,342,0.618,343,0.618,344,0.618,345,0.605,346,0.938,347,0.857,348,0.618,349,1.236,350,0.618,351,0.632,352,0.632,353,1.159,354,0.632,355,0.632,356,0.618,357,0.938,358,0.618,359,0.632,360,0.632,361,0.605,362,1.236,363,0.632,364,0.632,365,0.632,366,0.632,367,0.632,368,0.917,369,0.618,370,0.618,371,0.618,372,0.618,373,0.618,374,0.618,375,0.938,376,0.618,377,0.917,378,0.618,379,0.618,380,0.618,381,0.618,382,0.618,383,0.618,384,0.618,385,0.618,386,0.618,387,0.618,388,0.618,389,0.618,390,0.618,391,0.618,392,0.618,393,0.618,394,0.938,395,0.618,396,0.618,397,0.618,398,0.618,399,0.618,400,0.618,401,0.618,402,1.108,403,0.618,404,0.618,405,0.938,406,0.618,407,0.618,408,0.618,409,0.618,410,1.236,411,0.618,412,0.632,413,0.618,414,0.618,415,0.618,416,1.236,417,0.618,418,0.938,419,0.618,420,1.133,421,0.618,422,0.938,423,0.618,424,1.265,425,0.618,426,1.108,427,0.938,428,0.938,429,0.618,430,0.618,431,0.618,432,0.938,433,0.618,434,0.917,435,0.632,436,0.632,437,0.938,438,0.938,439,0.917,440,0.897,441,0.857,442,0.618,443,0.578,444,1.176,445,1.436,446,0.618,447,0.618,448,0.618,449,0.618,450,0.618,451,0.618,452,0.618,453,0.618,454,0.618,455,0.618,456,0.618,457,0.618,458,0.618,459,0.618,460,0.618,461,0.618,462,1.133,463,1.133,464,1.463,465,0.618,466,0.618,467,0.938,468,0.618,469,0.632,470,1.133,471,1.133,472,0.618,473,0.632,474,0.618,475,0.632,476,0.938,477,0.618,478,1.059,479,0.632,480,0.632,481,0.618,482,0.632,483,0.618,484,0.618,485,0.938,486,0.632,487,0.938,488,0.938,489,0.938,490,1.293,491,0.618,492,0.632,493,0.632,494,0.938,495,0.618,496,0.632,497,0.632,498,0.492,499,0.618,500,1.108,501,1.108,502,0.938,503,0.605,504,0.605,505,0.605,506,0.938,507,0.618,508,0.618,509,0.618,510,0.917,511,1.133,512,0.605,513,0.605,514,0.618,515,0.632,516,0.632,517,0.618,518,0.618,519,0.632,520,0.632,521,0.632,522,0.632,523,0.938,524,0.605,525,0.605,526,1.108,527,0.938,528,0.618,529,0.618,530,0.618,531,0.938,532,0.632,533,0.309,534,0.618,535,0.552,536,1.254,537,1.405,538,1.386,539,1.533,540,0.897,541,0.632,542,0.618,543,0.503,544,0.618,545,0.618,546,1.133,547,0.632,548,0.632,549,0.938,550,0.632,551,0.632,552,0.618,553,0.632,554,1.386,555,0.632,556,1.463,557,0.632,558,0.632,559,0.632,560,0.632,561,0.632,562,1.133,563,0.632,564,0.632,565,0.632,566,0.632,567,0.632,568,0.618,569,0.959,570,0.959,571,0.959,572,1.159,573,0.959,574,1.159,575,0.959,576,1.159,577,0.959,578,0.959,579,0.632,580,0.618,581,0.632,582,1.182,583,0.632,584,0.632,585,0.632,586,0.632,587,0.632,588,0.938,589,0.632,590,0.618,591,0.632,592,0.632,593,0.632,594,0.632,595,0.632,596,0.618,597,0.618,598,0.632,599,0.632,600,0.632,601,0.618,602,0.618,603,0.632,604,0.632,605,0.618,606,0.632,607,0.632,608,0.632,609,0.632,610,0.618,611,0.632,612,0.618,613,0.632,614,0.632,615,0.618,616,0.632,617,0.632,1281,4.134,1283,4.134,1285,4.134,1287,4.134,1289,4.134,1397,3.083,1398,3.083,1399,3.083,1400,3.083,1401,3.083,1402,3.083,1403,3.083,1404,3.083]],["title/interfaces/PayloadBuilder-5.html",[232,0.168,536,0.52,1328,3.118]],["body/interfaces/PayloadBuilder-5.html",[0,0.144,3,0.027,4,0.04,5,0.027,7,0.033,12,0.726,14,0.732,25,0.251,26,1.051,28,1.419,29,0.009,30,0.479,31,0.249,32,0.963,33,0.264,41,1.157,45,0.33,67,0.119,81,0.556,84,0.569,89,0.582,109,0.676,133,1.04,161,1.502,184,0.302,191,0.003,192,0.004,193,0.003,220,0.623,232,0.403,234,0.393,237,0.472,245,0.397,280,0.943,281,1.22,282,0.623,283,0.637,284,1.877,285,0.544,286,0.943,287,1.364,288,0.623,289,0.943,290,0.623,291,1.138,292,0.623,293,1.138,294,0.623,295,0.623,296,0.623,297,0.922,298,0.943,299,0.623,300,0.623,301,0.623,302,0.623,303,0.623,304,1.213,305,0.943,306,0.623,307,0.623,308,0.609,309,0.623,310,0.623,311,0.943,312,0.922,313,0.922,314,0.637,315,1.298,316,0.943,317,0.623,318,0.623,319,0.637,320,0.943,321,0.623,322,0.623,323,1.138,324,0.623,325,0.922,326,1.138,327,0.623,328,0.596,329,0.623,330,0.623,331,0.637,332,0.623,333,1.113,334,0.609,335,0.623,336,0.623,337,0.623,338,0.623,339,1.457,340,1.138,341,0.623,342,0.623,343,0.623,344,0.623,345,0.609,346,0.943,347,0.862,348,0.623,349,1.241,350,0.623,351,0.637,352,0.637,353,1.164,354,0.637,355,0.637,356,0.623,357,0.943,358,0.623,359,0.637,360,0.637,361,0.609,362,1.241,363,0.637,364,0.637,365,0.637,366,0.637,367,0.637,368,0.922,369,0.623,370,0.623,371,0.623,372,0.623,373,0.623,374,0.623,375,0.943,376,0.623,377,0.922,378,0.623,379,0.623,380,0.623,381,0.623,382,0.623,383,0.623,384,0.623,385,0.623,386,0.623,387,0.623,388,0.623,389,0.623,390,0.623,391,0.623,392,0.623,393,0.623,394,0.943,395,0.623,396,0.623,397,0.623,398,0.623,399,0.623,400,0.623,401,0.623,402,1.113,403,0.623,404,0.623,405,0.943,406,0.623,407,0.623,408,0.623,409,0.623,410,1.241,411,0.623,412,0.637,413,0.623,414,0.623,415,0.623,416,1.241,417,0.623,418,0.943,419,0.623,420,1.138,421,0.623,422,0.943,423,0.623,424,1.269,425,0.623,426,0.922,427,0.623,428,0.943,429,0.623,430,0.623,431,0.623,432,0.943,433,0.623,434,0.922,435,0.637,436,0.637,437,0.623,438,0.623,439,0.922,440,0.902,441,0.862,442,0.623,443,0.582,444,1.178,445,1.438,446,0.623,447,0.623,448,0.623,449,0.623,450,0.623,451,0.623,452,0.623,453,0.623,454,0.623,455,0.623,456,0.623,457,0.623,458,0.623,459,0.623,460,0.623,461,0.623,462,1.138,463,1.138,464,1.467,465,0.623,466,0.623,467,0.943,468,0.623,469,0.637,470,1.138,471,1.138,472,0.623,473,0.637,474,0.623,475,0.637,476,0.943,477,0.623,478,1.064,479,0.637,480,0.637,481,0.623,482,0.637,483,0.623,484,0.623,485,0.943,486,0.637,487,0.943,488,0.943,489,0.943,490,1.298,491,0.623,492,0.637,493,0.637,494,0.943,495,0.623,496,0.637,497,0.637,498,0.495,499,0.623,500,1.113,501,1.113,502,0.943,503,0.609,504,0.609,505,0.609,506,0.943,507,0.623,508,0.623,509,0.623,510,0.922,511,1.138,512,0.609,513,0.609,514,0.623,515,0.637,516,0.637,517,0.623,518,0.623,519,0.637,520,0.637,521,0.637,522,0.637,523,0.943,524,0.609,525,0.609,526,1.113,527,0.943,528,0.623,529,0.623,530,0.623,531,0.943,532,0.637,533,0.311,534,0.623,535,0.556,536,1.254,537,1.407,538,1.388,539,1.536,540,0.902,541,0.637,542,0.623,543,0.507,544,0.623,545,0.623,546,1.138,547,0.637,548,0.637,549,0.943,550,0.637,551,0.637,552,0.623,553,0.637,554,1.388,555,0.637,556,1.467,557,0.637,558,0.637,559,0.637,560,0.637,561,0.637,562,1.138,563,0.637,564,0.637,565,0.637,566,0.637,567,0.637,568,0.623,569,0.637,570,0.637,571,0.637,572,0.637,573,0.637,574,0.637,575,0.637,576,0.637,577,0.637,578,0.637,579,0.965,580,1.138,581,0.965,582,1.497,583,0.965,584,0.965,585,0.965,586,0.965,587,0.637,588,0.943,589,0.637,590,0.623,591,0.637,592,0.637,593,0.637,594,0.637,595,0.637,596,0.623,597,0.623,598,0.637,599,0.637,600,0.637,601,0.623,602,0.623,603,0.637,604,0.637,605,0.623,606,0.637,607,0.637,608,0.637,609,0.637,610,0.623,611,0.637,612,0.623,613,0.637,614,0.637,615,0.623,616,0.637,617,0.637,1299,4.157,1301,4.157,1303,4.157,1305,4.157,1405,3.107,1406,3.107,1407,3.107,1408,3.107,1409,3.107,1410,3.107,1411,3.107]],["title/interfaces/PayloadBuilder-6.html",[232,0.168,536,0.52,1350,3.118]],["body/interfaces/PayloadBuilder-6.html",[0,0.14,3,0.026,4,0.04,5,0.026,7,0.032,12,0.717,14,0.721,25,0.246,26,1.142,28,1.591,29,0.009,30,0.486,31,0.249,32,1.079,33,0.265,41,1.257,45,0.323,67,0.119,81,0.544,84,0.557,89,0.57,109,0.671,133,1.026,161,1.493,184,0.296,191,0.003,192,0.004,193,0.003,220,0.61,232,0.402,234,0.386,237,0.462,245,0.389,280,0.928,281,1.306,282,0.61,283,0.624,284,1.874,285,0.532,286,0.928,287,1.351,288,0.61,289,0.928,290,0.61,291,1.123,292,0.61,293,1.123,294,0.61,295,0.61,296,0.61,297,0.907,298,0.928,299,0.61,300,0.61,301,0.61,302,0.61,303,0.61,304,1.2,305,0.928,306,0.61,307,0.61,308,0.596,309,0.61,310,0.61,311,0.928,312,0.907,313,0.907,314,0.624,315,1.284,316,0.928,317,0.61,318,0.61,319,0.624,320,0.928,321,0.61,322,0.61,323,1.123,324,0.61,325,0.907,326,1.123,327,0.61,328,0.583,329,0.61,330,0.61,331,0.624,332,0.61,333,1.098,334,0.596,335,0.61,336,0.61,337,0.61,338,0.61,339,1.446,340,1.123,341,0.61,342,0.61,343,0.61,344,0.61,345,0.596,346,0.928,347,0.848,348,0.61,349,1.228,350,0.928,351,0.624,352,0.624,353,1.149,354,0.624,355,0.624,356,0.61,357,0.928,358,0.61,359,0.624,360,0.624,361,0.596,362,1.228,363,0.624,364,0.624,365,0.624,366,0.624,367,0.624,368,0.907,369,0.61,370,0.61,371,0.61,372,0.61,373,0.61,374,0.61,375,0.928,376,0.61,377,0.907,378,0.61,379,0.61,380,0.61,381,0.61,382,0.61,383,0.61,384,0.61,385,0.61,386,0.61,387,0.61,388,0.61,389,0.61,390,0.61,391,0.61,392,0.61,393,0.61,394,0.928,395,0.61,396,0.61,397,0.61,398,0.61,399,0.61,400,0.61,401,0.61,402,1.098,403,0.61,404,0.61,405,0.928,406,0.61,407,0.61,408,0.61,409,0.61,410,1.228,411,0.61,412,0.624,413,0.61,414,0.61,415,0.61,416,1.228,417,0.61,418,0.928,419,0.61,420,1.123,421,0.61,422,0.928,423,0.61,424,1.255,425,0.61,426,0.907,427,0.61,428,0.928,429,0.61,430,0.61,431,0.61,432,0.928,433,0.61,434,0.907,435,0.624,436,0.624,437,0.61,438,0.61,439,0.907,440,0.887,441,0.848,442,0.61,443,0.57,444,1.174,445,1.433,446,0.61,447,0.61,448,0.61,449,0.61,450,0.61,451,0.61,452,0.61,453,0.61,454,0.61,455,0.61,456,0.61,457,0.61,458,0.61,459,0.61,460,0.61,461,0.61,462,1.123,463,1.123,464,1.455,465,0.61,466,0.61,467,0.928,468,0.61,469,0.624,470,1.123,471,1.123,472,0.61,473,0.624,474,0.61,475,0.624,476,0.928,477,0.61,478,1.05,479,0.624,480,0.624,481,0.61,482,0.624,483,0.61,484,0.61,485,1.123,486,0.624,487,0.928,488,0.928,489,0.928,490,1.284,491,0.61,492,0.624,493,0.624,494,0.928,495,0.61,496,0.624,497,0.624,498,0.485,499,0.61,500,1.098,501,1.098,502,0.928,503,0.596,504,0.596,505,0.596,506,0.928,507,0.61,508,0.61,509,0.61,510,0.907,511,1.123,512,0.596,513,0.596,514,0.61,515,0.624,516,0.624,517,0.61,518,0.61,519,0.624,520,0.624,521,0.624,522,0.624,523,0.928,524,0.596,525,0.596,526,1.098,527,0.928,528,0.61,529,0.61,530,0.61,531,0.928,532,0.624,533,0.305,534,0.61,535,0.544,536,1.254,537,1.4,538,1.381,539,1.527,540,0.887,541,0.624,542,0.61,543,0.496,544,0.61,545,0.61,546,1.123,547,0.624,548,0.624,549,0.928,550,0.624,551,0.624,552,0.61,553,0.624,554,1.381,555,0.624,556,1.455,557,0.624,558,0.624,559,0.624,560,0.624,561,0.624,562,1.123,563,0.624,564,0.624,565,0.624,566,0.624,567,0.624,568,0.61,569,0.624,570,0.624,571,0.624,572,0.624,573,0.624,574,0.624,575,0.624,576,0.624,577,0.624,578,0.624,579,0.624,580,0.61,581,0.624,582,1.382,583,0.624,584,0.624,585,0.624,586,0.624,587,0.949,588,1.351,589,0.949,590,1.123,591,0.949,592,0.949,593,0.949,594,0.949,595,0.949,596,1.255,597,1.255,598,0.949,599,0.624,600,0.624,601,0.61,602,0.61,603,0.624,604,0.624,605,0.61,606,0.624,607,0.624,608,0.624,609,0.624,610,0.61,611,0.624,612,0.61,613,0.624,614,0.624,615,0.61,616,0.624,617,0.624,1260,4.09,1262,4.09,1264,4.09,1266,4.09,1268,4.09,1270,4.09,1412,3.04,1413,3.04,1414,3.04,1415,3.04,1416,3.04,1417,3.04,1418,3.04,1419,3.04,1420,3.04,1421,3.04,1422,3.04]],["title/interfaces/PayloadBuilder-7.html",[232,0.168,536,0.52,1365,3.118]],["body/interfaces/PayloadBuilder-7.html",[0,0.142,3,0.026,4,0.04,5,0.026,7,0.032,12,0.723,14,0.728,25,0.249,26,1.08,28,1.52,29,0.009,30,0.482,31,0.25,32,1.031,33,0.265,40,1.656,41,1.189,45,0.327,67,0.119,81,0.837,84,0.565,89,0.578,109,0.674,133,0.857,161,1.499,184,0.3,191,0.003,192,0.004,193,0.003,220,0.618,232,0.402,234,0.39,237,0.469,245,0.394,280,0.938,281,1.247,282,0.618,283,0.632,284,1.876,285,0.54,286,0.938,287,1.359,288,0.618,289,0.938,290,0.618,291,1.133,292,0.618,293,1.133,294,0.618,295,0.618,296,0.618,297,0.917,298,0.938,299,0.618,300,0.618,301,0.618,302,0.618,303,0.618,304,1.209,305,0.938,306,0.618,307,0.618,308,0.605,309,0.618,310,0.618,311,0.938,312,0.917,313,0.917,314,0.632,315,1.293,316,0.938,317,0.618,318,0.618,319,0.632,320,0.938,321,0.618,322,0.618,323,1.133,324,0.618,325,0.917,326,1.133,327,0.618,328,0.591,329,0.618,330,0.618,331,0.632,332,0.618,333,1.108,334,0.605,335,0.618,336,0.618,337,0.618,338,0.618,339,1.453,340,1.133,341,0.618,342,0.618,343,0.618,344,0.618,345,0.605,346,0.938,347,0.857,348,0.618,349,1.236,350,0.618,351,0.632,352,0.632,353,1.159,354,0.632,355,0.632,356,0.618,357,0.938,358,0.618,359,0.632,360,0.632,361,0.605,362,1.236,363,0.632,364,0.632,365,0.632,366,0.632,367,0.632,368,0.917,369,0.618,370,0.618,371,0.618,372,0.618,373,0.618,374,0.618,375,0.938,376,0.618,377,0.917,378,0.618,379,0.618,380,0.618,381,0.618,382,0.618,383,0.618,384,0.618,385,0.618,386,0.618,387,0.618,388,0.618,389,0.618,390,0.618,391,0.618,392,0.618,393,0.618,394,0.938,395,0.618,396,0.618,397,0.618,398,0.618,399,0.618,400,0.618,401,0.618,402,1.108,403,0.618,404,0.618,405,0.938,406,0.618,407,0.618,408,0.618,409,0.618,410,1.236,411,0.618,412,0.632,413,0.618,414,0.618,415,0.618,416,1.236,417,0.618,418,0.938,419,0.618,420,1.133,421,0.618,422,0.938,423,0.618,424,1.265,425,0.618,426,0.917,427,0.618,428,0.938,429,0.618,430,0.618,431,0.618,432,0.938,433,0.618,434,0.917,435,0.632,436,0.632,437,0.618,438,0.618,439,0.917,440,0.897,441,0.857,442,0.618,443,0.578,444,1.176,445,1.436,446,0.618,447,0.618,448,0.618,449,0.618,450,0.618,451,0.618,452,0.618,453,0.618,454,0.618,455,0.618,456,0.618,457,0.618,458,0.618,459,0.618,460,0.618,461,0.618,462,1.133,463,1.133,464,1.463,465,0.618,466,0.618,467,0.938,468,0.618,469,0.632,470,1.133,471,1.133,472,0.618,473,0.632,474,0.618,475,0.632,476,0.938,477,0.618,478,1.059,479,0.632,480,0.632,481,0.618,482,0.632,483,0.618,484,0.618,485,0.938,486,0.632,487,0.938,488,0.938,489,0.938,490,1.293,491,0.618,492,0.632,493,0.632,494,0.938,495,0.618,496,0.632,497,0.632,498,0.492,499,0.618,500,1.108,501,1.108,502,0.938,503,0.605,504,0.605,505,0.605,506,0.938,507,0.618,508,0.618,509,0.618,510,0.917,511,1.133,512,0.605,513,0.605,514,0.618,515,0.632,516,0.632,517,0.618,518,0.618,519,0.632,520,0.632,521,0.632,522,0.632,523,0.938,524,0.605,525,0.605,526,1.108,527,0.938,528,0.618,529,0.618,530,0.618,531,0.938,532,0.632,533,0.309,534,0.618,535,0.552,536,1.254,537,1.405,538,1.386,539,1.533,540,0.897,541,0.632,542,0.618,543,0.503,544,0.618,545,0.618,546,1.133,547,0.632,548,0.632,549,0.938,550,0.632,551,0.632,552,0.618,553,0.632,554,1.386,555,0.632,556,1.463,557,0.632,558,0.632,559,0.632,560,0.632,561,0.632,562,1.133,563,0.632,564,0.632,565,0.632,566,0.632,567,0.632,568,0.618,569,0.632,570,0.632,571,0.632,572,0.632,573,0.632,574,0.632,575,0.632,576,0.632,577,0.632,578,0.632,579,0.632,580,0.618,581,0.632,582,1.389,583,0.632,584,0.632,585,0.632,586,0.632,587,0.632,588,0.938,589,0.632,590,0.618,591,0.632,592,0.632,593,0.632,594,0.632,595,0.632,596,0.618,597,0.618,598,0.632,599,0.959,600,0.959,601,1.133,602,0.938,603,0.959,604,0.959,605,1.133,606,0.959,607,0.959,608,0.632,609,0.632,610,0.618,611,0.632,612,0.618,613,0.632,614,0.632,615,0.618,616,0.632,617,0.632,1239,4.134,1241,4.134,1243,4.134,1246,4.134,1248,4.134,1249,2.725,1423,3.083,1424,3.083,1425,3.083,1426,3.083,1427,3.083,1428,3.083,1429,3.083,1430,3.083]],["title/interfaces/PayloadBuilder-8.html",[232,0.168,536,0.52,1431,3.862]],["body/interfaces/PayloadBuilder-8.html",[0,0.143,3,0.026,4,0.04,5,0.026,7,0.032,12,0.725,14,0.731,25,0.25,26,1.05,28,1.523,29,0.009,30,0.487,31,0.25,32,1.033,33,0.265,41,1.156,45,0.329,67,0.119,81,0.554,84,0.567,89,0.58,109,0.675,133,0.859,161,1.501,184,0.301,191,0.003,192,0.004,193,0.003,220,0.621,232,0.403,234,0.392,237,0.471,245,0.396,280,0.941,281,1.219,282,0.621,283,0.635,284,1.877,285,0.542,286,0.941,287,1.362,288,0.621,289,0.941,290,0.621,291,1.136,292,0.621,293,1.136,294,0.621,295,0.621,296,0.621,297,0.92,298,0.941,299,0.621,300,0.621,301,0.621,302,0.621,303,0.621,304,1.211,305,0.941,306,0.621,307,0.621,308,0.607,309,0.621,310,0.621,311,0.941,312,0.92,313,0.92,314,0.635,315,1.296,316,0.941,317,0.621,318,0.621,319,0.635,320,0.941,321,0.621,322,0.621,323,1.136,324,0.621,325,0.92,326,1.136,327,0.621,328,0.594,329,0.621,330,0.621,331,0.635,332,0.621,333,1.111,334,0.607,335,0.621,336,0.621,337,0.621,338,0.621,339,1.455,340,1.136,341,0.621,342,0.621,343,0.621,344,0.621,345,0.607,346,0.941,347,0.859,348,0.621,349,1.239,350,0.621,351,0.635,352,0.635,353,1.162,354,0.635,355,0.635,356,0.621,357,0.941,358,0.621,359,0.635,360,0.635,361,0.607,362,1.239,363,0.635,364,0.635,365,0.635,366,0.635,367,0.635,368,0.92,369,0.621,370,0.621,371,0.621,372,0.621,373,0.621,374,0.621,375,0.941,376,0.621,377,0.92,378,0.621,379,0.621,380,0.621,381,0.621,382,0.621,383,0.621,384,0.621,385,0.621,386,0.621,387,0.621,388,0.621,389,0.621,390,0.621,391,0.621,392,0.621,393,0.621,394,0.941,395,0.621,396,0.621,397,0.621,398,0.621,399,0.621,400,0.621,401,0.621,402,1.111,403,0.621,404,0.621,405,0.941,406,0.621,407,0.621,408,0.621,409,0.621,410,1.239,411,0.621,412,0.635,413,0.621,414,0.621,415,0.621,416,1.239,417,0.621,418,0.941,419,0.621,420,1.136,421,0.621,422,0.941,423,0.621,424,1.267,425,0.621,426,0.92,427,0.621,428,0.941,429,0.621,430,0.621,431,0.621,432,0.941,433,0.621,434,0.92,435,0.635,436,0.635,437,0.621,438,0.621,439,0.92,440,0.899,441,0.859,442,0.621,443,0.58,444,1.177,445,1.437,446,0.621,447,0.621,448,0.621,449,0.621,450,0.621,451,0.621,452,0.621,453,0.621,454,0.621,455,0.621,456,0.621,457,0.621,458,0.621,459,0.621,460,0.621,461,0.621,462,1.136,463,1.136,464,1.465,465,0.621,466,0.621,467,0.941,468,0.621,469,0.635,470,1.136,471,1.136,472,0.621,473,0.635,474,0.621,475,0.635,476,0.941,477,0.621,478,1.062,479,0.635,480,0.635,481,0.621,482,0.635,483,0.621,484,0.621,485,0.941,486,0.635,487,0.941,488,0.941,489,0.941,490,1.296,491,0.621,492,0.635,493,0.635,494,0.941,495,0.621,496,0.635,497,0.635,498,0.494,499,0.621,500,1.111,501,1.111,502,0.941,503,0.607,504,0.607,505,0.607,506,0.941,507,0.621,508,0.621,509,0.621,510,0.92,511,1.136,512,0.607,513,0.607,514,0.621,515,0.635,516,0.635,517,0.621,518,0.621,519,0.635,520,0.635,521,0.635,522,0.635,523,0.941,524,0.607,525,0.607,526,1.111,527,0.941,528,0.621,529,0.621,530,0.621,531,0.941,532,0.635,533,0.31,534,0.621,535,0.554,536,1.255,537,1.406,538,1.308,539,1.499,540,0.899,541,0.635,542,0.621,543,0.505,544,0.621,545,0.621,546,1.136,547,0.635,548,0.635,549,0.941,550,0.635,551,0.635,552,0.621,553,0.635,554,1.387,555,0.635,556,1.465,557,0.635,558,0.635,559,0.635,560,0.635,561,0.635,562,1.136,563,0.635,564,0.635,565,0.635,566,0.635,567,0.635,568,0.621,569,0.635,570,0.635,571,0.635,572,0.635,573,0.635,574,0.635,575,0.635,576,0.635,577,0.635,578,0.635,579,0.635,580,0.621,581,0.635,582,1.184,583,0.635,584,0.635,585,0.635,586,0.635,587,0.635,588,0.941,589,0.635,590,0.621,591,0.635,592,0.635,593,0.635,594,0.635,595,0.635,596,0.621,597,0.621,598,0.635,599,0.635,600,0.635,601,0.621,602,0.621,603,0.635,604,0.635,605,0.621,606,0.635,607,0.635,608,0.962,609,0.962,610,1.136,611,0.962,612,1.136,613,0.962,614,0.962,615,1.136,616,0.962,617,0.962,1315,4.147,1317,4.147,1318,2.737,1320,4.147,1322,4.147,1324,4.147,1432,3.096,1433,3.096,1434,3.096,1435,3.096,1436,3.096,1437,3.096,1438,3.096]],["title/interfaces/Person.html",[232,0.2,297,0.902]],["body/interfaces/Person.html",[0,0.149,3,0.028,4,0.041,5,0.028,7,0.034,8,0.471,12,0.743,25,0.261,29,0.009,30,0.475,31,0.249,33,0.265,45,0.342,67,0.119,81,0.578,84,0.591,89,0.605,109,0.686,133,0.886,161,1.518,184,0.314,191,0.003,192,0.005,193,0.003,220,0.647,232,0.404,234,0.404,237,0.491,245,0.413,280,0.97,281,0.514,282,0.647,283,0.662,284,1.883,285,0.565,286,0.97,287,1.386,288,0.647,289,0.97,290,0.647,291,1.164,292,0.647,293,1.164,294,0.647,295,0.647,296,0.647,297,1.138,298,0.97,299,0.647,300,0.647,301,0.647,302,0.647,303,0.647,304,1.237,305,0.97,306,0.647,307,0.647,308,0.633,309,0.647,310,0.647,311,0.97,312,0.949,313,0.949,314,0.662,315,1.323,316,0.97,317,0.647,318,0.647,319,0.662,320,0.97,321,0.647,322,0.647,323,1.164,324,0.647,325,0.949,326,1.164,327,0.647,328,0.618,329,0.647,330,0.647,331,0.662,332,0.647,333,1.138,334,0.633,335,0.647,336,0.647,337,0.647,338,0.647,339,1.476,340,1.164,341,0.647,342,0.647,343,0.647,344,0.647,345,0.633,346,0.97,347,0.886,348,0.647,349,1.265,350,0.647,351,0.662,352,0.662,353,1.191,354,0.662,355,0.662,356,0.647,357,0.97,358,0.647,359,0.662,360,0.662,361,0.633,362,1.265,363,0.662,364,0.662,365,0.662,366,0.662,367,0.662,368,0.949,369,0.647,370,0.647,371,0.647,372,0.647,373,0.647,374,0.647,375,0.97,376,0.647,377,0.949,378,0.647,379,0.647,380,0.647,381,0.647,382,0.647,383,0.647,384,0.647,385,0.647,386,0.647,387,0.647,388,0.647,389,0.647,390,0.647,391,0.647,392,0.647,393,0.647,394,0.97,395,0.647,396,0.647,397,0.647,398,0.647,399,0.647,400,0.647,401,0.647,402,1.138,403,0.647,404,0.647,405,0.97,406,0.647,407,0.647,408,0.647,409,0.647,410,1.265,411,0.647,412,0.662,413,0.647,414,0.647,415,0.647,416,1.265,417,0.647,418,0.97,419,0.647,420,1.164,421,0.647,422,0.97,423,0.647,424,1.294,425,0.647,426,0.949,427,0.647,428,0.97,429,0.647,430,0.647,431,0.647,432,0.97,433,0.647,434,0.949,435,0.662,436,0.662,437,0.647,438,0.647,439,0.949,440,0.928,441,0.886,442,0.647,443,0.605,444,1.184,445,1.447,446,0.647,447,0.647,448,0.647,449,0.647,450,0.647,451,0.647,452,0.647,453,0.647,454,0.647,455,0.647,456,0.647,457,0.647,458,0.647,459,0.647,460,0.647,461,0.647,462,1.164,463,1.164,464,1.488,465,0.647,466,0.647,467,0.97,468,0.647,469,0.662,470,1.164,471,1.164,472,0.647,473,0.662,474,0.647,475,0.662,476,0.97,477,0.647,478,1.088,479,0.662,480,0.662,481,0.647,482,0.662,483,0.647,484,0.647,485,0.97,486,0.662,487,0.97,488,0.97,489,0.97,490,1.323,491,0.647,492,0.662,493,0.662,494,0.97,495,0.647,496,0.662,497,0.662,498,0.514,499,0.647,500,1.138,501,1.138,502,0.97,503,0.633,504,0.633,505,0.633,506,0.97,507,0.647,508,0.647,509,0.647,510,0.949,511,1.164,512,0.633,513,0.633,514,0.647,515,0.662,516,0.662,517,0.647,518,0.647,519,0.662,520,0.662,521,0.662,522,0.662,523,0.97,524,0.633,525,0.633,526,1.138,527,0.97,528,0.647,529,0.647,530,0.647,531,0.97,532,0.662,533,0.323,534,0.647,535,0.578,536,1.252,537,1.354,538,1.324,539,1.518,540,0.928,541,0.662,542,0.647,543,0.527,544,0.647,545,0.647,546,1.164,547,0.662,548,0.662,549,0.97,550,0.662,551,0.662,552,0.647,553,0.662,554,1.324,555,0.662,556,1.488,557,0.662,558,0.662,559,0.662,560,0.662,561,0.662,562,1.164,563,0.662,564,0.662,565,0.662,566,0.662,567,0.662,568,0.647,569,0.662,570,0.662,571,0.662,572,0.662,573,0.662,574,0.662,575,0.662,576,0.662,577,0.662,578,0.662,579,0.662,580,0.647,581,0.662,582,1.209,583,0.662,584,0.662,585,0.662,586,0.662,587,0.662,588,0.97,589,0.662,590,0.647,591,0.662,592,0.662,593,0.662,594,0.662,595,0.662,596,0.647,597,0.647,598,0.662,599,0.662,600,0.662,601,0.647,602,0.647,603,0.662,604,0.662,605,0.647,606,0.662,607,0.662,608,0.662,609,0.662,610,0.647,611,0.662,612,0.647,613,0.662,614,0.662,615,0.647,616,0.662,617,0.662]],["title/classes/ProactiveClient.html",[0,0.213,1439,4.066]],["body/classes/ProactiveClient.html",[0,0.201,2,0.932,3,0.037,4,0.037,5,0.037,7,0.046,8,0.584,9,3.557,13,3.26,14,0.934,16,2.748,17,3.768,18,1.466,22,3.001,26,1.285,28,1.952,29,0.009,30,0.495,31,0.245,32,1.324,33,0.25,40,2.333,41,1.21,42,5.152,45,0.786,51,1.073,52,5.152,61,0.974,67,0.092,68,1.762,76,1.768,77,5.218,79,1.4,81,1.074,83,4.499,84,1.099,85,3.26,88,3.26,89,0.814,90,2.648,91,2.648,92,2.246,93,2.648,94,2.5,95,2.648,96,2.648,97,2.632,103,4.499,104,3.986,105,3.26,135,2.522,152,5.356,183,3.473,184,0.584,190,1.506,191,0.004,192,0.006,193,0.004,198,4.842,203,1.627,216,6.07,245,0.556,273,3.344,281,1.454,440,1.317,441,1.423,443,1.124,444,1.108,498,0.693,499,1.485,500,1.347,501,1.347,503,0.852,504,0.852,505,0.852,510,1.347,512,0.852,513,0.852,518,0.871,524,0.852,525,0.852,526,1.347,528,0.871,529,0.871,530,1.377,531,1.377,533,0.601,534,1.203,535,1.074,539,1.347,582,1.615,747,3.062,777,2.522,786,3.998,897,5.556,1127,3.803,1233,4.499,1245,4.499,1439,5.301,1440,4.345,1441,7.405,1442,7.405,1443,6.868,1444,7.405,1445,6.868,1446,6.868,1447,6.868,1448,6.868,1449,6.868,1450,6.868,1451,6.868,1452,6.868,1453,6.868,1454,4.345,1455,7.77,1456,5.997,1457,7.405,1458,4.345,1459,5.997,1460,4.345,1461,5.997,1462,4.345,1463,4.345,1464,4.345,1465,5.997,1466,4.345,1467,4.345,1468,4.345,1469,6.868,1470,4.345,1471,4.345,1472,4.345,1473,4.345,1474,4.345,1475,4.345,1476,4.345,1477,4.345,1478,4.345,1479,4.345,1480,4.345,1481,4.345,1482,4.345,1483,4.345,1484,6.868,1485,6.868,1486,4.345,1487,4.345,1488,4.345,1489,4.345,1490,4.345,1491,5.997,1492,4.345,1493,5.997,1494,4.345,1495,4.345,1496,6.868,1497,4.345,1498,4.345,1499,4.345,1500,4.345,1501,4.345,1502,4.345,1503,6.868,1504,4.345,1505,4.345,1506,4.345,1507,4.345,1508,4.345,1509,4.345,1510,4.345,1511,4.345,1512,4.345,1513,5.997,1514,4.345,1515,5.997,1516,4.345,1517,4.345,1518,4.345,1519,4.345,1520,4.345,1521,6.868,1522,4.345,1523,4.345,1524,4.345,1525,4.345,1526,4.345,1527,4.345,1528,4.345,1529,4.345,1530,4.345,1531,4.345,1532,4.345,1533,4.345,1534,4.345,1535,4.345,1536,4.345,1537,4.345,1538,4.345,1539,4.345,1540,4.345,1541,4.345,1542,4.345,1543,4.345,1544,5.997,1545,4.345,1546,4.345,1547,4.345,1548,4.345,1549,4.345,1550,4.345,1551,4.345,1552,4.345,1553,5.997,1554,4.345,1555,4.345,1556,4.345,1557,4.345,1558,5.997,1559,4.345,1560,5.997,1561,4.345,1562,5.997,1563,4.345]],["title/classes/ProductDetailResponseContentBuilder.html",[0,0.213,1564,4.066]],["body/classes/ProductDetailResponseContentBuilder.html",[0,0.28,2,1.299,3,0.052,4,0.052,5,0.052,7,0.064,8,0.725,9,4.179,12,0.953,14,1.16,16,2.906,18,1.441,25,0.489,26,1.298,28,1.888,29,0.009,30,0.469,31,0.238,32,1.28,33,0.249,41,1.256,51,0.877,67,0.075,76,1.242,79,1.227,101,4.682,109,0.704,190,1.328,191,0.006,192,0.007,193,0.006,203,2.267,533,0.607,543,1.216,646,4.613,647,4,648,4.179,650,3.907,651,4.332,652,4.323,653,4.323,654,4.323,655,4.323,656,4.213,657,4.872,658,3.84,659,3.84,660,3.84,663,3.84,664,3.84,665,3.667,666,4.641,667,3.84,668,3.667,669,3.84,670,3.514,671,3.667,672,3.84,673,3.667,674,3.84,676,3.251,726,4.723,772,4.889,773,4.889,774,4.889,775,3.667,776,3.858,777,4.323,778,3.858,781,3.376,1564,6.584,1565,6.055,1566,8.418,1567,8.418,1568,6.055,1569,6.055,1570,6.584,1571,6.055]],["title/classes/ProductListResponseContentBuilder.html",[0,0.213,1572,4.066]],["body/classes/ProductListResponseContentBuilder.html",[0,0.254,2,1.179,3,0.047,4,0.047,5,0.047,7,0.058,8,0.683,9,4.622,12,0.897,14,1.092,16,2.852,18,1.439,21,6.233,25,0.444,26,1.298,28,1.883,29,0.009,30,0.468,31,0.238,32,1.277,33,0.251,41,1.266,51,1.119,57,1.26,58,1.233,60,2.952,61,1.233,64,5.604,65,3.665,67,0.068,76,1.438,79,1.357,109,0.663,113,3.665,126,4.719,160,6.233,174,4.94,190,1.538,191,0.005,192,0.007,193,0.005,194,4.481,203,2.625,533,0.551,543,1.145,646,4.554,647,3.765,648,3.999,650,3.738,651,4.145,652,4.069,653,4.069,654,4.069,655,4.069,656,4.069,657,4.791,658,3.486,659,3.486,660,3.486,663,3.486,664,3.486,665,3.329,666,4.51,667,3.486,668,3.329,669,3.486,670,3.19,671,3.329,672,3.486,673,3.329,674,3.486,676,2.952,726,5.156,775,4.247,776,4.212,777,4.875,778,4.212,781,3.065,1570,6.197,1572,6.197,1573,5.497,1574,8.131,1575,8.131,1576,8.131,1577,7.72,1578,5.497,1579,5.497,1580,5.497,1581,5.497,1582,5.497,1583,5.497,1584,7.012,1585,5.497,1586,5.497,1587,7.72,1588,5.497,1589,5.497,1590,7.012,1591,5.497,1592,5.497,1593,5.497]],["title/interfaces/Props.html",[232,0.2,442,0.922]],["body/interfaces/Props.html",[0,0.149,3,0.027,4,0.041,5,0.027,7,0.034,8,0.47,12,0.741,25,0.26,29,0.009,30,0.475,31,0.25,33,0.264,45,0.341,67,0.119,81,0.576,84,0.589,89,0.603,109,0.685,133,0.884,161,1.517,184,0.313,191,0.003,192,0.005,193,0.003,220,1.162,232,0.403,234,0.403,237,0.489,245,0.411,280,0.968,281,0.513,282,0.645,283,0.66,284,1.882,285,0.563,286,0.968,287,1.384,288,0.645,289,0.968,290,0.645,291,1.162,292,0.645,293,1.162,294,0.645,295,0.645,296,0.645,297,0.947,298,0.968,299,0.645,300,0.645,301,0.645,302,0.645,303,0.645,304,1.235,305,0.968,306,0.645,307,0.645,308,0.631,309,0.645,310,0.645,311,0.968,312,0.947,313,0.947,314,0.66,315,1.321,316,0.968,317,0.645,318,0.645,319,0.66,320,0.968,321,0.645,322,0.645,323,1.162,324,0.645,325,0.947,326,1.162,327,0.645,328,0.617,329,0.645,330,0.645,331,0.66,332,0.645,333,1.136,334,0.631,335,0.645,336,0.645,337,0.645,338,0.645,339,1.474,340,1.162,341,0.645,342,0.645,343,0.645,344,0.645,345,0.631,346,0.968,347,0.884,348,0.645,349,1.263,350,0.645,351,0.66,352,0.66,353,1.189,354,0.66,355,0.66,356,0.645,357,0.968,358,0.645,359,0.66,360,0.66,361,0.631,362,1.263,363,0.66,364,0.66,365,0.66,366,0.66,367,0.66,368,0.947,369,0.645,370,0.645,371,0.645,372,0.645,373,0.645,374,0.645,375,0.968,376,0.645,377,0.947,378,0.645,379,0.645,380,0.645,381,0.645,382,0.645,383,0.645,384,0.645,385,0.645,386,0.645,387,0.645,388,0.645,389,0.645,390,0.645,391,0.645,392,0.645,393,0.645,394,0.968,395,0.645,396,0.645,397,0.645,398,0.645,399,0.645,400,0.645,401,0.645,402,1.136,403,0.645,404,0.645,405,0.968,406,0.645,407,0.645,408,0.645,409,0.645,410,1.263,411,0.645,412,0.66,413,0.645,414,0.645,415,0.645,416,1.263,417,0.645,418,0.968,419,0.645,420,1.162,421,0.645,422,0.968,423,0.645,424,1.292,425,0.645,426,0.947,427,0.645,428,0.968,429,0.645,430,0.645,431,0.645,432,0.968,433,0.645,434,0.947,435,0.66,436,0.66,437,0.645,438,0.645,439,0.947,440,0.925,441,0.884,442,0.968,443,1.086,444,1.198,445,1.446,446,0.645,447,0.645,448,0.645,449,0.645,450,0.645,451,0.645,452,0.645,453,0.645,454,0.645,455,0.645,456,0.645,457,0.645,458,0.645,459,0.645,460,0.645,461,0.645,462,1.162,463,1.162,464,1.487,465,0.645,466,0.645,467,0.968,468,0.645,469,0.66,470,1.162,471,1.162,472,0.645,473,0.66,474,0.645,475,0.66,476,0.968,477,0.645,478,1.086,479,0.66,480,0.66,481,0.645,482,0.66,483,0.645,484,0.645,485,0.968,486,0.66,487,0.968,488,0.968,489,0.968,490,1.321,491,0.645,492,0.66,493,0.66,494,0.968,495,0.645,496,0.66,497,0.66,498,0.513,499,0.645,500,1.136,501,1.136,502,0.968,503,0.631,504,0.631,505,0.631,506,0.968,507,0.645,508,0.645,509,0.645,510,0.947,511,1.162,512,0.631,513,0.631,514,0.645,515,0.66,516,0.66,517,0.645,518,0.645,519,0.66,520,0.66,521,0.66,522,0.66,523,0.968,524,0.631,525,0.631,526,1.136,527,0.968,528,0.645,529,0.645,530,0.645,531,0.968,532,0.66,533,0.322,534,0.645,535,0.576,536,1.252,537,1.353,538,1.323,539,1.517,540,0.925,541,0.66,542,0.645,543,0.525,544,0.645,545,0.645,546,1.162,547,0.66,548,0.66,549,0.968,550,0.66,551,0.66,552,0.645,553,0.66,554,1.323,555,0.66,556,1.487,557,0.66,558,0.66,559,0.66,560,0.66,561,0.66,562,1.162,563,0.66,564,0.66,565,0.66,566,0.66,567,0.66,568,0.645,569,0.66,570,0.66,571,0.66,572,0.66,573,0.66,574,0.66,575,0.66,576,0.66,577,0.66,578,0.66,579,0.66,580,0.645,581,0.66,582,1.207,583,0.66,584,0.66,585,0.66,586,0.66,587,0.66,588,0.968,589,0.66,590,0.645,591,0.66,592,0.66,593,0.66,594,0.66,595,0.66,596,0.645,597,0.645,598,0.66,599,0.66,600,0.66,601,0.645,602,0.645,603,0.66,604,0.66,605,0.645,606,0.66,607,0.66,608,0.66,609,0.66,610,0.645,611,0.66,612,0.645,613,0.66,614,0.66,615,0.645,616,0.66,617,0.66]],["title/classes/RefundContentBuilder.html",[0,0.213,1594,4.066]],["body/classes/RefundContentBuilder.html",[0,0.272,2,1.262,3,0.05,4,0.05,5,0.05,7,0.077,8,0.713,12,0.936,14,1.14,16,2.891,18,1.458,25,0.476,26,1.299,28,1.922,29,0.009,30,0.477,31,0.239,32,1.304,33,0.258,39,5.492,41,1.241,51,1.061,67,0.073,76,1.207,79,1.267,92,2.741,101,4.624,109,0.692,174,5.158,190,1.291,191,0.005,192,0.007,193,0.005,203,2.204,533,0.59,543,1.195,646,4.596,647,3.93,648,4.127,650,3.858,651,4.278,652,4.248,653,4.248,654,4.248,655,4.248,656,4.171,657,4.849,658,3.733,659,3.733,660,3.733,663,3.733,664,3.733,665,3.565,666,4.603,667,3.733,668,3.565,669,3.733,670,3.416,671,3.565,672,3.733,673,3.565,674,3.733,676,3.161,677,5.203,774,4.753,775,3.565,776,3.792,777,4.248,778,3.792,781,3.282,784,5.614,846,4.416,1594,6.47,1595,5.887,1596,8.335,1597,7.967,1598,8.335,1599,5.887,1600,5.887,1601,5.887,1602,5.887,1603,5.887,1604,5.203,1605,5.887,1606,5.887]],["title/classes/RefundResponseContentBuilder.html",[0,0.213,1607,4.066]],["body/classes/RefundResponseContentBuilder.html",[0,0.255,2,1.184,3,0.047,4,0.047,5,0.047,7,0.058,8,0.685,9,4.626,12,0.9,14,1.095,16,2.855,18,1.45,25,0.446,26,1.303,28,1.826,29,0.009,30,0.453,31,0.233,32,1.239,33,0.242,41,1.31,51,0.8,67,0.069,79,1.358,92,3.05,109,0.665,135,3.205,190,1.211,191,0.005,192,0.007,193,0.005,203,2.068,245,0.706,328,1.059,533,0.554,543,1.148,646,4.557,647,3.775,648,4.007,650,3.746,651,4.154,652,4.081,653,4.081,654,4.081,655,4.081,656,4.427,657,4.795,658,3.502,659,3.502,660,3.502,663,3.502,664,3.502,665,3.344,666,4.516,667,3.502,668,3.344,669,3.502,670,3.205,671,3.344,672,3.502,673,3.344,674,3.502,676,2.965,744,3.344,772,5.677,773,4.458,775,4.686,776,4.454,777,4.99,778,4.219,779,4.881,781,4.314,783,4.881,786,3.681,787,4.881,789,3.502,790,4.881,1604,4.881,1607,6.215,1608,5.522,1609,8.145,1610,8.145,1611,8.145,1612,8.145,1613,8.145,1614,8.145,1615,5.522,1616,5.522,1617,5.522,1618,5.522,1619,5.522,1620,5.522,1621,5.522,1622,5.522,1623,5.522,1624,5.522,1625,5.522,1626,5.522]],["title/interfaces/RelevantAudience.html",[232,0.2,526,0.902]],["body/interfaces/RelevantAudience.html",[0,0.148,3,0.027,4,0.041,5,0.027,7,0.034,8,0.47,12,0.741,25,0.26,29,0.009,30,0.461,31,0.25,32,0.734,33,0.264,45,0.341,67,0.119,81,0.575,84,0.589,89,0.602,109,0.685,133,0.884,161,1.516,184,0.313,191,0.003,192,0.005,193,0.003,220,0.644,232,0.403,234,0.403,237,0.489,245,0.411,280,1.291,281,0.512,282,0.644,283,0.659,284,1.882,285,0.562,286,0.967,287,1.384,288,0.644,289,0.967,290,0.644,291,1.162,292,0.644,293,1.162,294,0.644,295,0.644,296,0.644,297,0.946,298,0.967,299,0.644,300,0.644,301,0.644,302,0.644,303,0.644,304,1.234,305,0.967,306,0.644,307,0.644,308,0.63,309,0.644,310,0.644,311,0.967,312,0.946,313,0.946,314,0.659,315,1.32,316,0.967,317,0.644,318,0.644,319,0.659,320,0.967,321,0.644,322,0.644,323,1.162,324,0.644,325,0.946,326,1.162,327,0.644,328,0.616,329,0.644,330,0.644,331,0.659,332,0.644,333,1.136,334,0.63,335,0.644,336,0.644,337,0.644,338,0.644,339,1.474,340,1.162,341,0.644,342,0.644,343,0.644,344,0.644,345,0.63,346,0.967,347,0.884,348,0.644,349,1.262,350,0.644,351,0.659,352,0.659,353,1.188,354,0.659,355,0.659,356,0.644,357,0.967,358,0.644,359,0.659,360,0.659,361,0.63,362,1.262,363,0.659,364,0.659,365,0.659,366,0.659,367,0.659,368,0.946,369,0.644,370,0.644,371,0.644,372,0.644,373,0.644,374,0.644,375,0.967,376,0.644,377,0.946,378,0.644,379,0.644,380,0.644,381,0.644,382,0.644,383,0.644,384,0.644,385,0.644,386,0.644,387,0.644,388,0.644,389,0.644,390,0.644,391,0.644,392,0.644,393,0.644,394,0.967,395,0.644,396,0.644,397,0.644,398,0.644,399,0.644,400,0.644,401,0.644,402,1.136,403,0.644,404,0.644,405,0.967,406,0.644,407,0.644,408,0.644,409,0.644,410,1.262,411,0.644,412,0.659,413,0.644,414,0.644,415,0.644,416,1.262,417,0.644,418,0.967,419,0.644,420,1.162,421,0.644,422,0.967,423,0.644,424,1.291,425,0.644,426,0.946,427,0.644,428,0.967,429,0.644,430,0.644,431,0.644,432,0.967,433,0.644,434,0.946,435,0.659,436,0.659,437,0.644,438,0.644,439,0.946,440,0.925,441,0.884,442,0.644,443,0.602,444,1.197,445,1.446,446,0.644,447,0.644,448,0.644,449,0.644,450,0.644,451,0.644,452,0.644,453,0.644,454,0.644,455,0.644,456,0.644,457,0.644,458,0.644,459,0.644,460,0.644,461,0.644,462,1.162,463,1.162,464,1.486,465,0.644,466,0.644,467,0.967,468,0.644,469,0.659,470,1.162,471,1.162,472,0.644,473,0.659,474,0.644,475,0.659,476,0.967,477,0.644,478,1.086,479,0.659,480,0.659,481,0.644,482,0.659,483,0.644,484,0.644,485,0.967,486,0.659,487,0.967,488,0.967,489,0.967,490,1.32,491,0.644,492,0.659,493,0.659,494,0.967,495,0.644,496,0.659,497,0.659,498,0.512,499,0.644,500,1.136,501,1.136,502,0.967,503,0.63,504,0.63,505,0.63,506,0.967,507,0.644,508,0.644,509,0.644,510,0.946,511,1.162,512,0.63,513,0.63,514,0.644,515,0.659,516,0.659,517,0.644,518,0.644,519,0.659,520,0.659,521,0.659,522,0.659,523,1.291,524,0.63,525,0.63,526,1.262,527,0.967,528,0.644,529,0.644,530,0.644,531,0.967,532,0.659,533,0.322,534,0.644,535,0.575,536,1.252,537,1.353,538,1.322,539,1.516,540,0.925,541,0.659,542,0.644,543,0.525,544,0.644,545,0.644,546,1.162,547,0.659,548,0.659,549,0.967,550,0.659,551,0.659,552,0.644,553,0.659,554,1.322,555,0.659,556,1.486,557,0.659,558,0.659,559,0.659,560,0.659,561,0.659,562,1.162,563,0.659,564,0.659,565,0.659,566,0.659,567,0.659,568,0.644,569,0.659,570,0.659,571,0.659,572,0.659,573,0.659,574,0.659,575,0.659,576,0.659,577,0.659,578,0.659,579,0.659,580,0.644,581,0.659,582,1.207,583,0.659,584,0.659,585,0.659,586,0.659,587,0.659,588,0.967,589,0.659,590,0.644,591,0.659,592,0.659,593,0.659,594,0.659,595,0.659,596,0.644,597,0.644,598,0.659,599,0.659,600,0.659,601,0.644,602,0.644,603,0.659,604,0.659,605,0.644,606,0.659,607,0.659,608,0.659,609,0.659,610,0.644,611,0.659,612,0.644,613,0.659,614,0.659,615,0.644,616,0.659,617,0.659]],["title/classes/ReminderAPIClient.html",[0,0.213,1627,4.066]],["body/classes/ReminderAPIClient.html",[0,0.279,2,1.293,3,0.052,4,0.052,5,0.052,7,0.063,8,0.723,14,1.157,16,2.599,17,4.363,18,1.449,26,1.243,28,1.885,29,0.009,30,0.468,31,0.23,32,1.278,33,0.265,41,1.344,45,0.968,51,1.167,57,1.383,58,1.352,60,3.238,61,1.352,67,0.075,79,1.313,97,5.091,106,4.524,109,0.702,190,1.322,191,0.006,192,0.007,193,0.006,196,5.369,203,2.258,498,1.34,1627,6.567,1628,6.03,1629,8.054,1630,8.054,1631,8.054,1632,8.406,1633,8.054,1634,7.43,1635,6.03,1636,6.03,1637,8.997,1638,6.03,1639,8.907,1640,6.03,1641,6.03,1642,9.068,1643,6.03,1644,6.03,1645,6.03,1646,6.03,1647,6.03,1648,6.03,1649,6.03,1650,6.03,1651,6.03,1652,6.03,1653,6.03]],["title/interfaces/RequestHandlerBuilder.html",[232,0.2,878,2.67]],["body/interfaces/RequestHandlerBuilder.html",[0,0.387,3,0.051,4,0.051,5,0.051,7,0.063,14,1.151,18,0.932,24,3.764,25,0.598,26,0.846,28,1.341,29,0.009,30,0.333,31,0.23,32,0.91,33,0.172,41,0.932,45,0.889,51,1.215,55,3.059,57,1.84,58,1.658,59,1.977,61,1.341,67,0.113,68,2.998,76,1.516,79,1.377,109,0.758,166,4.123,184,0.781,190,1.312,191,0.006,192,0.007,193,0.006,232,0.374,234,0.617,244,3.97,245,0.946,533,0.6,628,2.768,682,3.494,684,3.707,685,1.758,686,3.212,702,3.762,839,3.97,867,3.472,868,3.472,869,4.291,870,4.86,871,3.472,872,3.212,873,5.255,874,5.441,875,4.478,876,4.998,877,3.623,878,4.865,879,3.623,880,4.478,881,3.623,882,4.478,883,3.623,884,3.472,885,4.291,886,3.829,887,4.291,888,4.291,889,4.291,890,3.623,891,4.478,892,3.472,1654,5.982]],["title/classes/RequestHandlerFactory.html",[0,0.213,887,2.67]],["body/classes/RequestHandlerFactory.html",[0,0.387,2,1.277,3,0.051,4,0.051,5,0.051,7,0.062,14,1.148,18,0.927,24,3.756,25,0.596,26,0.842,28,1.335,29,0.009,30,0.331,31,0.234,32,0.905,33,0.171,41,0.927,45,0.888,51,1.213,55,3.054,57,1.836,58,1.653,59,1.968,61,1.335,67,0.113,68,2.989,76,1.512,79,1.376,109,0.757,166,4.11,184,0.78,190,1.305,191,0.006,192,0.007,193,0.006,232,0.373,234,0.497,244,3.958,245,0.943,533,0.597,628,2.76,682,3.488,684,3.585,685,2.353,686,4.299,702,3.809,839,3.958,867,3.455,868,3.455,869,4.278,870,4.849,871,3.455,872,3.196,873,5.251,874,5.436,875,4.464,876,4.991,877,3.605,878,4.647,879,3.605,880,3.605,881,3.605,882,4.464,883,3.605,884,3.455,885,4.856,886,3.818,887,4.647,888,4.278,889,4.278,890,3.605,891,4.464,892,3.455,1655,5.953,1656,5.953]],["title/interfaces/RequstBody.html",[232,0.2,527,0.922]],["body/interfaces/RequstBody.html",[0,0.148,3,0.027,4,0.041,5,0.027,7,0.034,8,0.469,12,0.74,25,0.259,29,0.009,30,0.461,31,0.25,33,0.266,45,0.34,67,0.119,81,0.574,84,0.587,89,0.6,109,0.684,133,0.882,161,1.515,184,0.312,191,0.003,192,0.004,193,0.003,220,0.642,232,0.403,234,0.402,237,0.487,245,0.41,280,0.965,281,0.511,282,0.642,283,0.657,284,1.882,285,0.561,286,0.965,287,1.382,288,0.642,289,0.965,290,0.642,291,1.16,292,0.642,293,1.16,294,0.642,295,0.642,296,0.642,297,0.944,298,0.965,299,0.642,300,0.642,301,0.642,302,0.642,303,0.642,304,1.232,305,0.965,306,0.642,307,0.642,308,0.628,309,0.642,310,0.642,311,0.965,312,0.944,313,0.944,314,0.657,315,1.318,316,0.965,317,0.642,318,0.642,319,0.657,320,0.965,321,0.642,322,0.642,323,1.16,324,0.642,325,0.944,326,1.16,327,0.642,328,0.614,329,0.642,330,0.642,331,0.657,332,0.642,333,1.134,334,0.628,335,0.642,336,0.642,337,0.642,338,0.642,339,1.472,340,1.16,341,0.642,342,0.642,343,0.642,344,0.642,345,0.628,346,0.965,347,0.882,348,0.642,349,1.261,350,0.642,351,0.657,352,0.657,353,1.186,354,0.657,355,0.657,356,0.642,357,0.965,358,0.642,359,0.657,360,0.657,361,0.628,362,1.261,363,0.657,364,0.657,365,0.657,366,0.657,367,0.657,368,0.944,369,0.642,370,0.642,371,0.642,372,0.642,373,0.642,374,0.642,375,0.965,376,0.642,377,0.944,378,0.642,379,0.642,380,0.642,381,0.642,382,0.642,383,0.642,384,0.642,385,0.642,386,0.642,387,0.642,388,0.642,389,0.642,390,0.642,391,0.642,392,0.642,393,0.642,394,0.965,395,0.642,396,0.642,397,0.642,398,0.642,399,0.642,400,0.642,401,0.642,402,1.134,403,0.642,404,0.642,405,0.965,406,0.642,407,0.642,408,0.642,409,0.642,410,1.261,411,0.642,412,0.657,413,0.642,414,0.642,415,0.642,416,1.261,417,0.642,418,0.965,419,0.642,420,1.16,421,0.642,422,0.965,423,0.642,424,1.289,425,0.642,426,0.944,427,0.642,428,0.965,429,0.642,430,0.642,431,0.642,432,0.965,433,0.642,434,0.944,435,0.657,436,0.657,437,0.642,438,0.642,439,0.944,440,0.923,441,1.263,442,0.642,443,0.6,444,1.183,445,1.445,446,0.642,447,0.642,448,0.642,449,0.642,450,0.642,451,0.642,452,0.642,453,0.642,454,0.642,455,0.642,456,0.642,457,0.642,458,0.642,459,0.642,460,0.642,461,0.642,462,1.16,463,1.16,464,1.485,465,0.642,466,0.642,467,0.965,468,0.642,469,0.657,470,1.16,471,1.16,472,0.642,473,0.657,474,0.642,475,0.657,476,0.965,477,0.642,478,1.084,479,0.657,480,0.657,481,0.642,482,0.657,483,0.642,484,0.642,485,0.965,486,0.657,487,0.965,488,0.965,489,0.965,490,1.318,491,0.642,492,0.657,493,0.657,494,0.965,495,0.642,496,0.657,497,0.657,498,0.511,499,0.642,500,1.134,501,1.134,502,0.965,503,0.628,504,0.628,505,0.628,506,0.965,507,0.642,508,0.642,509,0.642,510,0.944,511,1.16,512,0.628,513,0.628,514,0.642,515,0.657,516,0.657,517,0.642,518,0.642,519,0.657,520,0.657,521,0.657,522,0.657,523,0.965,524,0.628,525,0.628,526,1.134,527,1.16,528,1.289,529,1.289,530,0.642,531,0.965,532,0.657,533,0.321,534,0.642,535,0.574,536,1.252,537,1.351,538,1.321,539,1.515,540,0.923,541,0.657,542,0.642,543,0.523,544,0.642,545,0.642,546,1.16,547,0.657,548,0.657,549,0.965,550,0.657,551,0.657,552,0.642,553,0.657,554,1.321,555,0.657,556,1.485,557,0.657,558,0.657,559,0.657,560,0.657,561,0.657,562,1.16,563,0.657,564,0.657,565,0.657,566,0.657,567,0.657,568,0.642,569,0.657,570,0.657,571,0.657,572,0.657,573,0.657,574,0.657,575,0.657,576,0.657,577,0.657,578,0.657,579,0.657,580,0.642,581,0.657,582,1.205,583,0.657,584,0.657,585,0.657,586,0.657,587,0.657,588,0.965,589,0.657,590,0.642,591,0.657,592,0.657,593,0.657,594,0.657,595,0.657,596,0.642,597,0.642,598,0.657,599,0.657,600,0.657,601,0.642,602,0.642,603,0.657,604,0.657,605,0.642,606,0.657,607,0.657,608,0.657,609,0.657,610,0.642,611,0.657,612,0.642,613,0.657,614,0.657,615,0.642,616,0.657,617,0.657,1127,3.052]],["title/interfaces/Response.html",[232,0.2,533,0.461]],["body/interfaces/Response.html",[0,0.148,3,0.027,4,0.041,5,0.027,7,0.034,8,0.469,12,0.74,25,0.259,29,0.009,30,0.461,31,0.25,33,0.265,45,0.34,67,0.119,81,0.574,84,0.587,89,0.601,109,0.684,133,0.882,161,1.567,184,0.312,191,0.003,192,0.004,193,0.003,220,0.643,232,0.403,234,0.402,237,0.488,245,0.823,280,0.966,281,0.511,282,0.643,283,0.658,284,1.882,285,0.561,286,0.966,287,1.383,288,0.643,289,0.966,290,0.643,291,1.16,292,0.643,293,1.16,294,0.643,295,0.643,296,0.643,297,0.944,298,0.966,299,0.643,300,0.643,301,0.643,302,0.643,303,0.643,304,1.233,305,0.966,306,0.643,307,0.643,308,0.629,309,0.643,310,0.643,311,0.966,312,0.944,313,0.944,314,0.658,315,1.319,316,0.966,317,0.643,318,0.643,319,0.658,320,0.966,321,0.643,322,0.643,323,1.16,324,0.643,325,0.944,326,1.16,327,0.643,328,0.615,329,0.643,330,0.643,331,0.658,332,0.643,333,1.134,334,0.629,335,0.643,336,0.643,337,0.643,338,0.643,339,1.473,340,1.16,341,0.643,342,0.643,343,0.643,344,0.643,345,0.629,346,0.966,347,0.882,348,0.643,349,1.261,350,0.643,351,0.658,352,0.658,353,1.186,354,0.658,355,0.658,356,0.643,357,0.966,358,0.643,359,0.658,360,0.658,361,0.629,362,1.261,363,0.658,364,0.658,365,0.658,366,0.658,367,0.658,368,0.944,369,0.643,370,0.643,371,0.643,372,0.643,373,0.643,374,0.643,375,0.966,376,0.643,377,0.944,378,0.643,379,0.643,380,0.643,381,0.643,382,0.643,383,0.643,384,0.643,385,0.643,386,0.643,387,0.643,388,0.643,389,0.643,390,0.643,391,0.643,392,0.643,393,0.643,394,0.966,395,0.643,396,0.643,397,0.643,398,0.643,399,0.643,400,0.643,401,0.643,402,1.134,403,0.643,404,0.643,405,0.966,406,0.643,407,0.643,408,0.643,409,0.643,410,1.261,411,0.643,412,0.658,413,0.643,414,0.643,415,0.643,416,1.261,417,0.643,418,0.966,419,0.643,420,1.16,421,0.643,422,0.966,423,0.643,424,1.29,425,0.643,426,0.944,427,0.643,428,0.966,429,0.643,430,0.643,431,0.643,432,0.966,433,0.643,434,0.944,435,0.658,436,0.658,437,0.643,438,0.643,439,0.944,440,0.923,441,0.882,442,0.643,443,0.601,444,1.183,445,1.445,446,0.643,447,0.643,448,0.643,449,0.643,450,0.643,451,0.643,452,0.643,453,0.643,454,0.643,455,0.643,456,0.643,457,0.643,458,0.643,459,0.643,460,0.643,461,0.643,462,1.16,463,1.16,464,1.485,465,0.643,466,0.643,467,0.966,468,0.643,469,0.658,470,1.16,471,1.16,472,0.643,473,0.658,474,0.643,475,0.658,476,0.966,477,0.643,478,1.084,479,0.658,480,0.658,481,0.643,482,0.658,483,0.643,484,0.643,485,0.966,486,0.658,487,0.966,488,0.966,489,0.966,490,1.319,491,0.643,492,0.658,493,0.658,494,0.966,495,0.643,496,0.658,497,0.658,498,0.511,499,0.643,500,1.134,501,1.134,502,0.966,503,0.629,504,0.629,505,0.629,506,0.966,507,0.643,508,0.643,509,0.643,510,0.944,511,1.16,512,0.629,513,0.629,514,0.643,515,0.658,516,0.658,517,0.643,518,0.643,519,0.658,520,0.658,521,0.658,522,0.658,523,0.966,524,0.629,525,0.629,526,1.134,527,1.29,528,0.643,529,0.643,530,0.643,531,0.966,532,0.658,533,0.483,534,1.29,535,1.152,536,1.252,537,1.352,538,1.322,539,1.515,540,0.923,541,0.658,542,0.643,543,0.523,544,0.643,545,0.643,546,1.16,547,0.658,548,0.658,549,0.966,550,0.658,551,0.658,552,0.643,553,0.658,554,1.322,555,0.658,556,1.485,557,0.658,558,0.658,559,0.658,560,0.658,561,0.658,562,1.16,563,0.658,564,0.658,565,0.658,566,0.658,567,0.658,568,0.643,569,0.658,570,0.658,571,0.658,572,0.658,573,0.658,574,0.658,575,0.658,576,0.658,577,0.658,578,0.658,579,0.658,580,0.643,581,0.658,582,1.205,583,0.658,584,0.658,585,0.658,586,0.658,587,0.658,588,0.966,589,0.658,590,0.643,591,0.658,592,0.658,593,0.658,594,0.658,595,0.658,596,0.643,597,0.643,598,0.658,599,0.658,600,0.658,601,0.643,602,0.643,603,0.658,604,0.658,605,0.643,606,0.658,607,0.658,608,0.658,609,0.658,610,0.643,611,0.658,612,0.643,613,0.658,614,0.658,615,0.643,616,0.658,617,0.658]],["title/interfaces/ResponseContent.html",[232,0.2,656,2.302]],["body/interfaces/ResponseContent.html",[0,0.29,3,0.054,4,0.054,5,0.054,7,0.066,8,0.741,12,1.048,16,2.75,18,1.382,22,3.138,25,0.507,29,0.009,31,0.218,32,1.349,33,0.264,51,1.103,57,1.745,58,1.706,59,2.073,61,1.406,67,0.102,71,3.798,76,1.286,79,1.378,190,1.375,191,0.006,192,0.007,193,0.006,232,0.272,234,0.524,533,0.763,543,1.391,646,3.809,647,3.367,648,4.651,650,3.036,651,3.367,652,3.639,653,3.639,654,3.639,655,3.639,656,4.1,666,4.865,670,5.259,776,4.596,778,4.596,781,3.497,801,5.542,812,4.418,813,4.418,814,5.542,815,5.542,816,7.715,817,5.542,818,5.542,819,4.418,820,4.418,821,5.542,822,4.418,823,4.418]],["title/interfaces/ResponseContent-1.html",[194,2.241,232,0.168,656,1.933]],["body/interfaces/ResponseContent-1.html",[0,0.304,3,0.043,4,0.043,5,0.043,7,0.052,8,0.641,9,4.059,12,1.002,16,2.795,18,1.388,19,3.326,22,3.295,25,0.403,29,0.009,30,0.436,31,0.196,32,1.272,33,0.26,51,1.068,57,1.51,58,1.476,59,1.65,60,2.679,61,1.119,64,5.166,65,3.326,67,0.098,71,3.022,76,1.511,79,1.411,92,3.133,100,3.326,101,5.305,109,0.472,113,4.389,126,3.821,131,3.516,135,4.277,159,3.516,172,6.233,183,3.088,184,0.641,185,4.639,190,1.094,191,0.005,192,0.006,193,0.005,232,0.217,234,0.417,347,0.914,443,0.935,533,0.786,646,3.295,647,2.679,648,4.539,650,2.416,651,2.679,656,4.334,666,4.75,726,3.164,742,3.743,743,3.743,744,3.988,746,3.743,747,4.639,775,4.934,776,4.734,777,4.856,778,4.734,781,4.665,784,3.516,788,3.743,789,4.175,812,3.516,813,3.516,819,3.516,820,3.516,822,3.516,823,3.516,824,4.028,830,4.94,831,4.028,832,6.327,833,5.316,834,4.028,835,4.028,836,4.028,837,5.95,838,4.028,839,2.679,840,4.028,841,4.028,842,4.028,843,4.028,844,3.516,845,4.028,846,6.112,847,5.316,848,4.028,849,4.028,850,5.95,851,4.028,852,4.028,853,4.028,854,5.316,855,4.028,856,4.028,857,4.028,858,4.028,859,4.028,860,4.028,861,4.028,862,5.316,863,4.028,864,4.028,865,4.028,866,4.028]],["title/interfaces/S3SkillConfig.html",[232,0.2,633,3.066]],["body/interfaces/S3SkillConfig.html",[3,0.057,4,0.057,5,0.057,7,0.07,8,0.771,25,0.542,29,0.009,31,0.232,33,0.262,51,1.148,57,1.816,58,1.503,67,0.108,109,0.797,191,0.006,192,0.007,193,0.006,232,0.378,234,0.56,618,6.137,619,4.25,620,4.722,621,4.468,622,5.028,623,6.46,624,4.25,625,4.416,626,5.279,627,4.796,628,2.965,629,4.25,630,4.722,631,4.796,632,5.58,633,5.62,634,6.535,635,6.535,636,5.279,637,4.25,638,4.722,639,4.25,640,4.468,641,4.468,642,4.468,643,4.468]],["title/classes/SentryErrorHandlerFactory.html",[0,0.213,967,3.714]],["body/classes/SentryErrorHandlerFactory.html",[0,0.243,2,1.129,3,0.045,4,0.045,5,0.045,7,0.055,14,1.062,18,0.82,24,2.469,26,0.744,29,0.009,31,0.14,33,0.249,41,0.82,45,0.558,51,1.201,55,3.099,57,1.834,58,1.696,59,1.74,61,1.18,67,0.106,68,2.134,76,1.855,79,1.346,94,3.539,191,0.005,192,0.006,193,0.005,232,0.228,237,0.8,245,0.673,533,0.683,535,0.942,540,1.307,625,3.802,627,5.506,650,3.874,682,2.194,684,3.153,685,2.222,687,4.927,689,3.054,702,3.554,703,3.187,740,6.459,744,4.58,756,6.459,776,2.726,778,3.531,786,5.524,789,4.795,794,3.157,798,3.948,844,3.708,937,6.691,938,5.504,939,4.249,940,4.652,942,4.652,944,6.459,946,6.684,947,4.652,948,4.652,949,4.652,950,4.652,951,6.691,952,6.026,953,6.684,954,7.07,955,6.026,956,7.07,957,6.026,958,7.07,959,6.026,960,6.684,961,6.684,962,6.684,963,7.504,964,6.684,965,6.684,966,6.684,967,5.504,968,6.106,969,4.652,970,4.652,971,4.652,972,4.652,973,4.652,974,4.652,975,4.652,976,4.652,977,4.652,978,6.026,979,4.652,980,4.652,981,4.652,982,4.652,983,6.026,984,4.249,985,3.708,986,4.652,987,4.652,988,4.652,989,4.652,990,4.652,991,4.652,992,4.652,993,4.652,994,4.652,995,4.652,996,4.652,997,4.652,998,4.652,999,4.652,1000,4.652,1001,4.652,1002,4.652,1003,4.652,1004,4.652,1012,3.948,1657,5.263]],["title/classes/SettingAPIClient.html",[0,0.213,1658,4.066]],["body/classes/SettingAPIClient.html",[0,0.301,2,1.396,3,0.056,4,0.056,5,0.056,7,0.068,8,0.758,14,1.212,16,2.687,17,4.306,18,1.43,26,1.22,28,1.867,29,0.009,30,0.464,31,0.23,32,1.266,33,0.265,41,1.297,45,0.95,51,1.128,57,1.492,58,1.459,60,3.494,61,1.459,67,0.081,79,1.266,109,0.736,190,1.427,191,0.006,192,0.007,193,0.006,196,5.55,203,2.437,498,1.376,932,7.911,1658,6.878,1659,6.508,1660,8.325,1661,8.325,1662,8.325,1663,7.782,1664,6.508,1665,6.508,1666,6.508,1667,6.508,1668,6.508,1669,6.508,1670,6.508,1671,6.508,1672,6.508,1673,6.508]],["title/interfaces/Skill.html",[232,0.2,347,0.843]],["body/interfaces/Skill.html",[0,0.149,3,0.028,4,0.041,5,0.028,7,0.034,8,0.471,12,0.743,25,0.261,29,0.009,30,0.475,31,0.249,33,0.265,45,0.342,67,0.119,81,0.578,84,0.591,89,0.605,109,0.686,133,0.886,161,1.518,184,0.314,191,0.003,192,0.005,193,0.003,220,0.647,232,0.404,234,0.404,237,0.491,245,0.413,280,0.97,281,0.514,282,0.647,283,0.662,284,1.883,285,0.565,286,0.97,287,1.386,288,0.647,289,0.97,290,0.647,291,1.164,292,0.647,293,1.164,294,0.647,295,0.647,296,0.647,297,0.949,298,0.97,299,0.647,300,0.647,301,0.647,302,0.647,303,0.647,304,1.237,305,0.97,306,0.647,307,0.647,308,0.633,309,0.647,310,0.647,311,0.97,312,0.949,313,0.949,314,0.662,315,1.323,316,0.97,317,0.647,318,0.647,319,0.662,320,0.97,321,0.647,322,0.647,323,1.164,324,0.647,325,0.949,326,1.164,327,0.647,328,0.618,329,0.647,330,0.647,331,0.662,332,0.647,333,1.138,334,0.633,335,0.647,336,0.647,337,0.647,338,0.647,339,1.476,340,1.164,341,0.647,342,0.647,343,0.647,344,0.647,345,0.633,346,0.97,347,1.064,348,0.647,349,1.265,350,0.647,351,0.662,352,0.662,353,1.191,354,0.662,355,0.662,356,0.647,357,0.97,358,0.647,359,0.662,360,0.662,361,0.633,362,1.265,363,0.662,364,0.662,365,0.662,366,0.662,367,0.662,368,0.949,369,0.647,370,0.647,371,0.647,372,0.647,373,0.647,374,0.647,375,0.97,376,0.647,377,0.949,378,0.647,379,0.647,380,0.647,381,0.647,382,0.647,383,0.647,384,0.647,385,0.647,386,0.647,387,0.647,388,0.647,389,0.647,390,0.647,391,0.647,392,0.647,393,0.647,394,0.97,395,0.647,396,0.647,397,0.647,398,0.647,399,0.647,400,0.647,401,0.647,402,1.138,403,0.647,404,0.647,405,0.97,406,0.647,407,0.647,408,0.647,409,0.647,410,1.265,411,0.647,412,0.662,413,0.647,414,0.647,415,0.647,416,1.265,417,0.647,418,0.97,419,0.647,420,1.164,421,0.647,422,0.97,423,0.647,424,1.294,425,0.647,426,0.949,427,0.647,428,0.97,429,0.647,430,0.647,431,0.647,432,0.97,433,0.647,434,0.949,435,0.662,436,0.662,437,0.647,438,0.647,439,0.949,440,0.928,441,0.886,442,0.647,443,0.605,444,1.184,445,1.447,446,0.647,447,0.647,448,0.647,449,0.647,450,0.647,451,0.647,452,0.647,453,0.647,454,0.647,455,0.647,456,0.647,457,0.647,458,0.647,459,0.647,460,0.647,461,0.647,462,1.164,463,1.164,464,1.488,465,0.647,466,0.647,467,0.97,468,0.647,469,0.662,470,1.164,471,1.164,472,0.647,473,0.662,474,0.647,475,0.662,476,0.97,477,0.647,478,1.088,479,0.662,480,0.662,481,0.647,482,0.662,483,0.647,484,0.647,485,0.97,486,0.662,487,0.97,488,0.97,489,0.97,490,1.323,491,0.647,492,0.662,493,0.662,494,0.97,495,0.647,496,0.662,497,0.662,498,0.514,499,0.647,500,1.138,501,1.138,502,0.97,503,0.633,504,0.633,505,0.633,506,0.97,507,0.647,508,0.647,509,0.647,510,0.949,511,1.164,512,0.633,513,0.633,514,0.647,515,0.662,516,0.662,517,0.647,518,0.647,519,0.662,520,0.662,521,0.662,522,0.662,523,0.97,524,0.633,525,0.633,526,1.138,527,0.97,528,0.647,529,0.647,530,0.647,531,0.97,532,0.662,533,0.323,534,0.647,535,0.578,536,1.252,537,1.354,538,1.324,539,1.518,540,0.928,541,0.662,542,0.647,543,0.527,544,0.647,545,0.647,546,1.164,547,0.662,548,0.662,549,0.97,550,0.662,551,0.662,552,0.647,553,0.662,554,1.324,555,0.662,556,1.488,557,0.662,558,0.662,559,0.662,560,0.662,561,0.662,562,1.164,563,0.662,564,0.662,565,0.662,566,0.662,567,0.662,568,0.647,569,0.662,570,0.662,571,0.662,572,0.662,573,0.662,574,0.662,575,0.662,576,0.662,577,0.662,578,0.662,579,0.662,580,0.647,581,0.662,582,1.209,583,0.662,584,0.662,585,0.662,586,0.662,587,0.662,588,0.97,589,0.662,590,0.647,591,0.662,592,0.662,593,0.662,594,0.662,595,0.662,596,0.647,597,0.647,598,0.662,599,0.662,600,0.662,601,0.647,602,0.647,603,0.662,604,0.662,605,0.647,606,0.662,607,0.662,608,0.662,609,0.662,610,0.647,611,0.662,612,0.647,613,0.662,614,0.662,615,0.647,616,0.662,617,0.662]],["title/interfaces/SkillConstants.html",[232,0.2,629,2.917]],["body/interfaces/SkillConstants.html",[0,0.32,3,0.059,4,0.059,5,0.059,17,3.25,18,1.079,26,0.98,29,0.009,33,0.232,51,1.17,55,2.947,56,4.393,57,1.851,58,1.811,59,2.29,67,0.106,76,1.421,79,1.053,145,5.69,190,1.519,191,0.006,192,0.008,193,0.006,232,0.301,234,0.578,236,5.198,237,1.228,621,5.697,624,4.393,625,4.503,629,5.12,685,2.036,792,6.519,793,6.123,794,2.734,797,6.123,798,5.198,799,6.123,800,6.123,1674,6.928]],["title/interfaces/SkillHandlers.html",[232,0.2,639,2.917]],["body/interfaces/SkillHandlers.html",[3,0.056,4,0.056,5,0.056,7,0.069,8,0.765,25,0.534,29,0.009,31,0.239,32,1.366,33,0.241,51,1.138,57,1.801,58,1.483,67,0.108,109,0.743,191,0.006,192,0.007,193,0.006,232,0.376,234,0.552,618,5.906,619,4.193,620,4.659,621,4.408,622,4.961,623,6.24,624,4.193,625,4.836,626,5.781,627,5.252,628,3.247,629,4.193,630,4.659,631,4.758,632,5.536,633,5.237,634,4.961,635,4.961,636,5.237,637,4.193,638,4.659,639,4.982,640,5.781,641,5.781,642,5.781,643,5.781]],["title/interfaces/SkillHandlersBuilder.html",[232,0.2,1675,3.714]],["body/interfaces/SkillHandlersBuilder.html",[0,0.284,3,0.052,4,0.052,5,0.052,7,0.064,14,1.169,18,0.955,26,1.227,28,1.896,29,0.009,30,0.471,31,0.225,32,1.286,41,1.351,51,1.088,57,1.407,58,1.376,67,0.093,76,1.258,79,1.342,191,0.006,192,0.007,193,0.006,232,0.266,234,0.512,619,5.598,625,4.837,626,5.783,627,5.254,628,3.248,639,5.362,640,5.41,641,5.41,642,5.41,643,5.41,685,1.803,686,3.294,985,5.291,1079,3.716,1675,7.523,1676,5.423,1677,7.173,1678,7.173,1679,7.173,1680,7.173,1681,7.668,1682,6.637,1683,6.135,1684,6.637,1685,6.135,1686,6.637,1687,6.135,1688,6.135,1689,6.135,1690,6.135,1691,5.423,1692,5.423,1693,4.954,1694,5.423,1695,5.423,1696,6.637,1697,5.423,1698,5.423,1699,6.637,1700,5.423,1701,5.423,1702,6.637,1703,5.423]],["title/classes/SkillHandlersFactory.html",[0,0.213,1693,3.714]],["body/classes/SkillHandlersFactory.html",[0,0.3,2,1.392,3,0.055,4,0.055,5,0.055,7,0.068,14,1.21,18,1.011,26,0.918,29,0.009,41,1.011,51,1.126,57,1.488,58,1.455,67,0.097,76,1.331,79,1.36,191,0.006,192,0.007,193,0.006,232,0.282,619,4.927,625,4.637,626,5.544,627,5.037,628,3.114,639,5.273,640,5.18,641,5.18,642,5.18,643,5.18,685,2.444,686,4.628,985,5.475,1079,3.931,1675,7.479,1676,5.737,1677,5.737,1678,5.737,1679,5.737,1680,5.737,1681,6.867,1682,5.737,1684,5.737,1686,5.737,1691,5.737,1692,5.737,1693,6.273,1694,5.737,1695,5.737,1696,6.867,1697,5.737,1698,5.737,1699,6.867,1700,5.737,1701,5.737,1702,6.867,1703,5.737,1704,6.491]],["title/interfaces/Soccer.html",[232,0.2,418,0.922]],["body/interfaces/Soccer.html",[0,0.149,3,0.028,4,0.041,5,0.028,7,0.034,8,0.471,12,0.743,25,0.261,29,0.009,30,0.475,31,0.249,33,0.265,45,0.342,67,0.119,81,0.578,84,0.591,89,0.605,109,0.686,133,0.886,161,1.518,184,0.314,191,0.003,192,0.005,193,0.003,220,0.647,232,0.404,234,0.404,237,0.491,245,0.413,280,0.97,281,0.514,282,0.647,283,0.662,284,1.883,285,0.565,286,0.97,287,1.386,288,0.647,289,0.97,290,0.647,291,1.164,292,0.647,293,1.164,294,0.647,295,0.647,296,0.647,297,0.949,298,0.97,299,0.647,300,0.647,301,0.647,302,0.647,303,0.647,304,1.237,305,0.97,306,0.647,307,0.647,308,0.633,309,0.647,310,0.647,311,0.97,312,0.949,313,0.949,314,0.662,315,1.323,316,0.97,317,0.647,318,0.647,319,0.662,320,0.97,321,0.647,322,0.647,323,1.164,324,0.647,325,0.949,326,1.164,327,0.647,328,0.618,329,0.647,330,0.647,331,0.662,332,0.647,333,1.138,334,0.633,335,0.647,336,0.647,337,0.647,338,0.647,339,1.476,340,1.164,341,0.647,342,0.647,343,0.647,344,0.647,345,0.633,346,0.97,347,0.886,348,0.647,349,1.265,350,0.647,351,0.662,352,0.662,353,1.191,354,0.662,355,0.662,356,0.647,357,0.97,358,0.647,359,0.662,360,0.662,361,0.633,362,1.265,363,0.662,364,0.662,365,0.662,366,0.662,367,0.662,368,0.949,369,0.647,370,0.647,371,0.647,372,0.647,373,0.647,374,0.647,375,0.97,376,0.647,377,0.949,378,0.647,379,0.647,380,0.647,381,0.647,382,0.647,383,0.647,384,0.647,385,0.647,386,0.647,387,0.647,388,0.647,389,0.647,390,0.647,391,0.647,392,0.647,393,0.647,394,0.97,395,0.647,396,0.647,397,0.647,398,0.647,399,0.647,400,0.647,401,0.647,402,1.138,403,0.647,404,0.647,405,0.97,406,0.647,407,0.647,408,0.647,409,0.647,410,1.265,411,0.647,412,0.662,413,0.647,414,0.647,415,0.647,416,1.265,417,0.647,418,1.164,419,0.647,420,1.164,421,0.647,422,0.97,423,0.647,424,1.294,425,0.647,426,0.949,427,0.647,428,0.97,429,0.647,430,0.647,431,0.647,432,0.97,433,0.647,434,0.949,435,0.662,436,0.662,437,0.647,438,0.647,439,0.949,440,0.928,441,0.886,442,0.647,443,0.605,444,1.184,445,1.447,446,0.647,447,0.647,448,0.647,449,0.647,450,0.647,451,0.647,452,0.647,453,0.647,454,0.647,455,0.647,456,0.647,457,0.647,458,0.647,459,0.647,460,0.647,461,0.647,462,1.164,463,1.164,464,1.488,465,0.647,466,0.647,467,0.97,468,0.647,469,0.662,470,1.164,471,1.164,472,0.647,473,0.662,474,0.647,475,0.662,476,0.97,477,0.647,478,1.088,479,0.662,480,0.662,481,0.647,482,0.662,483,0.647,484,0.647,485,0.97,486,0.662,487,0.97,488,0.97,489,0.97,490,1.323,491,0.647,492,0.662,493,0.662,494,0.97,495,0.647,496,0.662,497,0.662,498,0.514,499,0.647,500,1.138,501,1.138,502,0.97,503,0.633,504,0.633,505,0.633,506,0.97,507,0.647,508,0.647,509,0.647,510,0.949,511,1.164,512,0.633,513,0.633,514,0.647,515,0.662,516,0.662,517,0.647,518,0.647,519,0.662,520,0.662,521,0.662,522,0.662,523,0.97,524,0.633,525,0.633,526,1.138,527,0.97,528,0.647,529,0.647,530,0.647,531,0.97,532,0.662,533,0.323,534,0.647,535,0.578,536,1.252,537,1.354,538,1.324,539,1.518,540,0.928,541,0.662,542,0.647,543,0.527,544,0.647,545,0.647,546,1.164,547,0.662,548,0.662,549,0.97,550,0.662,551,0.662,552,0.647,553,0.662,554,1.324,555,0.662,556,1.488,557,0.662,558,0.662,559,0.662,560,0.662,561,0.662,562,1.164,563,0.662,564,0.662,565,0.662,566,0.662,567,0.662,568,0.647,569,0.662,570,0.662,571,0.662,572,0.662,573,0.662,574,0.662,575,0.662,576,0.662,577,0.662,578,0.662,579,0.662,580,0.647,581,0.662,582,1.209,583,0.662,584,0.662,585,0.662,586,0.662,587,0.662,588,0.97,589,0.662,590,0.647,591,0.662,592,0.662,593,0.662,594,0.662,595,0.662,596,0.647,597,0.647,598,0.662,599,0.662,600,0.662,601,0.647,602,0.647,603,0.662,604,0.662,605,0.647,606,0.662,607,0.662,608,0.662,609,0.662,610,0.647,611,0.662,612,0.647,613,0.662,614,0.662,615,0.647,616,0.662,617,0.662]],["title/interfaces/SportsEvent.html",[232,0.2,416,0.902]],["body/interfaces/SportsEvent.html",[0,0.148,3,0.027,4,0.041,5,0.027,7,0.034,8,0.469,12,0.74,25,0.259,29,0.009,30,0.461,31,0.25,33,0.264,45,0.34,67,0.119,81,0.574,84,0.587,89,0.601,109,0.684,133,0.882,161,1.515,184,0.312,191,0.003,192,0.004,193,0.003,220,0.643,232,0.403,234,0.402,237,0.488,245,0.41,280,0.966,281,0.511,282,0.643,283,0.658,284,1.882,285,0.561,286,0.966,287,1.383,288,0.643,289,0.966,290,0.643,291,1.16,292,0.643,293,1.16,294,0.643,295,0.643,296,0.643,297,0.944,298,0.966,299,0.643,300,0.643,301,0.643,302,0.643,303,0.643,304,1.233,305,0.966,306,0.643,307,0.643,308,0.629,309,0.643,310,0.643,311,0.966,312,0.944,313,0.944,314,0.658,315,1.319,316,0.966,317,0.643,318,0.643,319,0.658,320,0.966,321,0.643,322,0.643,323,1.16,324,0.643,325,0.944,326,1.16,327,0.643,328,0.615,329,0.643,330,0.643,331,0.658,332,0.643,333,1.134,334,0.629,335,0.643,336,0.643,337,0.643,338,0.643,339,1.473,340,1.16,341,0.643,342,0.643,343,0.643,344,0.643,345,0.629,346,0.966,347,0.882,348,0.643,349,1.261,350,0.643,351,0.658,352,0.658,353,1.186,354,0.658,355,0.658,356,0.643,357,0.966,358,0.643,359,0.658,360,0.658,361,0.629,362,1.261,363,0.658,364,0.658,365,0.658,366,0.658,367,0.658,368,0.944,369,0.643,370,0.643,371,0.643,372,0.643,373,0.643,374,0.643,375,0.966,376,0.643,377,0.944,378,0.643,379,0.643,380,0.643,381,0.643,382,0.643,383,0.643,384,0.643,385,0.643,386,0.643,387,0.643,388,0.643,389,0.643,390,0.643,391,0.643,392,0.643,393,0.643,394,0.966,395,0.643,396,0.643,397,0.643,398,0.643,399,0.643,400,0.643,401,0.643,402,1.134,403,0.643,404,0.643,405,0.966,406,0.643,407,0.643,408,0.643,409,0.643,410,1.261,411,0.643,412,0.658,413,0.643,414,0.643,415,0.643,416,1.352,417,1.29,418,1.29,419,1.29,420,1.506,421,1.29,422,0.966,423,0.643,424,1.29,425,0.643,426,0.944,427,0.643,428,0.966,429,0.643,430,0.643,431,0.643,432,0.966,433,0.643,434,0.944,435,0.658,436,0.658,437,0.643,438,0.643,439,0.944,440,0.923,441,0.882,442,0.643,443,0.601,444,1.183,445,1.445,446,0.643,447,0.643,448,0.643,449,0.643,450,0.643,451,0.643,452,0.643,453,0.643,454,0.643,455,0.643,456,0.643,457,0.643,458,0.643,459,0.643,460,0.643,461,0.643,462,1.16,463,1.16,464,1.485,465,0.643,466,0.643,467,0.966,468,0.643,469,0.658,470,1.16,471,1.16,472,0.643,473,0.658,474,0.643,475,0.658,476,0.966,477,0.643,478,1.084,479,0.658,480,0.658,481,0.643,482,0.658,483,0.643,484,0.643,485,0.966,486,0.658,487,0.966,488,0.966,489,0.966,490,1.319,491,0.643,492,0.658,493,0.658,494,0.966,495,0.643,496,0.658,497,0.658,498,0.511,499,0.643,500,1.134,501,1.134,502,0.966,503,0.629,504,0.629,505,0.629,506,0.966,507,0.643,508,0.643,509,0.643,510,0.944,511,1.16,512,0.629,513,0.629,514,0.643,515,0.658,516,0.658,517,0.643,518,0.643,519,0.658,520,0.658,521,0.658,522,0.658,523,0.966,524,0.629,525,0.629,526,1.134,527,0.966,528,0.643,529,0.643,530,0.643,531,0.966,532,0.658,533,0.321,534,0.643,535,0.574,536,1.252,537,1.352,538,1.322,539,1.515,540,0.923,541,0.658,542,0.643,543,0.523,544,0.643,545,0.643,546,1.16,547,0.658,548,0.658,549,0.966,550,0.658,551,0.658,552,0.643,553,0.658,554,1.322,555,0.658,556,1.485,557,0.658,558,0.658,559,0.658,560,0.658,561,0.658,562,1.16,563,0.658,564,0.658,565,0.658,566,0.658,567,0.658,568,0.643,569,0.658,570,0.658,571,0.658,572,0.658,573,0.658,574,0.658,575,0.658,576,0.658,577,0.658,578,0.658,579,0.658,580,0.643,581,0.658,582,1.205,583,0.658,584,0.658,585,0.658,586,0.658,587,0.658,588,0.966,589,0.658,590,0.643,591,0.658,592,0.658,593,0.658,594,0.658,595,0.658,596,0.643,597,0.643,598,0.658,599,0.658,600,0.658,601,0.643,602,0.643,603,0.658,604,0.658,605,0.643,606,0.658,607,0.658,608,0.658,609,0.658,610,0.643,611,0.658,612,0.643,613,0.658,614,0.658,615,0.643,616,0.658,617,0.658]],["title/interfaces/SportsTeam.html",[232,0.2,422,0.922]],["body/interfaces/SportsTeam.html",[0,0.149,3,0.028,4,0.041,5,0.028,7,0.034,8,0.471,12,0.743,25,0.261,29,0.009,30,0.475,31,0.249,33,0.265,45,0.342,67,0.119,81,0.578,84,0.591,89,0.605,109,0.686,133,0.886,161,1.518,184,0.314,191,0.003,192,0.005,193,0.003,220,0.647,232,0.404,234,0.404,237,0.491,245,0.413,280,0.97,281,0.514,282,0.647,283,0.662,284,1.883,285,0.565,286,0.97,287,1.386,288,0.647,289,0.97,290,0.647,291,1.164,292,0.647,293,1.164,294,0.647,295,0.647,296,0.647,297,0.949,298,0.97,299,0.647,300,0.647,301,0.647,302,0.647,303,0.647,304,1.237,305,0.97,306,0.647,307,0.647,308,0.633,309,0.647,310,0.647,311,0.97,312,0.949,313,0.949,314,0.662,315,1.323,316,0.97,317,0.647,318,0.647,319,0.662,320,0.97,321,0.647,322,0.647,323,1.164,324,0.647,325,0.949,326,1.164,327,0.647,328,0.618,329,0.647,330,0.647,331,0.662,332,0.647,333,1.138,334,0.633,335,0.647,336,0.647,337,0.647,338,0.647,339,1.476,340,1.164,341,0.647,342,0.647,343,0.647,344,0.647,345,0.633,346,0.97,347,0.886,348,0.647,349,1.265,350,0.647,351,0.662,352,0.662,353,1.191,354,0.662,355,0.662,356,0.647,357,0.97,358,0.647,359,0.662,360,0.662,361,0.633,362,1.265,363,0.662,364,0.662,365,0.662,366,0.662,367,0.662,368,0.949,369,0.647,370,0.647,371,0.647,372,0.647,373,0.647,374,0.647,375,0.97,376,0.647,377,0.949,378,0.647,379,0.647,380,0.647,381,0.647,382,0.647,383,0.647,384,0.647,385,0.647,386,0.647,387,0.647,388,0.647,389,0.647,390,0.647,391,0.647,392,0.647,393,0.647,394,0.97,395,0.647,396,0.647,397,0.647,398,0.647,399,0.647,400,0.647,401,0.647,402,1.138,403,0.647,404,0.647,405,0.97,406,0.647,407,0.647,408,0.647,409,0.647,410,1.265,411,0.647,412,0.662,413,0.647,414,0.647,415,0.647,416,1.265,417,0.647,418,0.97,419,0.647,420,1.164,421,0.647,422,1.164,423,0.647,424,1.294,425,0.647,426,0.949,427,0.647,428,0.97,429,0.647,430,0.647,431,0.647,432,0.97,433,0.647,434,0.949,435,0.662,436,0.662,437,0.647,438,0.647,439,0.949,440,0.928,441,0.886,442,0.647,443,0.605,444,1.184,445,1.447,446,0.647,447,0.647,448,0.647,449,0.647,450,0.647,451,0.647,452,0.647,453,0.647,454,0.647,455,0.647,456,0.647,457,0.647,458,0.647,459,0.647,460,0.647,461,0.647,462,1.164,463,1.164,464,1.488,465,0.647,466,0.647,467,0.97,468,0.647,469,0.662,470,1.164,471,1.164,472,0.647,473,0.662,474,0.647,475,0.662,476,0.97,477,0.647,478,1.088,479,0.662,480,0.662,481,0.647,482,0.662,483,0.647,484,0.647,485,0.97,486,0.662,487,0.97,488,0.97,489,0.97,490,1.323,491,0.647,492,0.662,493,0.662,494,0.97,495,0.647,496,0.662,497,0.662,498,0.514,499,0.647,500,1.138,501,1.138,502,0.97,503,0.633,504,0.633,505,0.633,506,0.97,507,0.647,508,0.647,509,0.647,510,0.949,511,1.164,512,0.633,513,0.633,514,0.647,515,0.662,516,0.662,517,0.647,518,0.647,519,0.662,520,0.662,521,0.662,522,0.662,523,0.97,524,0.633,525,0.633,526,1.138,527,0.97,528,0.647,529,0.647,530,0.647,531,0.97,532,0.662,533,0.323,534,0.647,535,0.578,536,1.252,537,1.354,538,1.324,539,1.518,540,0.928,541,0.662,542,0.647,543,0.527,544,0.647,545,0.647,546,1.164,547,0.662,548,0.662,549,0.97,550,0.662,551,0.662,552,0.647,553,0.662,554,1.324,555,0.662,556,1.488,557,0.662,558,0.662,559,0.662,560,0.662,561,0.662,562,1.164,563,0.662,564,0.662,565,0.662,566,0.662,567,0.662,568,0.647,569,0.662,570,0.662,571,0.662,572,0.662,573,0.662,574,0.662,575,0.662,576,0.662,577,0.662,578,0.662,579,0.662,580,0.647,581,0.662,582,1.209,583,0.662,584,0.662,585,0.662,586,0.662,587,0.662,588,0.97,589,0.662,590,0.647,591,0.662,592,0.662,593,0.662,594,0.662,595,0.662,596,0.647,597,0.647,598,0.662,599,0.662,600,0.662,601,0.647,602,0.647,603,0.662,604,0.662,605,0.647,606,0.662,607,0.662,608,0.662,609,0.662,610,0.647,611,0.662,612,0.647,613,0.662,614,0.662,615,0.647,616,0.662,617,0.662]],["title/classes/StateManager.html",[0,0.213,1705,4.066]],["body/classes/StateManager.html",[0,0.356,2,1.175,3,0.047,4,0.047,5,0.047,7,0.057,14,1.09,18,1.265,25,0.656,26,1.149,28,1.956,29,0.009,30,0.452,31,0.24,32,1.235,33,0.158,41,1.265,51,0.794,56,5.898,57,1.257,58,1.229,59,1.812,67,0.11,76,1.855,79,1.343,110,7.408,191,0.005,192,0.007,193,0.005,273,3.902,478,1.72,624,5.737,628,2.62,685,2.673,697,6.929,886,3.625,951,5.65,1012,4.112,1705,6.186,1706,4.845,1707,6.998,1708,8.122,1709,6.998,1710,8.582,1711,8.392,1712,6.998,1713,6.998,1714,6.998,1715,6.998,1716,6.998,1717,6.998,1718,6.998,1719,6.998,1720,6.998,1721,6.998,1722,7.71,1723,7.71,1724,7.71,1725,5.481,1726,5.481,1727,5.481,1728,5.481,1729,5.481,1730,5.481,1731,5.481,1732,5.481,1733,4.845,1734,5.481,1735,6.998,1736,5.481,1737,5.481,1738,5.481,1739,5.481]],["title/interfaces/TMergeTargetHandler.html",[232,0.2,873,2.67]],["body/interfaces/TMergeTargetHandler.html",[0,0.387,3,0.051,4,0.051,5,0.051,7,0.063,8,0.719,18,0.93,24,3.761,25,0.597,29,0.009,31,0.234,32,1.274,33,0.172,45,0.889,51,1.214,55,3.058,57,1.839,58,1.656,59,1.974,61,1.339,67,0.113,68,2.995,76,1.515,79,1.377,109,0.758,154,5.585,166,4.118,184,0.781,190,1.31,191,0.006,192,0.007,193,0.006,232,0.374,234,0.617,244,3.966,245,0.945,533,0.599,628,2.766,682,3.706,684,3.744,685,1.755,686,3.207,702,3.692,839,3.966,867,3.466,868,3.466,869,4.286,870,4.856,871,3.466,872,3.207,873,5.212,874,5.439,875,4.473,876,4.862,877,3.617,878,4.654,879,3.617,880,3.617,881,3.617,882,4.473,883,3.617,884,3.466,885,4.286,886,3.826,887,4.286,888,4.286,889,4.286,890,3.617,891,4.473,892,3.466]],["title/interfaces/TRequestHandler.html",[232,0.2,876,2.67]],["body/interfaces/TRequestHandler.html",[0,0.388,3,0.051,4,0.051,5,0.051,7,0.063,8,0.721,18,0.933,24,3.767,25,0.598,29,0.009,31,0.234,33,0.172,45,0.89,51,1.215,55,3.061,57,1.841,58,1.659,59,1.981,61,1.343,67,0.113,68,3.001,76,1.518,79,1.377,109,0.759,154,5.591,166,4.127,184,0.782,190,1.314,191,0.006,192,0.007,193,0.006,232,0.374,234,0.618,244,3.974,245,0.947,533,0.601,628,2.771,682,3.708,684,3.746,685,1.761,686,3.217,702,3.695,839,3.974,867,3.477,868,3.477,869,4.295,870,4.863,871,3.477,872,3.217,873,5.162,874,5.442,875,4.482,876,5.001,877,3.629,878,4.66,879,3.629,880,3.629,881,3.629,882,4.482,883,3.629,884,3.477,885,4.295,886,3.833,887,4.295,888,4.295,889,4.295,890,3.629,891,4.482,892,3.477]],["title/interfaces/Thing.html",[232,0.2,311,0.922]],["body/interfaces/Thing.html",[0,0.149,3,0.028,4,0.041,5,0.028,7,0.034,8,0.472,12,0.744,25,0.261,29,0.009,30,0.476,31,0.249,33,0.264,45,0.343,67,0.119,81,0.579,84,0.592,89,0.606,109,0.686,133,0.888,161,1.519,184,0.315,191,0.003,192,0.005,193,0.003,220,0.648,232,0.404,234,0.405,237,0.491,245,0.413,280,0.972,281,0.515,282,0.648,283,0.663,284,1.883,285,0.566,286,0.972,287,1.387,288,0.648,289,0.972,290,0.648,291,1.166,292,0.648,293,1.166,294,0.648,295,0.648,296,0.648,297,0.95,298,0.972,299,0.648,300,0.648,301,0.648,302,0.648,303,0.648,304,1.238,305,0.972,306,0.648,307,0.648,308,0.634,309,0.648,310,0.648,311,1.166,312,0.95,313,0.95,314,0.663,315,1.324,316,0.972,317,0.648,318,0.648,319,0.663,320,0.972,321,0.648,322,0.648,323,1.166,324,0.648,325,0.95,326,1.166,327,0.648,328,0.619,329,0.648,330,0.648,331,0.663,332,0.648,333,1.14,334,0.634,335,0.648,336,0.648,337,0.648,338,0.648,339,1.477,340,1.166,341,0.648,342,0.648,343,0.648,344,0.648,345,0.634,346,0.972,347,0.888,348,0.648,349,1.266,350,0.648,351,0.663,352,0.663,353,1.192,354,0.663,355,0.663,356,0.648,357,0.972,358,0.648,359,0.663,360,0.663,361,0.634,362,1.266,363,0.663,364,0.663,365,0.663,366,0.663,367,0.663,368,0.95,369,0.648,370,0.648,371,0.648,372,0.648,373,0.648,374,0.648,375,0.972,376,0.648,377,0.95,378,0.648,379,0.648,380,0.648,381,0.648,382,0.648,383,0.648,384,0.648,385,0.648,386,0.648,387,0.648,388,0.648,389,0.648,390,0.648,391,0.648,392,0.648,393,0.648,394,0.972,395,0.648,396,0.648,397,0.648,398,0.648,399,0.648,400,0.648,401,0.648,402,1.14,403,0.648,404,0.648,405,0.972,406,0.648,407,0.648,408,0.648,409,0.648,410,1.266,411,0.648,412,0.663,413,0.648,414,0.648,415,0.648,416,1.266,417,0.648,418,0.972,419,0.648,420,1.166,421,0.648,422,0.972,423,0.648,424,1.295,425,0.648,426,0.95,427,0.648,428,0.972,429,0.648,430,0.648,431,0.648,432,0.972,433,0.648,434,0.95,435,0.663,436,0.663,437,0.648,438,0.648,439,0.95,440,0.929,441,0.888,442,0.648,443,0.606,444,1.184,445,1.447,446,0.648,447,0.648,448,0.648,449,0.648,450,0.648,451,0.648,452,0.648,453,0.648,454,0.648,455,0.648,456,0.648,457,0.648,458,0.648,459,0.648,460,0.648,461,0.648,462,1.166,463,1.166,464,1.489,465,0.648,466,0.648,467,0.972,468,0.648,469,0.663,470,1.166,471,1.166,472,0.648,473,0.663,474,0.648,475,0.663,476,0.972,477,0.648,478,1.089,479,0.663,480,0.663,481,0.648,482,0.663,483,0.648,484,0.648,485,0.972,486,0.663,487,0.972,488,0.972,489,0.972,490,1.324,491,0.648,492,0.663,493,0.663,494,0.972,495,0.648,496,0.663,497,0.663,498,0.515,499,0.648,500,1.14,501,1.14,502,0.972,503,0.634,504,0.634,505,0.634,506,0.972,507,0.648,508,0.648,509,0.648,510,0.95,511,1.166,512,0.634,513,0.634,514,0.648,515,0.663,516,0.663,517,0.648,518,0.648,519,0.663,520,0.663,521,0.663,522,0.663,523,0.972,524,0.634,525,0.634,526,1.14,527,0.972,528,0.648,529,0.648,530,0.648,531,0.972,532,0.663,533,0.324,534,0.648,535,0.579,536,1.252,537,1.355,538,1.325,539,1.519,540,0.929,541,0.663,542,0.648,543,0.528,544,0.648,545,0.648,546,1.166,547,0.663,548,0.663,549,0.972,550,0.663,551,0.663,552,0.648,553,0.663,554,1.325,555,0.663,556,1.489,557,0.663,558,0.663,559,0.663,560,0.663,561,0.663,562,1.166,563,0.663,564,0.663,565,0.663,566,0.663,567,0.663,568,0.648,569,0.663,570,0.663,571,0.663,572,0.663,573,0.663,574,0.663,575,0.663,576,0.663,577,0.663,578,0.663,579,0.663,580,0.648,581,0.663,582,1.21,583,0.663,584,0.663,585,0.663,586,0.663,587,0.663,588,0.972,589,0.663,590,0.648,591,0.663,592,0.663,593,0.663,594,0.663,595,0.663,596,0.648,597,0.648,598,0.663,599,0.663,600,0.663,601,0.648,602,0.648,603,0.663,604,0.663,605,0.648,606,0.663,607,0.663,608,0.663,609,0.663,610,0.648,611,0.663,612,0.648,613,0.663,614,0.663,615,0.648,616,0.663,617,0.663]],["title/interfaces/TranslationBuilder.html",[232,0.2,1740,3.451]],["body/interfaces/TranslationBuilder.html",[0,0.291,3,0.054,4,0.054,5,0.054,7,0.066,12,1.137,14,1.189,18,0.982,26,1.207,28,1.841,29,0.009,30,0.457,31,0.228,32,1.249,33,0.272,41,1.329,67,0.102,76,1.565,79,1.249,165,5.089,183,2.956,184,0.614,191,0.006,192,0.007,193,0.006,232,0.331,234,0.526,237,1.298,535,1.47,685,1.852,794,2.487,1079,3.817,1127,3.997,1740,6.923,1741,5.089,1742,6.63,1743,7.634,1744,6.891,1745,6.63,1746,6.163,1747,6.303,1748,6.163,1749,6.303,1750,6.303,1751,6.805,1752,6.163,1753,7.057,1754,6.303,1755,5.089,1756,5.089,1757,4.728,1758,5.089,1759,5.089,1760,6.163,1761,5.089,1762,5.089]],["title/classes/TranslationFactory.html",[0,0.213,1757,3.451]],["body/classes/TranslationFactory.html",[0,0.307,2,1.426,3,0.057,4,0.057,5,0.057,7,0.07,12,1.075,14,1.227,18,1.035,26,0.94,29,0.009,33,0.268,41,1.035,67,0.105,76,1.616,79,1.277,165,5.254,183,3.118,184,0.647,191,0.006,192,0.007,193,0.006,232,0.342,237,1.198,535,1.19,685,2.469,794,3.429,1079,4.026,1740,6.869,1741,5.367,1742,5.367,1744,5.367,1745,5.367,1746,5.367,1748,5.367,1751,6.816,1752,5.367,1753,6.783,1755,5.367,1756,5.367,1757,5.913,1758,5.367,1759,5.367,1760,6.363,1761,5.367,1762,5.367,1763,6.648]],["title/interfaces/TranslationObject.html",[232,0.2,1751,3.451]],["body/interfaces/TranslationObject.html",[0,0.307,3,0.057,4,0.057,5,0.057,7,0.07,8,0.768,12,1.075,18,1.036,29,0.009,31,0.224,33,0.268,67,0.105,76,1.617,79,1.278,165,5.257,183,3.121,184,0.648,191,0.006,192,0.007,193,0.006,232,0.342,234,0.556,237,1.199,535,1.192,685,1.955,794,2.626,1079,4.03,1127,5,1740,6.817,1741,5.372,1742,5.372,1744,5.372,1745,5.372,1746,5.372,1748,5.372,1751,6.87,1752,5.372,1753,6.785,1755,7.016,1756,5.372,1757,4.992,1758,5.372,1759,5.372,1760,6.367,1761,5.372,1762,5.372]],["title/interfaces/TrashCollectionAlert.html",[232,0.2,402,0.902]],["body/interfaces/TrashCollectionAlert.html",[0,0.149,3,0.027,4,0.041,5,0.027,7,0.034,8,0.47,12,0.741,25,0.26,29,0.009,30,0.462,31,0.25,33,0.264,45,0.341,67,0.119,81,0.576,84,0.589,89,0.603,109,0.685,133,0.884,161,1.517,184,0.313,191,0.003,192,0.005,193,0.003,220,0.645,232,0.403,234,0.403,237,0.489,245,0.411,280,0.968,281,0.513,282,0.645,283,0.66,284,1.882,285,0.563,286,0.968,287,1.384,288,0.645,289,0.968,290,0.645,291,1.162,292,0.645,293,1.162,294,0.645,295,0.645,296,0.645,297,0.947,298,0.968,299,0.645,300,0.645,301,0.645,302,0.645,303,0.645,304,1.235,305,0.968,306,0.645,307,0.645,308,0.631,309,0.645,310,0.645,311,0.968,312,0.947,313,0.947,314,0.66,315,1.321,316,0.968,317,0.645,318,0.645,319,0.66,320,0.968,321,0.645,322,0.645,323,1.162,324,0.645,325,0.947,326,1.162,327,0.645,328,0.617,329,0.645,330,0.645,331,0.66,332,0.645,333,1.136,334,0.631,335,0.645,336,0.645,337,0.645,338,0.645,339,1.474,340,1.162,341,0.645,342,0.645,343,0.645,344,0.645,345,0.631,346,0.968,347,0.884,348,0.645,349,1.263,350,0.645,351,0.66,352,0.66,353,1.189,354,0.66,355,0.66,356,0.645,357,0.968,358,0.645,359,0.66,360,0.66,361,0.631,362,1.263,363,0.66,364,0.66,365,0.66,366,0.66,367,0.66,368,0.947,369,0.645,370,0.645,371,0.645,372,0.645,373,0.645,374,0.645,375,0.968,376,0.645,377,1.263,378,0.645,379,0.645,380,0.645,381,0.645,382,0.645,383,0.645,384,0.645,385,0.645,386,0.645,387,0.645,388,0.645,389,0.645,390,0.645,391,0.645,392,0.645,393,0.645,394,1.292,395,0.645,396,0.645,397,0.645,398,0.645,399,0.645,400,0.645,401,0.645,402,1.263,403,1.292,404,1.292,405,0.968,406,0.645,407,0.645,408,0.645,409,0.645,410,1.263,411,0.645,412,0.66,413,0.645,414,0.645,415,0.645,416,1.263,417,0.645,418,0.968,419,0.645,420,1.162,421,0.645,422,0.968,423,0.645,424,1.292,425,0.645,426,0.947,427,0.645,428,0.968,429,0.645,430,0.645,431,0.645,432,0.968,433,0.645,434,0.947,435,0.66,436,0.66,437,0.645,438,0.645,439,0.947,440,0.925,441,0.884,442,0.645,443,0.603,444,1.183,445,1.446,446,0.645,447,0.645,448,0.645,449,0.645,450,0.645,451,0.645,452,0.645,453,0.645,454,0.645,455,0.645,456,0.645,457,0.645,458,0.645,459,0.645,460,0.645,461,0.645,462,1.162,463,1.162,464,1.487,465,0.645,466,0.645,467,0.968,468,0.645,469,0.66,470,1.162,471,1.162,472,0.645,473,0.66,474,0.645,475,0.66,476,0.968,477,0.645,478,1.086,479,0.66,480,0.66,481,0.645,482,0.66,483,0.645,484,0.645,485,0.968,486,0.66,487,0.968,488,0.968,489,0.968,490,1.321,491,0.645,492,0.66,493,0.66,494,0.968,495,0.645,496,0.66,497,0.66,498,0.513,499,0.645,500,1.136,501,1.136,502,0.968,503,0.631,504,0.631,505,0.631,506,0.968,507,0.645,508,0.645,509,0.645,510,0.947,511,1.162,512,0.631,513,0.631,514,0.645,515,0.66,516,0.66,517,0.645,518,0.645,519,0.66,520,0.66,521,0.66,522,0.66,523,0.968,524,0.631,525,0.631,526,1.136,527,0.968,528,0.645,529,0.645,530,0.645,531,0.968,532,0.66,533,0.322,534,0.645,535,0.576,536,1.252,537,1.353,538,1.323,539,1.517,540,0.925,541,0.66,542,0.645,543,0.525,544,0.645,545,0.645,546,1.162,547,0.66,548,0.66,549,0.968,550,0.66,551,0.66,552,0.645,553,0.66,554,1.323,555,0.66,556,1.487,557,0.66,558,0.66,559,0.66,560,0.66,561,0.66,562,1.162,563,0.66,564,0.66,565,0.66,566,0.66,567,0.66,568,0.645,569,0.66,570,0.66,571,0.66,572,0.66,573,0.66,574,0.66,575,0.66,576,0.66,577,0.66,578,0.66,579,0.66,580,0.645,581,0.66,582,1.207,583,0.66,584,0.66,585,0.66,586,0.66,587,0.66,588,0.968,589,0.66,590,0.645,591,0.66,592,0.66,593,0.66,594,0.66,595,0.66,596,0.645,597,0.645,598,0.66,599,0.66,600,0.66,601,0.645,602,0.645,603,0.66,604,0.66,605,0.645,606,0.66,607,0.66,608,0.66,609,0.66,610,0.645,611,0.66,612,0.645,613,0.66,614,0.66,615,0.645,616,0.66,617,0.66]],["title/classes/UserProfileAPIClient.html",[0,0.213,1764,4.066]],["body/classes/UserProfileAPIClient.html",[0,0.302,2,1.403,3,0.056,4,0.056,5,0.056,7,0.069,8,0.76,14,1.216,16,2.693,17,4.365,18,1.449,26,1.249,29,0.009,31,0.174,33,0.188,41,1.346,45,0.969,51,1.131,57,1.5,58,1.467,60,3.513,61,1.467,67,0.081,79,1.314,109,0.738,190,1.435,191,0.006,192,0.007,193,0.006,196,5.562,203,2.45,498,1.378,1159,7.638,1193,5.782,1764,6.9,1765,6.542,1766,8.642,1767,8.642,1768,8.642,1769,7.807,1770,6.542,1771,6.542,1772,6.542,1773,6.542,1774,6.542,1775,6.542,1776,6.542,1777,6.542]],["title/interfaces/WeatherAlert.html",[232,0.2,410,0.902]],["body/interfaces/WeatherAlert.html",[0,0.148,3,0.027,4,0.059,5,0.027,7,0.034,8,0.47,12,0.741,25,0.26,29,0.009,30,0.461,31,0.249,32,0.734,33,0.265,45,0.341,67,0.119,81,0.575,84,0.589,89,0.602,109,0.685,133,0.884,161,1.516,184,0.313,191,0.003,192,0.005,193,0.003,220,0.644,232,0.403,234,0.403,237,0.489,245,0.411,280,0.967,281,0.512,282,0.644,283,0.659,284,1.882,285,0.562,286,0.967,287,1.384,288,0.644,289,0.967,290,0.644,291,1.162,292,0.644,293,1.162,294,0.644,295,0.644,296,0.644,297,0.946,298,0.967,299,0.644,300,0.644,301,0.644,302,0.644,303,0.644,304,1.234,305,0.967,306,0.644,307,0.644,308,0.63,309,0.644,310,0.644,311,0.967,312,0.946,313,0.946,314,0.659,315,1.32,316,0.967,317,0.644,318,0.644,319,0.659,320,0.967,321,0.644,322,0.644,323,1.162,324,0.644,325,0.946,326,1.162,327,0.644,328,0.616,329,0.644,330,0.644,331,0.659,332,0.644,333,1.136,334,0.63,335,0.644,336,0.644,337,0.644,338,0.644,339,1.474,340,1.162,341,0.644,342,0.644,343,0.644,344,0.644,345,0.63,346,0.967,347,0.884,348,0.644,349,1.262,350,0.644,351,0.659,352,0.659,353,1.188,354,0.659,355,0.659,356,0.644,357,0.967,358,0.644,359,0.659,360,0.659,361,0.63,362,1.262,363,0.659,364,0.659,365,0.659,366,0.659,367,0.659,368,0.946,369,0.644,370,0.644,371,0.644,372,0.644,373,0.644,374,0.644,375,0.967,376,0.644,377,0.946,378,0.644,379,0.644,380,0.644,381,0.644,382,0.644,383,0.644,384,0.644,385,0.644,386,0.644,387,0.644,388,0.644,389,0.644,390,0.644,391,0.644,392,0.644,393,0.644,394,0.967,395,0.644,396,0.644,397,0.644,398,0.644,399,0.644,400,0.644,401,0.644,402,1.136,403,0.644,404,0.644,405,1.291,406,0.644,407,0.644,408,0.644,409,0.644,410,1.353,411,0.644,412,1.32,413,0.644,414,0.644,415,0.644,416,1.262,417,0.644,418,0.967,419,0.644,420,1.162,421,0.644,422,0.967,423,0.644,424,1.291,425,0.644,426,0.946,427,0.644,428,0.967,429,0.644,430,0.644,431,0.644,432,0.967,433,0.644,434,0.946,435,0.659,436,0.659,437,0.644,438,0.644,439,0.946,440,0.925,441,0.884,442,0.644,443,0.602,444,1.183,445,1.446,446,0.644,447,0.644,448,0.644,449,0.644,450,0.644,451,0.644,452,0.644,453,0.644,454,0.644,455,0.644,456,0.644,457,0.644,458,0.644,459,0.644,460,0.644,461,0.644,462,1.162,463,1.162,464,1.486,465,0.644,466,0.644,467,0.967,468,0.644,469,0.659,470,1.162,471,1.162,472,0.644,473,0.659,474,0.644,475,0.659,476,0.967,477,0.644,478,1.086,479,0.659,480,0.659,481,0.644,482,0.659,483,0.644,484,0.644,485,0.967,486,0.659,487,0.967,488,0.967,489,0.967,490,1.32,491,0.644,492,0.659,493,0.659,494,0.967,495,0.644,496,0.659,497,0.659,498,0.512,499,0.644,500,1.136,501,1.136,502,0.967,503,0.63,504,0.63,505,0.63,506,0.967,507,0.644,508,0.644,509,0.644,510,0.946,511,1.162,512,0.63,513,0.63,514,0.644,515,0.659,516,0.659,517,0.644,518,0.644,519,0.659,520,0.659,521,0.659,522,0.659,523,0.967,524,0.63,525,0.63,526,1.136,527,0.967,528,0.644,529,0.644,530,0.644,531,0.967,532,0.659,533,0.322,534,0.644,535,0.575,536,1.252,537,1.353,538,1.322,539,1.516,540,0.925,541,0.659,542,0.644,543,0.525,544,0.644,545,0.644,546,1.162,547,0.659,548,0.659,549,0.967,550,0.659,551,0.659,552,0.644,553,0.659,554,1.322,555,0.659,556,1.486,557,0.659,558,0.659,559,0.659,560,0.659,561,0.659,562,1.162,563,0.659,564,0.659,565,0.659,566,0.659,567,0.659,568,0.644,569,0.659,570,0.659,571,0.659,572,0.659,573,0.659,574,0.659,575,0.659,576,0.659,577,0.659,578,0.659,579,0.659,580,0.644,581,0.659,582,1.207,583,0.659,584,0.659,585,0.659,586,0.659,587,0.659,588,0.967,589,0.659,590,0.644,591,0.659,592,0.659,593,0.659,594,0.659,595,0.659,596,0.644,597,0.644,598,0.659,599,0.659,600,0.659,601,0.644,602,0.644,603,0.659,604,0.659,605,0.644,606,0.659,607,0.659,608,0.659,609,0.659,610,0.644,611,0.659,612,0.644,613,0.659,614,0.659,615,0.644,616,0.659,617,0.659]],["title/index.html",[7,0.041,1778,3.414,1779,3.414]],["body/index.html",[29,0.009,30,0.436,57,2.119,58,1.476,59,2.176,77,4.638,100,4.388,191,0.006,192,0.007,193,0.006,245,0.842,308,1.291,441,1.586,498,1.334,630,5.521,702,3.36,711,6.926,714,4.746,786,4.388,872,4.207,984,6.326,985,5.895,1047,5.315,1778,5.818,1779,5.818,1780,7.836,1781,6.583,1782,6.583,1783,6.583,1784,8.845,1785,7.836,1786,6.583,1787,6.583,1788,6.583,1789,8.974,1790,8.974,1791,8.974,1792,6.583,1793,6.583,1794,7.836,1795,6.583,1796,6.583,1797,6.583,1798,7.836,1799,6.583,1800,6.583,1801,6.583,1802,6.583,1803,7.836,1804,6.583,1805,6.583,1806,6.583,1807,6.583,1808,6.583,1809,6.583,1810,6.583,1811,6.583,1812,6.583,1813,7.836,1814,6.583,1815,6.583,1816,7.836,1817,7.836,1818,6.583,1819,6.583,1820,6.583,1821,6.583,1822,6.583,1823,6.583]],["title/modules.html",[1824,5.512]],["body/modules.html",[29,0.008,191,0.007,192,0.008,193,0.007,1824,6.533]],["title/overview.html",[1825,5.512]],["body/overview.html",[2,1.579,29,0.008,191,0.007,192,0.008,193,0.007,234,0.615,1825,6.507,1826,7.362,1827,7.362]],["title/miscellaneous/typealiases.html",[1828,3.414,1829,5.521]],["body/miscellaneous/typealiases.html",[6,3.844,7,0.05,12,0.817,25,0.385,29,0.009,31,0.17,33,0.221,45,0.677,64,4.877,66,6.43,81,1.143,154,5.504,184,0.464,191,0.004,192,0.006,193,0.004,195,4.209,197,4.209,198,3.844,199,3.355,281,0.759,282,0.955,286,1.542,287,1.759,288,1.28,289,1.444,290,1.28,291,1.608,292,0.955,293,1.608,294,1.28,295,1.28,296,1.28,298,1.28,299,0.955,300,0.955,301,0.955,302,0.955,303,0.955,304,1.224,305,1.28,306,0.955,307,0.955,308,0.934,309,0.955,310,0.955,320,1.28,321,0.955,322,0.955,323,1.28,324,0.955,325,0.934,326,1.28,327,0.955,328,0.913,333,1.251,334,0.934,335,0.955,336,0.955,337,0.955,338,0.955,339,0.934,340,1.28,341,0.955,342,0.955,343,0.955,344,0.955,362,1.251,371,0.955,372,0.955,373,0.955,374,0.955,375,1.28,376,0.955,377,1.251,378,0.955,379,0.955,380,0.955,381,0.955,382,0.955,383,0.955,384,0.955,385,0.955,386,0.955,387,0.955,388,0.955,389,0.955,390,0.955,391,0.955,392,0.955,393,0.955,394,1.28,395,0.955,396,0.955,397,0.955,398,0.955,399,0.955,400,0.955,401,0.955,405,1.28,406,0.955,407,0.955,408,0.955,409,0.955,426,1.251,428,1.28,429,0.955,430,0.955,431,0.955,432,1.28,439,0.934,440,1.224,444,1.232,445,1.569,446,0.955,447,0.955,448,0.955,449,0.955,450,0.955,451,0.955,452,0.955,453,0.955,454,0.955,455,0.955,456,0.955,457,0.955,458,0.955,459,0.955,460,0.955,461,0.955,462,1.444,463,1.444,470,1.444,471,1.444,488,1.28,489,1.28,500,1.251,501,1.251,502,1.444,503,0.934,504,0.934,505,0.934,506,1.444,507,0.955,508,0.955,509,0.955,510,1.251,511,1.28,512,0.934,513,0.934,523,1.28,524,0.934,525,0.934,533,0.477,536,1.199,546,1.444,562,1.444,619,3.019,620,3.355,623,4.497,631,2.884,632,3.355,633,3.174,636,3.174,638,4.497,682,3.206,684,3.206,726,3.019,868,2.763,885,3.704,938,3.844,939,3.844,944,5.153,1010,3.844,1011,4.209,1025,5.641,1026,3.844,1059,4.497,1060,5.153,1063,4.209,1127,3.019,1151,4.209,1177,5.641,1191,4.209,1192,4.209,1706,4.209,1733,5.641,1828,4.209,1830,4.762,1831,9.513,1832,6.383,1833,4.762,1834,4.762,1835,4.762,1836,6.383,1837,4.762,1838,4.762,1839,4.762,1840,6.383,1841,4.762,1842,4.762,1843,6.383,1844,6.383,1845,4.762,1846,6.383,1847,4.762,1848,6.383,1849,4.762,1850,4.762,1851,4.762,1852,4.762,1853,4.762,1854,4.762,1855,4.762,1856,4.762,1857,4.762,1858,4.762,1859,4.762]]],"invertedIndex":[["",{"_index":29,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"interfaces/AttributeType.html":{},"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/BaseSkillConfig.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"interfaces/CreativeWork.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/DeviceAPIClient.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/ErrorHandlerBuilder.html":{},"interfaces/Factory.html":{},"classes/FallbackIntentFactory.html":{},"interfaces/FlashBriefingContent.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"classes/HandlerFactory-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentHandlerFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/ListManagementAPIClient.html":{},"interfaces/LocalizedAttribute.html":{},"classes/LocalizedAttributesFactory.html":{},"interfaces/MergeObjectType.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"classes/MockAttributeManager.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"interfaces/Props.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/RelevantAudience.html":{},"classes/ReminderAPIClient.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"interfaces/S3SkillConfig.html":{},"classes/SentryErrorHandlerFactory.html":{},"classes/SettingAPIClient.html":{},"interfaces/Skill.html":{},"interfaces/SkillConstants.html":{},"interfaces/SkillHandlers.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"classes/StateManager.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"interfaces/Thing.html":{},"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{},"interfaces/TrashCollectionAlert.html":{},"classes/UserProfileAPIClient.html":{},"interfaces/WeatherAlert.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":141,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{}}}],["09",{"_index":365,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["1",{"_index":194,"title":{"classes/APIClient-1.html":{},"classes/ContentBuilder-1.html":{},"classes/HandlerBuilder-1.html":{},"classes/HandlerFactory-1.html":{},"classes/ParameterFactory-1.html":{},"interfaces/Payload-1.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/ResponseContent-1.html":{}},"body":{"classes/ProductListResponseContentBuilder.html":{}}}],["11",{"_index":354,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["12",{"_index":359,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["14t23:32:00.463z",{"_index":360,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["16t03:00:00.463z",{"_index":366,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["2",{"_index":1273,"title":{"classes/ParameterFactory-2.html":{},"interfaces/Payload-2.html":{},"interfaces/PayloadBuilder-2.html":{}},"body":{}}],["2018",{"_index":353,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["20180916t030000z",{"_index":364,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["20t19:16:31z",{"_index":355,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["3",{"_index":1293,"title":{"classes/ParameterFactory-3.html":{},"interfaces/Payload-3.html":{},"interfaces/PayloadBuilder-3.html":{}},"body":{}}],["4",{"_index":1308,"title":{"classes/ParameterFactory-4.html":{},"interfaces/Payload-4.html":{},"interfaces/PayloadBuilder-4.html":{}},"body":{}}],["46",{"_index":1826,"title":{},"body":{"overview.html":{}}}],["5",{"_index":1328,"title":{"classes/ParameterFactory-5.html":{},"interfaces/Payload-5.html":{},"interfaces/PayloadBuilder-5.html":{}},"body":{}}],["500",{"_index":1554,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["6",{"_index":1350,"title":{"classes/ParameterFactory-6.html":{},"interfaces/Payload-6.html":{},"interfaces/PayloadBuilder-6.html":{}},"body":{}}],["7",{"_index":1365,"title":{"classes/ParameterFactory-7.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder-7.html":{}},"body":{}}],["71",{"_index":1827,"title":{},"body":{"overview.html":{}}}],["8",{"_index":1431,"title":{"interfaces/PayloadBuilder-8.html":{}},"body":{}}],["abstract",{"_index":219,"title":{},"body":{"classes/APIClient-1.html":{}}}],["accept",{"_index":86,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ISPProductClient.html":{}}}],["accepted",{"_index":783,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{}}}],["access",{"_index":1533,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["access_token",{"_index":518,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["accessibility",{"_index":116,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["accesstoken",{"_index":1469,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["account",{"_index":838,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["activated",{"_index":464,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["activated.eventname",{"_index":462,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["activated.payload",{"_index":463,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["activated.payloadbuilder",{"_index":546,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["active",{"_index":1191,"title":{},"body":{"classes/ListManagementAPIClient.html":{},"miscellaneous/typealiases.html":{}}}],["add",{"_index":271,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["adddirective(getbuyproductdirective(product.productid",{"_index":757,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["adderrorhandlers",{"_index":1677,"title":{},"body":{"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{}}}],["adderrorhandlers(...errorhandlers",{"_index":1682,"title":{},"body":{"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{}}}],["adderrorhandlers(sentrydefaulterrorhandler",{"_index":987,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["addgarbagetype",{"_index":1359,"title":{},"body":{"classes/ParameterFactory-6.html":{},"interfaces/PayloadBuilder-1.html":{}}}],["addgarbagetype(garbagetype",{"_index":550,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["additional",{"_index":980,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["addlocale",{"_index":1742,"title":{},"body":{"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{}}}],["addlocale(locale",{"_index":1746,"title":{},"body":{"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{}}}],["addlocalestrings",{"_index":1743,"title":{},"body":{"interfaces/TranslationBuilder.html":{}}}],["addlocalestrings(locale",{"_index":1748,"title":{},"body":{"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{}}}],["addrequesthandlers",{"_index":1678,"title":{},"body":{"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{}}}],["addrequesthandlers(...requesthandlers",{"_index":1684,"title":{},"body":{"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{}}}],["addrequestinterceptors",{"_index":1679,"title":{},"body":{"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{}}}],["addrequestinterceptors(...requestinterceptors",{"_index":1686,"title":{},"body":{"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{}}}],["addrequestinterceptors(seterrortrackerinterceptor",{"_index":988,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["addresponseinterceptors",{"_index":1680,"title":{},"body":{"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{}}}],["addresponseinterceptors(...responseinterceptors",{"_index":1692,"title":{},"body":{"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{}}}],["addresponseinterceptors(responseinterceptors",{"_index":1688,"title":{},"body":{"interfaces/SkillHandlersBuilder.html":{}}}],["again",{"_index":744,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"interfaces/ErrorHandlerBuilder.html":{},"classes/ISPContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/ResponseContent-1.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["air",{"_index":307,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["album",{"_index":301,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["alert",{"_index":466,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-6.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["alert.collectiondayofweek",{"_index":1363,"title":{},"body":{"classes/ParameterFactory-6.html":{}}}],["alert.garbagetypes",{"_index":1358,"title":{},"body":{"classes/ParameterFactory-6.html":{}}}],["alert.garbagetypes.length",{"_index":1360,"title":{},"body":{"classes/ParameterFactory-6.html":{}}}],["alert.garbagetypes.push(garbagetype",{"_index":1361,"title":{},"body":{"classes/ParameterFactory-6.html":{}}}],["alertid",{"_index":1642,"title":{},"body":{"classes/ReminderAPIClient.html":{}}}],["alertitem",{"_index":1356,"title":{},"body":{"classes/ParameterFactory-6.html":{}}}],["alerttype",{"_index":412,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["alexa",{"_index":844,"title":{},"body":{"classes/ContentBuilder-1.html":{},"interfaces/ErrorHandlerBuilder.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["alexa.skillbuilders.standard",{"_index":986,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["alexa::proactive_events",{"_index":521,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["alexaskillevent/.test(requestenvelope.request.type",{"_index":1215,"title":{},"body":{"interfaces/MergeObjectType.html":{}}}],["aliases",{"_index":1830,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":129,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["already",{"_index":862,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["alternative",{"_index":1806,"title":{},"body":{"index.html":{}}}],["amazon.mediacontent.available",{"_index":491,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["amazon.messagealert.activated",{"_index":477,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-2.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["amazon.occasion.updated",{"_index":484,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-1.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["amazon.orderstatus.updated",{"_index":481,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-3.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["amazon.socialgameinvite.available",{"_index":495,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-4.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["amazon.sportsevent.updated",{"_index":472,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-5.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["amazon.trashcollectionalert.activated",{"_index":465,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-6.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["amazon.weatheralert.activated",{"_index":468,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-7.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["api",{"_index":142,"title":{},"body":{"classes/APIClient.html":{},"interfaces/FlashBriefingContent.html":{},"classes/ISPProductClient.html":{}}}],["apiclient",{"_index":1,"title":{"classes/APIClient.html":{},"classes/APIClient-1.html":{}},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ISPProductClient.html":{}}}],["apiclient:10",{"_index":1109,"title":{},"body":{"classes/ISPProductClient.html":{}}}],["apiclient:11",{"_index":1107,"title":{},"body":{"classes/ISPProductClient.html":{}}}],["apiclient:12",{"_index":1108,"title":{},"body":{"classes/ISPProductClient.html":{}}}],["apiclient:19",{"_index":1132,"title":{},"body":{"classes/ISPProductClient.html":{}}}],["apiclient:24",{"_index":1129,"title":{},"body":{"classes/ISPProductClient.html":{}}}],["apiclient:36",{"_index":1130,"title":{},"body":{"classes/ISPProductClient.html":{}}}],["apiclient:43",{"_index":1133,"title":{},"body":{"classes/ISPProductClient.html":{}}}],["apiclient:46",{"_index":1131,"title":{},"body":{"classes/ISPProductClient.html":{}}}],["apiclient:9",{"_index":1110,"title":{},"body":{"classes/ISPProductClient.html":{}}}],["apiendpoint",{"_index":510,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["apiendpont",{"_index":515,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["apiregion",{"_index":511,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["apiurl",{"_index":502,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["app",{"_index":845,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["application",{"_index":842,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["application/json",{"_index":85,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ISPProductClient.html":{},"classes/ProactiveClient.html":{}}}],["application/x",{"_index":1523,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["appointment",{"_index":344,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["appointment_request",{"_index":343,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["artskydj",{"_index":1822,"title":{},"body":{"index.html":{}}}],["ask",{"_index":57,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"interfaces/AttributeType.html":{},"interfaces/BaseSkillConfig.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/DeviceAPIClient.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/ErrorHandlerBuilder.html":{},"classes/FallbackIntentFactory.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/IntentHandlerBuilder.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/ListManagementAPIClient.html":{},"interfaces/MergeObjectType.html":{},"classes/MockAttributeManager.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/ReminderAPIClient.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"interfaces/S3SkillConfig.html":{},"classes/SentryErrorHandlerFactory.html":{},"classes/SettingAPIClient.html":{},"interfaces/SkillConstants.html":{},"interfaces/SkillHandlers.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{},"classes/StateManager.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"classes/UserProfileAPIClient.html":{},"index.html":{}}}],["async",{"_index":17,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/DeviceAPIClient.html":{},"classes/ISPProductClient.html":{},"classes/ListManagementAPIClient.html":{},"classes/ProactiveClient.html":{},"classes/ReminderAPIClient.html":{},"classes/SettingAPIClient.html":{},"interfaces/SkillConstants.html":{},"classes/UserProfileAPIClient.html":{}}}],["att",{"_index":1736,"title":{},"body":{"classes/StateManager.html":{}}}],["att.state",{"_index":1737,"title":{},"body":{"classes/StateManager.html":{}}}],["attribute",{"_index":254,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["attributemanager",{"_index":110,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{},"classes/StateManager.html":{}}}],["attributemanager.getsessionattributes",{"_index":1735,"title":{},"body":{"classes/StateManager.html":{}}}],["attributemanager.setsessionattributes",{"_index":1734,"title":{},"body":{"classes/StateManager.html":{}}}],["attributes",{"_index":125,"title":{},"body":{"classes/APIClient.html":{},"interfaces/AttributeType.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/ISPProductClient.html":{},"classes/MockAttributeManager.html":{}}}],["attributesmanager",{"_index":56,"title":{},"body":{"classes/APIClient.html":{},"interfaces/AttributeType.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/ISPProductClient.html":{},"classes/MockAttributeManager.html":{},"interfaces/SkillConstants.html":{},"classes/StateManager.html":{}}}],["attributesmanager.getrequestattributes",{"_index":799,"title":{},"body":{"classes/ConstantsInterceptorFactory.html":{},"interfaces/SkillConstants.html":{}}}],["attributesmanager.setrequestattributes",{"_index":800,"title":{},"body":{"classes/ConstantsInterceptorFactory.html":{},"interfaces/SkillConstants.html":{}}}],["attributetype",{"_index":233,"title":{"interfaces/AttributeType.html":{}},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["atts",{"_index":145,"title":{},"body":{"classes/APIClient.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/ISPProductClient.html":{},"interfaces/SkillConstants.html":{}}}],["au",{"_index":288,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["audiencepayload",{"_index":280,"title":{"interfaces/AudiencePayload.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["audiencetype",{"_index":523,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["authorization",{"_index":88,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ISPProductClient.html":{},"classes/ProactiveClient.html":{}}}],["authresponse",{"_index":517,"title":{"interfaces/AuthResponse.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["authresult",{"_index":1545,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["authresult.access_token",{"_index":1547,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["availability",{"_index":313,"title":{"interfaces/Availability.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["availability.method",{"_index":1247,"title":{},"body":{"classes/ParameterFactory.html":{}}}],["availability.provider",{"_index":1250,"title":{},"body":{"classes/ParameterFactory.html":{}}}],["availability.starttime",{"_index":1244,"title":{},"body":{"classes/ParameterFactory.html":{}}}],["available",{"_index":490,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["available.eventname",{"_index":488,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["available.payload",{"_index":489,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["avaliable",{"_index":132,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["await",{"_index":104,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/ISPProductClient.html":{},"classes/ListManagementAPIClient.html":{},"classes/ProactiveClient.html":{}}}],["awayteamstatistic",{"_index":421,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-5.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["awayteamstatistic.score",{"_index":1345,"title":{},"body":{"classes/ParameterFactory-5.html":{}}}],["awayteamstatistic.team.name",{"_index":1346,"title":{},"body":{"classes/ParameterFactory-5.html":{}}}],["aws",{"_index":909,"title":{},"body":{"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{}}}],["axios",{"_index":52,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ISPProductClient.html":{},"classes/ProactiveClient.html":{}}}],["axios(param",{"_index":105,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ISPProductClient.html":{},"classes/ProactiveClient.html":{}}}],["axiosrequestconfig",{"_index":42,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ISPProductClient.html":{},"classes/ProactiveClient.html":{}}}],["base",{"_index":676,"title":{},"body":{"classes/BuyContentBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/HandlerFactory-1.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentHandlerFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{}}}],["baseskillconfig",{"_index":618,"title":{"interfaces/BaseSkillConfig.html":{}},"body":{"interfaces/BaseSkillConfig.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/S3SkillConfig.html":{},"interfaces/SkillHandlers.html":{}}}],["basic",{"_index":952,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["bearer",{"_index":89,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/ISPProductClient.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["beforeeach",{"_index":263,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["beta",{"_index":1756,"title":{},"body":{"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{}}}],["body",{"_index":216,"title":{},"body":{"classes/APIClient-1.html":{},"classes/ProactiveClient.html":{}}}],["book",{"_index":299,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["bookingtime",{"_index":352,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["boolean",{"_index":25,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/BaseSkillConfig.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"interfaces/CreativeWork.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/Factory.html":{},"classes/FallbackIntentFactory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/HandlerBuilder.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MergeObjectType.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"interfaces/Props.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"interfaces/S3SkillConfig.html":{},"interfaces/Skill.html":{},"interfaces/SkillHandlers.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"classes/StateManager.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["bootstraptest",{"_index":1814,"title":{},"body":{"index.html":{}}}],["bottles",{"_index":378,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["briefing",{"_index":1017,"title":{},"body":{"interfaces/FlashBriefingContent.html":{}}}],["broker",{"_index":356,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-1.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["bucketname",{"_index":634,"title":{},"body":{"interfaces/BaseSkillConfig.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/S3SkillConfig.html":{},"interfaces/SkillHandlers.html":{}}}],["bucketpathprefix",{"_index":635,"title":{},"body":{"interfaces/BaseSkillConfig.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/S3SkillConfig.html":{},"interfaces/SkillHandlers.html":{}}}],["builder",{"_index":1047,"title":{},"body":{"classes/HandlerBuilder.html":{},"classes/HandlerFactory.html":{},"index.html":{}}}],["bulky",{"_index":379,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["burnable",{"_index":380,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["buy",{"_index":726,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"interfaces/ResponseContent-1.html":{},"miscellaneous/typealiases.html":{}}}],["buycontentbuilder",{"_index":644,"title":{"classes/BuyContentBuilder.html":{}},"body":{"classes/BuyContentBuilder.html":{}}}],["buyintent",{"_index":723,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["buyintenthandler",{"_index":721,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["buyintenthandlerbuilder",{"_index":679,"title":{"classes/BuyIntentHandlerBuilder.html":{}},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["buyresponsecontentbuilder",{"_index":758,"title":{"classes/BuyResponseContentBuilder.html":{}},"body":{"classes/BuyResponseContentBuilder.html":{}}}],["bye",{"_index":1709,"title":{},"body":{"classes/StateManager.html":{}}}],["ca",{"_index":289,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["cache.productid",{"_index":156,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["cachedproducts",{"_index":147,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["cachedproducts.find(cache",{"_index":155,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["cachedproducts.length",{"_index":149,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["cacheusage",{"_index":111,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["can't",{"_index":852,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["cancel",{"_index":1855,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["canceled",{"_index":335,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["canhandle",{"_index":682,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"interfaces/ErrorHandlerBuilder.html":{},"classes/FallbackIntentFactory.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"classes/IntentHandlerBuilder.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"interfaces/MergeObjectType.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"miscellaneous/typealiases.html":{}}}],["canhandle(handlerinput",{"_index":1718,"title":{},"body":{"classes/StateManager.html":{}}}],["canhandlefilter",{"_index":683,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"classes/HandlerFactory.html":{},"classes/IntentHandlerBuilder.html":{},"classes/LaunchRequestrBuilder.html":{}}}],["canhandleresponse",{"_index":1059,"title":{},"body":{"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/IntentHandlerBuilder.html":{},"classes/LaunchRequestrBuilder.html":{},"miscellaneous/typealiases.html":{}}}],["cans",{"_index":381,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["case",{"_index":1496,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["catch",{"_index":747,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ProactiveClient.html":{},"interfaces/ResponseContent-1.html":{}}}],["cd",{"_index":1812,"title":{},"body":{"index.html":{}}}],["challenge",{"_index":324,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["check",{"_index":131,"title":{},"body":{"classes/APIClient.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"interfaces/ResponseContent-1.html":{}}}],["class",{"_index":0,"title":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"interfaces/Class.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/DBClient.html":{},"classes/DeviceAPIClient.html":{},"classes/FallbackIntentFactory.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"classes/HandlerFactory.html":{},"classes/HandlerFactory-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentHandlerFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/ListManagementAPIClient.html":{},"classes/LocalizedAttributesFactory.html":{},"classes/MockAttributeManager.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"classes/ProactiveClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"classes/ReminderAPIClient.html":{},"classes/RequestHandlerFactory.html":{},"classes/SentryErrorHandlerFactory.html":{},"classes/SettingAPIClient.html":{},"classes/SkillHandlersFactory.html":{},"classes/StateManager.html":{},"classes/TranslationFactory.html":{},"classes/UserProfileAPIClient.html":{}},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"interfaces/AttributeType.html":{},"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"interfaces/CreativeWork.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/DeviceAPIClient.html":{},"interfaces/ErrorHandlerBuilder.html":{},"interfaces/Factory.html":{},"classes/FallbackIntentFactory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"classes/HandlerFactory.html":{},"classes/HandlerFactory-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentHandlerFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/ListManagementAPIClient.html":{},"interfaces/LocalizedAttribute.html":{},"classes/LocalizedAttributesFactory.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"classes/MockAttributeManager.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"interfaces/Props.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/RelevantAudience.html":{},"classes/ReminderAPIClient.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"classes/SentryErrorHandlerFactory.html":{},"classes/SettingAPIClient.html":{},"interfaces/Skill.html":{},"interfaces/SkillConstants.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"classes/StateManager.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"interfaces/Thing.html":{},"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{},"interfaces/TrashCollectionAlert.html":{},"classes/UserProfileAPIClient.html":{},"interfaces/WeatherAlert.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/DBClient.html":{},"classes/DeviceAPIClient.html":{},"classes/FallbackIntentFactory.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"classes/HandlerFactory.html":{},"classes/HandlerFactory-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentHandlerFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/ListManagementAPIClient.html":{},"classes/LocalizedAttributesFactory.html":{},"classes/MockAttributeManager.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"classes/ProactiveClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"classes/ReminderAPIClient.html":{},"classes/RequestHandlerFactory.html":{},"classes/SentryErrorHandlerFactory.html":{},"classes/SettingAPIClient.html":{},"classes/SkillHandlersFactory.html":{},"classes/StateManager.html":{},"classes/TranslationFactory.html":{},"classes/UserProfileAPIClient.html":{},"overview.html":{}}}],["client",{"_index":498,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"classes/BuyIntentHandlerBuilder.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/DeviceAPIClient.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/ListManagementAPIClient.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"classes/ReminderAPIClient.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"classes/SettingAPIClient.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"classes/UserProfileAPIClient.html":{},"interfaces/WeatherAlert.html":{},"index.html":{}}}],["client.apiendpoint",{"_index":1457,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["client.audiencepayload",{"_index":1485,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["client.audiencetype",{"_index":1484,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["client.authresponse",{"_index":1504,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["client.clientconfig",{"_index":1455,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["client.clientid",{"_index":1459,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["client.clientsecret",{"_index":1461,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["client.devapiurl",{"_index":1501,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["client.listproducts",{"_index":734,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["client.relevantaudience",{"_index":1541,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["client.requstbody",{"_index":1465,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["client_id=${this.clientid",{"_index":1529,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["client_secret=${this.clientsecret",{"_index":1530,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["clientconfig",{"_index":514,"title":{"interfaces/ClientConfig.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["clientid",{"_index":500,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["clientsecret",{"_index":501,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["clone",{"_index":1809,"title":{},"body":{"index.html":{}}}],["clonehandler",{"_index":1210,"title":{},"body":{"interfaces/MergeObjectType.html":{}}}],["clonetarget",{"_index":1211,"title":{},"body":{"interfaces/MergeObjectType.html":{}}}],["clothing",{"_index":382,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["collectiondayofweek",{"_index":404,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-6.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["completed",{"_index":1192,"title":{},"body":{"classes/ListManagementAPIClient.html":{},"miscellaneous/typealiases.html":{}}}],["compostable",{"_index":383,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["condition",{"_index":176,"title":{},"body":{"classes/APIClient.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"classes/ISPProductClient.html":{},"classes/IntentHandlerBuilder.html":{},"classes/LaunchRequestrBuilder.html":{}}}],["condition.productid",{"_index":182,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["condition.productname",{"_index":180,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["condition.userinputno",{"_index":181,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["conditions",{"_index":178,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["conf",{"_index":223,"title":{},"body":{"classes/APIClient-1.html":{}}}],["conf.data",{"_index":225,"title":{},"body":{"classes/APIClient-1.html":{}}}],["config",{"_index":897,"title":{},"body":{"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/ProactiveClient.html":{}}}],["config.apiendpont",{"_index":1493,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["config.apiregion",{"_index":1495,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["config.client",{"_index":912,"title":{},"body":{"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{}}}],["config.clientid",{"_index":1510,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["config.clientsecret",{"_index":1512,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["config.isdebug",{"_index":913,"title":{},"body":{"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{}}}],["config.isproduction",{"_index":1499,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["config.primarykey",{"_index":915,"title":{},"body":{"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{}}}],["confirmationstate",{"_index":345,"title":{"interfaces/ConfirmationState.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-1.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["confirmationstate.confirmationstatus",{"_index":1261,"title":{},"body":{"classes/ParameterFactory-1.html":{}}}],["confirmationstatus",{"_index":333,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-1.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["confirmed",{"_index":334,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-1.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["connection",{"_index":748,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["console.log('[get",{"_index":99,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["console.log('[request",{"_index":227,"title":{},"body":{"classes/APIClient-1.html":{}}}],["console.log('[response",{"_index":228,"title":{},"body":{"classes/APIClient-1.html":{}}}],["console.log('dbclient.get",{"_index":918,"title":{},"body":{"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{}}}],["console.log('dbclient.put",{"_index":921,"title":{},"body":{"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{}}}],["const",{"_index":76,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"interfaces/AttributeType.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"interfaces/ErrorHandlerBuilder.html":{},"classes/FallbackIntentFactory.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerFactory.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LocalizedAttributesFactory.html":{},"interfaces/MergeObjectType.html":{},"classes/MockAttributeManager.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"classes/ProactiveClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/SkillConstants.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{},"classes/StateManager.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{}}}],["constants",{"_index":621,"title":{},"body":{"interfaces/BaseSkillConfig.html":{},"classes/ConstantsInterceptorFactory.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/S3SkillConfig.html":{},"interfaces/SkillConstants.html":{},"interfaces/SkillHandlers.html":{}}}],["constantsinterceptorfactory",{"_index":792,"title":{"classes/ConstantsInterceptorFactory.html":{}},"body":{"classes/ConstantsInterceptorFactory.html":{},"interfaces/SkillConstants.html":{}}}],["constructor",{"_index":22,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/IntentHandlerBuilder.html":{},"classes/ProactiveClient.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{}}}],["constructor(config",{"_index":1454,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["constructor(handlerinput",{"_index":1103,"title":{},"body":{"classes/ISPProductClient.html":{}}}],["constructor(intentname",{"_index":1135,"title":{},"body":{"classes/IntentHandlerBuilder.html":{}}}],["constructor(locale",{"_index":802,"title":{},"body":{"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{}}}],["constructor(requestenvelope",{"_index":23,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{}}}],["constructor(tablename",{"_index":896,"title":{},"body":{"classes/DBClient.html":{}}}],["contact",{"_index":328,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"classes/BuyResponseContentBuilder.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["contemts",{"_index":1015,"title":{},"body":{"interfaces/FlashBriefingContent.html":{}}}],["content",{"_index":84,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/ISPProductClient.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["content.contenttype",{"_index":1242,"title":{},"body":{"classes/ParameterFactory.html":{}}}],["content.name",{"_index":1240,"title":{},"body":{"classes/ParameterFactory.html":{}}}],["contentbuilder",{"_index":646,"title":{"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{}},"body":{"classes/BuyContentBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{}}}],["contentbuilder:10",{"_index":660,"title":{},"body":{"classes/BuyContentBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ISPContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{}}}],["contentbuilder:11",{"_index":658,"title":{},"body":{"classes/BuyContentBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ISPContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{}}}],["contentbuilder:16",{"_index":664,"title":{},"body":{"classes/BuyContentBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ISPContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{}}}],["contentbuilder:19",{"_index":674,"title":{},"body":{"classes/BuyContentBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ISPContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{}}}],["contentbuilder:23",{"_index":672,"title":{},"body":{"classes/BuyContentBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ISPContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{}}}],["contentbuilder:27",{"_index":669,"title":{},"body":{"classes/BuyContentBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ISPContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{}}}],["contentbuilder:35",{"_index":667,"title":{},"body":{"classes/BuyContentBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ISPContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{}}}],["contentbuilder:43",{"_index":663,"title":{},"body":{"classes/BuyContentBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ISPContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{}}}],["contentbuilder:9",{"_index":659,"title":{},"body":{"classes/BuyContentBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ISPContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{}}}],["contentbuilders/generalresponse",{"_index":717,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["contents",{"_index":647,"title":{},"body":{"classes/BuyContentBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{}}}],["contenttype",{"_index":319,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["contributors",{"_index":1820,"title":{},"body":{"index.html":{}}}],["core",{"_index":59,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"interfaces/ErrorHandlerBuilder.html":{},"classes/FallbackIntentFactory.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/MergeObjectType.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/SkillConstants.html":{},"classes/StateManager.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"index.html":{}}}],["count",{"_index":437,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-2.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["create",{"_index":686,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/FallbackIntentFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{}}}],["create(type",{"_index":1655,"title":{},"body":{"classes/RequestHandlerFactory.html":{}}}],["createaxiosrequestobject",{"_index":15,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ISPProductClient.html":{}}}],["createaxiosrequestobject(method",{"_index":206,"title":{},"body":{"classes/APIClient-1.html":{}}}],["createaxiosrequestobject(productid",{"_index":37,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["created",{"_index":338,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["createlist",{"_index":1152,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["createlist(request",{"_index":1164,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["createlistitem",{"_index":1153,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["createlistitem(listid",{"_index":1167,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["createreminder",{"_index":1629,"title":{},"body":{"classes/ReminderAPIClient.html":{}}}],["createreminder(reminderrequest",{"_index":1636,"title":{},"body":{"classes/ReminderAPIClient.html":{}}}],["creativework",{"_index":317,"title":{"interfaces/CreativeWork.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["creator",{"_index":435,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["crushable",{"_index":384,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["custom",{"_index":954,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["customerequestenvelope",{"_index":869,"title":{"interfaces/CustomeRequestEnvelope.html":{}},"body":{"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/FallbackIntentFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{}}}],["customhandlerinput",{"_index":867,"title":{"interfaces/CustomHandlerInput.html":{}},"body":{"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/FallbackIntentFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{}}}],["customrequest",{"_index":877,"title":{},"body":{"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/FallbackIntentFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{}}}],["data",{"_index":103,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ISPProductClient.html":{},"classes/ProactiveClient.html":{}}}],["data.inskillproducts",{"_index":150,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["date",{"_index":582,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-3.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["datetime",{"_index":296,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["dayofweek",{"_index":394,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["days').toisostring",{"_index":1518,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["db",{"_index":247,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["dbclient",{"_index":893,"title":{"classes/DBClient.html":{}},"body":{"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{}}}],["dbconfig",{"_index":898,"title":{"interfaces/DBConfig.html":{}},"body":{"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{}}}],["dbitem",{"_index":907,"title":{"interfaces/DBItem.html":{}},"body":{"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{}}}],["de",{"_index":286,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["declined",{"_index":773,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{}}}],["default",{"_index":190,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/DeviceAPIClient.html":{},"classes/FallbackIntentFactory.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"classes/HandlerFactory.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/IntentHandlerBuilder.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/ListManagementAPIClient.html":{},"classes/LocalizedAttributesFactory.html":{},"classes/MockAttributeManager.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"classes/ProactiveClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"classes/ReminderAPIClient.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"classes/SettingAPIClient.html":{},"interfaces/SkillConstants.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"classes/UserProfileAPIClient.html":{}}}],["defaultstate",{"_index":1733,"title":{},"body":{"classes/StateManager.html":{},"miscellaneous/typealiases.html":{}}}],["defined",{"_index":26,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"interfaces/AttributeType.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/DBClient.html":{},"interfaces/DBItem.html":{},"classes/DeviceAPIClient.html":{},"interfaces/ErrorHandlerBuilder.html":{},"interfaces/Factory.html":{},"classes/FallbackIntentFactory.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"classes/HandlerFactory-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentHandlerFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/ListManagementAPIClient.html":{},"interfaces/LocalizedAttribute.html":{},"classes/LocalizedAttributesFactory.html":{},"classes/MockAttributeManager.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"classes/ProactiveClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"classes/ReminderAPIClient.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"classes/SentryErrorHandlerFactory.html":{},"classes/SettingAPIClient.html":{},"interfaces/SkillConstants.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{},"classes/StateManager.html":{},"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"classes/UserProfileAPIClient.html":{}}}],["delete",{"_index":197,"title":{},"body":{"classes/APIClient-1.html":{},"miscellaneous/typealiases.html":{}}}],["delete(path",{"_index":208,"title":{},"body":{"classes/APIClient-1.html":{}}}],["deletelist",{"_index":1154,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["deletelist(listid",{"_index":1171,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["deletelistitem",{"_index":1155,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["deletelistitem(listid",{"_index":1173,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["deletereminder",{"_index":1630,"title":{},"body":{"classes/ReminderAPIClient.html":{}}}],["deletereminder(alertid",{"_index":1640,"title":{},"body":{"classes/ReminderAPIClient.html":{}}}],["deliverydetails",{"_index":367,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["describe('attributemanager.ts",{"_index":262,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["describe('getsessionattributes",{"_index":276,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["describe('updatesessionattributes",{"_index":264,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["description",{"_index":1012,"title":{},"body":{"interfaces/FlashBriefingContent.html":{},"classes/ISPProductClient.html":{},"classes/SentryErrorHandlerFactory.html":{},"classes/StateManager.html":{}}}],["devapiurl",{"_index":506,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["development",{"_index":1807,"title":{},"body":{"index.html":{}}}],["device",{"_index":837,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["deviceapiclient",{"_index":924,"title":{"classes/DeviceAPIClient.html":{}},"body":{"classes/DeviceAPIClient.html":{}}}],["deviceid",{"_index":932,"title":{},"body":{"classes/DeviceAPIClient.html":{},"classes/SettingAPIClient.html":{}}}],["didn't",{"_index":746,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["directive",{"_index":666,"title":{},"body":{"classes/BuyContentBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{}}}],["directivebuilders",{"_index":718,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["directives",{"_index":670,"title":{},"body":{"classes/BuyContentBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ContentBuilder.html":{},"classes/ISPContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/ResponseContent.html":{}}}],["directives.foreach((directive",{"_index":821,"title":{},"body":{"classes/ContentBuilder.html":{},"interfaces/ResponseContent.html":{}}}],["disable",{"_index":91,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"interfaces/AttributeType.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/ISPProductClient.html":{},"classes/MockAttributeManager.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"classes/ProactiveClient.html":{}}}],["disabledcache",{"_index":128,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["disallow",{"_index":122,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["distributionmethod",{"_index":305,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["documentclient",{"_index":900,"title":{},"body":{"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{}}}],["documentclient.getiteminput",{"_index":917,"title":{},"body":{"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{}}}],["documentclient.putiteminput",{"_index":920,"title":{},"body":{"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{}}}],["don't",{"_index":742,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["drop",{"_index":310,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["dsn",{"_index":949,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["dynamodb",{"_index":631,"title":{},"body":{"interfaces/BaseSkillConfig.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/S3SkillConfig.html":{},"interfaces/SkillHandlers.html":{},"miscellaneous/typealiases.html":{}}}],["dynamodb.documentclient",{"_index":910,"title":{},"body":{"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{}}}],["dynamodbskillconfig",{"_index":636,"title":{"interfaces/DynamoDBSkillConfig.html":{}},"body":{"interfaces/BaseSkillConfig.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/S3SkillConfig.html":{},"interfaces/SkillHandlers.html":{},"miscellaneous/typealiases.html":{}}}],["e",{"_index":443,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"classes/ContentBuilder-1.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/ISPContentBuilder.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/ResponseContent-1.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["e.response",{"_index":1552,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["e.response.data",{"_index":1557,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["e.response.data.message",{"_index":1558,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["e.response.status",{"_index":1560,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["e.response.statustext",{"_index":1562,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["empty",{"_index":134,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["en",{"_index":287,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["enable",{"_index":112,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["enablecache",{"_index":130,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["enabled",{"_index":143,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["endpoint",{"_index":10,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ISPProductClient.html":{}}}],["enjoy",{"_index":1623,"title":{},"body":{"classes/RefundResponseContentBuilder.html":{}}}],["entertimestamp",{"_index":363,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["entitled",{"_index":864,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["episode",{"_index":300,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["err",{"_index":1553,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["err.errorcode",{"_index":1563,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["err.message",{"_index":1559,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["err.statuscode",{"_index":1561,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["error",{"_index":786,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{},"interfaces/ErrorHandlerBuilder.html":{},"classes/ProactiveClient.html":{},"classes/RefundResponseContentBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{},"index.html":{}}}],["error('failed",{"_index":1532,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["error('intentname",{"_index":1078,"title":{},"body":{"classes/HandlerFactory-1.html":{},"classes/IntentHandlerFactory.html":{},"classes/LaunchRequestFactory.html":{}}}],["error('invalid",{"_index":189,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["error('locale",{"_index":1761,"title":{},"body":{"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{}}}],["error('missing",{"_index":1548,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["error('no",{"_index":185,"title":{},"body":{"classes/APIClient.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"interfaces/ResponseContent-1.html":{}}}],["error(`unsupported",{"_index":1035,"title":{},"body":{"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"classes/HandlerFactory.html":{}}}],["error.message",{"_index":970,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["error.stack",{"_index":974,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["errorcode",{"_index":1555,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["errorhandle",{"_index":944,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{},"miscellaneous/typealiases.html":{}}}],["errorhandler",{"_index":627,"title":{},"body":{"interfaces/BaseSkillConfig.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/ErrorHandlerBuilder.html":{},"interfaces/S3SkillConfig.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/SkillHandlers.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{}}}],["errorhandlerbuilder",{"_index":937,"title":{"interfaces/ErrorHandlerBuilder.html":{}},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["errorhandlers",{"_index":643,"title":{},"body":{"interfaces/BaseSkillConfig.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/S3SkillConfig.html":{},"interfaces/SkillHandlers.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{}}}],["es",{"_index":291,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["eslint",{"_index":90,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"interfaces/AttributeType.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/ISPProductClient.html":{},"classes/MockAttributeManager.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"classes/ProactiveClient.html":{}}}],["eslint/explicit",{"_index":114,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["eslint/no",{"_index":95,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"interfaces/AttributeType.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/ISPProductClient.html":{},"classes/MockAttributeManager.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"classes/ProactiveClient.html":{}}}],["eu",{"_index":513,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["event",{"_index":441,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"index.html":{}}}],["event.eventname",{"_index":531,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["event.mediacontent.available.payload",{"_index":1251,"title":{},"body":{"classes/ParameterFactory.html":{}}}],["event.mediacontent.eventname",{"_index":602,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["event.mediacontent.payload",{"_index":607,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["event.messagealert.activated.eventname",{"_index":577,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["event.messagealert.payload",{"_index":578,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["event.occasion.payload",{"_index":598,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["event.occasion.updated.eventname",{"_index":595,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["event.orderstatus.eventname",{"_index":585,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["event.orderstatus.updated.payload",{"_index":586,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["event.payload",{"_index":530,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["event.props",{"_index":539,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-6.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["event.socialgameinvite.available.eventname",{"_index":616,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["event.socialgameinvite.available.payload",{"_index":617,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["event.sportsevent.updated.eventname",{"_index":567,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["event.sportsevent.updated.payload",{"_index":568,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-5.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["event.trashcollectionalert.activated.eventname",{"_index":553,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["event.trashcollectionalert.activated.payload",{"_index":1364,"title":{},"body":{"classes/ParameterFactory-6.html":{}}}],["event.trashcollectionalert.payload",{"_index":555,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["event.weatheralert.activated.eventname",{"_index":560,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["event.weatheralert.activated.payload",{"_index":561,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["event/libs/clients.ts",{"_index":1440,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["event/libs/clients.ts:103",{"_index":1478,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["event/libs/clients.ts:107",{"_index":1486,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["event/libs/clients.ts:115",{"_index":1464,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["event/libs/clients.ts:118",{"_index":1468,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["event/libs/clients.ts:129",{"_index":1470,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["event/libs/clients.ts:36",{"_index":1460,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["event/libs/clients.ts:37",{"_index":1462,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["event/libs/clients.ts:38",{"_index":1458,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["event/libs/clients.ts:40",{"_index":1456,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["event/libs/clients.ts:55",{"_index":1466,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["event/libs/clients.ts:58",{"_index":1490,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["event/libs/clients.ts:62",{"_index":1463,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["event/libs/clients.ts:79",{"_index":1482,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["event/libs/clients.ts:83",{"_index":1488,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["event/libs/clients.ts:87",{"_index":1476,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["event/libs/clients.ts:91",{"_index":1472,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["event/libs/clients.ts:95",{"_index":1480,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["event/libs/clients.ts:99",{"_index":1474,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["event/libs/localizedattributes/factory.ts",{"_index":1204,"title":{},"body":{"classes/LocalizedAttributesFactory.html":{}}}],["event/libs/localizedattributes/factory.ts:7",{"_index":1205,"title":{},"body":{"classes/LocalizedAttributesFactory.html":{}}}],["event/libs/mediacontent/available/payloadfactory.ts",{"_index":1231,"title":{},"body":{"classes/ParameterFactory.html":{}}}],["event/libs/mediacontent/available/payloadfactory.ts:17",{"_index":1232,"title":{},"body":{"classes/ParameterFactory.html":{}}}],["event/libs/messagealert/activated/payloadfactory.ts",{"_index":1274,"title":{},"body":{"classes/ParameterFactory-2.html":{}}}],["event/libs/messagealert/activated/payloadfactory.ts:14",{"_index":1275,"title":{},"body":{"classes/ParameterFactory-2.html":{}}}],["event/libs/model.ts",{"_index":282,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["event/libs/model.ts:113",{"_index":1202,"title":{},"body":{"interfaces/LocalizedAttribute.html":{}}}],["event/libs/model.ts:264",{"_index":1376,"title":{},"body":{"interfaces/PayloadBuilder.html":{}}}],["event/libs/model.ts:265",{"_index":1377,"title":{},"body":{"interfaces/PayloadBuilder.html":{}}}],["event/libs/model.ts:269",{"_index":1007,"title":{},"body":{"interfaces/Factory.html":{}}}],["event/libs/model.ts:270",{"_index":1006,"title":{},"body":{"interfaces/Factory.html":{}}}],["event/libs/model.ts:277",{"_index":1382,"title":{},"body":{"interfaces/PayloadBuilder-1.html":{}}}],["event/libs/model.ts:278",{"_index":1383,"title":{},"body":{"interfaces/PayloadBuilder-1.html":{}}}],["event/libs/model.ts:279",{"_index":1378,"title":{},"body":{"interfaces/PayloadBuilder-1.html":{}}}],["event/libs/model.ts:280",{"_index":1384,"title":{},"body":{"interfaces/PayloadBuilder-1.html":{}}}],["event/libs/model.ts:281",{"_index":1379,"title":{},"body":{"interfaces/PayloadBuilder-1.html":{}}}],["event/libs/model.ts:282",{"_index":1381,"title":{},"body":{"interfaces/PayloadBuilder-1.html":{}}}],["event/libs/model.ts:283",{"_index":1380,"title":{},"body":{"interfaces/PayloadBuilder-1.html":{}}}],["event/libs/model.ts:291",{"_index":1388,"title":{},"body":{"interfaces/PayloadBuilder-2.html":{}}}],["event/libs/model.ts:292",{"_index":1389,"title":{},"body":{"interfaces/PayloadBuilder-2.html":{}}}],["event/libs/model.ts:293",{"_index":1385,"title":{},"body":{"interfaces/PayloadBuilder-2.html":{}}}],["event/libs/model.ts:294",{"_index":1386,"title":{},"body":{"interfaces/PayloadBuilder-2.html":{}}}],["event/libs/model.ts:295",{"_index":1387,"title":{},"body":{"interfaces/PayloadBuilder-2.html":{}}}],["event/libs/model.ts:303",{"_index":1396,"title":{},"body":{"interfaces/PayloadBuilder-3.html":{}}}],["event/libs/model.ts:304",{"_index":1394,"title":{},"body":{"interfaces/PayloadBuilder-3.html":{}}}],["event/libs/model.ts:305",{"_index":1395,"title":{},"body":{"interfaces/PayloadBuilder-3.html":{}}}],["event/libs/model.ts:306",{"_index":1393,"title":{},"body":{"interfaces/PayloadBuilder-3.html":{}}}],["event/libs/model.ts:307",{"_index":1390,"title":{},"body":{"interfaces/PayloadBuilder-3.html":{}}}],["event/libs/model.ts:308",{"_index":1391,"title":{},"body":{"interfaces/PayloadBuilder-3.html":{}}}],["event/libs/model.ts:309",{"_index":1392,"title":{},"body":{"interfaces/PayloadBuilder-3.html":{}}}],["event/libs/model.ts:317",{"_index":1401,"title":{},"body":{"interfaces/PayloadBuilder-4.html":{}}}],["event/libs/model.ts:318",{"_index":1400,"title":{},"body":{"interfaces/PayloadBuilder-4.html":{}}}],["event/libs/model.ts:319",{"_index":1404,"title":{},"body":{"interfaces/PayloadBuilder-4.html":{}}}],["event/libs/model.ts:320",{"_index":1402,"title":{},"body":{"interfaces/PayloadBuilder-4.html":{}}}],["event/libs/model.ts:321",{"_index":1403,"title":{},"body":{"interfaces/PayloadBuilder-4.html":{}}}],["event/libs/model.ts:322",{"_index":1397,"title":{},"body":{"interfaces/PayloadBuilder-4.html":{}}}],["event/libs/model.ts:323",{"_index":1398,"title":{},"body":{"interfaces/PayloadBuilder-4.html":{}}}],["event/libs/model.ts:324",{"_index":1399,"title":{},"body":{"interfaces/PayloadBuilder-4.html":{}}}],["event/libs/model.ts:332",{"_index":1410,"title":{},"body":{"interfaces/PayloadBuilder-5.html":{}}}],["event/libs/model.ts:333",{"_index":1408,"title":{},"body":{"interfaces/PayloadBuilder-5.html":{}}}],["event/libs/model.ts:334",{"_index":1409,"title":{},"body":{"interfaces/PayloadBuilder-5.html":{}}}],["event/libs/model.ts:335",{"_index":1411,"title":{},"body":{"interfaces/PayloadBuilder-5.html":{}}}],["event/libs/model.ts:336",{"_index":1405,"title":{},"body":{"interfaces/PayloadBuilder-5.html":{}}}],["event/libs/model.ts:337",{"_index":1407,"title":{},"body":{"interfaces/PayloadBuilder-5.html":{}}}],["event/libs/model.ts:338",{"_index":1406,"title":{},"body":{"interfaces/PayloadBuilder-5.html":{}}}],["event/libs/model.ts:346",{"_index":1422,"title":{},"body":{"interfaces/PayloadBuilder-6.html":{}}}],["event/libs/model.ts:347",{"_index":1419,"title":{},"body":{"interfaces/PayloadBuilder-6.html":{}}}],["event/libs/model.ts:348",{"_index":1421,"title":{},"body":{"interfaces/PayloadBuilder-6.html":{}}}],["event/libs/model.ts:349",{"_index":1420,"title":{},"body":{"interfaces/PayloadBuilder-6.html":{}}}],["event/libs/model.ts:350",{"_index":1417,"title":{},"body":{"interfaces/PayloadBuilder-6.html":{}}}],["event/libs/model.ts:351",{"_index":1418,"title":{},"body":{"interfaces/PayloadBuilder-6.html":{}}}],["event/libs/model.ts:352",{"_index":1414,"title":{},"body":{"interfaces/PayloadBuilder-6.html":{}}}],["event/libs/model.ts:353",{"_index":1412,"title":{},"body":{"interfaces/PayloadBuilder-6.html":{}}}],["event/libs/model.ts:354",{"_index":1413,"title":{},"body":{"interfaces/PayloadBuilder-6.html":{}}}],["event/libs/model.ts:355",{"_index":1416,"title":{},"body":{"interfaces/PayloadBuilder-6.html":{}}}],["event/libs/model.ts:356",{"_index":1415,"title":{},"body":{"interfaces/PayloadBuilder-6.html":{}}}],["event/libs/model.ts:363",{"_index":1426,"title":{},"body":{"interfaces/PayloadBuilder-7.html":{}}}],["event/libs/model.ts:364",{"_index":1428,"title":{},"body":{"interfaces/PayloadBuilder-7.html":{}}}],["event/libs/model.ts:365",{"_index":1423,"title":{},"body":{"interfaces/PayloadBuilder-7.html":{}}}],["event/libs/model.ts:366",{"_index":1430,"title":{},"body":{"interfaces/PayloadBuilder-7.html":{}}}],["event/libs/model.ts:367",{"_index":1427,"title":{},"body":{"interfaces/PayloadBuilder-7.html":{}}}],["event/libs/model.ts:368",{"_index":1429,"title":{},"body":{"interfaces/PayloadBuilder-7.html":{}}}],["event/libs/model.ts:369",{"_index":1425,"title":{},"body":{"interfaces/PayloadBuilder-7.html":{}}}],["event/libs/model.ts:370",{"_index":1424,"title":{},"body":{"interfaces/PayloadBuilder-7.html":{}}}],["event/libs/model.ts:377",{"_index":1436,"title":{},"body":{"interfaces/PayloadBuilder-8.html":{}}}],["event/libs/model.ts:378",{"_index":1438,"title":{},"body":{"interfaces/PayloadBuilder-8.html":{}}}],["event/libs/model.ts:379",{"_index":1437,"title":{},"body":{"interfaces/PayloadBuilder-8.html":{}}}],["event/libs/model.ts:380",{"_index":1434,"title":{},"body":{"interfaces/PayloadBuilder-8.html":{}}}],["event/libs/model.ts:381",{"_index":1435,"title":{},"body":{"interfaces/PayloadBuilder-8.html":{}}}],["event/libs/model.ts:382",{"_index":1432,"title":{},"body":{"interfaces/PayloadBuilder-8.html":{}}}],["event/libs/model.ts:383",{"_index":1433,"title":{},"body":{"interfaces/PayloadBuilder-8.html":{}}}],["event/libs/occasion/updated/payloadfactory.ts",{"_index":1255,"title":{},"body":{"classes/ParameterFactory-1.html":{}}}],["event/libs/occasion/updated/payloadfactory.ts:15",{"_index":1256,"title":{},"body":{"classes/ParameterFactory-1.html":{}}}],["event/libs/orderstatus/updated/payloadfactory.ts",{"_index":1294,"title":{},"body":{"classes/ParameterFactory-3.html":{}}}],["event/libs/orderstatus/updated/payloadfactory.ts:15",{"_index":1295,"title":{},"body":{"classes/ParameterFactory-3.html":{}}}],["event/libs/socialgameinvite/available/payloadfactory.ts",{"_index":1309,"title":{},"body":{"classes/ParameterFactory-4.html":{}}}],["event/libs/socialgameinvite/available/payloadfactory.ts:15",{"_index":1310,"title":{},"body":{"classes/ParameterFactory-4.html":{}}}],["event/libs/sportsevent/updated/payloadfactory.ts",{"_index":1329,"title":{},"body":{"classes/ParameterFactory-5.html":{}}}],["event/libs/sportsevent/updated/payloadfactory.ts:12",{"_index":1330,"title":{},"body":{"classes/ParameterFactory-5.html":{}}}],["event/libs/trashcollectionalert/activated/payloadfactory.ts",{"_index":1351,"title":{},"body":{"classes/ParameterFactory-6.html":{}}}],["event/libs/trashcollectionalert/activated/payloadfactory.ts:10",{"_index":1352,"title":{},"body":{"classes/ParameterFactory-6.html":{}}}],["event/libs/weatheralert/activated/payloadfactory.ts",{"_index":1366,"title":{},"body":{"classes/ParameterFactory-7.html":{}}}],["event/libs/weatheralert/activated/payloadfactory.ts:13",{"_index":1367,"title":{},"body":{"classes/ParameterFactory-7.html":{}}}],["eventleague",{"_index":417,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-5.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["eventleague.name",{"_index":1340,"title":{},"body":{"classes/ParameterFactory-5.html":{}}}],["eventname",{"_index":445,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["example",{"_index":951,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{},"classes/StateManager.html":{}}}],["expect(result).toequal",{"_index":279,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["expect(result).toequal('true",{"_index":270,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["expect(result2).toequal('false",{"_index":275,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["expectedarrival",{"_index":358,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-3.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["expires_in",{"_index":519,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["expirytime",{"_index":529,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["explicit",{"_index":96,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"interfaces/AttributeType.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/ISPProductClient.html":{},"classes/MockAttributeManager.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"classes/ProactiveClient.html":{}}}],["export",{"_index":67,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/BaseSkillConfig.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"interfaces/CreativeWork.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/DeviceAPIClient.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/ErrorHandlerBuilder.html":{},"interfaces/Factory.html":{},"classes/FallbackIntentFactory.html":{},"interfaces/FlashBriefingContent.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"classes/HandlerFactory-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentHandlerFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/ListManagementAPIClient.html":{},"interfaces/LocalizedAttribute.html":{},"classes/LocalizedAttributesFactory.html":{},"interfaces/MergeObjectType.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"interfaces/Props.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/RelevantAudience.html":{},"classes/ReminderAPIClient.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"interfaces/S3SkillConfig.html":{},"classes/SentryErrorHandlerFactory.html":{},"classes/SettingAPIClient.html":{},"interfaces/Skill.html":{},"interfaces/SkillConstants.html":{},"interfaces/SkillHandlers.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"classes/StateManager.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"interfaces/Thing.html":{},"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{},"interfaces/TrashCollectionAlert.html":{},"classes/UserProfileAPIClient.html":{},"interfaces/WeatherAlert.html":{}}}],["extends",{"_index":109,"title":{},"body":{"classes/APIClient.html":{},"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/BaseSkillConfig.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"classes/ContentBuilder-1.html":{},"interfaces/CreativeWork.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/DeviceAPIClient.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/Factory.html":{},"classes/FallbackIntentFactory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/IntentHandlerBuilder.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/ListManagementAPIClient.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"interfaces/Props.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/RelevantAudience.html":{},"classes/ReminderAPIClient.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/ResponseContent-1.html":{},"interfaces/S3SkillConfig.html":{},"classes/SettingAPIClient.html":{},"interfaces/Skill.html":{},"interfaces/SkillHandlers.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"classes/UserProfileAPIClient.html":{},"interfaces/WeatherAlert.html":{}}}],["extra",{"_index":971,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["factory",{"_index":540,"title":{"interfaces/Factory.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/ErrorHandlerBuilder.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["fallbackhandler",{"_index":882,"title":{},"body":{"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/FallbackIntentFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{}}}],["fallbackintentfactory",{"_index":889,"title":{"classes/FallbackIntentFactory.html":{}},"body":{"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/FallbackIntentFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{}}}],["false",{"_index":273,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/IntentHandlerBuilder.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/MockAttributeManager.html":{},"classes/ProactiveClient.html":{},"classes/StateManager.html":{}}}],["fe",{"_index":512,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["feed",{"_index":1014,"title":{},"body":{"interfaces/FlashBriefingContent.html":{}}}],["fetch",{"_index":136,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["fetchlists",{"_index":144,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"interfaces/AttributeType.html":{},"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/BaseSkillConfig.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"interfaces/CreativeWork.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/DeviceAPIClient.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/ErrorHandlerBuilder.html":{},"interfaces/Factory.html":{},"classes/FallbackIntentFactory.html":{},"interfaces/FlashBriefingContent.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"classes/HandlerFactory-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentHandlerFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/ListManagementAPIClient.html":{},"interfaces/LocalizedAttribute.html":{},"classes/LocalizedAttributesFactory.html":{},"interfaces/MergeObjectType.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"classes/MockAttributeManager.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"interfaces/Props.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/RelevantAudience.html":{},"classes/ReminderAPIClient.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"interfaces/S3SkillConfig.html":{},"classes/SentryErrorHandlerFactory.html":{},"classes/SettingAPIClient.html":{},"interfaces/Skill.html":{},"interfaces/SkillConstants.html":{},"interfaces/SkillHandlers.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"classes/StateManager.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"interfaces/Thing.html":{},"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{},"interfaces/TrashCollectionAlert.html":{},"classes/UserProfileAPIClient.html":{},"interfaces/WeatherAlert.html":{}}}],["find",{"_index":159,"title":{},"body":{"classes/APIClient.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"interfaces/ResponseContent-1.html":{}}}],["findproductbyid",{"_index":169,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["findproductbyid(productid",{"_index":1114,"title":{},"body":{"classes/ISPProductClient.html":{}}}],["findproductbyname",{"_index":173,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["findproductbyname(productname",{"_index":1116,"title":{},"body":{"classes/ISPProductClient.html":{}}}],["findproductbyno",{"_index":163,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["findproductbyno(userinputno",{"_index":1118,"title":{},"body":{"classes/ISPProductClient.html":{}}}],["first",{"_index":127,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["fixhistory",{"_index":1818,"title":{},"body":{"index.html":{}}}],["fixtures",{"_index":712,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["flagged",{"_index":430,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["flashbrieding",{"_index":1013,"title":{},"body":{"interfaces/FlashBriefingContent.html":{}}}],["flashbriefingcontent",{"_index":1010,"title":{"interfaces/FlashBriefingContent.html":{}},"body":{"interfaces/FlashBriefingContent.html":{},"miscellaneous/typealiases.html":{}}}],["flashbriefings",{"_index":1025,"title":{},"body":{"interfaces/FlashBriefingContent.html":{},"miscellaneous/typealiases.html":{}}}],["form",{"_index":1525,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["found",{"_index":850,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["fr",{"_index":293,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["freshness",{"_index":427,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-2.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["friday",{"_index":399,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["friend",{"_index":327,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["function",{"_index":154,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{},"interfaces/MergeObjectType.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"miscellaneous/typealiases.html":{}}}],["functions",{"_index":1781,"title":{},"body":{"index.html":{}}}],["game",{"_index":304,"title":{"interfaces/Game.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-4.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["game.name",{"_index":1325,"title":{},"body":{"classes/ParameterFactory-4.html":{}}}],["game.offer",{"_index":1323,"title":{},"body":{"classes/ParameterFactory-4.html":{}}}],["gameinvite",{"_index":329,"title":{"interfaces/GameInvite.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["gamestatistic",{"_index":420,"title":{"interfaces/GameStatistic.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["garbagetype",{"_index":377,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-6.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["garbagetypes",{"_index":403,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-6.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["garden_waste",{"_index":385,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["gb",{"_index":290,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["generatehandlerinput",{"_index":261,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["get(id",{"_index":904,"title":{},"body":{"classes/DBClient.html":{}}}],["get(path",{"_index":210,"title":{},"body":{"classes/APIClient-1.html":{}}}],["get(productid",{"_index":43,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["getacceptedpurchaseresult",{"_index":760,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{}}}],["getacceptedrefundresult",{"_index":1609,"title":{},"body":{"classes/RefundResponseContentBuilder.html":{}}}],["getaccesstoken",{"_index":499,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["getapiaccesstoken",{"_index":54,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ISPProductClient.html":{}}}],["getapiaccesstoken(requestenvelope",{"_index":70,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ISPProductClient.html":{}}}],["getapiendpoint",{"_index":1497,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["getapiendpoint(config",{"_index":1514,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["getapiurl",{"_index":1492,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["getapiurl(config",{"_index":1498,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["getavailability",{"_index":1236,"title":{},"body":{"classes/ParameterFactory.html":{}}}],["getavailability(availability",{"_index":1252,"title":{},"body":{"classes/ParameterFactory.html":{}}}],["getbody",{"_index":1441,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["getbuyproductdirective",{"_index":675,"title":{},"body":{"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{}}}],["getbuyproductdirective(productid",{"_index":678,"title":{},"body":{"classes/BuyContentBuilder.html":{}}}],["getcachedproducts",{"_index":1102,"title":{},"body":{"classes/ISPProductClient.html":{}}}],["getcachestatus",{"_index":120,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["getcancelproductdirective",{"_index":1603,"title":{},"body":{"classes/RefundContentBuilder.html":{}}}],["getcancelproductdirective(productid",{"_index":1606,"title":{},"body":{"classes/RefundContentBuilder.html":{}}}],["getcannotbuytheproductresponse",{"_index":859,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["getconfirmationstate",{"_index":596,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-1.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["getconfirmationstatus",{"_index":597,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-1.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["getcountryandpostalcode",{"_index":926,"title":{},"body":{"classes/DeviceAPIClient.html":{}}}],["getcountryandpostalcode(deviceid",{"_index":930,"title":{},"body":{"classes/DeviceAPIClient.html":{}}}],["getcreativework",{"_index":1235,"title":{},"body":{"classes/ParameterFactory.html":{}}}],["getcreativework(content",{"_index":1253,"title":{},"body":{"classes/ParameterFactory.html":{}}}],["getcurrentstate",{"_index":1722,"title":{},"body":{"classes/StateManager.html":{}}}],["getcurrentstate(attributemanager",{"_index":1725,"title":{},"body":{"classes/StateManager.html":{}}}],["getdeclinedpurchaseresult",{"_index":761,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{}}}],["getdeclinedrefundresult",{"_index":1610,"title":{},"body":{"classes/RefundResponseContentBuilder.html":{}}}],["getdistanceunits",{"_index":1660,"title":{},"body":{"classes/SettingAPIClient.html":{}}}],["getdistanceunits(deviceid",{"_index":1665,"title":{},"body":{"classes/SettingAPIClient.html":{}}}],["getemail",{"_index":1766,"title":{},"body":{"classes/UserProfileAPIClient.html":{}}}],["getentitledproductresponse",{"_index":863,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["geteventname",{"_index":537,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["getfailedpurchaseresult",{"_index":762,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{}}}],["getfailedrefundresult",{"_index":1611,"title":{},"body":{"classes/RefundResponseContentBuilder.html":{}}}],["getfulladdress",{"_index":927,"title":{},"body":{"classes/DeviceAPIClient.html":{}}}],["getfulladdress(deviceid",{"_index":933,"title":{},"body":{"classes/DeviceAPIClient.html":{}}}],["getgame",{"_index":1311,"title":{},"body":{"classes/ParameterFactory-4.html":{}}}],["getgame(game",{"_index":1327,"title":{},"body":{"classes/ParameterFactory-4.html":{}}}],["getgameinvite",{"_index":1312,"title":{},"body":{"classes/ParameterFactory-4.html":{}}}],["getgameinvite(invite",{"_index":1326,"title":{},"body":{"classes/ParameterFactory-4.html":{}}}],["getgivenname",{"_index":1767,"title":{},"body":{"classes/UserProfileAPIClient.html":{}}}],["gethandler",{"_index":687,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"interfaces/ErrorHandlerBuilder.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"classes/IntentHandlerBuilder.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["gethandlers",{"_index":1681,"title":{},"body":{"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{}}}],["getlanguagestrings",{"_index":1744,"title":{},"body":{"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{}}}],["getlist",{"_index":1156,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["getlist(listid",{"_index":1176,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["getlistitem",{"_index":1157,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["getlistitem(listid",{"_index":1179,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["getlistproducts",{"_index":1574,"title":{},"body":{"classes/ProductListResponseContentBuilder.html":{}}}],["getlistsmetadata",{"_index":1158,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["getlocale",{"_index":53,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/ISPProductClient.html":{}}}],["getlocale(requestenvelope",{"_index":72,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/ISPProductClient.html":{}}}],["getlocalizedattributes",{"_index":544,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"classes/LocalizedAttributesFactory.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["getmessagegroup",{"_index":1277,"title":{},"body":{"classes/ParameterFactory-2.html":{}}}],["getmessagegroup(group",{"_index":1292,"title":{},"body":{"classes/ParameterFactory-2.html":{}}}],["getmessagestate",{"_index":1276,"title":{},"body":{"classes/ParameterFactory-2.html":{}}}],["getmessagestate(state",{"_index":1291,"title":{},"body":{"classes/ParameterFactory-2.html":{}}}],["getmobilenumber",{"_index":1768,"title":{},"body":{"classes/UserProfileAPIClient.html":{}}}],["getnoentitledproductresponse",{"_index":1596,"title":{},"body":{"classes/RefundContentBuilder.html":{}}}],["getoccasion",{"_index":1257,"title":{},"body":{"classes/ParameterFactory-1.html":{}}}],["getoccasion(occasion",{"_index":1272,"title":{},"body":{"classes/ParameterFactory-1.html":{}}}],["getorderstate",{"_index":1296,"title":{},"body":{"classes/ParameterFactory-3.html":{}}}],["getorderstate(orderstate",{"_index":1307,"title":{},"body":{"classes/ParameterFactory-3.html":{}}}],["getparameter",{"_index":538,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["getpayload",{"_index":554,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["getpersistentattributes",{"_index":251,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["getproduct",{"_index":19,"title":{},"body":{"classes/APIClient.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"interfaces/ResponseContent-1.html":{}}}],["getproduct(handlerinput",{"_index":732,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["getproduct(productid",{"_index":46,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["getproductbyid",{"_index":153,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["getproductbyid(productid",{"_index":1122,"title":{},"body":{"classes/ISPProductClient.html":{}}}],["getproductdetail",{"_index":1566,"title":{},"body":{"classes/ProductDetailResponseContentBuilder.html":{}}}],["getproductlists",{"_index":1575,"title":{},"body":{"classes/ProductListResponseContentBuilder.html":{}}}],["getproductname",{"_index":836,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["getproductnotfoundresponse",{"_index":855,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["getproducts",{"_index":157,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["getproductsnotfoundresponse",{"_index":851,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["getprofilename",{"_index":1159,"title":{},"body":{"classes/ListManagementAPIClient.html":{},"classes/UserProfileAPIClient.html":{}}}],["getreferenceid",{"_index":1442,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["getreminder",{"_index":1631,"title":{},"body":{"classes/ReminderAPIClient.html":{}}}],["getreminder(alertid",{"_index":1643,"title":{},"body":{"classes/ReminderAPIClient.html":{}}}],["getreminders",{"_index":1632,"title":{},"body":{"classes/ReminderAPIClient.html":{}}}],["getrequestattributes",{"_index":248,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["getrequestparams",{"_index":1443,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["getrequestparams(accesstoken",{"_index":1467,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["getresponse",{"_index":650,"title":{},"body":{"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"interfaces/ErrorHandlerBuilder.html":{},"classes/ISPContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["getsessionattribute",{"_index":240,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["getsessionattribute(handlerinput",{"_index":269,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["getsessionattributes",{"_index":241,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["getsessionattributes(handlerinput",{"_index":278,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["getstate",{"_index":1713,"title":{},"body":{"classes/StateManager.html":{}}}],["getstate(attributemanager",{"_index":1716,"title":{},"body":{"classes/StateManager.html":{}}}],["gettempratureunit",{"_index":1661,"title":{},"body":{"classes/SettingAPIClient.html":{}}}],["gettempratureunit(deviceid",{"_index":1667,"title":{},"body":{"classes/SettingAPIClient.html":{}}}],["gettimezone",{"_index":1662,"title":{},"body":{"classes/SettingAPIClient.html":{}}}],["gettimezone(deviceid",{"_index":1669,"title":{},"body":{"classes/SettingAPIClient.html":{}}}],["getting",{"_index":1778,"title":{"index.html":{}},"body":{"index.html":{}}}],["getunsupportedispresponse",{"_index":840,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["geturl",{"_index":20,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ISPProductClient.html":{}}}],["geturl(path",{"_index":212,"title":{},"body":{"classes/APIClient-1.html":{}}}],["geturl(productid",{"_index":48,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["getweatheralert",{"_index":1368,"title":{},"body":{"classes/ParameterFactory-7.html":{}}}],["getweatheralert(weatheralert",{"_index":1375,"title":{},"body":{"classes/ParameterFactory-7.html":{}}}],["git",{"_index":1808,"title":{},"body":{"index.html":{}}}],["git@github.com:hideokamoto/ask",{"_index":1810,"title":{},"body":{"index.html":{}}}],["glass",{"_index":386,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["goal",{"_index":413,"title":{"interfaces/Goal.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["grant_type=client_credentials",{"_index":1528,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["group",{"_index":1280,"title":{},"body":{"classes/ParameterFactory-2.html":{}}}],["group.count",{"_index":1284,"title":{},"body":{"classes/ParameterFactory-2.html":{}}}],["group.creator",{"_index":1282,"title":{},"body":{"classes/ParameterFactory-2.html":{}}}],["group.urgency",{"_index":1286,"title":{},"body":{"classes/ParameterFactory-2.html":{}}}],["handle",{"_index":684,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"interfaces/ErrorHandlerBuilder.html":{},"classes/FallbackIntentFactory.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"classes/IntentHandlerBuilder.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"interfaces/MergeObjectType.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"miscellaneous/typealiases.html":{}}}],["handle(handler",{"_index":880,"title":{},"body":{"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/FallbackIntentFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{}}}],["handle(handlerinput",{"_index":1721,"title":{},"body":{"classes/StateManager.html":{}}}],["handler",{"_index":702,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"interfaces/ErrorHandlerBuilder.html":{},"classes/FallbackIntentFactory.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"classes/IntentHandlerBuilder.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"index.html":{}}}],["handler.canhandle",{"_index":1041,"title":{},"body":{"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"classes/HandlerFactory.html":{}}}],["handler.handle",{"_index":1043,"title":{},"body":{"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"classes/HandlerFactory.html":{}}}],["handlerbuilder",{"_index":681,"title":{"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{}},"body":{"classes/BuyIntentHandlerBuilder.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"classes/HandlerFactory.html":{},"classes/HandlerFactory-1.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentHandlerFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestrBuilder.html":{}}}],["handlerbuilder:11",{"_index":695,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"classes/IntentHandlerBuilder.html":{},"classes/LaunchRequestrBuilder.html":{}}}],["handlerbuilder:14",{"_index":706,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"classes/IntentHandlerBuilder.html":{},"classes/LaunchRequestrBuilder.html":{}}}],["handlerbuilder:18",{"_index":704,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"classes/IntentHandlerBuilder.html":{},"classes/LaunchRequestrBuilder.html":{}}}],["handlerbuilder:22",{"_index":708,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"classes/IntentHandlerBuilder.html":{},"classes/LaunchRequestrBuilder.html":{}}}],["handlerbuilder:27",{"_index":701,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"classes/IntentHandlerBuilder.html":{},"classes/LaunchRequestrBuilder.html":{}}}],["handlerbuilder:32",{"_index":698,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"classes/IntentHandlerBuilder.html":{},"classes/LaunchRequestrBuilder.html":{}}}],["handlerbuilder:7",{"_index":694,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"classes/IntentHandlerBuilder.html":{},"classes/LaunchRequestrBuilder.html":{}}}],["handlerbuilder:8",{"_index":693,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"classes/IntentHandlerBuilder.html":{},"classes/LaunchRequestrBuilder.html":{}}}],["handlerbuilderinterface",{"_index":1049,"title":{"interfaces/HandlerBuilderInterface.html":{}},"body":{"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{}}}],["handleresponse",{"_index":1060,"title":{},"body":{"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"miscellaneous/typealiases.html":{}}}],["handlerfactory",{"_index":1046,"title":{"classes/HandlerFactory.html":{},"classes/HandlerFactory-1.html":{}},"body":{"classes/HandlerBuilder.html":{},"classes/HandlerFactory.html":{},"classes/HandlerFactory-1.html":{},"classes/IntentHandlerFactory.html":{},"classes/LaunchRequestFactory.html":{}}}],["handlerfilter",{"_index":968,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["handlerfilter(handlerinput",{"_index":975,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["handlerinput",{"_index":55,"title":{},"body":{"classes/APIClient.html":{},"interfaces/AttributeType.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/ConstantsInterceptorFactory.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"interfaces/ErrorHandlerBuilder.html":{},"classes/FallbackIntentFactory.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"classes/ISPProductClient.html":{},"classes/IntentHandlerBuilder.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"interfaces/MergeObjectType.html":{},"classes/MockAttributeManager.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/SkillConstants.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{}}}],["handlerinput.attributesmanager",{"_index":119,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["handlerinput.attributesmanager.getpersistentattributes",{"_index":750,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["handlerinput.attributesmanager.getsessionattributes",{"_index":749,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["handlerinput.attributesmanager.savepersistentattributes",{"_index":755,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["handlerinput.attributesmanager.setpersistentattributes(nextattributes",{"_index":754,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["handlerinput.requestenvelope",{"_index":972,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["handlerinput.requestenvelope.request.type",{"_index":1719,"title":{},"body":{"classes/StateManager.html":{}}}],["handlerinput.responsebuilder",{"_index":756,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["handlerinput.responsebuilder.getresponse",{"_index":883,"title":{},"body":{"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/FallbackIntentFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{}}}],["handlers",{"_index":985,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{},"index.html":{}}}],["handlers.errorhandlers",{"_index":1702,"title":{},"body":{"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{}}}],["handlers.errorhandlers.concat(errorhandlers",{"_index":1703,"title":{},"body":{"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{}}}],["handlers.requesthandlers.push(handler",{"_index":1695,"title":{},"body":{"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{}}}],["handlers.requestinterceptors",{"_index":1696,"title":{},"body":{"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{}}}],["handlers.requestinterceptors.push(interceptor",{"_index":1698,"title":{},"body":{"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{}}}],["handlers.responseinterceptors",{"_index":1699,"title":{},"body":{"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{}}}],["handlers.responseinterceptors.push(interceptor",{"_index":1701,"title":{},"body":{"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{}}}],["handlers/libs/index.ts",{"_index":939,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{},"miscellaneous/typealiases.html":{}}}],["handlers/libs/index.ts:10",{"_index":943,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{}}}],["handlers/libs/index.ts:38",{"_index":1657,"title":{},"body":{"classes/SentryErrorHandlerFactory.html":{}}}],["handlers/libs/index.ts:8",{"_index":941,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{}}}],["handlers/libs/index.ts:9",{"_index":945,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{}}}],["handling",{"_index":787,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{}}}],["hasproducts",{"_index":138,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["hazardous",{"_index":387,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["headers",{"_index":83,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ISPProductClient.html":{},"classes/ProactiveClient.html":{}}}],["hello",{"_index":1710,"title":{},"body":{"classes/StateManager.html":{}}}],["help",{"_index":790,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{}}}],["helper",{"_index":1234,"title":{},"body":{"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-7.html":{}}}],["helpers",{"_index":714,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-7.html":{},"index.html":{}}}],["home_appliances",{"_index":388,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["hometeamstatistic",{"_index":419,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-5.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["hometeamstatistic.score",{"_index":1343,"title":{},"body":{"classes/ParameterFactory-5.html":{}}}],["hometeamstatistic.team.name",{"_index":1342,"title":{},"body":{"classes/ParameterFactory-5.html":{}}}],["https://api.amazon.com/auth/o2/token",{"_index":1522,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["https://api.amazonalexa.com/v1/proactiveevents",{"_index":503,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["https://api.amazonalexa.com/v1/proactiveevents/stages/development",{"_index":507,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["https://api.eu.amazonalexa.com/v1/proactiveevents",{"_index":504,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["https://api.eu.amazonalexa.com/v1/proactiveevents/stages/development",{"_index":508,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["https://api.fe.amazonalexa.com/v1/proactiveevents",{"_index":505,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["https://api.fe.amazonalexa.com/v1/proactiveevents/stages/development",{"_index":509,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["https://ask",{"_index":1782,"title":{},"body":{"index.html":{}}}],["https://developer.amazon.com/docs/flashbriefing/flash",{"_index":1016,"title":{},"body":{"interfaces/FlashBriefingContent.html":{}}}],["https://github.com/ask",{"_index":1790,"title":{},"body":{"index.html":{}}}],["https://www.npmjs.com/package/@ask",{"_index":1789,"title":{},"body":{"index.html":{}}}],["hurricane",{"_index":407,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["id",{"_index":152,"title":{},"body":{"classes/APIClient.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/ISPProductClient.html":{},"classes/ProactiveClient.html":{}}}],["implements",{"_index":244,"title":{},"body":{"interfaces/AttributeType.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/FallbackIntentFactory.html":{},"classes/HandlerBuilder-1.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/MockAttributeManager.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{}}}],["import",{"_index":51,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"interfaces/AttributeType.html":{},"interfaces/BaseSkillConfig.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/DeviceAPIClient.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/ErrorHandlerBuilder.html":{},"classes/FallbackIntentFactory.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"classes/HandlerFactory-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentHandlerFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/ListManagementAPIClient.html":{},"classes/LocalizedAttributesFactory.html":{},"interfaces/MergeObjectType.html":{},"classes/MockAttributeManager.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"classes/ProactiveClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"classes/ReminderAPIClient.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"interfaces/S3SkillConfig.html":{},"classes/SentryErrorHandlerFactory.html":{},"classes/SettingAPIClient.html":{},"interfaces/SkillConstants.html":{},"interfaces/SkillHandlers.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{},"classes/StateManager.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"classes/UserProfileAPIClient.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/BaseSkillConfig.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"interfaces/CreativeWork.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"classes/DeviceAPIClient.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/ErrorHandlerBuilder.html":{},"interfaces/Factory.html":{},"classes/FallbackIntentFactory.html":{},"interfaces/FlashBriefingContent.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"classes/HandlerFactory-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentHandlerFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/ListManagementAPIClient.html":{},"interfaces/LocalizedAttribute.html":{},"classes/LocalizedAttributesFactory.html":{},"interfaces/MergeObjectType.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"classes/MockAttributeManager.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"interfaces/Props.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/RelevantAudience.html":{},"classes/ReminderAPIClient.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"interfaces/S3SkillConfig.html":{},"classes/SentryErrorHandlerFactory.html":{},"classes/SettingAPIClient.html":{},"interfaces/Skill.html":{},"interfaces/SkillHandlers.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"classes/StateManager.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"interfaces/Thing.html":{},"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{},"interfaces/TrashCollectionAlert.html":{},"classes/UserProfileAPIClient.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["indexable",{"_index":236,"title":{},"body":{"interfaces/AttributeType.html":{},"interfaces/DBItem.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/SkillConstants.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"interfaces/AttributeType.html":{},"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/BaseSkillConfig.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"interfaces/CreativeWork.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/DeviceAPIClient.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/ErrorHandlerBuilder.html":{},"interfaces/Factory.html":{},"classes/FallbackIntentFactory.html":{},"interfaces/FlashBriefingContent.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"classes/HandlerFactory-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentHandlerFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/ListManagementAPIClient.html":{},"interfaces/LocalizedAttribute.html":{},"classes/LocalizedAttributesFactory.html":{},"interfaces/MergeObjectType.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"classes/MockAttributeManager.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"interfaces/Props.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/RelevantAudience.html":{},"classes/ReminderAPIClient.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"interfaces/S3SkillConfig.html":{},"classes/SentryErrorHandlerFactory.html":{},"classes/SettingAPIClient.html":{},"interfaces/Skill.html":{},"interfaces/SkillConstants.html":{},"interfaces/SkillHandlers.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"classes/StateManager.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"interfaces/Thing.html":{},"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{},"interfaces/TrashCollectionAlert.html":{},"classes/UserProfileAPIClient.html":{},"interfaces/WeatherAlert.html":{}}}],["information",{"_index":982,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["inherited",{"_index":657,"title":{},"body":{"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/IntentHandlerBuilder.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{}}}],["init",{"_index":794,"title":{},"body":{"classes/ConstantsInterceptorFactory.html":{},"interfaces/ErrorHandlerBuilder.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerFactory.html":{},"classes/HandlerFactory-1.html":{},"classes/IntentHandlerFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/LocalizedAttributesFactory.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/SkillConstants.html":{},"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{}}}],["init(constants",{"_index":795,"title":{},"body":{"classes/ConstantsInterceptorFactory.html":{}}}],["init(intentname",{"_index":1141,"title":{},"body":{"classes/IntentHandlerFactory.html":{}}}],["init(type",{"_index":1071,"title":{},"body":{"classes/HandlerFactory-1.html":{}}}],["input",{"_index":874,"title":{},"body":{"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/FallbackIntentFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{}}}],["inskillproduct",{"_index":64,"title":{},"body":{"classes/APIClient.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/ProductListResponseContentBuilder.html":{},"interfaces/ResponseContent-1.html":{},"miscellaneous/typealiases.html":{}}}],["inskillproducts",{"_index":66,"title":{},"body":{"classes/APIClient.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/ISPProductClient.html":{},"miscellaneous/typealiases.html":{}}}],["inskillproductsresponse",{"_index":62,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["intent",{"_index":1075,"title":{},"body":{"classes/HandlerFactory-1.html":{},"classes/IntentHandlerFactory.html":{},"classes/LaunchRequestFactory.html":{}}}],["intenthandlerbuilder",{"_index":1074,"title":{"classes/IntentHandlerBuilder.html":{}},"body":{"classes/HandlerFactory-1.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentHandlerFactory.html":{},"classes/LaunchRequestFactory.html":{}}}],["intenthandlerbuilder(intentname",{"_index":1080,"title":{},"body":{"classes/HandlerFactory-1.html":{},"classes/IntentHandlerFactory.html":{},"classes/LaunchRequestFactory.html":{}}}],["intenthandlerfactory",{"_index":1077,"title":{"classes/IntentHandlerFactory.html":{}},"body":{"classes/HandlerFactory-1.html":{},"classes/IntentHandlerFactory.html":{},"classes/LaunchRequestFactory.html":{}}}],["intenthandlerfactory.init(intentname",{"_index":1082,"title":{},"body":{"classes/HandlerFactory-1.html":{},"classes/IntentHandlerFactory.html":{},"classes/LaunchRequestFactory.html":{}}}],["intentname",{"_index":1072,"title":{},"body":{"classes/HandlerFactory-1.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentHandlerFactory.html":{},"classes/LaunchRequestFactory.html":{}}}],["intentrequest",{"_index":1081,"title":{},"body":{"classes/HandlerFactory-1.html":{},"classes/IntentHandlerFactory.html":{},"classes/LaunchRequestFactory.html":{}}}],["interceptors",{"_index":1801,"title":{},"body":{"index.html":{}}}],["interest",{"_index":780,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{}}}],["interface",{"_index":232,"title":{"interfaces/AttributeType.html":{},"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/BaseSkillConfig.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/ErrorHandlerBuilder.html":{},"interfaces/Factory.html":{},"interfaces/FlashBriefingContent.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/HandlerBuilderInterface.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MergeObjectType.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequestHandlerBuilder.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"interfaces/S3SkillConfig.html":{},"interfaces/Skill.html":{},"interfaces/SkillConstants.html":{},"interfaces/SkillHandlers.html":{},"interfaces/SkillHandlersBuilder.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"interfaces/Thing.html":{},"interfaces/TranslationBuilder.html":{},"interfaces/TranslationObject.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}},"body":{"interfaces/AttributeType.html":{},"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/BaseSkillConfig.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"interfaces/CreativeWork.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/ErrorHandlerBuilder.html":{},"interfaces/Factory.html":{},"classes/FallbackIntentFactory.html":{},"interfaces/FlashBriefingContent.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/ISPContentBuilder.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MergeObjectType.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"classes/MockAttributeManager.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"interfaces/S3SkillConfig.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/Skill.html":{},"interfaces/SkillConstants.html":{},"interfaces/SkillHandlers.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"interfaces/Thing.html":{},"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["interfaces",{"_index":234,"title":{},"body":{"interfaces/AttributeType.html":{},"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/BaseSkillConfig.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/ErrorHandlerBuilder.html":{},"interfaces/Factory.html":{},"classes/FallbackIntentFactory.html":{},"interfaces/FlashBriefingContent.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/LocalizedAttribute.html":{},"classes/LocalizedAttributesFactory.html":{},"interfaces/MergeObjectType.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"interfaces/S3SkillConfig.html":{},"interfaces/Skill.html":{},"interfaces/SkillConstants.html":{},"interfaces/SkillHandlers.html":{},"interfaces/SkillHandlersBuilder.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"interfaces/Thing.html":{},"interfaces/TranslationBuilder.html":{},"interfaces/TranslationObject.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"overview.html":{}}}],["interfaces.localizedattributes.factory",{"_index":1206,"title":{},"body":{"classes/LocalizedAttributesFactory.html":{}}}],["interfaces.mediacontent",{"_index":1237,"title":{},"body":{"classes/ParameterFactory.html":{}}}],["interfaces.messagealert",{"_index":1278,"title":{},"body":{"classes/ParameterFactory-2.html":{}}}],["interfaces.occasion",{"_index":1258,"title":{},"body":{"classes/ParameterFactory-1.html":{}}}],["interfaces.orderstatus",{"_index":1297,"title":{},"body":{"classes/ParameterFactory-3.html":{}}}],["interfaces.payloadbuilder",{"_index":556,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["interfaces.resolvetarget",{"_index":879,"title":{},"body":{"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/FallbackIntentFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{}}}],["interfaces.socialgameinvite",{"_index":1313,"title":{},"body":{"classes/ParameterFactory-4.html":{}}}],["interfaces.sportsevent",{"_index":1331,"title":{},"body":{"classes/ParameterFactory-5.html":{}}}],["interfaces.trashcollectionalert",{"_index":1353,"title":{},"body":{"classes/ParameterFactory-6.html":{}}}],["interfaces.weatheralert",{"_index":1369,"title":{},"body":{"classes/ParameterFactory-7.html":{}}}],["internal",{"_index":1556,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["invite",{"_index":325,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-4.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["invite.inviter.name",{"_index":1316,"title":{},"body":{"classes/ParameterFactory-4.html":{}}}],["invite.invitetype",{"_index":1321,"title":{},"body":{"classes/ParameterFactory-4.html":{}}}],["invite.relationshiptoinvitee",{"_index":1319,"title":{},"body":{"classes/ParameterFactory-4.html":{}}}],["inviter",{"_index":330,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-4.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["invitetype",{"_index":323,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["isauthresponse",{"_index":1502,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["isauthresponse(response.data",{"_index":1531,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["isdebug",{"_index":11,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/ISPProductClient.html":{}}}],["ishellostate",{"_index":1715,"title":{},"body":{"classes/StateManager.html":{}}}],["ishellostate(handlerinput.attributesmanager",{"_index":1720,"title":{},"body":{"classes/StateManager.html":{}}}],["isisp",{"_index":622,"title":{},"body":{"interfaces/BaseSkillConfig.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/S3SkillConfig.html":{},"interfaces/SkillHandlers.html":{}}}],["isjp",{"_index":651,"title":{},"body":{"classes/BuyContentBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{}}}],["islaunchrequest",{"_index":871,"title":{},"body":{"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/FallbackIntentFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{}}}],["islaunchrequest(handlerinput",{"_index":892,"title":{},"body":{"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/FallbackIntentFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{}}}],["ismatchedintent",{"_index":710,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"classes/IntentHandlerBuilder.html":{}}}],["ismatchedintent(handlerinput",{"_index":722,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"classes/IntentHandlerBuilder.html":{}}}],["ismatchedispstate",{"_index":713,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["ismatchedispstate(handlerinput.attributesmanager",{"_index":725,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["ismatchedstate",{"_index":1723,"title":{},"body":{"classes/StateManager.html":{}}}],["ismatchedstate(attributemanager",{"_index":1727,"title":{},"body":{"classes/StateManager.html":{}}}],["isp",{"_index":100,"title":{},"body":{"classes/APIClient.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"interfaces/ResponseContent-1.html":{},"index.html":{}}}],["ispcontentbuilder",{"_index":830,"title":{"classes/ISPContentBuilder.html":{}},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["isplastsessionattribtes",{"_index":753,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["ispproductclient",{"_index":108,"title":{"classes/ISPProductClient.html":{}},"body":{"classes/APIClient.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/ISPProductClient.html":{}}}],["ispproductclient(handlerinput",{"_index":733,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["isproduction",{"_index":516,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["ispstate",{"_index":1840,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["isskillevent",{"_index":1214,"title":{},"body":{"interfaces/MergeObjectType.html":{}}}],["isyesintent",{"_index":709,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["isyesintent(handlerinput",{"_index":724,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["it('should",{"_index":265,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["item",{"_index":126,"title":{},"body":{"classes/APIClient.html":{},"classes/ContentBuilder-1.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/ProductListResponseContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["itemid",{"_index":1174,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["j",{"_index":102,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/ISPProductClient.html":{}}}],["ja",{"_index":294,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["ja/.test(locale",{"_index":738,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["ja/.test(this.locale",{"_index":813,"title":{},"body":{"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{}}}],["join",{"_index":777,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ProactiveClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["join('next",{"_index":1592,"title":{},"body":{"classes/ProductListResponseContentBuilder.html":{}}}],["jp",{"_index":295,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["json.stringify(handlerinput",{"_index":1036,"title":{},"body":{"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"classes/HandlerFactory.html":{}}}],["key",{"_index":237,"title":{},"body":{"interfaces/AttributeType.html":{},"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"classes/ConstantsInterceptorFactory.html":{},"interfaces/CreativeWork.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"interfaces/ErrorHandlerBuilder.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"classes/LocalizedAttributesFactory.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"classes/MockAttributeManager.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/Skill.html":{},"interfaces/SkillConstants.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["kitchen_waste",{"_index":389,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["lambda",{"_index":989,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["landfill",{"_index":390,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["lang",{"_index":1759,"title":{},"body":{"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{}}}],["language",{"_index":87,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ISPProductClient.html":{}}}],["languagestrings",{"_index":1758,"title":{},"body":{"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{}}}],["languagestrings[locale",{"_index":1760,"title":{},"body":{"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{}}}],["launchrequest",{"_index":886,"title":{},"body":{"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/FallbackIntentFactory.html":{},"classes/HandlerFactory-1.html":{},"classes/IntentHandlerFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"classes/StateManager.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{}}}],["launchrequestbuilder",{"_index":1076,"title":{},"body":{"classes/HandlerFactory-1.html":{},"classes/IntentHandlerFactory.html":{},"classes/LaunchRequestFactory.html":{}}}],["launchrequestfactory",{"_index":1083,"title":{"classes/LaunchRequestFactory.html":{}},"body":{"classes/HandlerFactory-1.html":{},"classes/IntentHandlerFactory.html":{},"classes/LaunchRequestFactory.html":{}}}],["launchrequesthandlerfactory",{"_index":888,"title":{"classes/LaunchRequestHandlerFactory.html":{}},"body":{"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/FallbackIntentFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{}}}],["launchrequestrbuilder",{"_index":1147,"title":{"classes/LaunchRequestrBuilder.html":{}},"body":{"classes/LaunchRequestrBuilder.html":{}}}],["libs/attributemanager",{"_index":242,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["line",{"_index":93,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"interfaces/AttributeType.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/ISPProductClient.html":{},"classes/MockAttributeManager.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"classes/ProactiveClient.html":{}}}],["lint",{"_index":1817,"title":{},"body":{"index.html":{}}}],["list",{"_index":160,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{},"classes/ProductListResponseContentBuilder.html":{}}}],["listid",{"_index":1170,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["listid}/items",{"_index":1199,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["listid}/items/${itemid",{"_index":1200,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["listmanagement",{"_index":1189,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["listmanagement.createlistitemrequest",{"_index":1168,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["listmanagement.createlistrequest",{"_index":1165,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["listmanagement.updatelistitemrequest",{"_index":1187,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["listmanagement.updatelistrequest",{"_index":1184,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["listmanagementapiclient",{"_index":1150,"title":{"classes/ListManagementAPIClient.html":{}},"body":{"classes/ListManagementAPIClient.html":{}}}],["listproducts",{"_index":21,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{},"classes/ProductListResponseContentBuilder.html":{}}}],["liststatus",{"_index":1177,"title":{},"body":{"classes/ListManagementAPIClient.html":{},"miscellaneous/typealiases.html":{}}}],["literal",{"_index":1127,"title":{},"body":{"classes/ISPProductClient.html":{},"interfaces/Order.html":{},"classes/ProactiveClient.html":{},"interfaces/RequstBody.html":{},"interfaces/TranslationBuilder.html":{},"interfaces/TranslationObject.html":{},"miscellaneous/typealiases.html":{}}}],["locale",{"_index":12,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"interfaces/LocalizedAttribute.html":{},"classes/LocalizedAttributesFactory.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"interfaces/Props.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["localizedattribute",{"_index":439,"title":{"interfaces/LocalizedAttribute.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["localizedattribute:brokername",{"_index":348,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-1.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["localizedattribute:contentname",{"_index":318,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["localizedattribute:eventleaguename",{"_index":1334,"title":{},"body":{"classes/ParameterFactory-5.html":{}}}],["localizedattribute:gamename",{"_index":332,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-4.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["localizedattribute:providername",{"_index":312,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["localizedattribute:sellername",{"_index":370,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-3.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["localizedattribute:source",{"_index":411,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-7.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["localizedattribute:subject",{"_index":351,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["localizedattributes",{"_index":440,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"classes/LocalizedAttributesFactory.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["localizedattributes.push",{"_index":1207,"title":{},"body":{"classes/LocalizedAttributesFactory.html":{}}}],["localizedattributesfactory",{"_index":1203,"title":{"classes/LocalizedAttributesFactory.html":{}},"body":{"classes/LocalizedAttributesFactory.html":{}}}],["maintext",{"_index":1019,"title":{},"body":{"interfaces/FlashBriefingContent.html":{}}}],["manager",{"_index":1707,"title":{},"body":{"classes/StateManager.html":{}}}],["match",{"_index":321,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["matching",{"_index":192,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"interfaces/AttributeType.html":{},"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/BaseSkillConfig.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"interfaces/CreativeWork.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/DeviceAPIClient.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/ErrorHandlerBuilder.html":{},"interfaces/Factory.html":{},"classes/FallbackIntentFactory.html":{},"interfaces/FlashBriefingContent.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"classes/HandlerFactory-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentHandlerFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/ListManagementAPIClient.html":{},"interfaces/LocalizedAttribute.html":{},"classes/LocalizedAttributesFactory.html":{},"interfaces/MergeObjectType.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"classes/MockAttributeManager.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"interfaces/Props.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/RelevantAudience.html":{},"classes/ReminderAPIClient.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"interfaces/S3SkillConfig.html":{},"classes/SentryErrorHandlerFactory.html":{},"classes/SettingAPIClient.html":{},"interfaces/Skill.html":{},"interfaces/SkillConstants.html":{},"interfaces/SkillHandlers.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"classes/StateManager.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"interfaces/Thing.html":{},"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{},"interfaces/TrashCollectionAlert.html":{},"classes/UserProfileAPIClient.html":{},"interfaces/WeatherAlert.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["meaning",{"_index":962,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["mediacontent",{"_index":487,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["mediacontent.available.payloadbuilder",{"_index":1238,"title":{},"body":{"classes/ParameterFactory.html":{}}}],["mediacontent.eventname",{"_index":451,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["mediacontent.payload",{"_index":460,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["mediatype",{"_index":298,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["member",{"_index":115,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["merge",{"_index":881,"title":{},"body":{"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/FallbackIntentFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{}}}],["merge(handler",{"_index":891,"title":{},"body":{"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/FallbackIntentFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{}}}],["mergehandler",{"_index":1212,"title":{},"body":{"interfaces/MergeObjectType.html":{}}}],["mergeobject",{"_index":1213,"title":{},"body":{"interfaces/MergeObjectType.html":{}}}],["mergeobjecttype",{"_index":1208,"title":{"interfaces/MergeObjectType.html":{}},"body":{"interfaces/MergeObjectType.html":{}}}],["message",{"_index":535,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/ErrorHandlerBuilder.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["messagealert",{"_index":476,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-2.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["messagealert.activated.payloadbuilder",{"_index":1279,"title":{},"body":{"classes/ParameterFactory-2.html":{}}}],["messagealert.eventname",{"_index":448,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["messagealert.payload",{"_index":457,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["messagefreshness",{"_index":428,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["messagegroup",{"_index":434,"title":{"interfaces/MessageGroup.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-2.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["messages",{"_index":1753,"title":{},"body":{"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{}}}],["messagestate",{"_index":425,"title":{"interfaces/MessageState.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["messagestatus",{"_index":426,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-2.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["messageurgent",{"_index":432,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["method",{"_index":81,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/ISPProductClient.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["methods",{"_index":14,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/DBClient.html":{},"classes/DeviceAPIClient.html":{},"interfaces/ErrorHandlerBuilder.html":{},"interfaces/Factory.html":{},"classes/FallbackIntentFactory.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"classes/HandlerFactory-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentHandlerFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/ListManagementAPIClient.html":{},"classes/LocalizedAttributesFactory.html":{},"classes/MockAttributeManager.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"classes/ProactiveClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"classes/ReminderAPIClient.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"classes/SentryErrorHandlerFactory.html":{},"classes/SettingAPIClient.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{},"classes/StateManager.html":{},"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"classes/UserProfileAPIClient.html":{}}}],["miscellaneous",{"_index":1828,"title":{"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/typealiases.html":{}}}],["mockattributemanager",{"_index":243,"title":{"classes/MockAttributeManager.html":{}},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["model",{"_index":61,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/DeviceAPIClient.html":{},"interfaces/ErrorHandlerBuilder.html":{},"classes/FallbackIntentFactory.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"classes/HandlerFactory-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentHandlerFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/ListManagementAPIClient.html":{},"classes/LocalizedAttributesFactory.html":{},"interfaces/MergeObjectType.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"classes/ProactiveClient.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/ReminderAPIClient.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"classes/SentryErrorHandlerFactory.html":{},"classes/SettingAPIClient.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"classes/UserProfileAPIClient.html":{}}}],["models",{"_index":1691,"title":{},"body":{"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{}}}],["modules",{"_index":1824,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["moment",{"_index":1233,"title":{},"body":{"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-3.html":{},"classes/ProactiveClient.html":{}}}],["moment().add(1",{"_index":1517,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["moment().toisostring",{"_index":1516,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["moment(date).toisostring",{"_index":1245,"title":{},"body":{"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-3.html":{},"classes/ProactiveClient.html":{}}}],["monday",{"_index":395,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["more",{"_index":966,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["movie",{"_index":303,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["multicast",{"_index":525,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["mx",{"_index":292,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["name",{"_index":30,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"interfaces/CreativeWork.html":{},"classes/DBClient.html":{},"classes/DeviceAPIClient.html":{},"interfaces/ErrorHandlerBuilder.html":{},"interfaces/Factory.html":{},"classes/FallbackIntentFactory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentHandlerFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/ListManagementAPIClient.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"classes/MockAttributeManager.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"interfaces/Props.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/RelevantAudience.html":{},"classes/ReminderAPIClient.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/ResponseContent-1.html":{},"classes/SettingAPIClient.html":{},"interfaces/Skill.html":{},"interfaces/SkillHandlersBuilder.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"classes/StateManager.html":{},"interfaces/Thing.html":{},"interfaces/TranslationBuilder.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"index.html":{}}}],["namespace",{"_index":284,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["new",{"_index":184,"title":{},"body":{"classes/APIClient.html":{},"interfaces/AttributeType.html":{},"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"classes/BuyIntentHandlerBuilder.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"classes/ContentBuilder-1.html":{},"interfaces/CreativeWork.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"interfaces/Factory.html":{},"classes/FallbackIntentFactory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"classes/HandlerFactory.html":{},"classes/HandlerFactory-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/IntentHandlerFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"classes/MockAttributeManager.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/ResponseContent-1.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"interfaces/Thing.html":{},"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["newstate",{"_index":1708,"title":{},"body":{"classes/StateManager.html":{}}}],["next",{"_index":92,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"interfaces/AttributeType.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/MockAttributeManager.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"classes/ProactiveClient.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["nextattributes",{"_index":751,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["no.${i",{"_index":1591,"title":{},"body":{"classes/ProductListResponseContentBuilder.html":{}}}],["noispresponse",{"_index":728,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["noproductresponse",{"_index":715,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["noproductresponse(responsebuilder",{"_index":735,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["not_purchasable",{"_index":737,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["note",{"_index":1819,"title":{},"body":{"index.html":{}}}],["npm",{"_index":1784,"title":{},"body":{"index.html":{}}}],["null",{"_index":165,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{},"classes/ParameterFactory-5.html":{},"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{}}}],["number",{"_index":161,"title":{},"body":{"classes/APIClient.html":{},"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/ISPProductClient.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-5.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["object.assign",{"_index":884,"title":{},"body":{"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/FallbackIntentFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/MergeObjectType.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{}}}],["object.assign(atts",{"_index":752,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["object.keys(messages).length",{"_index":1762,"title":{},"body":{"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{}}}],["occasion",{"_index":349,"title":{"interfaces/Occasion.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-1.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["occasion.bookingtime",{"_index":1269,"title":{},"body":{"classes/ParameterFactory-1.html":{}}}],["occasion.broker.name",{"_index":1271,"title":{},"body":{"classes/ParameterFactory-1.html":{}}}],["occasion.eventname",{"_index":450,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["occasion.occasiontype",{"_index":1263,"title":{},"body":{"classes/ParameterFactory-1.html":{}}}],["occasion.payload",{"_index":459,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["occasion.provider.name",{"_index":1267,"title":{},"body":{"classes/ParameterFactory-1.html":{}}}],["occasion.subject",{"_index":1265,"title":{},"body":{"classes/ParameterFactory-1.html":{}}}],["occasion.updated.payloadbuilder",{"_index":1259,"title":{},"body":{"classes/ParameterFactory-1.html":{}}}],["occasiontype",{"_index":340,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["offer",{"_index":331,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["offertype",{"_index":320,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["ogranization",{"_index":346,"title":{"interfaces/Ogranization.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["ok",{"_index":1621,"title":{},"body":{"classes/RefundResponseContentBuilder.html":{}}}],["once",{"_index":137,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["onece",{"_index":965,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["optional",{"_index":32,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"interfaces/Availability.html":{},"interfaces/BaseSkillConfig.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"interfaces/ClientConfig.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"classes/DeviceAPIClient.html":{},"interfaces/ErrorHandlerBuilder.html":{},"interfaces/Factory.html":{},"classes/FallbackIntentFactory.html":{},"interfaces/FlashBriefingContent.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentHandlerFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/ListManagementAPIClient.html":{},"interfaces/MergeObjectType.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"classes/MockAttributeManager.html":{},"interfaces/Occasion.html":{},"interfaces/OrderState.html":{},"interfaces/Payload-2.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"classes/ProactiveClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/RelevantAudience.html":{},"classes/ReminderAPIClient.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"classes/SettingAPIClient.html":{},"interfaces/SkillHandlers.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/StateManager.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TranslationBuilder.html":{},"interfaces/WeatherAlert.html":{}}}],["order",{"_index":368,"title":{"interfaces/Order.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-3.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["order.seller.name",{"_index":1306,"title":{},"body":{"classes/ParameterFactory-3.html":{}}}],["order_delivered",{"_index":376,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["order_out_for_delivery",{"_index":375,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["order_preparing",{"_index":373,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["order_received",{"_index":372,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["order_shipped",{"_index":374,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["orderstate",{"_index":361,"title":{"interfaces/OrderState.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-3.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["orderstate.deliverydetails",{"_index":1304,"title":{},"body":{"classes/ParameterFactory-3.html":{}}}],["orderstate.entertimestamp",{"_index":1302,"title":{},"body":{"classes/ParameterFactory-3.html":{}}}],["orderstate.status",{"_index":1300,"title":{},"body":{"classes/ParameterFactory-3.html":{}}}],["orderstatus",{"_index":362,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-3.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["orderstatus.eventname",{"_index":449,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["orderstatus.payload",{"_index":458,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["orderstatus.updated.payloadbuilder",{"_index":1298,"title":{},"body":{"classes/ParameterFactory-3.html":{}}}],["output",{"_index":875,"title":{},"body":{"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/FallbackIntentFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{}}}],["overdue",{"_index":431,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["overview",{"_index":1825,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":220,"title":{},"body":{"classes/APIClient-1.html":{},"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["packages",{"_index":1624,"title":{},"body":{"classes/RefundResponseContentBuilder.html":{}}}],["packages/.../amznpolly.ts",{"_index":1845,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["packages/.../client.ts",{"_index":1836,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["packages/.../fixtures.ts",{"_index":1832,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["packages/.../flashbriefing.ts",{"_index":1835,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["packages/.../generalresponse.ts",{"_index":1839,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["packages/.../handlerfactory.ts",{"_index":1850,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["packages/.../helpers.ts",{"_index":1841,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["packages/.../index.ts",{"_index":1834,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["packages/.../lists.ts",{"_index":1842,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["packages/.../model.ts",{"_index":1831,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["packages/.../models.ts",{"_index":1843,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["packages/.../productfinders.test.ts",{"_index":1838,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["packages/.../productfinders.ts",{"_index":1837,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["packages/.../responsehelpers.ts",{"_index":1847,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["packages/.../slot.ts",{"_index":1849,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["packages/.../statemanager.ts",{"_index":1833,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["packages/ask",{"_index":619,"title":{},"body":{"interfaces/BaseSkillConfig.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/S3SkillConfig.html":{},"interfaces/SkillHandlers.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{},"miscellaneous/typealiases.html":{}}}],["packages/core/__tests__/libs/attributemanager.test.ts",{"_index":235,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["packages/core/__tests__/libs/attributemanager.test.ts:10",{"_index":1216,"title":{},"body":{"classes/MockAttributeManager.html":{}}}],["packages/core/__tests__/libs/attributemanager.test.ts:11",{"_index":1221,"title":{},"body":{"classes/MockAttributeManager.html":{}}}],["packages/core/__tests__/libs/attributemanager.test.ts:14",{"_index":1222,"title":{},"body":{"classes/MockAttributeManager.html":{}}}],["packages/core/__tests__/libs/attributemanager.test.ts:17",{"_index":1220,"title":{},"body":{"classes/MockAttributeManager.html":{}}}],["packages/core/__tests__/libs/attributemanager.test.ts:20",{"_index":1227,"title":{},"body":{"classes/MockAttributeManager.html":{}}}],["packages/core/__tests__/libs/attributemanager.test.ts:23",{"_index":1229,"title":{},"body":{"classes/MockAttributeManager.html":{}}}],["packages/core/__tests__/libs/attributemanager.test.ts:26",{"_index":1225,"title":{},"body":{"classes/MockAttributeManager.html":{}}}],["packages/core/__tests__/libs/attributemanager.test.ts:29",{"_index":1223,"title":{},"body":{"classes/MockAttributeManager.html":{}}}],["packages/core/__tests__/libs/attributemanager.test.ts:5",{"_index":238,"title":{},"body":{"interfaces/AttributeType.html":{}}}],["packages/core/__tests__/libs/attributemanager.test.ts:7",{"_index":1218,"title":{},"body":{"classes/MockAttributeManager.html":{}}}],["packages/core/__tests__/libs/attributemanager.test.ts:8",{"_index":1219,"title":{},"body":{"classes/MockAttributeManager.html":{}}}],["packages/core/__tests__/libs/attributemanager.test.ts:9",{"_index":1217,"title":{},"body":{"classes/MockAttributeManager.html":{}}}],["packages/core/libs/amznpolly.ts",{"_index":1857,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["packages/core/libs/contentbuilder.ts",{"_index":801,"title":{},"body":{"classes/ContentBuilder.html":{},"interfaces/ResponseContent.html":{}}}],["packages/core/libs/contentbuilder.ts:10",{"_index":805,"title":{},"body":{"classes/ContentBuilder.html":{}}}],["packages/core/libs/contentbuilder.ts:11",{"_index":803,"title":{},"body":{"classes/ContentBuilder.html":{}}}],["packages/core/libs/contentbuilder.ts:16",{"_index":807,"title":{},"body":{"classes/ContentBuilder.html":{}}}],["packages/core/libs/contentbuilder.ts:19",{"_index":811,"title":{},"body":{"classes/ContentBuilder.html":{}}}],["packages/core/libs/contentbuilder.ts:23",{"_index":810,"title":{},"body":{"classes/ContentBuilder.html":{}}}],["packages/core/libs/contentbuilder.ts:27",{"_index":809,"title":{},"body":{"classes/ContentBuilder.html":{}}}],["packages/core/libs/contentbuilder.ts:35",{"_index":808,"title":{},"body":{"classes/ContentBuilder.html":{}}}],["packages/core/libs/contentbuilder.ts:43",{"_index":806,"title":{},"body":{"classes/ContentBuilder.html":{}}}],["packages/core/libs/contentbuilder.ts:9",{"_index":804,"title":{},"body":{"classes/ContentBuilder.html":{}}}],["packages/core/libs/db.ts",{"_index":894,"title":{},"body":{"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{}}}],["packages/core/libs/db.ts:14",{"_index":901,"title":{},"body":{"classes/DBClient.html":{}}}],["packages/core/libs/db.ts:15",{"_index":902,"title":{},"body":{"classes/DBClient.html":{}}}],["packages/core/libs/db.ts:16",{"_index":903,"title":{},"body":{"classes/DBClient.html":{}}}],["packages/core/libs/db.ts:17",{"_index":899,"title":{},"body":{"classes/DBClient.html":{}}}],["packages/core/libs/db.ts:24",{"_index":905,"title":{},"body":{"classes/DBClient.html":{}}}],["packages/core/libs/db.ts:37",{"_index":908,"title":{},"body":{"classes/DBClient.html":{}}}],["packages/core/libs/db.ts:4",{"_index":923,"title":{},"body":{"interfaces/DBItem.html":{}}}],["packages/core/libs/requesthandler.ts",{"_index":1209,"title":{},"body":{"interfaces/MergeObjectType.html":{}}}],["packages/core/libs/responsehelpers.ts",{"_index":1858,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["packages/core/libs/slot.ts",{"_index":1859,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["packages/core/libs/statemanager.ts",{"_index":1706,"title":{},"body":{"classes/StateManager.html":{},"miscellaneous/typealiases.html":{}}}],["packages/core/libs/statemanager.ts:29",{"_index":1732,"title":{},"body":{"classes/StateManager.html":{}}}],["packages/core/libs/statemanager.ts:35",{"_index":1726,"title":{},"body":{"classes/StateManager.html":{}}}],["packages/core/libs/statemanager.ts:39",{"_index":1730,"title":{},"body":{"classes/StateManager.html":{}}}],["packages/core/libs/statemanager.ts:42",{"_index":1728,"title":{},"body":{"classes/StateManager.html":{}}}],["packages/core/libs/translator.ts",{"_index":1741,"title":{},"body":{"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{}}}],["packages/core/libs/translator.ts:10",{"_index":1750,"title":{},"body":{"interfaces/TranslationBuilder.html":{}}}],["packages/core/libs/translator.ts:15",{"_index":1763,"title":{},"body":{"classes/TranslationFactory.html":{}}}],["packages/core/libs/translator.ts:7",{"_index":1747,"title":{},"body":{"interfaces/TranslationBuilder.html":{}}}],["packages/core/libs/translator.ts:8",{"_index":1754,"title":{},"body":{"interfaces/TranslationBuilder.html":{}}}],["packages/core/libs/translator.ts:9",{"_index":1749,"title":{},"body":{"interfaces/TranslationBuilder.html":{}}}],["packages/error",{"_index":938,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{},"miscellaneous/typealiases.html":{}}}],["packages/handlers/libs/flashbriefing.ts",{"_index":1011,"title":{},"body":{"interfaces/FlashBriefingContent.html":{},"miscellaneous/typealiases.html":{}}}],["packages/handlers/libs/requesthandlers/factories/base.ts",{"_index":1048,"title":{},"body":{"classes/HandlerBuilder-1.html":{}}}],["packages/handlers/libs/requesthandlers/factories/base.ts:12",{"_index":1052,"title":{},"body":{"classes/HandlerBuilder-1.html":{}}}],["packages/handlers/libs/requesthandlers/factories/base.ts:15",{"_index":1057,"title":{},"body":{"classes/HandlerBuilder-1.html":{}}}],["packages/handlers/libs/requesthandlers/factories/base.ts:19",{"_index":1056,"title":{},"body":{"classes/HandlerBuilder-1.html":{}}}],["packages/handlers/libs/requesthandlers/factories/base.ts:23",{"_index":1058,"title":{},"body":{"classes/HandlerBuilder-1.html":{}}}],["packages/handlers/libs/requesthandlers/factories/base.ts:28",{"_index":1055,"title":{},"body":{"classes/HandlerBuilder-1.html":{}}}],["packages/handlers/libs/requesthandlers/factories/base.ts:33",{"_index":1054,"title":{},"body":{"classes/HandlerBuilder-1.html":{}}}],["packages/handlers/libs/requesthandlers/factories/base.ts:7",{"_index":1051,"title":{},"body":{"classes/HandlerBuilder-1.html":{}}}],["packages/handlers/libs/requesthandlers/factories/base.ts:8",{"_index":1053,"title":{},"body":{"classes/HandlerBuilder-1.html":{}}}],["packages/handlers/libs/requesthandlers/factories/base.ts:9",{"_index":1050,"title":{},"body":{"classes/HandlerBuilder-1.html":{}}}],["packages/handlers/libs/requesthandlers/factories/index.ts",{"_index":1070,"title":{},"body":{"classes/HandlerFactory-1.html":{},"classes/IntentHandlerFactory.html":{},"classes/LaunchRequestFactory.html":{}}}],["packages/handlers/libs/requesthandlers/factories/index.ts:16",{"_index":1073,"title":{},"body":{"classes/HandlerFactory-1.html":{}}}],["packages/handlers/libs/requesthandlers/factories/index.ts:25",{"_index":1143,"title":{},"body":{"classes/LaunchRequestFactory.html":{}}}],["packages/handlers/libs/requesthandlers/factories/index.ts:9",{"_index":1142,"title":{},"body":{"classes/IntentHandlerFactory.html":{}}}],["packages/handlers/libs/requesthandlers/factories/intent.ts",{"_index":1134,"title":{},"body":{"classes/IntentHandlerBuilder.html":{}}}],["packages/handlers/libs/requesthandlers/factories/intent.ts:12",{"_index":1138,"title":{},"body":{"classes/IntentHandlerBuilder.html":{}}}],["packages/handlers/libs/requesthandlers/factories/intent.ts:13",{"_index":1137,"title":{},"body":{"classes/IntentHandlerBuilder.html":{}}}],["packages/handlers/libs/requesthandlers/factories/intent.ts:7",{"_index":1136,"title":{},"body":{"classes/IntentHandlerBuilder.html":{}}}],["packages/handlers/libs/requesthandlers/factories/launchrequest.ts",{"_index":1148,"title":{},"body":{"classes/LaunchRequestrBuilder.html":{}}}],["packages/handlers/libs/requesthandlers/factories/launchrequest.ts:8",{"_index":1149,"title":{},"body":{"classes/LaunchRequestrBuilder.html":{}}}],["packages/handlers/libs/requesthandlers/factories/model.ts",{"_index":1063,"title":{},"body":{"interfaces/HandlerBuilderInterface.html":{},"miscellaneous/typealiases.html":{}}}],["packages/handlers/libs/requesthandlers/factories/model.ts:11",{"_index":1067,"title":{},"body":{"interfaces/HandlerBuilderInterface.html":{}}}],["packages/handlers/libs/requesthandlers/factories/model.ts:12",{"_index":1066,"title":{},"body":{"interfaces/HandlerBuilderInterface.html":{}}}],["packages/handlers/libs/requesthandlers/factories/model.ts:13",{"_index":1068,"title":{},"body":{"interfaces/HandlerBuilderInterface.html":{}}}],["packages/handlers/libs/requesthandlers/factories/model.ts:14",{"_index":1065,"title":{},"body":{"interfaces/HandlerBuilderInterface.html":{}}}],["packages/handlers/libs/requesthandlers/factories/model.ts:15",{"_index":1064,"title":{},"body":{"interfaces/HandlerBuilderInterface.html":{}}}],["packages/handlers/libs/requesthandlers/handlerfactory.ts",{"_index":868,"title":{},"body":{"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/FallbackIntentFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"miscellaneous/typealiases.html":{}}}],["packages/handlers/libs/requesthandlers/handlerfactory.ts:25",{"_index":1654,"title":{},"body":{"interfaces/RequestHandlerBuilder.html":{}}}],["packages/handlers/libs/requesthandlers/handlerfactory.ts:42",{"_index":1656,"title":{},"body":{"classes/RequestHandlerFactory.html":{}}}],["packages/handlers/libs/requesthandlers/handlerfactory.ts:52",{"_index":1146,"title":{},"body":{"classes/LaunchRequestHandlerFactory.html":{}}}],["packages/handlers/libs/requesthandlers/handlerfactory.ts:55",{"_index":1144,"title":{},"body":{"classes/LaunchRequestHandlerFactory.html":{}}}],["packages/handlers/libs/requesthandlers/handlerfactory.ts:65",{"_index":1009,"title":{},"body":{"classes/FallbackIntentFactory.html":{}}}],["packages/handlers/libs/requesthandlers/handlerfactory.ts:68",{"_index":1008,"title":{},"body":{"classes/FallbackIntentFactory.html":{}}}],["packages/handlers/libs/requestinterceptors/injectconstants.ts",{"_index":793,"title":{},"body":{"classes/ConstantsInterceptorFactory.html":{},"interfaces/SkillConstants.html":{}}}],["packages/handlers/libs/requestinterceptors/injectconstants.ts:4",{"_index":1674,"title":{},"body":{"interfaces/SkillConstants.html":{}}}],["packages/handlers/libs/requestinterceptors/injectconstants.ts:8",{"_index":796,"title":{},"body":{"classes/ConstantsInterceptorFactory.html":{}}}],["packages/isp/__tests__/libs/productfinders.test.ts",{"_index":1852,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["packages/isp/libs/client.ts",{"_index":6,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{},"miscellaneous/typealiases.html":{}}}],["packages/isp/libs/client.ts:10",{"_index":35,"title":{},"body":{"classes/APIClient.html":{}}}],["packages/isp/libs/client.ts:100",{"_index":1113,"title":{},"body":{"classes/ISPProductClient.html":{}}}],["packages/isp/libs/client.ts:11",{"_index":34,"title":{},"body":{"classes/APIClient.html":{}}}],["packages/isp/libs/client.ts:12",{"_index":27,"title":{},"body":{"classes/APIClient.html":{}}}],["packages/isp/libs/client.ts:120",{"_index":1123,"title":{},"body":{"classes/ISPProductClient.html":{}}}],["packages/isp/libs/client.ts:135",{"_index":1124,"title":{},"body":{"classes/ISPProductClient.html":{}}}],["packages/isp/libs/client.ts:143",{"_index":1119,"title":{},"body":{"classes/ISPProductClient.html":{}}}],["packages/isp/libs/client.ts:152",{"_index":1115,"title":{},"body":{"classes/ISPProductClient.html":{}}}],["packages/isp/libs/client.ts:163",{"_index":1117,"title":{},"body":{"classes/ISPProductClient.html":{}}}],["packages/isp/libs/client.ts:174",{"_index":1128,"title":{},"body":{"classes/ISPProductClient.html":{}}}],["packages/isp/libs/client.ts:19",{"_index":49,"title":{},"body":{"classes/APIClient.html":{}}}],["packages/isp/libs/client.ts:24",{"_index":38,"title":{},"body":{"classes/APIClient.html":{}}}],["packages/isp/libs/client.ts:36",{"_index":44,"title":{},"body":{"classes/APIClient.html":{}}}],["packages/isp/libs/client.ts:43",{"_index":50,"title":{},"body":{"classes/APIClient.html":{}}}],["packages/isp/libs/client.ts:46",{"_index":47,"title":{},"body":{"classes/APIClient.html":{}}}],["packages/isp/libs/client.ts:52",{"_index":1105,"title":{},"body":{"classes/ISPProductClient.html":{}}}],["packages/isp/libs/client.ts:53",{"_index":1106,"title":{},"body":{"classes/ISPProductClient.html":{}}}],["packages/isp/libs/client.ts:54",{"_index":1104,"title":{},"body":{"classes/ISPProductClient.html":{}}}],["packages/isp/libs/client.ts:60",{"_index":1121,"title":{},"body":{"classes/ISPProductClient.html":{}}}],["packages/isp/libs/client.ts:66",{"_index":1111,"title":{},"body":{"classes/ISPProductClient.html":{}}}],["packages/isp/libs/client.ts:73",{"_index":1112,"title":{},"body":{"classes/ISPProductClient.html":{}}}],["packages/isp/libs/client.ts:81",{"_index":1125,"title":{},"body":{"classes/ISPProductClient.html":{}}}],["packages/isp/libs/client.ts:89",{"_index":1120,"title":{},"body":{"classes/ISPProductClient.html":{}}}],["packages/isp/libs/client.ts:9",{"_index":36,"title":{},"body":{"classes/APIClient.html":{}}}],["packages/isp/libs/contentbuilders/base.ts",{"_index":824,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["packages/isp/libs/contentbuilders/base.ts:110",{"_index":1100,"title":{},"body":{"classes/ISPContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/base.ts:117",{"_index":1090,"title":{},"body":{"classes/ISPContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/base.ts:13",{"_index":826,"title":{},"body":{"classes/ContentBuilder-1.html":{}}}],["packages/isp/libs/contentbuilders/base.ts:139",{"_index":1099,"title":{},"body":{"classes/ISPContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/base.ts:14",{"_index":827,"title":{},"body":{"classes/ContentBuilder-1.html":{}}}],["packages/isp/libs/contentbuilders/base.ts:146",{"_index":1086,"title":{},"body":{"classes/ISPContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/base.ts:15",{"_index":825,"title":{},"body":{"classes/ContentBuilder-1.html":{}}}],["packages/isp/libs/contentbuilders/base.ts:158",{"_index":1093,"title":{},"body":{"classes/ISPContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/base.ts:165",{"_index":1087,"title":{},"body":{"classes/ISPContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/base.ts:177",{"_index":1094,"title":{},"body":{"classes/ISPContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/base.ts:20",{"_index":829,"title":{},"body":{"classes/ContentBuilder-1.html":{}}}],["packages/isp/libs/contentbuilders/base.ts:23",{"_index":828,"title":{},"body":{"classes/ContentBuilder-1.html":{}}}],["packages/isp/libs/contentbuilders/base.ts:33",{"_index":1085,"title":{},"body":{"classes/ISPContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/base.ts:34",{"_index":1084,"title":{},"body":{"classes/ISPContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/base.ts:40",{"_index":1096,"title":{},"body":{"classes/ISPContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/base.ts:44",{"_index":1088,"title":{},"body":{"classes/ISPContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/base.ts:49",{"_index":1098,"title":{},"body":{"classes/ISPContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/base.ts:53",{"_index":1089,"title":{},"body":{"classes/ISPContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/base.ts:60",{"_index":1092,"title":{},"body":{"classes/ISPContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/base.ts:88",{"_index":1101,"title":{},"body":{"classes/ISPContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/base.ts:95",{"_index":1091,"title":{},"body":{"classes/ISPContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/buy.ts",{"_index":645,"title":{},"body":{"classes/BuyContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/buy.ts:6",{"_index":662,"title":{},"body":{"classes/BuyContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/buyresponse.ts",{"_index":759,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/buyresponse.ts:27",{"_index":770,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/buyresponse.ts:32",{"_index":766,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/buyresponse.ts:51",{"_index":769,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/buyresponse.ts:55",{"_index":768,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/buyresponse.ts:7",{"_index":767,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/buyresponse.ts:71",{"_index":771,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/detail.ts",{"_index":1565,"title":{},"body":{"classes/ProductDetailResponseContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/detail.ts:26",{"_index":1569,"title":{},"body":{"classes/ProductDetailResponseContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/detail.ts:7",{"_index":1568,"title":{},"body":{"classes/ProductDetailResponseContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/generalresponse.ts",{"_index":1853,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["packages/isp/libs/contentbuilders/list.ts",{"_index":1573,"title":{},"body":{"classes/ProductListResponseContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/list.ts:12",{"_index":1580,"title":{},"body":{"classes/ProductListResponseContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/list.ts:15",{"_index":1579,"title":{},"body":{"classes/ProductListResponseContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/list.ts:57",{"_index":1581,"title":{},"body":{"classes/ProductListResponseContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/list.ts:7",{"_index":1578,"title":{},"body":{"classes/ProductListResponseContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/list.ts:8",{"_index":1583,"title":{},"body":{"classes/ProductListResponseContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/refund.ts",{"_index":1595,"title":{},"body":{"classes/RefundContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/refund.ts:11",{"_index":1599,"title":{},"body":{"classes/RefundContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/refund.ts:31",{"_index":1602,"title":{},"body":{"classes/RefundContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/refund.ts:35",{"_index":1601,"title":{},"body":{"classes/RefundContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/refundresponse.ts",{"_index":1608,"title":{},"body":{"classes/RefundResponseContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/refundresponse.ts:25",{"_index":1619,"title":{},"body":{"classes/RefundResponseContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/refundresponse.ts:30",{"_index":1615,"title":{},"body":{"classes/RefundResponseContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/refundresponse.ts:48",{"_index":1618,"title":{},"body":{"classes/RefundResponseContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/refundresponse.ts:52",{"_index":1617,"title":{},"body":{"classes/RefundResponseContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/refundresponse.ts:68",{"_index":1620,"title":{},"body":{"classes/RefundResponseContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/refundresponse.ts:7",{"_index":1616,"title":{},"body":{"classes/RefundResponseContentBuilder.html":{}}}],["packages/isp/libs/handlers/buy.ts",{"_index":680,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["packages/isp/libs/handlers/buy.ts:30",{"_index":692,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["packages/isp/libs/handlers/buy.ts:33",{"_index":696,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["packages/isp/libs/handlers/fixtures.ts",{"_index":1026,"title":{},"body":{"classes/HandlerBuilder.html":{},"classes/HandlerFactory.html":{},"miscellaneous/typealiases.html":{}}}],["packages/isp/libs/handlers/fixtures.ts:11",{"_index":1029,"title":{},"body":{"classes/HandlerBuilder.html":{}}}],["packages/isp/libs/handlers/fixtures.ts:14",{"_index":1033,"title":{},"body":{"classes/HandlerBuilder.html":{}}}],["packages/isp/libs/handlers/fixtures.ts:18",{"_index":1032,"title":{},"body":{"classes/HandlerBuilder.html":{}}}],["packages/isp/libs/handlers/fixtures.ts:22",{"_index":1034,"title":{},"body":{"classes/HandlerBuilder.html":{}}}],["packages/isp/libs/handlers/fixtures.ts:27",{"_index":1031,"title":{},"body":{"classes/HandlerBuilder.html":{}}}],["packages/isp/libs/handlers/fixtures.ts:32",{"_index":1030,"title":{},"body":{"classes/HandlerBuilder.html":{}}}],["packages/isp/libs/handlers/fixtures.ts:40",{"_index":1069,"title":{},"body":{"classes/HandlerFactory.html":{}}}],["packages/isp/libs/handlers/fixtures.ts:7",{"_index":1028,"title":{},"body":{"classes/HandlerBuilder.html":{}}}],["packages/isp/libs/handlers/fixtures.ts:8",{"_index":1027,"title":{},"body":{"classes/HandlerBuilder.html":{}}}],["packages/isp/libs/handlers/helpers.ts",{"_index":1854,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["packages/isp/libs/productfinders.ts",{"_index":1851,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["packages/proactive",{"_index":281,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"classes/LocalizedAttributesFactory.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["packages/serviceclients/libs/client.ts",{"_index":195,"title":{},"body":{"classes/APIClient-1.html":{},"miscellaneous/typealiases.html":{}}}],["packages/serviceclients/libs/client.ts:10",{"_index":200,"title":{},"body":{"classes/APIClient-1.html":{}}}],["packages/serviceclients/libs/client.ts:17",{"_index":213,"title":{},"body":{"classes/APIClient-1.html":{}}}],["packages/serviceclients/libs/client.ts:23",{"_index":207,"title":{},"body":{"classes/APIClient-1.html":{}}}],["packages/serviceclients/libs/client.ts:37",{"_index":209,"title":{},"body":{"classes/APIClient-1.html":{}}}],["packages/serviceclients/libs/client.ts:45",{"_index":211,"title":{},"body":{"classes/APIClient-1.html":{}}}],["packages/serviceclients/libs/client.ts:53",{"_index":215,"title":{},"body":{"classes/APIClient-1.html":{}}}],["packages/serviceclients/libs/client.ts:6",{"_index":205,"title":{},"body":{"classes/APIClient-1.html":{}}}],["packages/serviceclients/libs/client.ts:61",{"_index":218,"title":{},"body":{"classes/APIClient-1.html":{}}}],["packages/serviceclients/libs/client.ts:7",{"_index":202,"title":{},"body":{"classes/APIClient-1.html":{}}}],["packages/serviceclients/libs/client.ts:8",{"_index":201,"title":{},"body":{"classes/APIClient-1.html":{}}}],["packages/serviceclients/libs/client.ts:9",{"_index":204,"title":{},"body":{"classes/APIClient-1.html":{}}}],["packages/serviceclients/libs/devices.ts",{"_index":925,"title":{},"body":{"classes/DeviceAPIClient.html":{}}}],["packages/serviceclients/libs/devices.ts:5",{"_index":929,"title":{},"body":{"classes/DeviceAPIClient.html":{}}}],["packages/serviceclients/libs/devices.ts:6",{"_index":931,"title":{},"body":{"classes/DeviceAPIClient.html":{}}}],["packages/serviceclients/libs/devices.ts:9",{"_index":934,"title":{},"body":{"classes/DeviceAPIClient.html":{}}}],["packages/serviceclients/libs/lists.ts",{"_index":1151,"title":{},"body":{"classes/ListManagementAPIClient.html":{},"miscellaneous/typealiases.html":{}}}],["packages/serviceclients/libs/lists.ts:10",{"_index":1181,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["packages/serviceclients/libs/lists.ts:13",{"_index":1178,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["packages/serviceclients/libs/lists.ts:16",{"_index":1166,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["packages/serviceclients/libs/lists.ts:19",{"_index":1185,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["packages/serviceclients/libs/lists.ts:22",{"_index":1172,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["packages/serviceclients/libs/lists.ts:25",{"_index":1180,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["packages/serviceclients/libs/lists.ts:28",{"_index":1169,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["packages/serviceclients/libs/lists.ts:31",{"_index":1188,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["packages/serviceclients/libs/lists.ts:34",{"_index":1175,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["packages/serviceclients/libs/lists.ts:6",{"_index":1163,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["packages/serviceclients/libs/lists.ts:7",{"_index":1182,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["packages/serviceclients/libs/reminders.ts",{"_index":1628,"title":{},"body":{"classes/ReminderAPIClient.html":{}}}],["packages/serviceclients/libs/reminders.ts:15",{"_index":1644,"title":{},"body":{"classes/ReminderAPIClient.html":{}}}],["packages/serviceclients/libs/reminders.ts:23",{"_index":1647,"title":{},"body":{"classes/ReminderAPIClient.html":{}}}],["packages/serviceclients/libs/reminders.ts:29",{"_index":1645,"title":{},"body":{"classes/ReminderAPIClient.html":{}}}],["packages/serviceclients/libs/reminders.ts:36",{"_index":1638,"title":{},"body":{"classes/ReminderAPIClient.html":{}}}],["packages/serviceclients/libs/reminders.ts:7",{"_index":1635,"title":{},"body":{"classes/ReminderAPIClient.html":{}}}],["packages/serviceclients/libs/reminders.ts:8",{"_index":1641,"title":{},"body":{"classes/ReminderAPIClient.html":{}}}],["packages/serviceclients/libs/settings.ts",{"_index":1659,"title":{},"body":{"classes/SettingAPIClient.html":{}}}],["packages/serviceclients/libs/settings.ts:12",{"_index":1666,"title":{},"body":{"classes/SettingAPIClient.html":{}}}],["packages/serviceclients/libs/settings.ts:5",{"_index":1664,"title":{},"body":{"classes/SettingAPIClient.html":{}}}],["packages/serviceclients/libs/settings.ts:6",{"_index":1670,"title":{},"body":{"classes/SettingAPIClient.html":{}}}],["packages/serviceclients/libs/settings.ts:9",{"_index":1668,"title":{},"body":{"classes/SettingAPIClient.html":{}}}],["packages/serviceclients/libs/userprofiles.ts",{"_index":1765,"title":{},"body":{"classes/UserProfileAPIClient.html":{}}}],["packages/serviceclients/libs/userprofiles.ts:12",{"_index":1771,"title":{},"body":{"classes/UserProfileAPIClient.html":{}}}],["packages/serviceclients/libs/userprofiles.ts:15",{"_index":1773,"title":{},"body":{"classes/UserProfileAPIClient.html":{}}}],["packages/serviceclients/libs/userprofiles.ts:5",{"_index":1770,"title":{},"body":{"classes/UserProfileAPIClient.html":{}}}],["packages/serviceclients/libs/userprofiles.ts:6",{"_index":1774,"title":{},"body":{"classes/UserProfileAPIClient.html":{}}}],["packages/serviceclients/libs/userprofiles.ts:9",{"_index":1772,"title":{},"body":{"classes/UserProfileAPIClient.html":{}}}],["param",{"_index":97,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/ISPProductClient.html":{},"classes/ProactiveClient.html":{},"classes/ReminderAPIClient.html":{}}}],["parameter",{"_index":1797,"title":{},"body":{"index.html":{}}}],["parameterfactory",{"_index":1230,"title":{"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{}},"body":{"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{}}}],["parameters",{"_index":28,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/DBClient.html":{},"classes/DeviceAPIClient.html":{},"interfaces/ErrorHandlerBuilder.html":{},"interfaces/Factory.html":{},"classes/FallbackIntentFactory.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentHandlerFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/ListManagementAPIClient.html":{},"classes/MockAttributeManager.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"classes/ProactiveClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"classes/ReminderAPIClient.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"classes/SettingAPIClient.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/StateManager.html":{},"interfaces/TranslationBuilder.html":{}}}],["parceldelivery",{"_index":357,"title":{"interfaces/ParcelDelivery.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["partial",{"_index":700,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"classes/IntentHandlerBuilder.html":{},"classes/LaunchRequestrBuilder.html":{}}}],["path",{"_index":196,"title":{},"body":{"classes/APIClient-1.html":{},"classes/DeviceAPIClient.html":{},"classes/ListManagementAPIClient.html":{},"classes/ReminderAPIClient.html":{},"classes/SettingAPIClient.html":{},"classes/UserProfileAPIClient.html":{}}}],["payload",{"_index":444,"title":{"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["payload.update",{"_index":1349,"title":{},"body":{"classes/ParameterFactory-5.html":{}}}],["payloadbuilder",{"_index":536,"title":{"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["persistancetype",{"_index":623,"title":{},"body":{"interfaces/BaseSkillConfig.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/S3SkillConfig.html":{},"interfaces/SkillHandlers.html":{},"miscellaneous/typealiases.html":{}}}],["persistent",{"_index":246,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["person",{"_index":297,"title":{"interfaces/Person.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-2.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["pet_bottles",{"_index":391,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["please",{"_index":789,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"interfaces/ErrorHandlerBuilder.html":{},"classes/ISPContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/ResponseContent-1.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["pollylanguage",{"_index":1844,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["post",{"_index":198,"title":{},"body":{"classes/APIClient-1.html":{},"classes/ProactiveClient.html":{},"miscellaneous/typealiases.html":{}}}],["post(body",{"_index":214,"title":{},"body":{"classes/APIClient-1.html":{}}}],["premiere",{"_index":309,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["preorder_received",{"_index":371,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["primarykey",{"_index":895,"title":{},"body":{"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{}}}],["private",{"_index":9,"title":{},"body":{"classes/APIClient.html":{},"interfaces/AttributeType.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/MockAttributeManager.html":{},"classes/ProactiveClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["proactive",{"_index":1796,"title":{},"body":{"index.html":{}}}],["proactiveclient",{"_index":1439,"title":{"classes/ProactiveClient.html":{}},"body":{"classes/ProactiveClient.html":{}}}],["process",{"_index":798,"title":{},"body":{"classes/ConstantsInterceptorFactory.html":{},"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/SkillConstants.html":{}}}],["process.env.sentry_dns",{"_index":950,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["product",{"_index":101,"title":{},"body":{"classes/APIClient.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["product.name",{"_index":174,"title":{},"body":{"classes/APIClient.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{}}}],["product.productid",{"_index":171,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["product.purchasable",{"_index":736,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["product.summary",{"_index":1570,"title":{},"body":{"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{}}}],["product_detail",{"_index":1856,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["productdetailresponsecontentbuilder",{"_index":1564,"title":{"classes/ProductDetailResponseContentBuilder.html":{}},"body":{"classes/ProductDetailResponseContentBuilder.html":{}}}],["productfinders",{"_index":719,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["productid",{"_index":39,"title":{},"body":{"classes/APIClient.html":{},"classes/BuyContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/RefundContentBuilder.html":{}}}],["productlistresponsecontentbuilder",{"_index":1572,"title":{"classes/ProductListResponseContentBuilder.html":{}},"body":{"classes/ProductListResponseContentBuilder.html":{}}}],["productname",{"_index":172,"title":{},"body":{"classes/APIClient.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"interfaces/ResponseContent-1.html":{}}}],["products",{"_index":113,"title":{},"body":{"classes/APIClient.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/ProductListResponseContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["products.length",{"_index":1586,"title":{},"body":{"classes/ProductListResponseContentBuilder.html":{}}}],["products.map((product",{"_index":1590,"title":{},"body":{"classes/ProductListResponseContentBuilder.html":{}}}],["products[0].name",{"_index":1588,"title":{},"body":{"classes/ProductListResponseContentBuilder.html":{}}}],["products[0].summary",{"_index":1589,"title":{},"body":{"classes/ProductListResponseContentBuilder.html":{}}}],["producttext",{"_index":1587,"title":{},"body":{"classes/ProductListResponseContentBuilder.html":{}}}],["progressiveresponseerrorhandler",{"_index":1846,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["promise",{"_index":45,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"classes/BuyIntentHandlerBuilder.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/DeviceAPIClient.html":{},"interfaces/ErrorHandlerBuilder.html":{},"interfaces/Factory.html":{},"classes/FallbackIntentFactory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/HandlerBuilder.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"classes/ISPProductClient.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/ListManagementAPIClient.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"classes/ReminderAPIClient.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"classes/SentryErrorHandlerFactory.html":{},"classes/SettingAPIClient.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"classes/UserProfileAPIClient.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["promise.resolve",{"_index":260,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["promise.resolve(this.db",{"_index":252,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["properties",{"_index":8,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/BaseSkillConfig.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"interfaces/CreativeWork.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"classes/DeviceAPIClient.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/FlashBriefingContent.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/IntentHandlerBuilder.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/ListManagementAPIClient.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MergeObjectType.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"classes/MockAttributeManager.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"interfaces/Props.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/RelevantAudience.html":{},"classes/ReminderAPIClient.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"interfaces/S3SkillConfig.html":{},"classes/SettingAPIClient.html":{},"interfaces/Skill.html":{},"interfaces/SkillHandlers.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"interfaces/Thing.html":{},"interfaces/TranslationObject.html":{},"interfaces/TrashCollectionAlert.html":{},"classes/UserProfileAPIClient.html":{},"interfaces/WeatherAlert.html":{}}}],["props",{"_index":442,"title":{"interfaces/Props.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["protected",{"_index":16,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/DeviceAPIClient.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"classes/HandlerFactory.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/IntentHandlerBuilder.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/ListManagementAPIClient.html":{},"classes/ProactiveClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"classes/ReminderAPIClient.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"classes/SettingAPIClient.html":{},"classes/UserProfileAPIClient.html":{}}}],["provider",{"_index":316,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-1.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["providername",{"_index":1249,"title":{},"body":{"classes/ParameterFactory.html":{},"interfaces/PayloadBuilder-7.html":{}}}],["public",{"_index":18,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"interfaces/AttributeType.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/DeviceAPIClient.html":{},"interfaces/ErrorHandlerBuilder.html":{},"classes/FallbackIntentFactory.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"classes/HandlerFactory.html":{},"classes/HandlerFactory-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentHandlerFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/ListManagementAPIClient.html":{},"classes/LocalizedAttributesFactory.html":{},"classes/MockAttributeManager.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"classes/ProactiveClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"classes/ReminderAPIClient.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"classes/SentryErrorHandlerFactory.html":{},"classes/SettingAPIClient.html":{},"interfaces/SkillConstants.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{},"classes/StateManager.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{},"classes/UserProfileAPIClient.html":{}}}],["purchase",{"_index":788,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["purchased",{"_index":784,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["purchaseresult",{"_index":772,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{}}}],["put",{"_index":199,"title":{},"body":{"classes/APIClient-1.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"miscellaneous/typealiases.html":{}}}],["put(body",{"_index":217,"title":{},"body":{"classes/APIClient-1.html":{}}}],["put(id",{"_index":906,"title":{},"body":{"classes/DBClient.html":{}}}],["putalert",{"_index":1355,"title":{},"body":{"classes/ParameterFactory-6.html":{},"interfaces/PayloadBuilder-1.html":{}}}],["putalert(alert",{"_index":547,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["putdirective",{"_index":652,"title":{},"body":{"classes/BuyContentBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ContentBuilder.html":{},"classes/ISPContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/ResponseContent.html":{}}}],["putdirective(directive",{"_index":665,"title":{},"body":{"classes/BuyContentBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ContentBuilder.html":{},"classes/ISPContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{}}}],["putdirectives",{"_index":653,"title":{},"body":{"classes/BuyContentBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ContentBuilder.html":{},"classes/ISPContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/ResponseContent.html":{}}}],["putdirectives(directives",{"_index":668,"title":{},"body":{"classes/BuyContentBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ContentBuilder.html":{},"classes/ISPContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{}}}],["putgarbagetypes",{"_index":1357,"title":{},"body":{"classes/ParameterFactory-6.html":{},"interfaces/PayloadBuilder-1.html":{}}}],["putgarbagetypes(garbagetypes",{"_index":548,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["putlocalestrings",{"_index":1745,"title":{},"body":{"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{}}}],["putlocalestrings(locale",{"_index":1752,"title":{},"body":{"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{}}}],["putlocalizedattribute",{"_index":1005,"title":{},"body":{"interfaces/Factory.html":{},"classes/LocalizedAttributesFactory.html":{}}}],["putlocalizedattribute(locale",{"_index":541,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["putreprompttext",{"_index":654,"title":{},"body":{"classes/BuyContentBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ContentBuilder.html":{},"classes/ISPContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/ResponseContent.html":{}}}],["putreprompttext(text",{"_index":671,"title":{},"body":{"classes/BuyContentBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ContentBuilder.html":{},"classes/ISPContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{}}}],["putspeechtext",{"_index":655,"title":{},"body":{"classes/BuyContentBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ContentBuilder.html":{},"classes/ISPContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/ResponseContent.html":{}}}],["putspeechtext(text",{"_index":673,"title":{},"body":{"classes/BuyContentBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ContentBuilder.html":{},"classes/ISPContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{}}}],["recyclable_plastics",{"_index":392,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["redirectionurl",{"_index":1020,"title":{},"body":{"interfaces/FlashBriefingContent.html":{}}}],["reference.html#details",{"_index":1018,"title":{},"body":{"interfaces/FlashBriefingContent.html":{}}}],["referenceid",{"_index":1519,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["refereneid",{"_index":532,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["refund",{"_index":1604,"title":{},"body":{"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{}}}],["refundcontentbuilder",{"_index":1594,"title":{"classes/RefundContentBuilder.html":{}},"body":{"classes/RefundContentBuilder.html":{}}}],["refundresponsecontentbuilder",{"_index":1607,"title":{"classes/RefundResponseContentBuilder.html":{}},"body":{"classes/RefundResponseContentBuilder.html":{}}}],["relation",{"_index":1318,"title":{},"body":{"classes/ParameterFactory-4.html":{},"interfaces/PayloadBuilder-8.html":{}}}],["relationshiptoinvitee",{"_index":326,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["release",{"_index":308,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["relevantaudience",{"_index":526,"title":{"interfaces/RelevantAudience.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["relevantaudience.payload",{"_index":1542,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["rematch",{"_index":322,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["reminderapiclient",{"_index":1627,"title":{"classes/ReminderAPIClient.html":{}},"body":{"classes/ReminderAPIClient.html":{}}}],["remindermanagement",{"_index":1648,"title":{},"body":{"classes/ReminderAPIClient.html":{}}}],["remindermanagement.reminderrequest",{"_index":1637,"title":{},"body":{"classes/ReminderAPIClient.html":{}}}],["reminderrequest",{"_index":1639,"title":{},"body":{"classes/ReminderAPIClient.html":{}}}],["replacehandler",{"_index":688,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"classes/IntentHandlerBuilder.html":{},"classes/LaunchRequestrBuilder.html":{}}}],["replacehandler(handler",{"_index":699,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/IntentHandlerBuilder.html":{},"classes/LaunchRequestrBuilder.html":{}}}],["repository",{"_index":1787,"title":{},"body":{"index.html":{}}}],["reprompt",{"_index":740,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["reprompt(\"i",{"_index":745,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["reprompt('could",{"_index":964,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["reprompt(noispresponse.reprompttext",{"_index":731,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["reprompt(reprompttext",{"_index":977,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["reprompttext",{"_index":778,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"interfaces/ErrorHandlerBuilder.html":{},"classes/ISPContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["request",{"_index":245,"title":{},"body":{"interfaces/AttributeType.html":{},"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"classes/BuyResponseContentBuilder.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"interfaces/ErrorHandlerBuilder.html":{},"interfaces/Factory.html":{},"classes/FallbackIntentFactory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"classes/HandlerFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/ListManagementAPIClient.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"classes/MockAttributeManager.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"index.html":{}}}],["requested",{"_index":337,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["requestenvelope",{"_index":24,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/BuyIntentHandlerBuilder.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"interfaces/ErrorHandlerBuilder.html":{},"classes/FallbackIntentFactory.html":{},"classes/ISPProductClient.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/MergeObjectType.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{}}}],["requestenvelope.context",{"_index":991,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["requestenvelope.context.system.apiendpoint",{"_index":74,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ISPProductClient.html":{}}}],["requestenvelope.request.requestid",{"_index":1003,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["requestenvelope.session",{"_index":998,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["requestenvelope.session.sessionid",{"_index":1000,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["requestevent",{"_index":1444,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["requesthandler",{"_index":628,"title":{},"body":{"interfaces/BaseSkillConfig.html":{},"classes/BuyIntentHandlerBuilder.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"interfaces/DynamoDBSkillConfig.html":{},"classes/FallbackIntentFactory.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"classes/IntentHandlerBuilder.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"interfaces/MergeObjectType.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/S3SkillConfig.html":{},"interfaces/SkillHandlers.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{},"classes/StateManager.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{}}}],["requesthandlerbuilder",{"_index":878,"title":{"interfaces/RequestHandlerBuilder.html":{}},"body":{"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/FallbackIntentFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{}}}],["requesthandlerfactory",{"_index":887,"title":{"classes/RequestHandlerFactory.html":{}},"body":{"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/FallbackIntentFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{}}}],["requesthandlers",{"_index":640,"title":{},"body":{"interfaces/BaseSkillConfig.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/S3SkillConfig.html":{},"interfaces/SkillHandlers.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{}}}],["requesthandlers.foreach(handler",{"_index":1694,"title":{},"body":{"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{}}}],["requestinterceptor",{"_index":625,"title":{},"body":{"interfaces/BaseSkillConfig.html":{},"classes/ConstantsInterceptorFactory.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/ErrorHandlerBuilder.html":{},"interfaces/S3SkillConfig.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/SkillConstants.html":{},"interfaces/SkillHandlers.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{}}}],["requestinterceptors",{"_index":641,"title":{},"body":{"interfaces/BaseSkillConfig.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/S3SkillConfig.html":{},"interfaces/SkillHandlers.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{}}}],["requestinterceptors.foreach(interceptor",{"_index":1697,"title":{},"body":{"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{}}}],["required",{"_index":1079,"title":{},"body":{"classes/HandlerFactory-1.html":{},"classes/IntentHandlerFactory.html":{},"classes/LaunchRequestFactory.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{},"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{}}}],["requstbody",{"_index":527,"title":{"interfaces/RequstBody.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["res",{"_index":1503,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["res.access_token",{"_index":1505,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["res.expires_in",{"_index":1506,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["res.scope",{"_index":1507,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["res.token_type",{"_index":1508,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["rescheduled",{"_index":336,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["reservation",{"_index":342,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["reservation_request",{"_index":341,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["resetstate",{"_index":1724,"title":{},"body":{"classes/StateManager.html":{}}}],["resetstate(attributemanager",{"_index":1729,"title":{},"body":{"classes/StateManager.html":{}}}],["resolutionslot",{"_index":1848,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["resolve(type).handle(handler",{"_index":890,"title":{},"body":{"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/FallbackIntentFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{}}}],["resolver",{"_index":870,"title":{},"body":{"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/FallbackIntentFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{}}}],["response",{"_index":533,"title":{"interfaces/Response.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"interfaces/CreativeWork.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"interfaces/ErrorHandlerBuilder.html":{},"interfaces/Factory.html":{},"classes/FallbackIntentFactory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/HandlerBuilder.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"classes/ISPContentBuilder.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MergeObjectType.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"interfaces/Props.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["response.data",{"_index":1534,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["response.status",{"_index":1550,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["response.statustext",{"_index":1551,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["responsebuilder",{"_index":648,"title":{},"body":{"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{}}}],["responsebuilder.speak(noispresponse.speechtext",{"_index":730,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["responsecontent",{"_index":656,"title":{"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{}},"body":{"classes/BuyContentBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{}}}],["responseinterceptor",{"_index":626,"title":{},"body":{"interfaces/BaseSkillConfig.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/S3SkillConfig.html":{},"interfaces/SkillHandlers.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{}}}],["responseinterceptors",{"_index":642,"title":{},"body":{"interfaces/BaseSkillConfig.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/S3SkillConfig.html":{},"interfaces/SkillHandlers.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{}}}],["responseinterceptors.foreach(interceptor",{"_index":1700,"title":{},"body":{"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{}}}],["result",{"_index":191,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"interfaces/AttributeType.html":{},"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/BaseSkillConfig.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"interfaces/CreativeWork.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/DeviceAPIClient.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/ErrorHandlerBuilder.html":{},"interfaces/Factory.html":{},"classes/FallbackIntentFactory.html":{},"interfaces/FlashBriefingContent.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"classes/HandlerFactory-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentHandlerFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/ListManagementAPIClient.html":{},"interfaces/LocalizedAttribute.html":{},"classes/LocalizedAttributesFactory.html":{},"interfaces/MergeObjectType.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"classes/MockAttributeManager.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"interfaces/Props.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/RelevantAudience.html":{},"classes/ReminderAPIClient.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"interfaces/S3SkillConfig.html":{},"classes/SentryErrorHandlerFactory.html":{},"classes/SettingAPIClient.html":{},"interfaces/Skill.html":{},"interfaces/SkillConstants.html":{},"interfaces/SkillHandlers.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"classes/StateManager.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"interfaces/Thing.html":{},"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{},"interfaces/TrashCollectionAlert.html":{},"classes/UserProfileAPIClient.html":{},"interfaces/WeatherAlert.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["result2",{"_index":274,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["results",{"_index":193,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"interfaces/AttributeType.html":{},"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/BaseSkillConfig.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"interfaces/CreativeWork.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/DeviceAPIClient.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/ErrorHandlerBuilder.html":{},"interfaces/Factory.html":{},"classes/FallbackIntentFactory.html":{},"interfaces/FlashBriefingContent.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"classes/HandlerFactory-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentHandlerFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/ListManagementAPIClient.html":{},"interfaces/LocalizedAttribute.html":{},"classes/LocalizedAttributesFactory.html":{},"interfaces/MergeObjectType.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"classes/MockAttributeManager.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"interfaces/Props.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/RelevantAudience.html":{},"classes/ReminderAPIClient.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"interfaces/S3SkillConfig.html":{},"classes/SentryErrorHandlerFactory.html":{},"classes/SettingAPIClient.html":{},"interfaces/Skill.html":{},"interfaces/SkillConstants.html":{},"interfaces/SkillHandlers.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"classes/StateManager.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"interfaces/Thing.html":{},"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{},"interfaces/TrashCollectionAlert.html":{},"classes/UserProfileAPIClient.html":{},"interfaces/WeatherAlert.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["return",{"_index":79,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"interfaces/AttributeType.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/DeviceAPIClient.html":{},"interfaces/ErrorHandlerBuilder.html":{},"classes/FallbackIntentFactory.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"classes/HandlerFactory.html":{},"classes/HandlerFactory-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentHandlerFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/ListManagementAPIClient.html":{},"classes/LocalizedAttributesFactory.html":{},"interfaces/MergeObjectType.html":{},"classes/MockAttributeManager.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"classes/ProactiveClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"classes/ReminderAPIClient.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"classes/SentryErrorHandlerFactory.html":{},"classes/SettingAPIClient.html":{},"interfaces/SkillConstants.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{},"classes/StateManager.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{},"classes/UserProfileAPIClient.html":{}}}],["returns",{"_index":41,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/DBClient.html":{},"classes/DeviceAPIClient.html":{},"interfaces/ErrorHandlerBuilder.html":{},"interfaces/Factory.html":{},"classes/FallbackIntentFactory.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"classes/HandlerFactory-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentHandlerFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/ListManagementAPIClient.html":{},"classes/LocalizedAttributesFactory.html":{},"classes/MockAttributeManager.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"classes/ProactiveClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"classes/ReminderAPIClient.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"classes/SentryErrorHandlerFactory.html":{},"classes/SettingAPIClient.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{},"classes/StateManager.html":{},"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"classes/UserProfileAPIClient.html":{}}}],["run",{"_index":1816,"title":{},"body":{"index.html":{}}}],["runtime",{"_index":797,"title":{},"body":{"classes/ConstantsInterceptorFactory.html":{},"interfaces/SkillConstants.html":{}}}],["s",{"_index":1785,"title":{},"body":{"index.html":{}}}],["s3",{"_index":632,"title":{},"body":{"interfaces/BaseSkillConfig.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/S3SkillConfig.html":{},"interfaces/SkillHandlers.html":{},"miscellaneous/typealiases.html":{}}}],["s3skillconfig",{"_index":633,"title":{"interfaces/S3SkillConfig.html":{}},"body":{"interfaces/BaseSkillConfig.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/S3SkillConfig.html":{},"interfaces/SkillHandlers.html":{},"miscellaneous/typealiases.html":{}}}],["saturday",{"_index":400,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["save",{"_index":266,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["saved",{"_index":277,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["savepersistentattributes",{"_index":258,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["scope",{"_index":520,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["scope.settag('request_id",{"_index":1002,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["scope.setuser(userparams",{"_index":1004,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["scope=alexa::proactive_events",{"_index":1527,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["score",{"_index":424,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-5.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["scoreearned",{"_index":414,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-5.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["sdk",{"_index":58,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"interfaces/AttributeType.html":{},"interfaces/BaseSkillConfig.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/DeviceAPIClient.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/ErrorHandlerBuilder.html":{},"classes/FallbackIntentFactory.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/ListManagementAPIClient.html":{},"interfaces/MergeObjectType.html":{},"classes/MockAttributeManager.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/ReminderAPIClient.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"interfaces/S3SkillConfig.html":{},"classes/SentryErrorHandlerFactory.html":{},"classes/SettingAPIClient.html":{},"interfaces/SkillConstants.html":{},"interfaces/SkillHandlers.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{},"classes/StateManager.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"classes/UserProfileAPIClient.html":{},"index.html":{}}}],["search",{"_index":177,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["searchproduct",{"_index":179,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["searchproduct(condition",{"_index":1126,"title":{},"body":{"classes/ISPProductClient.html":{}}}],["seller",{"_index":369,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-3.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["sentry",{"_index":946,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["sentry.captureevent",{"_index":969,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["sentry.configurescope(scope",{"_index":1001,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["sentry.init",{"_index":948,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["sentry/node",{"_index":947,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["sentrydefaulterrorhandler",{"_index":978,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["sentryerrorhandlerfactory",{"_index":967,"title":{"classes/SentryErrorHandlerFactory.html":{}},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["sentryerrorhandlerfactory.init",{"_index":956,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["sentryerrorhandlerfactory.init().gethandler",{"_index":953,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["serviceclient",{"_index":1805,"title":{},"body":{"index.html":{}}}],["serviceclientfactory",{"_index":727,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["services",{"_index":60,"title":{},"body":{"classes/APIClient.html":{},"classes/ContentBuilder-1.html":{},"classes/DeviceAPIClient.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/ListManagementAPIClient.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/ReminderAPIClient.html":{},"interfaces/ResponseContent-1.html":{},"classes/SettingAPIClient.html":{},"classes/UserProfileAPIClient.html":{}}}],["services.listmanagement",{"_index":1190,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["services.monetization.inskillproduct",{"_index":65,"title":{},"body":{"classes/APIClient.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/ProductListResponseContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["services.monetization.inskillproductsresponse",{"_index":63,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["services.remindermanagement",{"_index":1649,"title":{},"body":{"classes/ReminderAPIClient.html":{}}}],["session",{"_index":124,"title":{},"body":{"classes/APIClient.html":{},"interfaces/AttributeType.html":{},"classes/ISPProductClient.html":{},"classes/MockAttributeManager.html":{}}}],["set",{"_index":979,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["setacceptedpurchaseresult",{"_index":763,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{}}}],["setacceptedrefundresult",{"_index":1612,"title":{},"body":{"classes/RefundResponseContentBuilder.html":{}}}],["setalertsource",{"_index":1371,"title":{},"body":{"classes/ParameterFactory-7.html":{},"interfaces/PayloadBuilder-2.html":{}}}],["setalertsource(source",{"_index":557,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["setalerttype",{"_index":1373,"title":{},"body":{"classes/ParameterFactory-7.html":{},"interfaces/PayloadBuilder-2.html":{}}}],["setalerttype(type",{"_index":558,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["setawayteamstatistic",{"_index":1344,"title":{},"body":{"classes/ParameterFactory-5.html":{},"interfaces/PayloadBuilder-3.html":{}}}],["setawayteamstatistic(teamname",{"_index":566,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["setbookingtime",{"_index":1268,"title":{},"body":{"classes/ParameterFactory-1.html":{},"interfaces/PayloadBuilder-6.html":{}}}],["setbookingtime(date",{"_index":593,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["setbrokername",{"_index":1270,"title":{},"body":{"classes/ParameterFactory-1.html":{},"interfaces/PayloadBuilder-6.html":{}}}],["setbrokername(name",{"_index":594,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["setbuydirective",{"_index":649,"title":{},"body":{"classes/BuyContentBuilder.html":{}}}],["setbuydirective(productid",{"_index":661,"title":{},"body":{"classes/BuyContentBuilder.html":{}}}],["setcanceldirective",{"_index":1597,"title":{},"body":{"classes/RefundContentBuilder.html":{}}}],["setcanceldirective(productid",{"_index":1600,"title":{},"body":{"classes/RefundContentBuilder.html":{}}}],["setcannotbuytheproductresponse",{"_index":860,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["setcollectiondayofweek",{"_index":1362,"title":{},"body":{"classes/ParameterFactory-6.html":{},"interfaces/PayloadBuilder-1.html":{}}}],["setcollectiondayofweek(collectiondayofweek",{"_index":551,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["setcontentname",{"_index":1239,"title":{},"body":{"classes/ParameterFactory.html":{},"interfaces/PayloadBuilder-7.html":{}}}],["setcontentname(name",{"_index":599,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["setdeclinedpurchaseresult",{"_index":764,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{}}}],["setdeclinedrefundresult",{"_index":1613,"title":{},"body":{"classes/RefundResponseContentBuilder.html":{}}}],["setdistributionmethod",{"_index":1246,"title":{},"body":{"classes/ParameterFactory.html":{},"interfaces/PayloadBuilder-7.html":{}}}],["setdistributionmethod(method",{"_index":604,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["setentertimestamp",{"_index":1301,"title":{},"body":{"classes/ParameterFactory-3.html":{},"interfaces/PayloadBuilder-5.html":{}}}],["setentertimestamp(date",{"_index":581,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["setentitledproductresponse",{"_index":865,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["seterrorresponse",{"_index":940,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["seterrorresponse('speech",{"_index":957,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["seterrorresponse(speechtext",{"_index":942,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["seterrortrackerinterceptor",{"_index":983,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["setevent",{"_index":1445,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["setevent(event",{"_index":1471,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["seteventleaguename",{"_index":1339,"title":{},"body":{"classes/ParameterFactory-5.html":{},"interfaces/PayloadBuilder-3.html":{}}}],["seteventleaguename(name",{"_index":564,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["seteventname",{"_index":1446,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["seteventname(name",{"_index":1473,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["setexpectedarrival",{"_index":1303,"title":{},"body":{"classes/ParameterFactory-3.html":{},"interfaces/PayloadBuilder-5.html":{}}}],["setexpectedarrival(date",{"_index":583,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["setexpirytime",{"_index":1447,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["setexpirytime(date",{"_index":1475,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["setfailedpurchaseresult",{"_index":765,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{}}}],["setfailedrefundresult",{"_index":1614,"title":{},"body":{"classes/RefundResponseContentBuilder.html":{}}}],["setgamename",{"_index":1324,"title":{},"body":{"classes/ParameterFactory-4.html":{},"interfaces/PayloadBuilder-8.html":{}}}],["setgamename(name",{"_index":613,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["setgameoffername",{"_index":1322,"title":{},"body":{"classes/ParameterFactory-4.html":{},"interfaces/PayloadBuilder-8.html":{}}}],["setgameoffername(name",{"_index":614,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["sethandle",{"_index":689,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"interfaces/ErrorHandlerBuilder.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"classes/IntentHandlerBuilder.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["sethandle((handlerinput",{"_index":959,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["sethandle(handle",{"_index":703,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"interfaces/ErrorHandlerBuilder.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/IntentHandlerBuilder.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["sethandlecondition",{"_index":690,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"classes/IntentHandlerBuilder.html":{},"classes/LaunchRequestrBuilder.html":{}}}],["sethandlecondition(condition",{"_index":705,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/IntentHandlerBuilder.html":{},"classes/LaunchRequestrBuilder.html":{}}}],["sethometeamstatistic",{"_index":1341,"title":{},"body":{"classes/ParameterFactory-5.html":{},"interfaces/PayloadBuilder-3.html":{}}}],["sethometeamstatistic(teamname",{"_index":565,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["setinvitername",{"_index":1315,"title":{},"body":{"classes/ParameterFactory-4.html":{},"interfaces/PayloadBuilder-8.html":{}}}],["setinvitername(name",{"_index":608,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["setinvitetype",{"_index":1320,"title":{},"body":{"classes/ParameterFactory-4.html":{},"interfaces/PayloadBuilder-8.html":{}}}],["setinvitetype(type",{"_index":611,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["setlistproducts",{"_index":1576,"title":{},"body":{"classes/ProductListResponseContentBuilder.html":{}}}],["setlocalizedattributes",{"_index":1448,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["setlocalizedattributes(localizedattributes",{"_index":1477,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["setmediatype",{"_index":1241,"title":{},"body":{"classes/ParameterFactory.html":{},"interfaces/PayloadBuilder-7.html":{}}}],["setmediatype(type",{"_index":600,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["setmessagecount",{"_index":1283,"title":{},"body":{"classes/ParameterFactory-2.html":{},"interfaces/PayloadBuilder-4.html":{}}}],["setmessagecount(count",{"_index":570,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["setmessagecreator",{"_index":1281,"title":{},"body":{"classes/ParameterFactory-2.html":{},"interfaces/PayloadBuilder-4.html":{}}}],["setmessagecreator(name",{"_index":569,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["setmessagefreshness",{"_index":1287,"title":{},"body":{"classes/ParameterFactory-2.html":{},"interfaces/PayloadBuilder-4.html":{}}}],["setmessagefreshness(freshness",{"_index":573,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["setmessagestatus",{"_index":1289,"title":{},"body":{"classes/ParameterFactory-2.html":{},"interfaces/PayloadBuilder-4.html":{}}}],["setmessagestatus(messagestatus",{"_index":575,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["setmessageurgency",{"_index":1285,"title":{},"body":{"classes/ParameterFactory-2.html":{},"interfaces/PayloadBuilder-4.html":{}}}],["setmessageurgency(urgency",{"_index":571,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["setnoentitledproductresponse",{"_index":1598,"title":{},"body":{"classes/RefundContentBuilder.html":{}}}],["setoccasiontype",{"_index":1262,"title":{},"body":{"classes/ParameterFactory-1.html":{},"interfaces/PayloadBuilder-6.html":{}}}],["setoccasiontype(type",{"_index":589,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["setorderstatus",{"_index":1299,"title":{},"body":{"classes/ParameterFactory-3.html":{},"interfaces/PayloadBuilder-5.html":{}}}],["setorderstatus(status",{"_index":579,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["setpayload",{"_index":1449,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["setpayload(payload",{"_index":1479,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["setpersistentattributes",{"_index":256,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["setpersistentattributes(attribute",{"_index":1224,"title":{},"body":{"classes/MockAttributeManager.html":{}}}],["setproduct",{"_index":834,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["setproduct(product",{"_index":1095,"title":{},"body":{"classes/ISPContentBuilder.html":{}}}],["setproductdetail",{"_index":1567,"title":{},"body":{"classes/ProductDetailResponseContentBuilder.html":{}}}],["setproductlists",{"_index":1577,"title":{},"body":{"classes/ProductListResponseContentBuilder.html":{}}}],["setproductlists(list",{"_index":1582,"title":{},"body":{"classes/ProductListResponseContentBuilder.html":{}}}],["setproductname",{"_index":835,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["setproductname(name",{"_index":1097,"title":{},"body":{"classes/ISPContentBuilder.html":{}}}],["setproductnotfoundresponse",{"_index":857,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["setproductsnotfoundresponse",{"_index":853,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["setprovider",{"_index":1248,"title":{},"body":{"classes/ParameterFactory.html":{},"interfaces/PayloadBuilder-7.html":{}}}],["setprovider(providername",{"_index":606,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["setprovidername",{"_index":1266,"title":{},"body":{"classes/ParameterFactory-1.html":{},"interfaces/PayloadBuilder-6.html":{}}}],["setprovidername(name",{"_index":592,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["setreferenceid",{"_index":1450,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["setreferenceid(id",{"_index":1481,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["setrelationshiptoinvitee",{"_index":1317,"title":{},"body":{"classes/ParameterFactory-4.html":{},"interfaces/PayloadBuilder-8.html":{}}}],["setrelationshiptoinvitee(relation",{"_index":609,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["setrelevantaudience",{"_index":1451,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["setrelevantaudience(type",{"_index":1483,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["setrequestattributes",{"_index":253,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["setrequestattributes(attribute",{"_index":1226,"title":{},"body":{"classes/MockAttributeManager.html":{}}}],["setsessionattributes",{"_index":255,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["setsessionattributes(attribute",{"_index":1228,"title":{},"body":{"classes/MockAttributeManager.html":{}}}],["setstarttime",{"_index":1243,"title":{},"body":{"classes/ParameterFactory.html":{},"interfaces/PayloadBuilder-7.html":{}}}],["setstarttime(date",{"_index":603,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["setsubject",{"_index":1264,"title":{},"body":{"classes/ParameterFactory-1.html":{},"interfaces/PayloadBuilder-6.html":{}}}],["setsubject(subject",{"_index":591,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["settimestamp",{"_index":1452,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["settimestamp(date",{"_index":1487,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["settingapiclient",{"_index":1658,"title":{"classes/SettingAPIClient.html":{}},"body":{"classes/SettingAPIClient.html":{}}}],["settings",{"_index":843,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["setunsupportedispresponse",{"_index":848,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["several",{"_index":175,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["single",{"_index":302,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["skill",{"_index":347,"title":{"interfaces/Skill.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"classes/ContentBuilder-1.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/FlashBriefingContent.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/ISPContentBuilder.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/ResponseContent-1.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["skillconfig",{"_index":638,"title":{},"body":{"interfaces/BaseSkillConfig.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/S3SkillConfig.html":{},"interfaces/SkillHandlers.html":{},"miscellaneous/typealiases.html":{}}}],["skillconstants",{"_index":629,"title":{"interfaces/SkillConstants.html":{}},"body":{"interfaces/BaseSkillConfig.html":{},"classes/ConstantsInterceptorFactory.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/S3SkillConfig.html":{},"interfaces/SkillConstants.html":{},"interfaces/SkillHandlers.html":{}}}],["skillhandlers",{"_index":639,"title":{"interfaces/SkillHandlers.html":{}},"body":{"interfaces/BaseSkillConfig.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/S3SkillConfig.html":{},"interfaces/SkillHandlers.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{}}}],["skillhandlersbuilder",{"_index":1675,"title":{"interfaces/SkillHandlersBuilder.html":{}},"body":{"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{}}}],["skillhandlersfactory",{"_index":1693,"title":{"classes/SkillHandlersFactory.html":{}},"body":{"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{}}}],["snow_storm",{"_index":408,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["soccer",{"_index":418,"title":{"interfaces/Soccer.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["socialgameinvite",{"_index":494,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-4.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["socialgameinvite.available.payloadbuilder",{"_index":1314,"title":{},"body":{"classes/ParameterFactory-4.html":{}}}],["socialgameinvite.eventname",{"_index":452,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["socialgameinvite.payload",{"_index":461,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["something",{"_index":958,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["sorry",{"_index":841,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"interfaces/AttributeType.html":{},"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/BaseSkillConfig.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"interfaces/CreativeWork.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/DeviceAPIClient.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/ErrorHandlerBuilder.html":{},"interfaces/Factory.html":{},"classes/FallbackIntentFactory.html":{},"interfaces/FlashBriefingContent.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"classes/HandlerFactory-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentHandlerFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/ListManagementAPIClient.html":{},"interfaces/LocalizedAttribute.html":{},"classes/LocalizedAttributesFactory.html":{},"interfaces/MergeObjectType.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"classes/MockAttributeManager.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"interfaces/Props.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/RelevantAudience.html":{},"classes/ReminderAPIClient.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"interfaces/S3SkillConfig.html":{},"classes/SentryErrorHandlerFactory.html":{},"classes/SettingAPIClient.html":{},"interfaces/Skill.html":{},"interfaces/SkillConstants.html":{},"interfaces/SkillHandlers.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"classes/StateManager.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"interfaces/Thing.html":{},"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{},"interfaces/TrashCollectionAlert.html":{},"classes/UserProfileAPIClient.html":{},"interfaces/WeatherAlert.html":{}}}],["speak",{"_index":739,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["speak(\"i",{"_index":741,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["speak('sorry",{"_index":960,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["speak(speechtext",{"_index":976,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["specific",{"_index":168,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["speech",{"_index":955,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["speechtext",{"_index":776,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"interfaces/ErrorHandlerBuilder.html":{},"classes/ISPContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["sportsevent",{"_index":416,"title":{"interfaces/SportsEvent.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-5.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["sportsevent.eventname",{"_index":447,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["sportsevent.payload",{"_index":456,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["sportsevent.updated.payloadbuilder",{"_index":1332,"title":{},"body":{"classes/ParameterFactory-5.html":{}}}],["sportsteam",{"_index":422,"title":{"interfaces/SportsTeam.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["stack",{"_index":973,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["started",{"_index":1779,"title":{"index.html":{}},"body":{"index.html":{}}}],["starttime",{"_index":314,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["state",{"_index":478,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"classes/StateManager.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["state.freshness",{"_index":1288,"title":{},"body":{"classes/ParameterFactory-2.html":{}}}],["state.status",{"_index":1290,"title":{},"body":{"classes/ParameterFactory-2.html":{}}}],["statemanager",{"_index":1705,"title":{"classes/StateManager.html":{}},"body":{"classes/StateManager.html":{}}}],["statemanager.getcurrentstate(attributemanager",{"_index":1714,"title":{},"body":{"classes/StateManager.html":{}}}],["statemanager.updatestate(attributemanager",{"_index":1712,"title":{},"body":{"classes/StateManager.html":{}}}],["static",{"_index":685,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"classes/ConstantsInterceptorFactory.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"interfaces/ErrorHandlerBuilder.html":{},"classes/FallbackIntentFactory.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerFactory.html":{},"classes/HandlerFactory-1.html":{},"classes/IntentHandlerFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LocalizedAttributesFactory.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/SkillConstants.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{},"classes/StateManager.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{}}}],["status",{"_index":133,"title":{},"body":{"classes/APIClient.html":{},"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/ISPProductClient.html":{},"classes/ListManagementAPIClient.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-3.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["statuscode",{"_index":534,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["stop",{"_index":847,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["stream",{"_index":306,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["streamurl",{"_index":1021,"title":{},"body":{"interfaces/FlashBriefingContent.html":{}}}],["string",{"_index":33,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"interfaces/AttributeType.html":{},"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/BaseSkillConfig.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"interfaces/CreativeWork.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/DeviceAPIClient.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/ErrorHandlerBuilder.html":{},"interfaces/Factory.html":{},"classes/FallbackIntentFactory.html":{},"interfaces/FlashBriefingContent.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/HandlerFactory-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentHandlerFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/ListManagementAPIClient.html":{},"interfaces/LocalizedAttribute.html":{},"classes/LocalizedAttributesFactory.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"classes/MockAttributeManager.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-7.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"interfaces/Props.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/RelevantAudience.html":{},"classes/ReminderAPIClient.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"interfaces/S3SkillConfig.html":{},"classes/SentryErrorHandlerFactory.html":{},"classes/SettingAPIClient.html":{},"interfaces/Skill.html":{},"interfaces/SkillConstants.html":{},"interfaces/SkillHandlers.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"classes/StateManager.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"interfaces/Thing.html":{},"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{},"interfaces/TrashCollectionAlert.html":{},"classes/UserProfileAPIClient.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["subject",{"_index":350,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-1.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["summary",{"_index":1788,"title":{},"body":{"index.html":{}}}],["sunday",{"_index":401,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["super",{"_index":1139,"title":{},"body":{"classes/IntentHandlerBuilder.html":{}}}],["super(handlerinput.requestenvelope",{"_index":117,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["super(locale",{"_index":831,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["supportedhandlertype",{"_index":885,"title":{},"body":{"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/FallbackIntentFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"miscellaneous/typealiases.html":{}}}],["supports",{"_index":839,"title":{},"body":{"classes/ContentBuilder-1.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/FallbackIntentFactory.html":{},"classes/ISPContentBuilder.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/ResponseContent-1.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{}}}],["supports(type",{"_index":1145,"title":{},"body":{"classes/LaunchRequestHandlerFactory.html":{}}}],["switch",{"_index":1494,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["system",{"_index":990,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["system.device",{"_index":995,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["system.device.deviceid",{"_index":997,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["system.user.userid",{"_index":994,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["t",{"_index":624,"title":{},"body":{"interfaces/BaseSkillConfig.html":{},"classes/ConstantsInterceptorFactory.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/S3SkillConfig.html":{},"interfaces/SkillConstants.html":{},"interfaces/SkillHandlers.html":{},"classes/StateManager.html":{}}}],["tablename",{"_index":637,"title":{},"body":{"interfaces/BaseSkillConfig.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/S3SkillConfig.html":{},"interfaces/SkillHandlers.html":{}}}],["target",{"_index":166,"title":{},"body":{"classes/APIClient.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/FallbackIntentFactory.html":{},"classes/ISPProductClient.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{}}}],["team",{"_index":423,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-5.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["teamname",{"_index":415,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-5.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["tell",{"_index":963,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["test",{"_index":268,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["test1",{"_index":272,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["testhandler",{"_index":1717,"title":{},"body":{"classes/StateManager.html":{}}}],["testlint",{"_index":1815,"title":{},"body":{"index.html":{}}}],["text",{"_index":543,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"classes/ContentBuilder.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/ISPContentBuilder.html":{},"interfaces/LocalizedAttribute.html":{},"classes/LocalizedAttributesFactory.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"interfaces/Props.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/ResponseContent.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["thanks",{"_index":779,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{}}}],["thing",{"_index":311,"title":{"interfaces/Thing.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["think",{"_index":743,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["this.apiendpoint",{"_index":1513,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["this.attributemanager",{"_index":118,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["this.attributemanager.getsessionattributes",{"_index":146,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["this.attributemanager.setsessionattributes",{"_index":151,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["this.body",{"_index":1515,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["this.body.event",{"_index":1537,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["this.body.event.name",{"_index":1539,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["this.body.event.payload",{"_index":1538,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["this.body.expirytime",{"_index":1536,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["this.body.localizedattributes",{"_index":1540,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["this.body.referenceid",{"_index":1521,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["this.body.relevantaudience",{"_index":1543,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["this.body.timestamp",{"_index":1535,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["this.cacheusage",{"_index":121,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["this.canhandle",{"_index":1045,"title":{},"body":{"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"classes/HandlerFactory.html":{}}}],["this.canhandlefilter",{"_index":1037,"title":{},"body":{"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"classes/HandlerFactory.html":{}}}],["this.canhandlefilter(handlerinput",{"_index":720,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"classes/HandlerFactory.html":{},"classes/IntentHandlerBuilder.html":{},"classes/LaunchRequestrBuilder.html":{}}}],["this.client",{"_index":911,"title":{},"body":{"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{}}}],["this.client.get(param).promise",{"_index":919,"title":{},"body":{"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{}}}],["this.client.put(param).promise",{"_index":922,"title":{},"body":{"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{}}}],["this.clientid",{"_index":1509,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["this.clientsecret",{"_index":1511,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["this.contents",{"_index":781,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{}}}],["this.contents.directive",{"_index":677,"title":{},"body":{"classes/BuyContentBuilder.html":{},"classes/RefundContentBuilder.html":{}}}],["this.contents.directives",{"_index":816,"title":{},"body":{"classes/ContentBuilder.html":{},"interfaces/ResponseContent.html":{}}}],["this.contents.directives.concat(directives",{"_index":817,"title":{},"body":{"classes/ContentBuilder.html":{},"interfaces/ResponseContent.html":{}}}],["this.contents.directives.push(directive",{"_index":818,"title":{},"body":{"classes/ContentBuilder.html":{},"interfaces/ResponseContent.html":{}}}],["this.contents.reprompttext",{"_index":815,"title":{},"body":{"classes/ContentBuilder.html":{},"interfaces/ResponseContent.html":{}}}],["this.contents.speechtext",{"_index":814,"title":{},"body":{"classes/ContentBuilder.html":{},"interfaces/ResponseContent.html":{}}}],["this.createaxiosrequestobject('delete",{"_index":226,"title":{},"body":{"classes/APIClient-1.html":{}}}],["this.createaxiosrequestobject('get",{"_index":229,"title":{},"body":{"classes/APIClient-1.html":{}}}],["this.createaxiosrequestobject('post",{"_index":230,"title":{},"body":{"classes/APIClient-1.html":{}}}],["this.createaxiosrequestobject('put",{"_index":231,"title":{},"body":{"classes/APIClient-1.html":{}}}],["this.createaxiosrequestobject(productid",{"_index":98,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["this.db",{"_index":259,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["this.delete(`${listid}/items/${itemid",{"_index":1201,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["this.delete(alertid",{"_index":1650,"title":{},"body":{"classes/ReminderAPIClient.html":{}}}],["this.delete(listid",{"_index":1197,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["this.endpoint",{"_index":73,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ISPProductClient.html":{}}}],["this.endpoint}${p.replace(/\\/\\//g",{"_index":222,"title":{},"body":{"classes/APIClient-1.html":{}}}],["this.endpoint}/v1/users/~current/skills/~current/inskillproducts",{"_index":78,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["this.fetchlists",{"_index":158,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["this.findproductbyid(condition.productid",{"_index":188,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["this.findproductbyname(condition.productname",{"_index":187,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["this.findproductbyno(condition.userinputno",{"_index":186,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["this.get",{"_index":106,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{},"classes/ListManagementAPIClient.html":{},"classes/ReminderAPIClient.html":{}}}],["this.get('profile.email",{"_index":1776,"title":{},"body":{"classes/UserProfileAPIClient.html":{}}}],["this.get('profile.givenname",{"_index":1775,"title":{},"body":{"classes/UserProfileAPIClient.html":{}}}],["this.get('profile.mobilenumber",{"_index":1777,"title":{},"body":{"classes/UserProfileAPIClient.html":{}}}],["this.get('profile.name",{"_index":1193,"title":{},"body":{"classes/ListManagementAPIClient.html":{},"classes/UserProfileAPIClient.html":{}}}],["this.get(`${deviceid}/settings/address",{"_index":936,"title":{},"body":{"classes/DeviceAPIClient.html":{}}}],["this.get(`${deviceid}/settings/address/countryandpostalcode",{"_index":935,"title":{},"body":{"classes/DeviceAPIClient.html":{}}}],["this.get(`${deviceid}/settings/system.distanceunits",{"_index":1673,"title":{},"body":{"classes/SettingAPIClient.html":{}}}],["this.get(`${deviceid}/settings/system.temperatureunit",{"_index":1672,"title":{},"body":{"classes/SettingAPIClient.html":{}}}],["this.get(`${deviceid}/settings/system.timezone",{"_index":1671,"title":{},"body":{"classes/SettingAPIClient.html":{}}}],["this.get(`${listid}/${status",{"_index":1194,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["this.get(`${listid}/items/${itemid",{"_index":1198,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["this.get(alertid",{"_index":1651,"title":{},"body":{"classes/ReminderAPIClient.html":{}}}],["this.get(productid",{"_index":107,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["this.getacceptedpurchaseresult",{"_index":785,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{}}}],["this.getacceptedrefundresult",{"_index":1625,"title":{},"body":{"classes/RefundResponseContentBuilder.html":{}}}],["this.getaccesstoken",{"_index":1546,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["this.getbody",{"_index":1544,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["this.getcachedproducts",{"_index":148,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["this.getcannotbuytheproductresponse",{"_index":861,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["this.getcurrentstate(attributemanager",{"_index":1739,"title":{},"body":{"classes/StateManager.html":{}}}],["this.getdeclinedpurchaseresult",{"_index":782,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{}}}],["this.getdeclinedrefundresult",{"_index":1622,"title":{},"body":{"classes/RefundResponseContentBuilder.html":{}}}],["this.getentitledproductresponse",{"_index":866,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["this.getfailedpurchaseresult",{"_index":791,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{}}}],["this.getfailedrefundresult",{"_index":1626,"title":{},"body":{"classes/RefundResponseContentBuilder.html":{}}}],["this.getlistproducts",{"_index":1593,"title":{},"body":{"classes/ProductListResponseContentBuilder.html":{}}}],["this.getnoentitledproductresponse",{"_index":1605,"title":{},"body":{"classes/RefundContentBuilder.html":{}}}],["this.getpayload",{"_index":1254,"title":{},"body":{"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{}}}],["this.getproduct",{"_index":774,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{}}}],["this.getproductdetail",{"_index":1571,"title":{},"body":{"classes/ProductDetailResponseContentBuilder.html":{}}}],["this.getproductlists",{"_index":1585,"title":{},"body":{"classes/ProductListResponseContentBuilder.html":{}}}],["this.getproductname",{"_index":856,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["this.getproductnotfoundresponse",{"_index":858,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["this.getproductsnotfoundresponse",{"_index":854,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["this.getrequestparams(authresult.access_token",{"_index":1549,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["this.getunsupportedispresponse",{"_index":849,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["this.geturl(path",{"_index":224,"title":{},"body":{"classes/APIClient-1.html":{}}}],["this.geturl(productid",{"_index":82,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["this.handle",{"_index":1038,"title":{},"body":{"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"classes/HandlerFactory.html":{}}}],["this.handlerfilter",{"_index":1062,"title":{},"body":{"classes/HandlerBuilder-1.html":{}}}],["this.handlerfilter(handlerinput",{"_index":1061,"title":{},"body":{"classes/HandlerBuilder-1.html":{}}}],["this.hasproducts",{"_index":164,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["this.intentname",{"_index":1140,"title":{},"body":{"classes/IntentHandlerBuilder.html":{}}}],["this.isdebug",{"_index":75,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/ISPProductClient.html":{}}}],["this.isjp",{"_index":775,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["this.listproducts",{"_index":1584,"title":{},"body":{"classes/ProductListResponseContentBuilder.html":{}}}],["this.locale",{"_index":71,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{}}}],["this.path}${path",{"_index":221,"title":{},"body":{"classes/APIClient-1.html":{}}}],["this.persistent",{"_index":257,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["this.post(reminderrequest",{"_index":1653,"title":{},"body":{"classes/ReminderAPIClient.html":{}}}],["this.post(request",{"_index":1195,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["this.primarykey",{"_index":914,"title":{},"body":{"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{}}}],["this.product",{"_index":833,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["this.productname",{"_index":832,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["this.products",{"_index":139,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["this.products.find(product",{"_index":170,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["this.products.length",{"_index":140,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["this.products[userinputno",{"_index":167,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["this.put(reminderrequest",{"_index":1652,"title":{},"body":{"classes/ReminderAPIClient.html":{}}}],["this.put(request",{"_index":1196,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["this.request",{"_index":249,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["this.responsebuilder",{"_index":812,"title":{},"body":{"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{}}}],["this.responsebuilder.adddirective(directive",{"_index":822,"title":{},"body":{"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{}}}],["this.responsebuilder.getresponse",{"_index":823,"title":{},"body":{"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{}}}],["this.responsebuilder.reprompt(reprompttext",{"_index":820,"title":{},"body":{"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{}}}],["this.responsebuilder.speak(speechtext",{"_index":819,"title":{},"body":{"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{}}}],["this.session",{"_index":250,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["this.sethandle(handle",{"_index":1039,"title":{},"body":{"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"classes/HandlerFactory.html":{}}}],["this.sethandle(handler.handle",{"_index":1044,"title":{},"body":{"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"classes/HandlerFactory.html":{}}}],["this.sethandlecondition(condition",{"_index":1040,"title":{},"body":{"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"classes/HandlerFactory.html":{}}}],["this.sethandlecondition(handler.canhandle",{"_index":1042,"title":{},"body":{"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"classes/HandlerFactory.html":{}}}],["this.tablename",{"_index":916,"title":{},"body":{"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{}}}],["this.token",{"_index":69,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ISPProductClient.html":{}}}],["this.updatestate(attributemanager",{"_index":1738,"title":{},"body":{"classes/StateManager.html":{}}}],["throw",{"_index":183,"title":{},"body":{"classes/APIClient.html":{},"classes/ContentBuilder-1.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"classes/HandlerFactory.html":{},"classes/HandlerFactory-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/IntentHandlerFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/ProactiveClient.html":{},"interfaces/ResponseContent-1.html":{},"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{}}}],["thunder_storm",{"_index":409,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["thursday",{"_index":398,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["timestamp",{"_index":528,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["titletext",{"_index":1022,"title":{},"body":{"interfaces/FlashBriefingContent.html":{}}}],["tmergetargethandler",{"_index":873,"title":{"interfaces/TMergeTargetHandler.html":{}},"body":{"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/FallbackIntentFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{}}}],["token",{"_index":13,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ISPProductClient.html":{},"classes/ProactiveClient.html":{}}}],["token_type",{"_index":522,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["tornado",{"_index":406,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["track",{"_index":981,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["translation",{"_index":1755,"title":{},"body":{"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{}}}],["translationbuilder",{"_index":1740,"title":{"interfaces/TranslationBuilder.html":{}},"body":{"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{}}}],["translationfactory",{"_index":1757,"title":{"classes/TranslationFactory.html":{}},"body":{"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{}}}],["translationobject",{"_index":1751,"title":{"interfaces/TranslationObject.html":{}},"body":{"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{}}}],["trashcollectionalert",{"_index":402,"title":{"interfaces/TrashCollectionAlert.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-6.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["trashcollectionalert.activated.payloadbuilder",{"_index":1354,"title":{},"body":{"classes/ParameterFactory-6.html":{}}}],["trashcollectionalert.eventname",{"_index":453,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["trashcollectionalert.payload",{"_index":454,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["trequesthandler",{"_index":876,"title":{"interfaces/TRequestHandler.html":{}},"body":{"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/FallbackIntentFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{}}}],["true",{"_index":68,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"interfaces/AttributeType.html":{},"classes/BuyIntentHandlerBuilder.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"interfaces/ErrorHandlerBuilder.html":{},"classes/FallbackIntentFactory.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"classes/HandlerFactory.html":{},"classes/ISPProductClient.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/MockAttributeManager.html":{},"classes/ProactiveClient.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{}}}],["try",{"_index":135,"title":{},"body":{"classes/APIClient.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/ProactiveClient.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["tuesday",{"_index":396,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["type",{"_index":31,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/BaseSkillConfig.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"interfaces/CreativeWork.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"classes/DeviceAPIClient.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/ErrorHandlerBuilder.html":{},"interfaces/Factory.html":{},"classes/FallbackIntentFactory.html":{},"interfaces/FlashBriefingContent.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"classes/HandlerFactory-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentHandlerFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/ListManagementAPIClient.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MergeObjectType.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"classes/MockAttributeManager.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-7.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"interfaces/Props.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/RelevantAudience.html":{},"classes/ReminderAPIClient.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"interfaces/S3SkillConfig.html":{},"classes/SentryErrorHandlerFactory.html":{},"classes/SettingAPIClient.html":{},"interfaces/Skill.html":{},"interfaces/SkillHandlers.html":{},"interfaces/SkillHandlersBuilder.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"classes/StateManager.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"interfaces/Thing.html":{},"interfaces/TranslationBuilder.html":{},"interfaces/TranslationObject.html":{},"interfaces/TrashCollectionAlert.html":{},"classes/UserProfileAPIClient.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":1829,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":285,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"classes/LocalizedAttributesFactory.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.availability",{"_index":492,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.confirmationstate",{"_index":485,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-1.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.confirmationstatus",{"_index":588,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-1.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.creativework",{"_index":493,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.datetime",{"_index":315,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.dayofweek",{"_index":552,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-6.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.distributionmethod",{"_index":605,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.game",{"_index":497,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.gameinvite",{"_index":496,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.gamestatistic",{"_index":1335,"title":{},"body":{"classes/ParameterFactory-5.html":{}}}],["types.garbagetype",{"_index":549,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-6.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.goal",{"_index":474,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-5.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.invitetype",{"_index":612,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-4.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.locale",{"_index":542,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"classes/LocalizedAttributesFactory.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.localizedattributes",{"_index":545,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"classes/LocalizedAttributesFactory.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.mediatype",{"_index":601,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.messagefreshness",{"_index":574,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.messagegroup",{"_index":480,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.messagestate",{"_index":479,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.messagestatus",{"_index":576,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.messageurgent",{"_index":572,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.occasion",{"_index":486,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.occasiontype",{"_index":590,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-1.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.offertype",{"_index":615,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-4.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.order",{"_index":483,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-3.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.orderstate",{"_index":482,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.orderstatus",{"_index":580,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-3.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.person",{"_index":436,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.relationshiptoinvitee",{"_index":610,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-4.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.soccer",{"_index":1333,"title":{},"body":{"classes/ParameterFactory-5.html":{}}}],["types.sportsevent",{"_index":475,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.trashcollectionalert",{"_index":467,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-6.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.weatheralert",{"_index":469,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.weatheralerttype",{"_index":559,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["typescript",{"_index":94,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"interfaces/AttributeType.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"interfaces/ErrorHandlerBuilder.html":{},"classes/ISPProductClient.html":{},"classes/MockAttributeManager.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"classes/ProactiveClient.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["uid",{"_index":1023,"title":{},"body":{"interfaces/FlashBriefingContent.html":{}}}],["understand",{"_index":961,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["unicast",{"_index":524,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["unread",{"_index":429,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["unsupportedispresponse",{"_index":716,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["unsupportedispresponse(locale",{"_index":729,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["update",{"_index":473,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["updateconfirmationstatus",{"_index":1260,"title":{},"body":{"classes/ParameterFactory-1.html":{},"interfaces/PayloadBuilder-6.html":{}}}],["updateconfirmationstatus(status",{"_index":587,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["updated",{"_index":339,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-5.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["updated.eventname",{"_index":470,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["updated.hasownproperty('scoreearned",{"_index":1347,"title":{},"body":{"classes/ParameterFactory-5.html":{}}}],["updated.hasownproperty('teamname",{"_index":1348,"title":{},"body":{"classes/ParameterFactory-5.html":{}}}],["updated.payload",{"_index":471,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["updated.payloadbuilder",{"_index":562,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["updated.scoreearned",{"_index":1337,"title":{},"body":{"classes/ParameterFactory-5.html":{}}}],["updated.teamname",{"_index":1338,"title":{},"body":{"classes/ParameterFactory-5.html":{}}}],["updatedate",{"_index":1024,"title":{},"body":{"interfaces/FlashBriefingContent.html":{}}}],["updategoaldata",{"_index":1336,"title":{},"body":{"classes/ParameterFactory-5.html":{},"interfaces/PayloadBuilder-3.html":{}}}],["updategoaldata(teamname",{"_index":563,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["updatehandler",{"_index":691,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"classes/IntentHandlerBuilder.html":{},"classes/LaunchRequestrBuilder.html":{}}}],["updatehandler(condition",{"_index":707,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/IntentHandlerBuilder.html":{},"classes/LaunchRequestrBuilder.html":{}}}],["updatelist",{"_index":1160,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["updatelist(listid",{"_index":1183,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["updatelistitem",{"_index":1161,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["updatelistitem(listid",{"_index":1186,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["updatereferenceid",{"_index":1453,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["updatereferenceid(id",{"_index":1489,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["updatereminder",{"_index":1633,"title":{},"body":{"classes/ReminderAPIClient.html":{}}}],["updatereminder(alertid",{"_index":1646,"title":{},"body":{"classes/ReminderAPIClient.html":{}}}],["updatesellername",{"_index":1305,"title":{},"body":{"classes/ParameterFactory-3.html":{},"interfaces/PayloadBuilder-5.html":{}}}],["updatesellername(name",{"_index":584,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["updatesessionattributes",{"_index":239,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["updatesessionattributes(handlerinput",{"_index":267,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["updatestate",{"_index":1711,"title":{},"body":{"classes/StateManager.html":{}}}],["updatestate(attributemanager",{"_index":1731,"title":{},"body":{"classes/StateManager.html":{}}}],["urgency",{"_index":438,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-2.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["urgent",{"_index":433,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-2.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["url",{"_index":77,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ISPProductClient.html":{},"classes/ProactiveClient.html":{},"index.html":{}}}],["urlencoded",{"_index":1526,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["url}/productid",{"_index":80,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["url}stages/development",{"_index":1500,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["use",{"_index":123,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["user",{"_index":283,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["userid",{"_index":993,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["userinputno",{"_index":162,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["userparams",{"_index":992,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["userparams.deviceid",{"_index":996,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["userparams.sessionid",{"_index":999,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["userprofileapiclient",{"_index":1764,"title":{"classes/UserProfileAPIClient.html":{}},"body":{"classes/UserProfileAPIClient.html":{}}}],["utilities",{"_index":1793,"title":{},"body":{"index.html":{}}}],["utility",{"_index":1780,"title":{},"body":{"index.html":{}}}],["utils",{"_index":872,"title":{},"body":{"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/FallbackIntentFactory.html":{},"classes/IntentHandlerBuilder.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"index.html":{}}}],["utils.dev",{"_index":1783,"title":{},"body":{"index.html":{}}}],["utils.git",{"_index":1811,"title":{},"body":{"index.html":{}}}],["utils/ask",{"_index":1791,"title":{},"body":{"index.html":{}}}],["utils/core",{"_index":711,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"index.html":{}}}],["utils/error",{"_index":984,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{},"index.html":{}}}],["utils/handlers",{"_index":630,"title":{},"body":{"interfaces/BaseSkillConfig.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/S3SkillConfig.html":{},"interfaces/SkillHandlers.html":{},"index.html":{}}}],["utils/isp",{"_index":1798,"title":{},"body":{"index.html":{}}}],["utils/libs/handlerbuilders.ts",{"_index":1676,"title":{},"body":{"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{}}}],["utils/libs/handlerbuilders.ts:12",{"_index":1685,"title":{},"body":{"interfaces/SkillHandlersBuilder.html":{}}}],["utils/libs/handlerbuilders.ts:13",{"_index":1687,"title":{},"body":{"interfaces/SkillHandlersBuilder.html":{}}}],["utils/libs/handlerbuilders.ts:14",{"_index":1689,"title":{},"body":{"interfaces/SkillHandlersBuilder.html":{}}}],["utils/libs/handlerbuilders.ts:15",{"_index":1683,"title":{},"body":{"interfaces/SkillHandlersBuilder.html":{}}}],["utils/libs/handlerbuilders.ts:16",{"_index":1690,"title":{},"body":{"interfaces/SkillHandlersBuilder.html":{}}}],["utils/libs/handlerbuilders.ts:19",{"_index":1704,"title":{},"body":{"classes/SkillHandlersFactory.html":{}}}],["utils/libs/models.ts",{"_index":620,"title":{},"body":{"interfaces/BaseSkillConfig.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/S3SkillConfig.html":{},"interfaces/SkillHandlers.html":{},"miscellaneous/typealiases.html":{}}}],["utils/proactive",{"_index":1794,"title":{},"body":{"index.html":{}}}],["utils/service",{"_index":1803,"title":{},"body":{"index.html":{}}}],["utils/tree/master/packages/core",{"_index":1792,"title":{},"body":{"index.html":{}}}],["utils/tree/master/packages/error",{"_index":1802,"title":{},"body":{"index.html":{}}}],["utils/tree/master/packages/handlers",{"_index":1800,"title":{},"body":{"index.html":{}}}],["utils/tree/master/packages/isp",{"_index":1799,"title":{},"body":{"index.html":{}}}],["utils/tree/master/packages/proactive",{"_index":1795,"title":{},"body":{"index.html":{}}}],["utils/tree/master/packages/serviceclient",{"_index":1804,"title":{},"body":{"index.html":{}}}],["utilspackages",{"_index":1786,"title":{},"body":{"index.html":{}}}],["uuid",{"_index":1491,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["uuid.v4",{"_index":1520,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["v0.13.0",{"_index":1823,"title":{},"body":{"index.html":{}}}],["v1/alerts/reminders",{"_index":1634,"title":{},"body":{"classes/ReminderAPIClient.html":{}}}],["v1/devices",{"_index":928,"title":{},"body":{"classes/DeviceAPIClient.html":{}}}],["v2/accounts/~current/settings",{"_index":1769,"title":{},"body":{"classes/UserProfileAPIClient.html":{}}}],["v2/devices",{"_index":1663,"title":{},"body":{"classes/SettingAPIClient.html":{}}}],["v2/householdlists",{"_index":1162,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["value",{"_index":203,"title":{},"body":{"classes/APIClient-1.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/DeviceAPIClient.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/IntentHandlerBuilder.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/ListManagementAPIClient.html":{},"classes/MockAttributeManager.html":{},"classes/ProactiveClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"classes/ReminderAPIClient.html":{},"classes/SettingAPIClient.html":{},"classes/UserProfileAPIClient.html":{}}}],["version",{"_index":1821,"title":{},"body":{"index.html":{}}}],["void",{"_index":697,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"classes/MockAttributeManager.html":{},"classes/StateManager.html":{}}}],["want",{"_index":846,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["waste_paper",{"_index":393,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["weatheralert",{"_index":410,"title":{"interfaces/WeatherAlert.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-7.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["weatheralert.activated.payloadbuilder",{"_index":1370,"title":{},"body":{"classes/ParameterFactory-7.html":{}}}],["weatheralert.alerttype",{"_index":1374,"title":{},"body":{"classes/ParameterFactory-7.html":{}}}],["weatheralert.eventname",{"_index":446,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["weatheralert.payload",{"_index":455,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["weatheralert.source",{"_index":1372,"title":{},"body":{"classes/ParameterFactory-7.html":{}}}],["weatheralerttype",{"_index":405,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["wednesday",{"_index":397,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["www",{"_index":1524,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["yarn",{"_index":1813,"title":{},"body":{"index.html":{}}}],["yes",{"_index":40,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/DBClient.html":{},"classes/HandlerFactory-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/IntentHandlerFactory.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-7.html":{},"classes/ProactiveClient.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/APIClient.html":{"url":"classes/APIClient.html","title":"class - APIClient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  APIClient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/isp/libs/client.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                endpoint\n                            \n                            \n                                    Private\n                                isDebug\n                            \n                            \n                                    Private\n                                locale\n                            \n                            \n                                    Private\n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createAxiosRequestObject\n                            \n                            \n                                    Protected\n                                    Async\n                                get\n                            \n                            \n                                    Public\n                                getProduct\n                            \n                            \n                                    Private\n                                getURL\n                            \n                            \n                                    Public\n                                listProducts\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(requestEnvelope: RequestEnvelope, isDebug: boolean)\n                    \n                \n                        \n                            \n                                Defined in packages/isp/libs/client.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        requestEnvelope\n                                                  \n                                                        \n                                                                    RequestEnvelope\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        isDebug\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            endpoint\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/isp/libs/client.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isDebug\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/isp/libs/client.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            locale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/isp/libs/client.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/isp/libs/client.ts:9\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createAxiosRequestObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createAxiosRequestObject(productId?: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/client.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productId\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     AxiosRequestConfig\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Async\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(productId?: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/client.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productId\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getProduct\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getProduct(productId: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/client.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getURL\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getURL(productId?: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/client.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productId\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            listProducts\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    listProducts()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/client.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import axios, { AxiosRequestConfig } from 'axios'\nimport { getLocale, getApiAccessToken, HandlerInput, AttributesManager } from 'ask-sdk-core'\nimport { RequestEnvelope, services } from 'ask-sdk-model'\nimport InSkillProductsResponse = services.monetization.InSkillProductsResponse\nimport InSkillProduct = services.monetization.InSkillProduct\ntype InskillProducts = InSkillProduct[]\n\nexport class APIClient {\n    private token: string\n    private locale: string\n    private endpoint: string\n    private isDebug: boolean\n    public constructor (requestEnvelope: RequestEnvelope, isDebug: boolean = true) {\n        this.token = getApiAccessToken(requestEnvelope)\n        this.locale = getLocale(requestEnvelope)\n        this.endpoint = requestEnvelope.context.System.apiEndpoint\n        this.isDebug = isDebug\n    }\n    private getURL (productId?: string): string {\n        const url = `${this.endpoint}/v1/users/~current/skills/~current/inSkillProducts`\n        if (!productId) return url\n        return `${url}/productId`\n    }\n    private createAxiosRequestObject (productId?: string): AxiosRequestConfig {\n        return {\n            method: 'GET',\n            url: this.getURL(productId),\n            headers: {\n                'Content-type': 'application/json',\n                'Accept-Language': this.locale,\n                'Authorization': `Bearer ${this.token}`\n            }\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    protected async get (productId?: string): Promise {\n        const param = this.createAxiosRequestObject(productId)\n        if (this.isDebug) console.log('[Get ISP product] %j', param)\n        const { data } = await axios(param)\n        if (this.isDebug) console.log('[Get ISP product] %j', data)\n        return data\n    }\n    public listProducts (): Promise {\n        return this.get()\n    }\n    public getProduct (productId: string): Promise {\n        return this.get(productId)\n    }\n}\n\nexport class ISPProductClient extends APIClient {\n    private attributeManager: AttributesManager\n    private cacheUsage: 'enable' | 'disable' = 'enable'\n    private products: InskillProducts = []\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    constructor (handlerInput: HandlerInput, isDebug: boolean = true) {\n        super(handlerInput.requestEnvelope, isDebug)\n        this.attributeManager = handlerInput.attributesManager\n    }\n    public getCacheStatus (): 'enable' | 'disable' {\n        return this.cacheUsage\n    }\n    /**\n   * Disallow to use the session attributes item at first\n   **/\n    public disabledCache (): this {\n        this.cacheUsage = 'disable'\n        return this\n    }\n    /**\n   * Allow to use the session attributes item at first\n   **/\n    public enableCache (): this {\n        this.cacheUsage = 'enable'\n        return this\n    }\n    /**\n   * Check product avaliable status\n   * If products is empty, try to fetch at once\n   */\n    private async hasProducts (): Promise {\n        if (!this.products || this.products.length  0) {\n            this.products = products\n        }\n        return this.products\n    }\n    /**\n   * Fetch the ISP API.\n   * If cacheUsage is enabled, it will return from session attributes at first\n   */\n    public async fetchLists (): Promise {\n        const atts = this.attributeManager.getSessionAttributes()\n        if (this.cacheUsage === 'enable') {\n            const cachedProducts = this.getCachedProducts()\n            if (cachedProducts && cachedProducts.length > 0) {\n                return\n            }\n        }\n        const data = await this.get()\n        const products = data.inSkillProducts\n        this.products = products\n        this.attributeManager.setSessionAttributes({\n            ...atts,\n            products\n        })\n    }\n    /**\n   * get product by product id\n   * @param productId {string}\n   */\n    public async getProductById (productId: string): Promise {\n        if (this.cacheUsage === 'enable') {\n            const cachedProducts = this.getCachedProducts()\n            if (cachedProducts && cachedProducts.length > 0) {\n                // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n                const item = cachedProducts.find(cache => cache.productId === productId)\n                if (item) return item\n            }\n        }\n        const product = await this.get(productId)\n        return product\n    }\n    /**\n   * get products\n   */\n    public async getProducts (): Promise {\n        await this.fetchLists()\n        return this.products\n    }\n    /**\n   * Find product by the list number\n   * @param userInputNo {number} list number\n   */\n    public async findProductByNo (userInputNo: number): Promise {\n        if (!await this.hasProducts()) return null\n        const target = this.products[userInputNo]\n        return target\n    }\n    /**\n   * Find product by the specific id\n   * @param productId {string} product id\n   */\n    public async findProductById (productId: string): Promise {\n        if (!await this.hasProducts()) return null\n        // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n        const product = this.products.find(product => product.productId === productId)\n        if (!product) return null\n        return product\n    }\n    /**\n   * Find product by the product name\n   * @param productName {string} product name\n   */\n    public async findProductByName (productName: string): Promise {\n        if (!await this.hasProducts()) return null\n        // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n        const product = this.products.find(product => product.name === productName)\n        if (!product) return null\n        return product\n    }\n    /**\n   * Find product by several condition\n   * @param condition {productName?: string, userInputNo?: number, productId?: string} search conditions\n   */\n    public async searchProduct (condition: {productName?: string; userInputNo?: number; productId?: string}): Promise {\n        if (!condition.productName && !condition.userInputNo && !condition.productId) throw new Error('No search condition')\n        if (condition.userInputNo) return this.findProductByNo(condition.userInputNo)\n        if (condition.productName) return this.findProductByName(condition.productName)\n        if (condition.productId) return this.findProductById(condition.productId)\n        throw new Error('Invalid search condition')\n    }\n}\nexport default ISPProductClient\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/APIClient-1.html":{"url":"classes/APIClient-1.html","title":"class - APIClient-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  APIClient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/serviceClients/libs/client.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                endpoint\n                            \n                            \n                                    Protected\n                                isDebug\n                            \n                            \n                                    Protected\n                                locale\n                            \n                            \n                                    Protected\n                                path\n                            \n                            \n                                    Protected\n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                createAxiosRequestObject\n                            \n                            \n                                    Protected\n                                    Async\n                                delete\n                            \n                            \n                                    Protected\n                                    Async\n                                get\n                            \n                            \n                                    Protected\n                                getURL\n                            \n                            \n                                    Protected\n                                    Async\n                                post\n                            \n                            \n                                    Protected\n                                    Async\n                                put\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(requestEnvelope: RequestEnvelope, isDebug: boolean)\n                    \n                \n                        \n                            \n                                Defined in packages/serviceClients/libs/client.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        requestEnvelope\n                                                  \n                                                        \n                                                                    RequestEnvelope\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        isDebug\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            endpoint\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/serviceClients/libs/client.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            isDebug\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/serviceClients/libs/client.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            locale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/serviceClients/libs/client.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in packages/serviceClients/libs/client.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/serviceClients/libs/client.ts:6\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            createAxiosRequestObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createAxiosRequestObject(method: Method, path?: string, data?: any)\n                \n            \n\n\n            \n                \n                    Defined in packages/serviceClients/libs/client.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                                Method\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     AxiosRequestConfig\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(path?: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/serviceClients/libs/client.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Async\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(path?: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/serviceClients/libs/client.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getURL\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getURL(path?: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/serviceClients/libs/client.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Async\n                            post\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    post(body?: any, path?: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/serviceClients/libs/client.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Async\n                            put\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    put(body?: any, path?: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/serviceClients/libs/client.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import axios, { AxiosRequestConfig } from 'axios'\nimport { getLocale, getApiAccessToken } from 'ask-sdk-core'\nimport { RequestEnvelope } from 'ask-sdk-model'\ntype Method = 'GET' | 'PUT' | 'POST' | 'DELETE'\nexport abstract class APIClient {\n    protected token: string\n    protected locale: string\n    protected endpoint: string\n    protected path: string = ''\n    protected isDebug: boolean\n    public constructor (requestEnvelope: RequestEnvelope, isDebug: boolean = true) {\n        this.token = getApiAccessToken(requestEnvelope)\n        this.locale = getLocale(requestEnvelope)\n        this.endpoint = requestEnvelope.context.System.apiEndpoint\n        this.isDebug = isDebug\n    }\n    protected getURL (path?: string): string {\n        const p = `/${this.path}${path ? `/${path}` : ''}`\n        const url = `${this.endpoint}${p.replace(/\\/\\//g, '/')}`\n        return url\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    protected createAxiosRequestObject (method: Method, path?: string, data?: any): AxiosRequestConfig {\n        const conf: AxiosRequestConfig = {\n            method: method,\n            url: this.getURL(path),\n            headers: {\n                'Content-type': 'application/json',\n                'Accept-Language': this.locale,\n                'Authorization': `Bearer ${this.token}`\n            }\n        }\n        if (data) conf.data = data\n        return conf\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    protected async delete (path?: string): Promise {\n        const param = this.createAxiosRequestObject('DELETE', path)\n        if (this.isDebug) console.log('[Request] %j', param)\n        const { data } = await axios(param)\n        if (this.isDebug) console.log('[Response] %j', data)\n        return data\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    protected async get (path?: string): Promise {\n        const param = this.createAxiosRequestObject('GET', path)\n        if (this.isDebug) console.log('[Request] %j', param)\n        const { data } = await axios(param)\n        if (this.isDebug) console.log('[Response] %j', data)\n        return data\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    protected async post (body?: any, path?: string): Promise {\n        const param = this.createAxiosRequestObject('POST', path, body)\n        if (this.isDebug) console.log('[Request] %j', param)\n        const { data } = await axios(param)\n        if (this.isDebug) console.log('[Response] %j', data)\n        return data\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    protected async put (body?: any, path?: string): Promise {\n        const param = this.createAxiosRequestObject('PUT', path, body)\n        if (this.isDebug) console.log('[Request] %j', param)\n        const { data } = await axios(param)\n        if (this.isDebug) console.log('[Response] %j', data)\n        return data\n    }\n}\nexport default APIClient\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AttributeType.html":{"url":"interfaces/AttributeType.html","title":"interface - AttributeType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AttributeType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/__tests__/libs/attributeManager.test.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in packages/core/__tests__/libs/attributeManager.test.ts:5\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { HandlerInput, AttributesManager } from 'ask-sdk'\nimport { updateSessionAttributes, getSessionAttribute, getSessionAttributes } from '../../libs/attributeManager'\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ninterface AttributeType {[key: string]: any}\nclass MockAttributeManager implements AttributesManager {\n    private request: AttributeType = {}\n    private session: AttributeType = {}\n    private persistent: AttributeType = {}\n    private db: AttributeType = {}\n    public getRequestAttributes () {\n        return this.request\n    }\n    public getSessionAttributes () {\n        return this.session\n    }\n    public getPersistentAttributes () {\n        return Promise.resolve(this.db)\n    }\n    public setRequestAttributes (attribute: AttributeType) {\n        this.request = attribute\n    }\n    public setSessionAttributes (attribute: AttributeType) {\n        this.session = attribute\n    }\n    public setPersistentAttributes (attribute: AttributeType) {\n        this.persistent = attribute\n    }\n    public savePersistentAttributes () {\n        this.db = this.persistent\n        return Promise.resolve()\n    }\n}\n\nconst generateHandlerInput = (): HandlerInput => {\n    const attributesManager: AttributesManager = new MockAttributeManager()\n    const handlerInput = {\n        attributesManager\n    } as HandlerInput\n    return handlerInput\n}\ndescribe('attributeManager.ts', () => {\n    let handlerInput = generateHandlerInput()\n    beforeEach(() => {\n        handlerInput = generateHandlerInput()\n    })\n    describe('updateSessionAttributes()', () => {\n        it('should save attributes', () => {\n            updateSessionAttributes(handlerInput, { test: 'true' })\n            const result = getSessionAttribute(handlerInput, 'test')\n            expect(result).toEqual('true')\n        })\n\n        it('should add save attributes', () => {\n            updateSessionAttributes(handlerInput, { test: 'true' })\n            updateSessionAttributes(handlerInput, { test1: 'false' })\n            const result = getSessionAttribute(handlerInput, 'test')\n            expect(result).toEqual('true')\n            const result2 = getSessionAttribute(handlerInput, 'test1')\n            expect(result2).toEqual('false')\n        })\n    })\n    describe('getSessionAttributes()', () => {\n        it('should get saved attributes', () => {\n            updateSessionAttributes(handlerInput, { test: 'true' })\n            const result = getSessionAttributes(handlerInput)\n            expect(result).toEqual({ test: 'true' })\n        })\n        it('should add save attributes', () => {\n            updateSessionAttributes(handlerInput, { test: 'true' })\n            updateSessionAttributes(handlerInput, { test1: 'false' })\n            const result = getSessionAttributes(handlerInput)\n            expect(result).toEqual({\n                test: 'true',\n                test1: 'false'\n            })\n        })\n    })\n})\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AudiencePayload.html":{"url":"interfaces/AudiencePayload.html","title":"interface - AudiencePayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AudiencePayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthResponse.html":{"url":"interfaces/AuthResponse.html","title":"interface - AuthResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AuthResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        access_token\n                                \n                                \n                                        expires_in\n                                \n                                \n                                        scope\n                                \n                                \n                                        token_type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        access_token\n                                    \n                                \n                                \n                                    \n                                        access_token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expires_in\n                                    \n                                \n                                \n                                    \n                                        expires_in:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scope\n                                    \n                                \n                                \n                                    \n                                        scope:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token_type\n                                    \n                                \n                                \n                                    \n                                        token_type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Availability.html":{"url":"interfaces/Availability.html","title":"interface - Availability","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Availability\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        method\n                                \n                                \n                                            Optional\n                                        provider\n                                \n                                \n                                        startTime\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        method\n                                    \n                                \n                                \n                                    \n                                        method:         DistributionMethod\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DistributionMethod\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        provider\n                                    \n                                \n                                \n                                    \n                                        provider:         Thing\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Thing\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startTime\n                                    \n                                \n                                \n                                    \n                                        startTime:         Types.dateTime\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Types.dateTime\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BaseSkillConfig.html":{"url":"interfaces/BaseSkillConfig.html","title":"interface - BaseSkillConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BaseSkillConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ask-utils/libs/models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        constants\n                                \n                                \n                                            Optional\n                                        isISP\n                                \n                                \n                                        persistanceType\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        constants\n                                    \n                                \n                                \n                                    \n                                        constants:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isISP\n                                    \n                                \n                                \n                                    \n                                        isISP:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        persistanceType\n                                    \n                                \n                                \n                                    \n                                        persistanceType:         PersistanceType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PersistanceType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n    RequestInterceptor,\n    ResponseInterceptor,\n    ErrorHandler,\n    RequestHandler\n} from 'ask-sdk'\nimport {\n    SkillConstants\n} from '@ask-utils/handlers'\n\ntype PersistanceType = 'DynamoDB' | 'S3'\ninterface BaseSkillConfig {\n    persistanceType: PersistanceType;\n    isISP?: boolean;\n    constants?: T;\n}\nexport interface S3SkillConfig extends BaseSkillConfig {\n    persistanceType: 'S3';\n    bucketName: string;\n    bucketPathPrefix: string;\n}\nexport interface DynamoDBSkillConfig extends BaseSkillConfig {\n    persistanceType: 'DynamoDB';\n    tableName: string;\n}\nexport type SkillConfig = S3SkillConfig | DynamoDBSkillConfig\nexport interface SkillHandlers {\n    requestHandlers: RequestHandler[];\n    requestInterceptors?: RequestInterceptor[];\n    responseInterceptors?: ResponseInterceptor[];\n    errorHandlers?: ErrorHandler[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BuyContentBuilder.html":{"url":"classes/BuyContentBuilder.html","title":"class - BuyContentBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BuyContentBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/isp/libs/contentBuilders/Buy.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ContentBuilder\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                contents\n                            \n                            \n                                    Protected\n                                locale\n                            \n                            \n                                    Protected\n                                responseBuilder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                setBuyDirective\n                            \n                            \n                                    Public\n                                getResponse\n                            \n                            \n                                    Protected\n                                isJP\n                            \n                            \n                                    Public\n                                putDirective\n                            \n                            \n                                    Public\n                                putDirectives\n                            \n                            \n                                    Public\n                                putRepromptText\n                            \n                            \n                                    Public\n                                putSpeechText\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            contents\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ResponseContent\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         ContentBuilder\n\n                                \n                            \n                        \n                            \n                                    Defined in         ContentBuilder:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            locale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ContentBuilder\n\n                                \n                            \n                        \n                            \n                                    Defined in         ContentBuilder:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            responseBuilder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ResponseBuilder\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ContentBuilder\n\n                                \n                            \n                        \n                            \n                                    Defined in         ContentBuilder:10\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setBuyDirective\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setBuyDirective(productId: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/Buy.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getResponse()\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:43\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Response\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isJP\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isJP()\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:16\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putDirective\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putDirective(directive: Directive)\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:35\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    directive\n                                    \n                                                Directive\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putDirectives\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putDirectives(directives: Directive[])\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    directives\n                                    \n                                            Directive[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putRepromptText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putRepromptText(text: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:23\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putSpeechText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putSpeechText(text: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n    getBuyProductDirective\n} from '../index'\nimport ContentBuilder from './base'\nexport class BuyContentBuilder extends ContentBuilder {\n    public setBuyDirective (productId: string): this {\n        this.contents.directive = getBuyProductDirective(productId)\n        return this\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BuyIntentHandlerBuilder.html":{"url":"classes/BuyIntentHandlerBuilder.html","title":"class - BuyIntentHandlerBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BuyIntentHandlerBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/isp/libs/handlers/Buy.ts\n        \n\n\n            \n                Extends\n            \n            \n                        HandlerBuilder\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                canHandle\n                            \n                            \n                                    Public\n                                canHandle\n                            \n                            \n                                    Protected\n                                canHandleFilter\n                            \n                            \n                                    Public\n                                handle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                create\n                            \n                            \n                                    Public\n                                getHandler\n                            \n                            \n                                    Public\n                                replaceHandler\n                            \n                            \n                                    Public\n                                setHandle\n                            \n                            \n                                    Public\n                                setHandleCondition\n                            \n                            \n                                    Public\n                                updateHandler\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            canHandle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CanHandle\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in packages/isp/libs/handlers/Buy.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            canHandle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CanHandle\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         HandlerBuilder\n\n                                \n                            \n                        \n                            \n                                    Defined in         HandlerBuilder:8\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            canHandleFilter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CanHandle\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         HandlerBuilder\n\n                                \n                            \n                        \n                            \n                                    Defined in         HandlerBuilder:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            handle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Handle\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         HandlerBuilder\n\n                                \n                            \n                        \n                            \n                                    Defined in         HandlerBuilder:11\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/handlers/Buy.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getHandler\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getHandler()\n                \n            \n\n\n            \n                \n                    Inherited from         HandlerBuilder\n\n                \n            \n            \n                \n                        Defined in         HandlerBuilder:32\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     RequestHandler\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            replaceHandler\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    replaceHandler(handler: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         HandlerBuilder\n\n                \n            \n            \n                \n                        Defined in         HandlerBuilder:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    handler\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setHandle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setHandle(handle: Handle)\n                \n            \n\n\n            \n                \n                    Inherited from         HandlerBuilder\n\n                \n            \n            \n                \n                        Defined in         HandlerBuilder:18\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    handle\n                                    \n                                                Handle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setHandleCondition\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setHandleCondition(condition: CanHandle)\n                \n            \n\n\n            \n                \n                    Inherited from         HandlerBuilder\n\n                \n            \n            \n                \n                        Defined in         HandlerBuilder:14\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                CanHandle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateHandler\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateHandler(condition: CanHandle, handle: Handle)\n                \n            \n\n\n            \n                \n                    Inherited from         HandlerBuilder\n\n                \n            \n            \n                \n                        Defined in         HandlerBuilder:22\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                CanHandle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    handle\n                                    \n                                                Handle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HandlerInput, getLocale } from 'ask-sdk-core'\nimport { Response } from 'ask-sdk-model'\nimport {\n    isYesIntent,\n    isMatchedIntent\n} from '@ask-utils/core'\nimport {\n    HandlerBuilder,\n    CanHandle\n} from './fixtures'\nimport {\n    isMatchedISPState,\n    getProduct\n} from './helpers'\nimport {\n    NoProductResponse,\n    UnSupportedISPResponse\n} from '../contentBuilders/generalResponse'\nimport {\n    getBuyProductDirective\n} from '../directiveBuilders'\nimport {\n    ISPProductClient\n} from '../client'\nimport {\n\n} from '../productFinders'\n\nexport class BuyIntentHandlerBuilder extends HandlerBuilder {\n    public canHandle: CanHandle = (handlerInput) => {\n        return this.canHandleFilter(handlerInput)\n    }\n    public static create () {\n\n    }\n}\n\nexport const BuyIntentHandler = {\n    canHandle (handlerInput: HandlerInput): boolean {\n        if (isMatchedIntent(handlerInput, 'BuyIntent')) return true\n        if (isYesIntent(handlerInput)) {\n            return isMatchedISPState(handlerInput.attributesManager, 'BUY')\n        }\n        return false\n    },\n    async handle (handlerInput: HandlerInput): Promise {\n        const { requestEnvelope, responseBuilder, serviceClientFactory } = handlerInput\n        const locale = getLocale(requestEnvelope)\n        if (!serviceClientFactory) {\n            const noISPResponse = UnSupportedISPResponse(locale)\n            return responseBuilder.speak(noISPResponse.speechText)\n                .reprompt(noISPResponse.repromptText)\n                .getResponse()\n        }\n\n        const product = await getProduct(handlerInput)\n        // みつからない\n        if (!product) {\n            const client = new ISPProductClient(handlerInput)\n            const { inSkillProducts } = await client.listProducts()\n            return NoProductResponse(responseBuilder, locale, inSkillProducts)\n        }\n        // 買えない商品\n        if (product.purchasable === 'NOT_PURCHASABLE') {\n            if (/^ja/.test(locale)) {\n                return responseBuilder\n                    .speak('すみません。その商品は現在購入できません。他に何をしますか？')\n                    .reprompt('他に何をしますか？')\n                    .getResponse()\n            }\n            return responseBuilder\n                .speak(\"I don't think we have a product by that name.  Can you try again?\")\n                .reprompt(\"I didn't catch that. Can you try again?\")\n                .getResponse()\n        }\n\n        // ここで一旦データを保存する\n        // Connectionの方にいくとセッションが切れるから\n        const attributes = handlerInput.attributesManager.getSessionAttributes()\n        const atts = await handlerInput.attributesManager.getPersistentAttributes()\n        const nextAttributes = Object.assign(atts, {\n            ispLastSessionAttribtes: attributes\n        })\n        await handlerInput.attributesManager.setPersistentAttributes(nextAttributes)\n        await handlerInput.attributesManager.savePersistentAttributes()\n\n        return handlerInput.responseBuilder\n            .addDirective(getBuyProductDirective(product.productId))\n            .getResponse()\n    }\n}\n\nexport default BuyIntentHandler\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BuyResponseContentBuilder.html":{"url":"classes/BuyResponseContentBuilder.html","title":"class - BuyResponseContentBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BuyResponseContentBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/isp/libs/contentBuilders/BuyResponse.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ContentBuilder\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                contents\n                            \n                            \n                                    Protected\n                                locale\n                            \n                            \n                                    Protected\n                                responseBuilder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getAcceptedPurchaseResult\n                            \n                            \n                                    Private\n                                getDeclinedPurchaseResult\n                            \n                            \n                                    Private\n                                getFailedPurchaseResult\n                            \n                            \n                                    Public\n                                setAcceptedPurchaseResult\n                            \n                            \n                                    Public\n                                setDeclinedPurchaseResult\n                            \n                            \n                                    Public\n                                setFailedPurchaseResult\n                            \n                            \n                                    Public\n                                getResponse\n                            \n                            \n                                    Protected\n                                isJP\n                            \n                            \n                                    Public\n                                putDirective\n                            \n                            \n                                    Public\n                                putDirectives\n                            \n                            \n                                    Public\n                                putRepromptText\n                            \n                            \n                                    Public\n                                putSpeechText\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            contents\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ResponseContent\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         ContentBuilder\n\n                                \n                            \n                        \n                            \n                                    Defined in         ContentBuilder:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            locale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ContentBuilder\n\n                                \n                            \n                        \n                            \n                                    Defined in         ContentBuilder:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            responseBuilder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ResponseBuilder\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ContentBuilder\n\n                                \n                            \n                        \n                            \n                                    Defined in         ContentBuilder:10\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getAcceptedPurchaseResult\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAcceptedPurchaseResult()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/BuyResponse.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ResponseContent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getDeclinedPurchaseResult\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDeclinedPurchaseResult()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/BuyResponse.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ResponseContent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getFailedPurchaseResult\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFailedPurchaseResult()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/BuyResponse.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ResponseContent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setAcceptedPurchaseResult\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setAcceptedPurchaseResult()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/BuyResponse.ts:51\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setDeclinedPurchaseResult\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setDeclinedPurchaseResult()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/BuyResponse.ts:27\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setFailedPurchaseResult\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setFailedPurchaseResult()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/BuyResponse.ts:71\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getResponse()\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:43\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Response\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isJP\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isJP()\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:16\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putDirective\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putDirective(directive: Directive)\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:35\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    directive\n                                    \n                                                Directive\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putDirectives\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putDirectives(directives: Directive[])\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    directives\n                                    \n                                            Directive[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putRepromptText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putRepromptText(text: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:23\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putSpeechText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putSpeechText(text: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import ContentBuilder, {\n    ResponseContent\n} from './base'\n\nexport class BuyResponseContentBuilder extends ContentBuilder {\n    // purchaseResult === 'DECLINED'\n    private getDeclinedPurchaseResult (): ResponseContent {\n        const product = this.getProduct()\n        if (this.isJP()) {\n            return {\n                speechText: [\n                    `${product && product.name ? product.name : '商品'}に興味を持ってくれてありがとうございます。`,\n                    'また機会が購入してくださいね。',\n                    '次はなにをしますか？'\n                ].join(' '),\n                repromptText: '次はなにをしますか？'\n            }\n        }\n        return {\n            speechText: [\n                `Thanks for your interest in the ${product && product.name ? product.name : 'product'}.`,\n                'What will you do for next?'\n            ].join(' '),\n            repromptText: 'What will you do for next?'\n        }\n    }\n    public setDeclinedPurchaseResult (): this {\n        this.contents = this.getDeclinedPurchaseResult()\n        return this\n    }\n    // purchaseResult === 'ACCEPTED'\n    private getAcceptedPurchaseResult (): ResponseContent {\n        const product = this.getProduct()\n        if (this.isJP()) {\n            return {\n                speechText: [\n                    `${product && product.name ? product.name : '商品'}の購入ありがとうございます。`,\n                    '次は何をしますか？'\n                ].join(' '),\n                repromptText: '次は何をしますか？'\n            }\n        }\n        return {\n            speechText: [\n                `You have purchased the ${product && product.name ? product.name : 'product'}.`,\n                'What will you do for next?'\n            ].join(' '),\n            repromptText: 'What will you do for next?'\n        }\n    }\n    public setAcceptedPurchaseResult (): this {\n        this.contents = this.getAcceptedPurchaseResult()\n        return this\n    }\n    private getFailedPurchaseResult (): ResponseContent {\n        if (this.isJP()) {\n            return {\n                speechText: [\n                    'スキル商品の購入処理に失敗しました。',\n                    'もう一度トライするか、アレクサアプリからサポートに問い合わせてください。'\n                ].join(' ')\n            }\n        }\n        return {\n            speechText: [\n                'There was an error handling your purchase request.',\n                'Please try again or contact us for help.'\n            ].join(' ')\n        }\n    }\n    public setFailedPurchaseResult (): this {\n        this.contents = this.getFailedPurchaseResult()\n        return this\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Class.html":{"url":"interfaces/Class.html","title":"interface - Class","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Class\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        getAccessToken\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        getAccessToken\n                                    \n                                \n                                \n                                    \n                                        getAccessToken:     Promise\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Promise\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ClientConfig.html":{"url":"interfaces/ClientConfig.html","title":"interface - ClientConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ClientConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        apiEndpont\n                                \n                                \n                                            Optional\n                                        apiRegion\n                                \n                                \n                                        clientId\n                                \n                                \n                                        clientSecret\n                                \n                                \n                                            Optional\n                                        isProduction\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        apiEndpont\n                                    \n                                \n                                \n                                    \n                                        apiEndpont:         APIEndpoint\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         APIEndpoint\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        apiRegion\n                                    \n                                \n                                \n                                    \n                                        apiRegion:         ApiRegion\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ApiRegion\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        clientId\n                                    \n                                \n                                \n                                    \n                                        clientId:         ClientId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ClientId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        clientSecret\n                                    \n                                \n                                \n                                    \n                                        clientSecret:         ClientSecret\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ClientSecret\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isProduction\n                                    \n                                \n                                \n                                    \n                                        isProduction:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ConfirmationState.html":{"url":"interfaces/ConfirmationState.html","title":"interface - ConfirmationState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ConfirmationState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        confirmationStatus\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        confirmationStatus\n                                    \n                                \n                                \n                                    \n                                        confirmationStatus:         ConfirmationStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ConfirmationStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConstantsInterceptorFactory.html":{"url":"classes/ConstantsInterceptorFactory.html","title":"class - ConstantsInterceptorFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConstantsInterceptorFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/handlers/libs/requestInterceptors/InjectConstants.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    init(constants: T)\n                \n            \n\n\n            \n                \n                    Defined in packages/handlers/libs/requestInterceptors/InjectConstants.ts:8\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    constants\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     RequestInterceptor\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HandlerInput } from 'ask-sdk-core'\nimport { RequestInterceptor } from 'ask-sdk-runtime'\n\nexport interface SkillConstants {\n    [key: string]: any;\n}\nexport class ConstantsInterceptorFactory {\n    public static init (constants: T): RequestInterceptor {\n        return {\n            async process ({ attributesManager }: HandlerInput) {\n                const atts = attributesManager.getRequestAttributes()\n                attributesManager.setRequestAttributes({\n                    ...atts,\n                    CONSTANTS: constants\n                })\n            }\n        }\n    }\n}\n\nexport default ConstantsInterceptorFactory\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ContentBuilder.html":{"url":"classes/ContentBuilder.html","title":"class - ContentBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ContentBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/libs/contentBuilder.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                contents\n                            \n                            \n                                    Protected\n                                locale\n                            \n                            \n                                    Protected\n                                responseBuilder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getResponse\n                            \n                            \n                                    Protected\n                                isJP\n                            \n                            \n                                    Public\n                                putDirective\n                            \n                            \n                                    Public\n                                putDirectives\n                            \n                            \n                                    Public\n                                putRepromptText\n                            \n                            \n                                    Public\n                                putSpeechText\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(locale: string, responseBuilder: ResponseBuilder)\n                    \n                \n                        \n                            \n                                Defined in packages/core/libs/contentBuilder.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        locale\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        responseBuilder\n                                                  \n                                                        \n                                                                        ResponseBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            contents\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ResponseContent\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/libs/contentBuilder.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            locale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/libs/contentBuilder.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            responseBuilder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ResponseBuilder\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/libs/contentBuilder.ts:10\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getResponse()\n                \n            \n\n\n            \n                \n                    Defined in packages/core/libs/contentBuilder.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Response\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isJP\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isJP()\n                \n            \n\n\n            \n                \n                    Defined in packages/core/libs/contentBuilder.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putDirective\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putDirective(directive: Directive)\n                \n            \n\n\n            \n                \n                    Defined in packages/core/libs/contentBuilder.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    directive\n                                    \n                                                Directive\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putDirectives\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putDirectives(directives: Directive[])\n                \n            \n\n\n            \n                \n                    Defined in packages/core/libs/contentBuilder.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    directives\n                                    \n                                            Directive[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putRepromptText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putRepromptText(text: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/core/libs/contentBuilder.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putSpeechText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putSpeechText(text: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/core/libs/contentBuilder.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ResponseBuilder } from 'ask-sdk-core'\nimport { Response, Directive } from 'ask-sdk-model'\nexport interface ResponseContent {\n    speechText?: string;\n    repromptText?: string;\n    directives?: Directive[];\n}\nexport class ContentBuilder {\n    protected locale: string\n    protected responseBuilder: ResponseBuilder\n    protected contents: ResponseContent = {}\n    public constructor (locale: string, responseBuilder: ResponseBuilder) {\n        this.locale = locale\n        this.responseBuilder = responseBuilder\n    }\n    protected isJP (): boolean {\n        return /^ja/.test(this.locale)\n    }\n    public putSpeechText (text: string): this {\n        this.contents.speechText = text\n        return this\n    }\n    public putRepromptText (text: string): this {\n        this.contents.repromptText = text\n        return this\n    }\n    public putDirectives (directives: Directive[]): this {\n        if (!this.contents.directives) {\n            this.contents.directives = directives\n            return this\n        }\n        this.contents.directives = this.contents.directives.concat(directives)\n        return this\n    }\n    public putDirective (directive: Directive): this {\n        if (!this.contents.directives) {\n            this.contents.directives = [directive]\n            return this\n        }\n        this.contents.directives.push(directive)\n        return this\n    }\n    public getResponse (): Response {\n        const { speechText, repromptText, directives } = this.contents\n        if (speechText) this.responseBuilder.speak(speechText)\n        if (repromptText) this.responseBuilder.reprompt(repromptText)\n        if (directives) directives.forEach((directive): ResponseBuilder => this.responseBuilder.addDirective(directive))\n        return this.responseBuilder.getResponse()\n    }\n}\nexport default ContentBuilder\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ContentBuilder-1.html":{"url":"classes/ContentBuilder-1.html","title":"class - ContentBuilder-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ContentBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/isp/libs/contentBuilders/base.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                contents\n                            \n                            \n                                    Protected\n                                locale\n                            \n                            \n                                    Protected\n                                responseBuilder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getResponse\n                            \n                            \n                                    Protected\n                                isJP\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(locale: string, responseBuilder: ResponseBuilder)\n                    \n                \n                        \n                            \n                                Defined in packages/isp/libs/contentBuilders/base.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        locale\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        responseBuilder\n                                                  \n                                                        \n                                                                        ResponseBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            contents\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ResponseContent\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in packages/isp/libs/contentBuilders/base.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            locale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/isp/libs/contentBuilders/base.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            responseBuilder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ResponseBuilder\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/isp/libs/contentBuilders/base.ts:14\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getResponse()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/base.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Response\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isJP\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isJP()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/base.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { services, Response, Directive } from 'ask-sdk-model'\nimport { ResponseBuilder } from 'ask-sdk-core'\n\nimport InSkillProduct = services.monetization.InSkillProduct\n\nexport interface ResponseContent {\n    speechText?: string;\n    repromptText?: string;\n    directive?: Directive;\n}\n\nexport class ContentBuilder {\n    protected locale: string\n    protected responseBuilder: ResponseBuilder\n    protected contents: ResponseContent = {}\n    public constructor (locale: string, responseBuilder: ResponseBuilder) {\n        this.locale = locale\n        this.responseBuilder = responseBuilder\n    }\n    protected isJP (): boolean {\n        return /^ja/.test(this.locale)\n    }\n    public getResponse (): Response {\n        const { speechText, repromptText, directive } = this.contents\n        if (speechText) this.responseBuilder.speak(speechText)\n        if (repromptText) this.responseBuilder.reprompt(repromptText)\n        if (directive) this.responseBuilder.addDirective(directive)\n        return this.responseBuilder.getResponse()\n    }\n}\n\nexport class ISPContentBuilder extends ContentBuilder {\n    protected productName?: string\n    protected product?: InSkillProduct\n    public constructor (locale: string, responseBuilder: ResponseBuilder, productName?: string, product?: InSkillProduct) {\n        super(locale, responseBuilder)\n        if (productName) this.productName = productName\n        if (product) this.product = product\n    }\n    public setProduct (product: InSkillProduct): this {\n        this.product = product\n        return this\n    }\n    protected getProduct (): InSkillProduct {\n        const { product } = this\n        if (!product) throw new Error('No products')\n        return product\n    }\n    public setProductName (name: string): this {\n        this.productName = name\n        return this\n    }\n    protected getProductName (): string {\n        if (!this.productName) throw new Error('No product name')\n        return this.productName\n    }\n    /**\n   * If the device or account does not supports ISP\n   */\n    private getUnSupportedISPResponse (): ResponseContent {\n        if (this.isJP()) {\n            return {\n                speechText: [\n                    'すみません。',\n                    'お使いのデバイス・アプリでは、スキル内課金を利用することができません。',\n                    '別のデバイスを利用するか、アレクサアプリから設定を確認してもう一度お試しください。',\n                    '次はなにをしますか？',\n                    'スキルを終了して、アプリの設定を確認したい場合は「終了」と話しかけてください。'\n                ].join(' '),\n                repromptText: [\n                    '次はなにをしますか？',\n                    'スキルを終了して、アプリの設定を確認したい場合は「終了」と話しかけてください。'\n                ].join(' ')\n            }\n        }\n        return {\n            speechText: [\n                'Sorry, you can not purchase by the device.',\n                'Please check your device and application settings by the Alexa app.',\n                'What will you do the next?'\n            ].join(' '),\n            repromptText: [\n                'What will you do the next?',\n                'If you want to stop the skill, please say me \"STOP\".'\n            ].join(' ')\n        }\n    }\n    public setUnSupportedISPResponse (): this {\n        this.contents = this.getUnSupportedISPResponse()\n        return this\n    }\n    /**\n   * Product does not found response\n   */\n    private getProductsNotFoundResponse (): ResponseContent {\n        if (this.isJP()) {\n            return {\n                speechText: [\n                    `すみません。商品が見つかりませんでした。`,\n                    '他に何をしますか？'\n                ].join(' '),\n                repromptText: '他に何をしますか？'\n            }\n        }\n        return {\n            speechText: `I can't find any products you can buy. What do you want to do next?`,\n            repromptText: `What do you want to do next?`\n        }\n    }\n    public setProductsNotFoundResponse (): this {\n        this.contents = this.getProductsNotFoundResponse()\n        return this\n    }\n    /**\n   * Product does not found response\n   */\n    private getProductNotFoundResponse (): ResponseContent {\n        try {\n            const productName = this.getProductName()\n            if (this.isJP()) {\n                return {\n                    speechText: [\n                        `${productName}を購入することができます。`,\n                        `詳細を聞きたい場合は「${productName}について教えて」、`,\n                        `購入する場合は「${productName}を購入」と話しかけてください。`,\n                        'どうしますか？'\n                    ].join(' '),\n                    repromptText: '購入・詳細、どちらにしますか？'\n                }\n            }\n            return {\n                speechText: `${productName}. what item do you want?`,\n                repromptText: `${productName}. what item do you want?`\n            }\n        } catch (e) {\n            return this.getProductsNotFoundResponse()\n        }\n    }\n    public setProductNotFoundResponse (): this {\n        this.contents = this.getProductNotFoundResponse()\n        return this\n    }\n    /**\n   * If product not found\n   */\n    private getCanNotBuyTheProductResponse (): ResponseContent {\n        if (this.isJP()) {\n            return {\n                speechText: 'すみません。その商品は現在購入できません。他に何をしますか？',\n                repromptText: '他に何をしますか？'\n            }\n        }\n        return {\n            speechText: \"I don't think we have a product by that name.  Can you try again?\",\n            repromptText: \"I didn't catch that. Can you try again?\"\n        }\n    }\n    public setCanNotBuyTheProductResponse (): this {\n        this.contents = this.getCanNotBuyTheProductResponse()\n        return this\n    }\n    /**\n   * If product already purchased\n   */\n    public getEntitledProductResponse (): ResponseContent {\n        if (this.isJP()) {\n            return {\n                speechText: 'その商品はすでに購入済の様子です。他に何をしますか？',\n                repromptText: '他に何をしますか？'\n            }\n        }\n        return {\n            speechText: 'You already entitled the product. What will you do for next?',\n            repromptText: 'What will you do for next?'\n        }\n    }\n    public setEntitledProductResponse (): this {\n        this.contents = this.getEntitledProductResponse()\n        return this\n    }\n}\nexport default ISPContentBuilder\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreativeWork.html":{"url":"interfaces/CreativeWork.html","title":"interface - CreativeWork","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CreativeWork\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        contentType\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        contentType\n                                    \n                                \n                                \n                                    \n                                        contentType:         MediaType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MediaType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CustomHandlerInput.html":{"url":"interfaces/CustomHandlerInput.html","title":"interface - CustomHandlerInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CustomHandlerInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/handlers/libs/requestHandlers/HandlerFactory.ts\n        \n\n\n            \n                Extends\n            \n            \n                    HandlerInput\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        requestEnvelope\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        requestEnvelope\n                                    \n                                \n                                \n                                    \n                                        requestEnvelope:         CustomeRequestEnvelope\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CustomeRequestEnvelope\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { RequestHandler, HandlerInput } from 'ask-sdk-core'\nimport { Response, Request, RequestEnvelope } from 'ask-sdk-model'\nimport Resolver, { interfaces } from 'class-resolver'\nimport { isLaunchRequest } from 'ask-utils'\n\nexport interface TMergeTargetHandler {\n    canHandle?: (input: Input) => Promise | boolean;\n    handle?: (input: Input) => Promise | Output;\n}\nexport interface TRequestHandler {\n    canHandle: (input: Input) => Promise | boolean;\n    handle: (input: Input) => Promise | Output;\n}\nexport interface CustomeRequestEnvelope extends RequestEnvelope {\n    request: CustomRequest;\n}\nexport interface CustomHandlerInput extends HandlerInput {\n    requestEnvelope: CustomeRequestEnvelope;\n}\nexport interface RequestHandlerBuilder extends interfaces.ResolveTarget {\n    handle(handler: TMergeTargetHandler): TRequestHandler;\n}\n\nconst merge = (handler: TMergeTargetHandler, target?: TMergeTargetHandler): TRequestHandler => {\n    const fallBackHandler: RequestHandler = {\n        canHandle () {\n            return true\n        },\n        handle (handlerInput) {\n            return handlerInput.responseBuilder.getResponse()\n        }\n    }\n    return Object.assign({}, fallBackHandler, target, handler)\n}\n\nexport type SupportedHandlerType = 'LaunchRequest'\nexport class RequestHandlerFactory {\n    public static create (type: SupportedHandlerType, handler: TMergeTargetHandler): TRequestHandler {\n        return new Resolver(\n            new LaunchRequestHandlerFactory(),\n            new FallbackIntentFactory()\n        ).resolve(type).handle(handler)\n    }\n}\nexport default RequestHandlerFactory\n\nexport class LaunchRequestHandlerFactory implements RequestHandlerBuilder {\n    supports (type: string) {\n        return type === 'LaunchRequest'\n    }\n    handle (handler: TMergeTargetHandler) {\n        return merge(handler, {\n            canHandle (handlerInput) {\n                return isLaunchRequest(handlerInput)\n            }\n        })\n    }\n}\n\nexport class FallbackIntentFactory implements RequestHandlerBuilder {\n    supports () {\n        return true\n    }\n    handle (handler: TMergeTargetHandler) {\n        return merge(handler)\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CustomeRequestEnvelope.html":{"url":"interfaces/CustomeRequestEnvelope.html","title":"interface - CustomeRequestEnvelope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CustomeRequestEnvelope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/handlers/libs/requestHandlers/HandlerFactory.ts\n        \n\n\n            \n                Extends\n            \n            \n                    RequestEnvelope\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        request\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        request\n                                    \n                                \n                                \n                                    \n                                        request:     CustomRequest\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     CustomRequest\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { RequestHandler, HandlerInput } from 'ask-sdk-core'\nimport { Response, Request, RequestEnvelope } from 'ask-sdk-model'\nimport Resolver, { interfaces } from 'class-resolver'\nimport { isLaunchRequest } from 'ask-utils'\n\nexport interface TMergeTargetHandler {\n    canHandle?: (input: Input) => Promise | boolean;\n    handle?: (input: Input) => Promise | Output;\n}\nexport interface TRequestHandler {\n    canHandle: (input: Input) => Promise | boolean;\n    handle: (input: Input) => Promise | Output;\n}\nexport interface CustomeRequestEnvelope extends RequestEnvelope {\n    request: CustomRequest;\n}\nexport interface CustomHandlerInput extends HandlerInput {\n    requestEnvelope: CustomeRequestEnvelope;\n}\nexport interface RequestHandlerBuilder extends interfaces.ResolveTarget {\n    handle(handler: TMergeTargetHandler): TRequestHandler;\n}\n\nconst merge = (handler: TMergeTargetHandler, target?: TMergeTargetHandler): TRequestHandler => {\n    const fallBackHandler: RequestHandler = {\n        canHandle () {\n            return true\n        },\n        handle (handlerInput) {\n            return handlerInput.responseBuilder.getResponse()\n        }\n    }\n    return Object.assign({}, fallBackHandler, target, handler)\n}\n\nexport type SupportedHandlerType = 'LaunchRequest'\nexport class RequestHandlerFactory {\n    public static create (type: SupportedHandlerType, handler: TMergeTargetHandler): TRequestHandler {\n        return new Resolver(\n            new LaunchRequestHandlerFactory(),\n            new FallbackIntentFactory()\n        ).resolve(type).handle(handler)\n    }\n}\nexport default RequestHandlerFactory\n\nexport class LaunchRequestHandlerFactory implements RequestHandlerBuilder {\n    supports (type: string) {\n        return type === 'LaunchRequest'\n    }\n    handle (handler: TMergeTargetHandler) {\n        return merge(handler, {\n            canHandle (handlerInput) {\n                return isLaunchRequest(handlerInput)\n            }\n        })\n    }\n}\n\nexport class FallbackIntentFactory implements RequestHandlerBuilder {\n    supports () {\n        return true\n    }\n    handle (handler: TMergeTargetHandler) {\n        return merge(handler)\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DBClient.html":{"url":"classes/DBClient.html","title":"class - DBClient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DBClient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/libs/db.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                client\n                            \n                            \n                                    Protected\n                                isDebug\n                            \n                            \n                                    Protected\n                                primaryKey\n                            \n                            \n                                    Protected\n                                tableName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                get\n                            \n                            \n                                    Public\n                                    Async\n                                put\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(tableName: string, config?: DBConfig)\n                    \n                \n                        \n                            \n                                Defined in packages/core/libs/db.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tableName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        DBConfig\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            client\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DocumentClient\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/libs/db.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            isDebug\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/libs/db.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            primaryKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/libs/db.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            tableName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/libs/db.ts:16\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(id: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/core/libs/db.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            put\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    put(id: string, attributes: DBItem)\n                \n            \n\n\n            \n                \n                    Defined in packages/core/libs/db.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    attributes\n                                    \n                                                DBItem\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DynamoDB } from 'aws-sdk'\nimport DocumentClient = DynamoDB.DocumentClient\n\nexport interface DBItem {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    [key: string]: any;\n}\nexport interface DBConfig {\n    client?: DocumentClient;\n    isDebug?: boolean;\n    primaryKey?: string;\n}\nexport class DBClient {\n    protected client: DocumentClient\n    protected isDebug: boolean\n    protected tableName: string\n    protected primaryKey: string\n    public constructor (tableName: string, config?: DBConfig) {\n        this.client = config ? config.client || new DocumentClient() : new DocumentClient()\n        this.isDebug = config ? config.isDebug || false : false\n        this.primaryKey = config ? config.primaryKey || 'id' : 'id'\n        this.tableName = tableName\n    }\n    public async get (id: string): Promise {\n        const param: DocumentClient.GetItemInput = {\n            TableName: this.tableName,\n            Key: {\n                [this.primaryKey]: id\n            }\n        }\n        if (this.isDebug) console.log('DBClient.get: %j', param)\n        const { Item } = await this.client.get(param).promise()\n        if (this.isDebug) console.log('DBClient.get(): %j', Item)\n        if (!Item) return {}\n        return Item\n    }\n    public async put (id: string, attributes: DBItem): Promise {\n        const param: DocumentClient.PutItemInput = {\n            TableName: this.tableName,\n            Item: {\n                [this.primaryKey]: id,\n                ...attributes\n            }\n        }\n        if (this.isDebug) console.log('DBClient.put: %j', param)\n        const result = await this.client.put(param).promise()\n        if (this.isDebug) console.log('DBClient.put: %j', result)\n        return result\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DBConfig.html":{"url":"interfaces/DBConfig.html","title":"interface - DBConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DBConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/libs/db.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        client\n                                \n                                \n                                            Optional\n                                        isDebug\n                                \n                                \n                                            Optional\n                                        primaryKey\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        client\n                                    \n                                \n                                \n                                    \n                                        client:         DocumentClient\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DocumentClient\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isDebug\n                                    \n                                \n                                \n                                    \n                                        isDebug:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        primaryKey\n                                    \n                                \n                                \n                                    \n                                        primaryKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DynamoDB } from 'aws-sdk'\nimport DocumentClient = DynamoDB.DocumentClient\n\nexport interface DBItem {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    [key: string]: any;\n}\nexport interface DBConfig {\n    client?: DocumentClient;\n    isDebug?: boolean;\n    primaryKey?: string;\n}\nexport class DBClient {\n    protected client: DocumentClient\n    protected isDebug: boolean\n    protected tableName: string\n    protected primaryKey: string\n    public constructor (tableName: string, config?: DBConfig) {\n        this.client = config ? config.client || new DocumentClient() : new DocumentClient()\n        this.isDebug = config ? config.isDebug || false : false\n        this.primaryKey = config ? config.primaryKey || 'id' : 'id'\n        this.tableName = tableName\n    }\n    public async get (id: string): Promise {\n        const param: DocumentClient.GetItemInput = {\n            TableName: this.tableName,\n            Key: {\n                [this.primaryKey]: id\n            }\n        }\n        if (this.isDebug) console.log('DBClient.get: %j', param)\n        const { Item } = await this.client.get(param).promise()\n        if (this.isDebug) console.log('DBClient.get(): %j', Item)\n        if (!Item) return {}\n        return Item\n    }\n    public async put (id: string, attributes: DBItem): Promise {\n        const param: DocumentClient.PutItemInput = {\n            TableName: this.tableName,\n            Item: {\n                [this.primaryKey]: id,\n                ...attributes\n            }\n        }\n        if (this.isDebug) console.log('DBClient.put: %j', param)\n        const result = await this.client.put(param).promise()\n        if (this.isDebug) console.log('DBClient.put: %j', result)\n        return result\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DBItem.html":{"url":"interfaces/DBItem.html","title":"interface - DBItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DBItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/libs/db.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in packages/core/libs/db.ts:4\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { DynamoDB } from 'aws-sdk'\nimport DocumentClient = DynamoDB.DocumentClient\n\nexport interface DBItem {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    [key: string]: any;\n}\nexport interface DBConfig {\n    client?: DocumentClient;\n    isDebug?: boolean;\n    primaryKey?: string;\n}\nexport class DBClient {\n    protected client: DocumentClient\n    protected isDebug: boolean\n    protected tableName: string\n    protected primaryKey: string\n    public constructor (tableName: string, config?: DBConfig) {\n        this.client = config ? config.client || new DocumentClient() : new DocumentClient()\n        this.isDebug = config ? config.isDebug || false : false\n        this.primaryKey = config ? config.primaryKey || 'id' : 'id'\n        this.tableName = tableName\n    }\n    public async get (id: string): Promise {\n        const param: DocumentClient.GetItemInput = {\n            TableName: this.tableName,\n            Key: {\n                [this.primaryKey]: id\n            }\n        }\n        if (this.isDebug) console.log('DBClient.get: %j', param)\n        const { Item } = await this.client.get(param).promise()\n        if (this.isDebug) console.log('DBClient.get(): %j', Item)\n        if (!Item) return {}\n        return Item\n    }\n    public async put (id: string, attributes: DBItem): Promise {\n        const param: DocumentClient.PutItemInput = {\n            TableName: this.tableName,\n            Item: {\n                [this.primaryKey]: id,\n                ...attributes\n            }\n        }\n        if (this.isDebug) console.log('DBClient.put: %j', param)\n        const result = await this.client.put(param).promise()\n        if (this.isDebug) console.log('DBClient.put: %j', result)\n        return result\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeviceAPIClient.html":{"url":"classes/DeviceAPIClient.html","title":"class - DeviceAPIClient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeviceAPIClient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/serviceClients/libs/Devices.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Client\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                path\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                getCountryAndPostalCode\n                            \n                            \n                                    Public\n                                    Async\n                                getFullAddress\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '/v1/devices/'\n                        \n                    \n                        \n                            \n                                    Defined in packages/serviceClients/libs/Devices.ts:5\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getCountryAndPostalCode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCountryAndPostalCode(deviceId: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/serviceClients/libs/Devices.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    deviceId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getFullAddress\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFullAddress(deviceId: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/serviceClients/libs/Devices.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    deviceId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { services } from 'ask-sdk-model'\nimport Client from './client'\n\nexport class DeviceAPIClient extends Client {\n    protected path = '/v1/devices/'\n    public async getCountryAndPostalCode (deviceId: string): Promise {\n        return this.get(`${deviceId}/settings/address/countryAndPostalCode`)\n    }\n    public async getFullAddress (deviceId: string): Promise {\n        return this.get(`${deviceId}/settings/address`)\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DynamoDBSkillConfig.html":{"url":"interfaces/DynamoDBSkillConfig.html","title":"interface - DynamoDBSkillConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DynamoDBSkillConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ask-utils/libs/models.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseSkillConfig\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        persistanceType\n                                \n                                \n                                        tableName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        persistanceType\n                                    \n                                \n                                \n                                    \n                                        persistanceType:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tableName\n                                    \n                                \n                                \n                                    \n                                        tableName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n    RequestInterceptor,\n    ResponseInterceptor,\n    ErrorHandler,\n    RequestHandler\n} from 'ask-sdk'\nimport {\n    SkillConstants\n} from '@ask-utils/handlers'\n\ntype PersistanceType = 'DynamoDB' | 'S3'\ninterface BaseSkillConfig {\n    persistanceType: PersistanceType;\n    isISP?: boolean;\n    constants?: T;\n}\nexport interface S3SkillConfig extends BaseSkillConfig {\n    persistanceType: 'S3';\n    bucketName: string;\n    bucketPathPrefix: string;\n}\nexport interface DynamoDBSkillConfig extends BaseSkillConfig {\n    persistanceType: 'DynamoDB';\n    tableName: string;\n}\nexport type SkillConfig = S3SkillConfig | DynamoDBSkillConfig\nexport interface SkillHandlers {\n    requestHandlers: RequestHandler[];\n    requestInterceptors?: RequestInterceptor[];\n    responseInterceptors?: ResponseInterceptor[];\n    errorHandlers?: ErrorHandler[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ErrorHandlerBuilder.html":{"url":"interfaces/ErrorHandlerBuilder.html","title":"interface - ErrorHandlerBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ErrorHandlerBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/error-handlers/libs/index.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getHandler\n                                \n                                \n                                    setErrorResponse\n                                \n                                \n                                    setHandle\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHandler\n                        \n                        \n                    \n                \n            \n            \n                \ngetHandler()\n                \n            \n\n\n            \n                \n                    Defined in packages/error-handlers/libs/index.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorHandler\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setErrorResponse\n                        \n                        \n                    \n                \n            \n            \n                \nsetErrorResponse(speechText: string, repromptText: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/error-handlers/libs/index.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    speechText\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    repromptText\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ErrorHandlerBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setHandle\n                        \n                        \n                    \n                \n            \n            \n                \nsetHandle(handle: ErrorHandle)\n                \n            \n\n\n            \n                \n                    Defined in packages/error-handlers/libs/index.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    handle\n                                    \n                                                ErrorHandle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ErrorHandlerBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ErrorHandler, RequestInterceptor, HandlerInput } from 'ask-sdk-core'\nimport { Response } from 'ask-sdk-model'\nimport * as Sentry from '@sentry/node'\nSentry.init({ dsn: process.env.SENTRY_DNS as string })\n\nexport type ErrorHandle = (handlerInput: HandlerInput, error: Error) => Promise | Response\nexport interface ErrorHandlerBuilder {\n    getHandler(): ErrorHandler;\n    setHandle(handle: ErrorHandle): ErrorHandlerBuilder;\n    setErrorResponse(speechText: string, repromptText: string): ErrorHandlerBuilder;\n}\n/**\n * ErrorHandler Factory for Sentry\n *\n * @example Basic\n * ```typescript\n * const ErrorHandler = SentryErrorHandlerFactory.init().getHandler()\n * ```\n * @example Custom speech and reprompt\n * ```typescript\n * const ErrorHandler = SentryErrorHandlerFactory.init()\n *                          .setErrorResponse('Speech something', 'reprompt something')\n *                          .getHandler()\n * ```\n * @example Custom handler\n * ```typescript\n * const ErrorHandler = SentryErrorHandlerFactory.init()\n *                          .setHandle((handlerInput) => {\n *                            return handlerInput.responseBuilder\n *                              .speak('Sorry I could not understand the meaning. Please tell me again')\n *                              .reprompt('Could you tell me onece more?')\n *                              .getResponse()\n *                          })\n *                          .getHandler()\n * ```\n */\nexport class SentryErrorHandlerFactory {\n    public static init (): ErrorHandlerBuilder {\n        let handlerFilter: ErrorHandle = (handlerInput) => {\n            return handlerInput.responseBuilder\n                .speak('Sorry I could not understand the meaning. Please tell me again')\n                .reprompt('Could you tell me onece more?')\n                .getResponse()\n        }\n\n        const handler: ErrorHandler = {\n            canHandle: () => true,\n            handle: (handlerInput, error) => {\n                Sentry.captureEvent({\n                    message: error.message,\n                    extra: {\n                        request: handlerInput.requestEnvelope,\n                        error,\n                        stack: error.stack\n                    }\n                })\n                return handlerFilter(handlerInput, error)\n            }\n        }\n        return {\n            getHandler (): ErrorHandler {\n                return handler\n            },\n            setHandle (handle: ErrorHandle) {\n                handlerFilter = handle\n                return this\n            },\n            setErrorResponse (speechText: string, repromptText: string) {\n                handlerFilter = (handlerInput) => {\n                    return handlerInput.responseBuilder\n                        .speak(speechText)\n                        .reprompt(repromptText)\n                        .getResponse()\n                }\n                return this\n            }\n        }\n    }\n}\n\nexport const SentryDefaultErrorHandler: ErrorHandler = SentryErrorHandlerFactory.init().getHandler()\n\n/**\n * Set additional track information\n *\n * @example\n * import Alexa from 'ask-sdk'\n * import { SetErrorTrackerInterceptor, SentryDefaultErrorHandler } from '@ask-utils/error-handlers'\n *\n * export const handler = Alexa.SkillBuilders.standard()\n *                            .addErrorHandlers(SentryDefaultErrorHandler)\n *                            .addRequestInterceptors(SetErrorTrackerInterceptor)\n *                            .lambda()\n */\nexport const SetErrorTrackerInterceptor: RequestInterceptor = {\n    process ({ requestEnvelope }) {\n        const { System } = requestEnvelope.context\n        const userParams: {[key: string]: string} = {\n            userId: System.user.userId\n        }\n        if (System.device) userParams.deviceId = System.device.deviceId\n        if (requestEnvelope.session) userParams.sessionId = requestEnvelope.session.sessionId\n\n        Sentry.configureScope(scope => {\n            scope.setTag('request_id', requestEnvelope.request.requestId)\n            scope.setUser(userParams)\n        })\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Factory.html":{"url":"interfaces/Factory.html","title":"interface - Factory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Factory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getLocalizedAttributes\n                                \n                                \n                                    putLocalizedAttribute\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLocalizedAttributes\n                        \n                        \n                    \n                \n            \n            \n                \ngetLocalizedAttributes()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:270\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Types.LocalizedAttributes\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            putLocalizedAttribute\n                        \n                        \n                    \n                \n            \n            \n                \nputLocalizedAttribute(locale: Types.Locale, key: string, text: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:269\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    locale\n                                    \n                                                Types.Locale\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Factory\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FallbackIntentFactory.html":{"url":"classes/FallbackIntentFactory.html","title":"class - FallbackIntentFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FallbackIntentFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/handlers/libs/requestHandlers/HandlerFactory.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            RequestHandlerBuilder\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                            \n                                supports\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handle\n                        \n                        \n                    \n                \n            \n            \n                \nhandle(handler: TMergeTargetHandler)\n                \n            \n\n\n            \n                \n                    Defined in packages/handlers/libs/requestHandlers/HandlerFactory.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    handler\n                                    \n                                                TMergeTargetHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TRequestHandler\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            supports\n                        \n                        \n                    \n                \n            \n            \n                \nsupports()\n                \n            \n\n\n            \n                \n                    Defined in packages/handlers/libs/requestHandlers/HandlerFactory.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { RequestHandler, HandlerInput } from 'ask-sdk-core'\nimport { Response, Request, RequestEnvelope } from 'ask-sdk-model'\nimport Resolver, { interfaces } from 'class-resolver'\nimport { isLaunchRequest } from 'ask-utils'\n\nexport interface TMergeTargetHandler {\n    canHandle?: (input: Input) => Promise | boolean;\n    handle?: (input: Input) => Promise | Output;\n}\nexport interface TRequestHandler {\n    canHandle: (input: Input) => Promise | boolean;\n    handle: (input: Input) => Promise | Output;\n}\nexport interface CustomeRequestEnvelope extends RequestEnvelope {\n    request: CustomRequest;\n}\nexport interface CustomHandlerInput extends HandlerInput {\n    requestEnvelope: CustomeRequestEnvelope;\n}\nexport interface RequestHandlerBuilder extends interfaces.ResolveTarget {\n    handle(handler: TMergeTargetHandler): TRequestHandler;\n}\n\nconst merge = (handler: TMergeTargetHandler, target?: TMergeTargetHandler): TRequestHandler => {\n    const fallBackHandler: RequestHandler = {\n        canHandle () {\n            return true\n        },\n        handle (handlerInput) {\n            return handlerInput.responseBuilder.getResponse()\n        }\n    }\n    return Object.assign({}, fallBackHandler, target, handler)\n}\n\nexport type SupportedHandlerType = 'LaunchRequest'\nexport class RequestHandlerFactory {\n    public static create (type: SupportedHandlerType, handler: TMergeTargetHandler): TRequestHandler {\n        return new Resolver(\n            new LaunchRequestHandlerFactory(),\n            new FallbackIntentFactory()\n        ).resolve(type).handle(handler)\n    }\n}\nexport default RequestHandlerFactory\n\nexport class LaunchRequestHandlerFactory implements RequestHandlerBuilder {\n    supports (type: string) {\n        return type === 'LaunchRequest'\n    }\n    handle (handler: TMergeTargetHandler) {\n        return merge(handler, {\n            canHandle (handlerInput) {\n                return isLaunchRequest(handlerInput)\n            }\n        })\n    }\n}\n\nexport class FallbackIntentFactory implements RequestHandlerBuilder {\n    supports () {\n        return true\n    }\n    handle (handler: TMergeTargetHandler) {\n        return merge(handler)\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FlashBriefingContent.html":{"url":"interfaces/FlashBriefingContent.html","title":"interface - FlashBriefingContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FlashBriefingContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/handlers/libs/flashbriefing.ts\n        \n\n            \n                Description\n            \n            \n                Flashbrieding feed contemts\nhttps://developer.amazon.com/docs/flashbriefing/flash-briefing-skill-api-feed-reference.html#details\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        mainText\n                                \n                                \n                                        redirectionUrl\n                                \n                                \n                                            Optional\n                                        streamUrl\n                                \n                                \n                                        titleText\n                                \n                                \n                                        uid\n                                \n                                \n                                        updateDate\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        mainText\n                                    \n                                \n                                \n                                    \n                                        mainText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        redirectionUrl\n                                    \n                                \n                                \n                                    \n                                        redirectionUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        streamUrl\n                                    \n                                \n                                \n                                    \n                                        streamUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        titleText\n                                    \n                                \n                                \n                                    \n                                        titleText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uid\n                                    \n                                \n                                \n                                    \n                                        uid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updateDate\n                                    \n                                \n                                \n                                    \n                                        updateDate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface FlashBriefingContent {\n    uid: string;\n    updateDate: string;\n    titleText: string;\n    streamUrl?: string;\n    mainText: string;\n    redirectionUrl: string;\n}\nexport type FlashBriefings = FlashBriefingContent[]\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Game.html":{"url":"interfaces/Game.html","title":"interface - Game","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Game\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        name\n                                \n                                \n                                        offer\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        offer\n                                    \n                                \n                                \n                                    \n                                        offer:         OfferType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OfferType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GameInvite.html":{"url":"interfaces/GameInvite.html","title":"interface - GameInvite","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GameInvite\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        inviter\n                                \n                                \n                                        inviteType\n                                \n                                \n                                        relationshipToInvitee\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        inviter\n                                    \n                                \n                                \n                                    \n                                        inviter:         Person\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Person\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inviteType\n                                    \n                                \n                                \n                                    \n                                        inviteType:         InviteType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         InviteType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        relationshipToInvitee\n                                    \n                                \n                                \n                                    \n                                        relationshipToInvitee:         RelationshipToInvitee\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RelationshipToInvitee\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GameStatistic.html":{"url":"interfaces/GameStatistic.html","title":"interface - GameStatistic","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GameStatistic\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        score\n                                \n                                \n                                        team\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        score\n                                    \n                                \n                                \n                                    \n                                        score:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        team\n                                    \n                                \n                                \n                                    \n                                        team:         SportsTeam\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SportsTeam\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Goal.html":{"url":"interfaces/Goal.html","title":"interface - Goal","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Goal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        scoreEarned\n                                \n                                \n                                        teamName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        scoreEarned\n                                    \n                                \n                                \n                                    \n                                        scoreEarned:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        teamName\n                                    \n                                \n                                \n                                    \n                                        teamName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HandlerBuilder.html":{"url":"classes/HandlerBuilder.html","title":"class - HandlerBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HandlerBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/isp/libs/handlers/fixtures.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                canHandle\n                            \n                            \n                                    Protected\n                                canHandleFilter\n                            \n                            \n                                    Public\n                                handle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getHandler\n                            \n                            \n                                    Public\n                                replaceHandler\n                            \n                            \n                                    Public\n                                setHandle\n                            \n                            \n                                    Public\n                                setHandleCondition\n                            \n                            \n                                    Public\n                                updateHandler\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            canHandle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CanHandle\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in packages/isp/libs/handlers/fixtures.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            canHandleFilter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CanHandle\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in packages/isp/libs/handlers/fixtures.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            handle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Handle\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in packages/isp/libs/handlers/fixtures.ts:11\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getHandler\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getHandler()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/handlers/fixtures.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     RequestHandler\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            replaceHandler\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    replaceHandler(handler: Partial)\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/handlers/fixtures.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    handler\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setHandle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setHandle(handle: Handle)\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/handlers/fixtures.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    handle\n                                    \n                                                Handle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setHandleCondition\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setHandleCondition(condition: CanHandle)\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/handlers/fixtures.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                CanHandle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateHandler\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateHandler(condition: CanHandle, handle: Handle)\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/handlers/fixtures.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                CanHandle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    handle\n                                    \n                                                Handle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { RequestHandler, HandlerInput } from 'ask-sdk-core'\nimport { Response } from 'ask-sdk-model'\n\nexport type CanHandle = (handlerInput: HandlerInput) => Promise | boolean\nexport type Handle = (handlerInput: HandlerInput) => Promise | Response\nexport class HandlerBuilder {\n    protected canHandleFilter: CanHandle = () => true\n    public canHandle: CanHandle = (handlerInput) => {\n        return this.canHandleFilter(handlerInput)\n    }\n    public handle: Handle = (handlerInput) => {\n        throw new Error(`Unsupported request: ${JSON.stringify(handlerInput)}`)\n    }\n    public setHandleCondition (condition: CanHandle): this {\n        this.canHandleFilter = condition\n        return this\n    }\n    public setHandle (handle: Handle): this {\n        this.handle = handle\n        return this\n    }\n    public updateHandler (condition: CanHandle, handle: Handle): this {\n        this.setHandle(handle)\n        this.setHandleCondition(condition)\n        return this\n    }\n    public replaceHandler (handler: Partial): this {\n        if (handler.canHandle) this.setHandleCondition(handler.canHandle)\n        if (handler.handle) this.setHandle(handler.handle)\n        return this\n    }\n    public getHandler (): RequestHandler {\n        return {\n            canHandle: this.canHandle,\n            handle: this.handle\n        }\n    }\n}\nexport class HandlerFactory {\n    public static init () {\n        const builder = new HandlerBuilder()\n        return builder\n    }\n}\nexport default HandlerFactory\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HandlerBuilder-1.html":{"url":"classes/HandlerBuilder-1.html","title":"class - HandlerBuilder-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HandlerBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/handlers/libs/requestHandlers/factories/Base.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            HandlerBuilderInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                canHandle\n                            \n                            \n                                    Protected\n                                canHandleFilter\n                            \n                            \n                                    Public\n                                handle\n                            \n                            \n                                    Protected\n                                handlerFilter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getHandler\n                            \n                            \n                                    Public\n                                replaceHandler\n                            \n                            \n                                    Public\n                                setHandle\n                            \n                            \n                                    Public\n                                setHandleCondition\n                            \n                            \n                                    Public\n                                updateHandler\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            canHandle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CanHandle\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in packages/handlers/libs/requestHandlers/factories/Base.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            canHandleFilter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CanHandle\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in packages/handlers/libs/requestHandlers/factories/Base.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            handle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Handle\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in packages/handlers/libs/requestHandlers/factories/Base.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            handlerFilter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Handle\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in packages/handlers/libs/requestHandlers/factories/Base.ts:8\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getHandler\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getHandler()\n                \n            \n\n\n            \n                \n                    Defined in packages/handlers/libs/requestHandlers/factories/Base.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     RequestHandler\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            replaceHandler\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    replaceHandler(handler: Partial)\n                \n            \n\n\n            \n                \n                    Defined in packages/handlers/libs/requestHandlers/factories/Base.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    handler\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setHandle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setHandle(handle: Handle)\n                \n            \n\n\n            \n                \n                    Defined in packages/handlers/libs/requestHandlers/factories/Base.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    handle\n                                    \n                                                Handle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setHandleCondition\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setHandleCondition(condition: CanHandle)\n                \n            \n\n\n            \n                \n                    Defined in packages/handlers/libs/requestHandlers/factories/Base.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                CanHandle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateHandler\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateHandler(condition: CanHandle, handle: Handle)\n                \n            \n\n\n            \n                \n                    Defined in packages/handlers/libs/requestHandlers/factories/Base.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                CanHandle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    handle\n                                    \n                                                Handle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { RequestHandler } from 'ask-sdk-core'\nimport {\n    CanHandle, Handle, HandlerBuilderInterface,\n    CanHandleResponse, HandleResponse\n} from './model'\nexport class HandlerBuilder implements HandlerBuilderInterface {\n    protected canHandleFilter: CanHandle = (): CanHandleResponse => true\n    protected handlerFilter: Handle = (handlerInput): HandleResponse => { throw new Error(`Unsupported request: ${JSON.stringify(handlerInput)}`) }\n    public canHandle: CanHandle = (handlerInput): CanHandleResponse => {\n        return this.canHandleFilter(handlerInput)\n    }\n    public handle: Handle = (handlerInput): HandleResponse => {\n        return this.handlerFilter(handlerInput)\n    }\n    public setHandleCondition (condition: CanHandle): this {\n        this.canHandleFilter = condition\n        return this\n    }\n    public setHandle (handle: Handle): this {\n        this.handlerFilter = handle\n        return this\n    }\n    public updateHandler (condition: CanHandle, handle: Handle): this {\n        this.setHandle(handle)\n        this.setHandleCondition(condition)\n        return this\n    }\n    public replaceHandler (handler: Partial): this {\n        if (handler.canHandle) this.setHandleCondition(handler.canHandle)\n        if (handler.handle) this.setHandle(handler.handle)\n        return this\n    }\n    public getHandler (): RequestHandler {\n        return {\n            canHandle: this.canHandle,\n            handle: this.handle\n        }\n    }\n}\nexport default HandlerBuilder\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HandlerBuilderInterface.html":{"url":"interfaces/HandlerBuilderInterface.html","title":"interface - HandlerBuilderInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  HandlerBuilderInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/handlers/libs/requestHandlers/factories/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        canHandle\n                                \n                                \n                                        handle\n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getHandler\n                                \n                                \n                                    replaceHandler\n                                \n                                \n                                    setHandle\n                                \n                                \n                                    setHandleCondition\n                                \n                                \n                                    updateHandler\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHandler\n                        \n                        \n                    \n                \n            \n            \n                \ngetHandler()\n                \n            \n\n\n            \n                \n                    Defined in packages/handlers/libs/requestHandlers/factories/model.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     RequestHandler\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            replaceHandler\n                        \n                        \n                    \n                \n            \n            \n                \nreplaceHandler(handler: Partial)\n                \n            \n\n\n            \n                \n                    Defined in packages/handlers/libs/requestHandlers/factories/model.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    handler\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         HandlerBuilderInterface\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setHandle\n                        \n                        \n                    \n                \n            \n            \n                \nsetHandle(handle: Handle)\n                \n            \n\n\n            \n                \n                    Defined in packages/handlers/libs/requestHandlers/factories/model.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    handle\n                                    \n                                                Handle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         HandlerBuilderInterface\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setHandleCondition\n                        \n                        \n                    \n                \n            \n            \n                \nsetHandleCondition(condition: CanHandle)\n                \n            \n\n\n            \n                \n                    Defined in packages/handlers/libs/requestHandlers/factories/model.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                CanHandle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         HandlerBuilderInterface\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateHandler\n                        \n                        \n                    \n                \n            \n            \n                \nupdateHandler(condition: CanHandle, handle: Handle)\n                \n            \n\n\n            \n                \n                    Defined in packages/handlers/libs/requestHandlers/factories/model.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                CanHandle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    handle\n                                    \n                                                Handle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         HandlerBuilderInterface\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        canHandle\n                                    \n                                \n                                \n                                    \n                                        canHandle:         CanHandle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CanHandle\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        handle\n                                    \n                                \n                                \n                                    \n                                        handle:         Handle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Handle\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { RequestHandler, HandlerInput } from 'ask-sdk-core'\nimport { Response } from 'ask-sdk-model'\n\nexport type CanHandleResponse = Promise | boolean\nexport type HandleResponse = Promise | Response\nexport type CanHandle = (handlerInput: HandlerInput) => CanHandleResponse\nexport type Handle = (handlerInput: HandlerInput) => Promise | Response\nexport interface HandlerBuilderInterface {\n    canHandle: CanHandle;\n    handle: Handle;\n    setHandleCondition(condition: CanHandle): HandlerBuilderInterface;\n    setHandle(handle: Handle): HandlerBuilderInterface;\n    updateHandler(condition: CanHandle, handle: Handle): HandlerBuilderInterface;\n    replaceHandler(handler: Partial): HandlerBuilderInterface;\n    getHandler(): RequestHandler;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HandlerFactory.html":{"url":"classes/HandlerFactory.html","title":"class - HandlerFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HandlerFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/isp/libs/handlers/fixtures.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/handlers/fixtures.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         HandlerBuilder\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { RequestHandler, HandlerInput } from 'ask-sdk-core'\nimport { Response } from 'ask-sdk-model'\n\nexport type CanHandle = (handlerInput: HandlerInput) => Promise | boolean\nexport type Handle = (handlerInput: HandlerInput) => Promise | Response\nexport class HandlerBuilder {\n    protected canHandleFilter: CanHandle = () => true\n    public canHandle: CanHandle = (handlerInput) => {\n        return this.canHandleFilter(handlerInput)\n    }\n    public handle: Handle = (handlerInput) => {\n        throw new Error(`Unsupported request: ${JSON.stringify(handlerInput)}`)\n    }\n    public setHandleCondition (condition: CanHandle): this {\n        this.canHandleFilter = condition\n        return this\n    }\n    public setHandle (handle: Handle): this {\n        this.handle = handle\n        return this\n    }\n    public updateHandler (condition: CanHandle, handle: Handle): this {\n        this.setHandle(handle)\n        this.setHandleCondition(condition)\n        return this\n    }\n    public replaceHandler (handler: Partial): this {\n        if (handler.canHandle) this.setHandleCondition(handler.canHandle)\n        if (handler.handle) this.setHandle(handler.handle)\n        return this\n    }\n    public getHandler (): RequestHandler {\n        return {\n            canHandle: this.canHandle,\n            handle: this.handle\n        }\n    }\n}\nexport class HandlerFactory {\n    public static init () {\n        const builder = new HandlerBuilder()\n        return builder\n    }\n}\nexport default HandlerFactory\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HandlerFactory-1.html":{"url":"classes/HandlerFactory-1.html","title":"class - HandlerFactory-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HandlerFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/handlers/libs/requestHandlers/factories/index.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    init(type: string, intentName?: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/handlers/libs/requestHandlers/factories/index.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    intentName\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         HandlerBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import HandlerBuilder from './Base'\nimport IntentHandlerBuilder from './Intent'\nimport LaunchRequestBuilder from './LaunchRequest'\nexport * from './Base'\nexport * from './Intent'\nexport * from './model'\n\nexport class IntentHandlerFactory {\n    public static init (intentName?: string): IntentHandlerBuilder {\n        if (!intentName) throw new Error('intentName is required')\n        return new IntentHandlerBuilder(intentName)\n    }\n}\n\nexport class HandlerFactory {\n    public static init (type: string, intentName?: string): HandlerBuilder {\n        if (type === 'IntentRequest') {\n            return IntentHandlerFactory.init(intentName)\n        }\n        return new HandlerBuilder()\n    }\n}\n\nexport class LaunchRequestFactory {\n    public static init (): HandlerBuilder {\n        return new LaunchRequestBuilder()\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ISPContentBuilder.html":{"url":"classes/ISPContentBuilder.html","title":"class - ISPContentBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ISPContentBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/isp/libs/contentBuilders/base.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ContentBuilder\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Optional\n                                product\n                            \n                            \n                                    Protected\n                                    Optional\n                                productName\n                            \n                            \n                                    Protected\n                                contents\n                            \n                            \n                                    Protected\n                                locale\n                            \n                            \n                                    Protected\n                                responseBuilder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getCanNotBuyTheProductResponse\n                            \n                            \n                                    Public\n                                getEntitledProductResponse\n                            \n                            \n                                    Protected\n                                getProduct\n                            \n                            \n                                    Protected\n                                getProductName\n                            \n                            \n                                    Private\n                                getProductNotFoundResponse\n                            \n                            \n                                    Private\n                                getProductsNotFoundResponse\n                            \n                            \n                                    Private\n                                getUnSupportedISPResponse\n                            \n                            \n                                    Public\n                                setCanNotBuyTheProductResponse\n                            \n                            \n                                    Public\n                                setEntitledProductResponse\n                            \n                            \n                                    Public\n                                setProduct\n                            \n                            \n                                    Public\n                                setProductName\n                            \n                            \n                                    Public\n                                setProductNotFoundResponse\n                            \n                            \n                                    Public\n                                setProductsNotFoundResponse\n                            \n                            \n                                    Public\n                                setUnSupportedISPResponse\n                            \n                            \n                                    Public\n                                getResponse\n                            \n                            \n                                    Protected\n                                isJP\n                            \n                            \n                                    Public\n                                putDirective\n                            \n                            \n                                    Public\n                                putDirectives\n                            \n                            \n                                    Public\n                                putRepromptText\n                            \n                            \n                                    Public\n                                putSpeechText\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(locale: string, responseBuilder: ResponseBuilder, productName?: string, product?: InSkillProduct)\n                    \n                \n                        \n                            \n                                Defined in packages/isp/libs/contentBuilders/base.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        locale\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        responseBuilder\n                                                  \n                                                        \n                                                                        ResponseBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        productName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        product\n                                                  \n                                                        \n                                                                        InSkillProduct\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Optional\n                            product\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         InSkillProduct\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/isp/libs/contentBuilders/base.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Optional\n                            productName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/isp/libs/contentBuilders/base.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            contents\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ResponseContent\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         ContentBuilder\n\n                                \n                            \n                        \n                            \n                                    Defined in         ContentBuilder:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            locale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ContentBuilder\n\n                                \n                            \n                        \n                            \n                                    Defined in         ContentBuilder:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            responseBuilder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ResponseBuilder\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ContentBuilder\n\n                                \n                            \n                        \n                            \n                                    Defined in         ContentBuilder:10\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getCanNotBuyTheProductResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCanNotBuyTheProductResponse()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/base.ts:146\n                \n            \n\n\n            \n                \n                    If product not found\n\n\n                    \n                        Returns :         ResponseContent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getEntitledProductResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getEntitledProductResponse()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/base.ts:165\n                \n            \n\n\n            \n                \n                    If product already purchased\n\n\n                    \n                        Returns :         ResponseContent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getProduct\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getProduct()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/base.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         InSkillProduct\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getProductName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getProductName()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/base.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getProductNotFoundResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getProductNotFoundResponse()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/base.ts:117\n                \n            \n\n\n            \n                \n                    Product does not found response\n\n\n                    \n                        Returns :         ResponseContent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getProductsNotFoundResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getProductsNotFoundResponse()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/base.ts:95\n                \n            \n\n\n            \n                \n                    Product does not found response\n\n\n                    \n                        Returns :         ResponseContent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getUnSupportedISPResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUnSupportedISPResponse()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/base.ts:60\n                \n            \n\n\n            \n                \n                    If the device or account does not supports ISP\n\n\n                    \n                        Returns :         ResponseContent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setCanNotBuyTheProductResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setCanNotBuyTheProductResponse()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/base.ts:158\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setEntitledProductResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setEntitledProductResponse()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/base.ts:177\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setProduct\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setProduct(product: InSkillProduct)\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/base.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    product\n                                    \n                                                InSkillProduct\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setProductName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setProductName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/base.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setProductNotFoundResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setProductNotFoundResponse()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/base.ts:139\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setProductsNotFoundResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setProductsNotFoundResponse()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/base.ts:110\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setUnSupportedISPResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setUnSupportedISPResponse()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/base.ts:88\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getResponse()\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:43\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Response\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isJP\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isJP()\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:16\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putDirective\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putDirective(directive: Directive)\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:35\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    directive\n                                    \n                                                Directive\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putDirectives\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putDirectives(directives: Directive[])\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    directives\n                                    \n                                            Directive[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putRepromptText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putRepromptText(text: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:23\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putSpeechText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putSpeechText(text: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { services, Response, Directive } from 'ask-sdk-model'\nimport { ResponseBuilder } from 'ask-sdk-core'\n\nimport InSkillProduct = services.monetization.InSkillProduct\n\nexport interface ResponseContent {\n    speechText?: string;\n    repromptText?: string;\n    directive?: Directive;\n}\n\nexport class ContentBuilder {\n    protected locale: string\n    protected responseBuilder: ResponseBuilder\n    protected contents: ResponseContent = {}\n    public constructor (locale: string, responseBuilder: ResponseBuilder) {\n        this.locale = locale\n        this.responseBuilder = responseBuilder\n    }\n    protected isJP (): boolean {\n        return /^ja/.test(this.locale)\n    }\n    public getResponse (): Response {\n        const { speechText, repromptText, directive } = this.contents\n        if (speechText) this.responseBuilder.speak(speechText)\n        if (repromptText) this.responseBuilder.reprompt(repromptText)\n        if (directive) this.responseBuilder.addDirective(directive)\n        return this.responseBuilder.getResponse()\n    }\n}\n\nexport class ISPContentBuilder extends ContentBuilder {\n    protected productName?: string\n    protected product?: InSkillProduct\n    public constructor (locale: string, responseBuilder: ResponseBuilder, productName?: string, product?: InSkillProduct) {\n        super(locale, responseBuilder)\n        if (productName) this.productName = productName\n        if (product) this.product = product\n    }\n    public setProduct (product: InSkillProduct): this {\n        this.product = product\n        return this\n    }\n    protected getProduct (): InSkillProduct {\n        const { product } = this\n        if (!product) throw new Error('No products')\n        return product\n    }\n    public setProductName (name: string): this {\n        this.productName = name\n        return this\n    }\n    protected getProductName (): string {\n        if (!this.productName) throw new Error('No product name')\n        return this.productName\n    }\n    /**\n   * If the device or account does not supports ISP\n   */\n    private getUnSupportedISPResponse (): ResponseContent {\n        if (this.isJP()) {\n            return {\n                speechText: [\n                    'すみません。',\n                    'お使いのデバイス・アプリでは、スキル内課金を利用することができません。',\n                    '別のデバイスを利用するか、アレクサアプリから設定を確認してもう一度お試しください。',\n                    '次はなにをしますか？',\n                    'スキルを終了して、アプリの設定を確認したい場合は「終了」と話しかけてください。'\n                ].join(' '),\n                repromptText: [\n                    '次はなにをしますか？',\n                    'スキルを終了して、アプリの設定を確認したい場合は「終了」と話しかけてください。'\n                ].join(' ')\n            }\n        }\n        return {\n            speechText: [\n                'Sorry, you can not purchase by the device.',\n                'Please check your device and application settings by the Alexa app.',\n                'What will you do the next?'\n            ].join(' '),\n            repromptText: [\n                'What will you do the next?',\n                'If you want to stop the skill, please say me \"STOP\".'\n            ].join(' ')\n        }\n    }\n    public setUnSupportedISPResponse (): this {\n        this.contents = this.getUnSupportedISPResponse()\n        return this\n    }\n    /**\n   * Product does not found response\n   */\n    private getProductsNotFoundResponse (): ResponseContent {\n        if (this.isJP()) {\n            return {\n                speechText: [\n                    `すみません。商品が見つかりませんでした。`,\n                    '他に何をしますか？'\n                ].join(' '),\n                repromptText: '他に何をしますか？'\n            }\n        }\n        return {\n            speechText: `I can't find any products you can buy. What do you want to do next?`,\n            repromptText: `What do you want to do next?`\n        }\n    }\n    public setProductsNotFoundResponse (): this {\n        this.contents = this.getProductsNotFoundResponse()\n        return this\n    }\n    /**\n   * Product does not found response\n   */\n    private getProductNotFoundResponse (): ResponseContent {\n        try {\n            const productName = this.getProductName()\n            if (this.isJP()) {\n                return {\n                    speechText: [\n                        `${productName}を購入することができます。`,\n                        `詳細を聞きたい場合は「${productName}について教えて」、`,\n                        `購入する場合は「${productName}を購入」と話しかけてください。`,\n                        'どうしますか？'\n                    ].join(' '),\n                    repromptText: '購入・詳細、どちらにしますか？'\n                }\n            }\n            return {\n                speechText: `${productName}. what item do you want?`,\n                repromptText: `${productName}. what item do you want?`\n            }\n        } catch (e) {\n            return this.getProductsNotFoundResponse()\n        }\n    }\n    public setProductNotFoundResponse (): this {\n        this.contents = this.getProductNotFoundResponse()\n        return this\n    }\n    /**\n   * If product not found\n   */\n    private getCanNotBuyTheProductResponse (): ResponseContent {\n        if (this.isJP()) {\n            return {\n                speechText: 'すみません。その商品は現在購入できません。他に何をしますか？',\n                repromptText: '他に何をしますか？'\n            }\n        }\n        return {\n            speechText: \"I don't think we have a product by that name.  Can you try again?\",\n            repromptText: \"I didn't catch that. Can you try again?\"\n        }\n    }\n    public setCanNotBuyTheProductResponse (): this {\n        this.contents = this.getCanNotBuyTheProductResponse()\n        return this\n    }\n    /**\n   * If product already purchased\n   */\n    public getEntitledProductResponse (): ResponseContent {\n        if (this.isJP()) {\n            return {\n                speechText: 'その商品はすでに購入済の様子です。他に何をしますか？',\n                repromptText: '他に何をしますか？'\n            }\n        }\n        return {\n            speechText: 'You already entitled the product. What will you do for next?',\n            repromptText: 'What will you do for next?'\n        }\n    }\n    public setEntitledProductResponse (): this {\n        this.contents = this.getEntitledProductResponse()\n        return this\n    }\n}\nexport default ISPContentBuilder\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ISPProductClient.html":{"url":"classes/ISPProductClient.html","title":"class - ISPProductClient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ISPProductClient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/isp/libs/client.ts\n        \n\n\n            \n                Extends\n            \n            \n                        APIClient\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                attributeManager\n                            \n                            \n                                    Private\n                                cacheUsage\n                            \n                            \n                                    Private\n                                products\n                            \n                            \n                                    Private\n                                endpoint\n                            \n                            \n                                    Private\n                                isDebug\n                            \n                            \n                                    Private\n                                locale\n                            \n                            \n                                    Private\n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                disabledCache\n                            \n                            \n                                    Public\n                                enableCache\n                            \n                            \n                                    Public\n                                    Async\n                                fetchLists\n                            \n                            \n                                    Public\n                                    Async\n                                findProductById\n                            \n                            \n                                    Public\n                                    Async\n                                findProductByName\n                            \n                            \n                                    Public\n                                    Async\n                                findProductByNo\n                            \n                            \n                                    Private\n                                getCachedProducts\n                            \n                            \n                                    Public\n                                getCacheStatus\n                            \n                            \n                                    Public\n                                    Async\n                                getProductById\n                            \n                            \n                                    Public\n                                    Async\n                                getProducts\n                            \n                            \n                                    Private\n                                    Async\n                                hasProducts\n                            \n                            \n                                    Public\n                                    Async\n                                searchProduct\n                            \n                            \n                                    Private\n                                createAxiosRequestObject\n                            \n                            \n                                    Protected\n                                    Async\n                                get\n                            \n                            \n                                    Public\n                                getProduct\n                            \n                            \n                                    Private\n                                getURL\n                            \n                            \n                                    Public\n                                listProducts\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(handlerInput: HandlerInput, isDebug: boolean)\n                    \n                \n                        \n                            \n                                Defined in packages/isp/libs/client.ts:54\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        handlerInput\n                                                  \n                                                        \n                                                                    HandlerInput\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        isDebug\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            attributeManager\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AttributesManager\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/isp/libs/client.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cacheUsage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"enable\" | \"disable\"\n\n                        \n                    \n                    \n                        \n                            Default value : 'enable'\n                        \n                    \n                        \n                            \n                                    Defined in packages/isp/libs/client.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            products\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         InskillProducts\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in packages/isp/libs/client.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            endpoint\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         APIClient\n\n                                \n                            \n                        \n                            \n                                    Defined in         APIClient:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isDebug\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         APIClient\n\n                                \n                            \n                        \n                            \n                                    Defined in         APIClient:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            locale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         APIClient\n\n                                \n                            \n                        \n                            \n                                    Defined in         APIClient:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         APIClient\n\n                                \n                            \n                        \n                            \n                                    Defined in         APIClient:9\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            disabledCache\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    disabledCache()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/client.ts:66\n                \n            \n\n\n            \n                \n                    Disallow to use the session attributes item at first\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            enableCache\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    enableCache()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/client.ts:73\n                \n            \n\n\n            \n                \n                    Allow to use the session attributes item at first\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            fetchLists\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchLists()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/client.ts:100\n                \n            \n\n\n            \n                \n                    Fetch the ISP API.\nIf cacheUsage is enabled, it will return from session attributes at first\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            findProductById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findProductById(productId: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/client.ts:152\n                \n            \n\n\n            \n                \n                    Find product by the specific id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    productId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        product id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            findProductByName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findProductByName(productName: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/client.ts:163\n                \n            \n\n\n            \n                \n                    Find product by the product name\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    productName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        product name\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            findProductByNo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findProductByNo(userInputNo: number)\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/client.ts:143\n                \n            \n\n\n            \n                \n                    Find product by the list number\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    userInputNo\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        list number\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getCachedProducts\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCachedProducts()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/client.ts:89\n                \n            \n\n\n            \n                \n                    get product from session attributes\n\n\n                    \n                        Returns :         InskillProducts\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getCacheStatus\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCacheStatus()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/client.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     \"enable\" | \"disable\"\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getProductById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getProductById(productId: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/client.ts:120\n                \n            \n\n\n            \n                \n                    get product by product id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getProducts\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getProducts()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/client.ts:135\n                \n            \n\n\n            \n                \n                    get products\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            hasProducts\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasProducts()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/client.ts:81\n                \n            \n\n\n            \n                \n                    Check product avaliable status\nIf products is empty, try to fetch at once\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            searchProduct\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    searchProduct(condition: literal type)\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/client.ts:174\n                \n            \n\n\n            \n                \n                    Find product by several condition\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : string, userInputNo?: number, productId?: string} search conditions\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createAxiosRequestObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createAxiosRequestObject(productId?: string)\n                \n            \n\n\n            \n                \n                    Inherited from         APIClient\n\n                \n            \n            \n                \n                        Defined in         APIClient:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productId\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     AxiosRequestConfig\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Async\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(productId?: string)\n                \n            \n\n\n            \n                \n                    Inherited from         APIClient\n\n                \n            \n            \n                \n                        Defined in         APIClient:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productId\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getProduct\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getProduct(productId: string)\n                \n            \n\n\n            \n                \n                    Inherited from         APIClient\n\n                \n            \n            \n                \n                        Defined in         APIClient:46\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getURL\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getURL(productId?: string)\n                \n            \n\n\n            \n                \n                    Inherited from         APIClient\n\n                \n            \n            \n                \n                        Defined in         APIClient:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productId\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            listProducts\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    listProducts()\n                \n            \n\n\n            \n                \n                    Inherited from         APIClient\n\n                \n            \n            \n                \n                        Defined in         APIClient:43\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import axios, { AxiosRequestConfig } from 'axios'\nimport { getLocale, getApiAccessToken, HandlerInput, AttributesManager } from 'ask-sdk-core'\nimport { RequestEnvelope, services } from 'ask-sdk-model'\nimport InSkillProductsResponse = services.monetization.InSkillProductsResponse\nimport InSkillProduct = services.monetization.InSkillProduct\ntype InskillProducts = InSkillProduct[]\n\nexport class APIClient {\n    private token: string\n    private locale: string\n    private endpoint: string\n    private isDebug: boolean\n    public constructor (requestEnvelope: RequestEnvelope, isDebug: boolean = true) {\n        this.token = getApiAccessToken(requestEnvelope)\n        this.locale = getLocale(requestEnvelope)\n        this.endpoint = requestEnvelope.context.System.apiEndpoint\n        this.isDebug = isDebug\n    }\n    private getURL (productId?: string): string {\n        const url = `${this.endpoint}/v1/users/~current/skills/~current/inSkillProducts`\n        if (!productId) return url\n        return `${url}/productId`\n    }\n    private createAxiosRequestObject (productId?: string): AxiosRequestConfig {\n        return {\n            method: 'GET',\n            url: this.getURL(productId),\n            headers: {\n                'Content-type': 'application/json',\n                'Accept-Language': this.locale,\n                'Authorization': `Bearer ${this.token}`\n            }\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    protected async get (productId?: string): Promise {\n        const param = this.createAxiosRequestObject(productId)\n        if (this.isDebug) console.log('[Get ISP product] %j', param)\n        const { data } = await axios(param)\n        if (this.isDebug) console.log('[Get ISP product] %j', data)\n        return data\n    }\n    public listProducts (): Promise {\n        return this.get()\n    }\n    public getProduct (productId: string): Promise {\n        return this.get(productId)\n    }\n}\n\nexport class ISPProductClient extends APIClient {\n    private attributeManager: AttributesManager\n    private cacheUsage: 'enable' | 'disable' = 'enable'\n    private products: InskillProducts = []\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    constructor (handlerInput: HandlerInput, isDebug: boolean = true) {\n        super(handlerInput.requestEnvelope, isDebug)\n        this.attributeManager = handlerInput.attributesManager\n    }\n    public getCacheStatus (): 'enable' | 'disable' {\n        return this.cacheUsage\n    }\n    /**\n   * Disallow to use the session attributes item at first\n   **/\n    public disabledCache (): this {\n        this.cacheUsage = 'disable'\n        return this\n    }\n    /**\n   * Allow to use the session attributes item at first\n   **/\n    public enableCache (): this {\n        this.cacheUsage = 'enable'\n        return this\n    }\n    /**\n   * Check product avaliable status\n   * If products is empty, try to fetch at once\n   */\n    private async hasProducts (): Promise {\n        if (!this.products || this.products.length  0) {\n            this.products = products\n        }\n        return this.products\n    }\n    /**\n   * Fetch the ISP API.\n   * If cacheUsage is enabled, it will return from session attributes at first\n   */\n    public async fetchLists (): Promise {\n        const atts = this.attributeManager.getSessionAttributes()\n        if (this.cacheUsage === 'enable') {\n            const cachedProducts = this.getCachedProducts()\n            if (cachedProducts && cachedProducts.length > 0) {\n                return\n            }\n        }\n        const data = await this.get()\n        const products = data.inSkillProducts\n        this.products = products\n        this.attributeManager.setSessionAttributes({\n            ...atts,\n            products\n        })\n    }\n    /**\n   * get product by product id\n   * @param productId {string}\n   */\n    public async getProductById (productId: string): Promise {\n        if (this.cacheUsage === 'enable') {\n            const cachedProducts = this.getCachedProducts()\n            if (cachedProducts && cachedProducts.length > 0) {\n                // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n                const item = cachedProducts.find(cache => cache.productId === productId)\n                if (item) return item\n            }\n        }\n        const product = await this.get(productId)\n        return product\n    }\n    /**\n   * get products\n   */\n    public async getProducts (): Promise {\n        await this.fetchLists()\n        return this.products\n    }\n    /**\n   * Find product by the list number\n   * @param userInputNo {number} list number\n   */\n    public async findProductByNo (userInputNo: number): Promise {\n        if (!await this.hasProducts()) return null\n        const target = this.products[userInputNo]\n        return target\n    }\n    /**\n   * Find product by the specific id\n   * @param productId {string} product id\n   */\n    public async findProductById (productId: string): Promise {\n        if (!await this.hasProducts()) return null\n        // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n        const product = this.products.find(product => product.productId === productId)\n        if (!product) return null\n        return product\n    }\n    /**\n   * Find product by the product name\n   * @param productName {string} product name\n   */\n    public async findProductByName (productName: string): Promise {\n        if (!await this.hasProducts()) return null\n        // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n        const product = this.products.find(product => product.name === productName)\n        if (!product) return null\n        return product\n    }\n    /**\n   * Find product by several condition\n   * @param condition {productName?: string, userInputNo?: number, productId?: string} search conditions\n   */\n    public async searchProduct (condition: {productName?: string; userInputNo?: number; productId?: string}): Promise {\n        if (!condition.productName && !condition.userInputNo && !condition.productId) throw new Error('No search condition')\n        if (condition.userInputNo) return this.findProductByNo(condition.userInputNo)\n        if (condition.productName) return this.findProductByName(condition.productName)\n        if (condition.productId) return this.findProductById(condition.productId)\n        throw new Error('Invalid search condition')\n    }\n}\nexport default ISPProductClient\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IntentHandlerBuilder.html":{"url":"classes/IntentHandlerBuilder.html","title":"class - IntentHandlerBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IntentHandlerBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/handlers/libs/requestHandlers/factories/Intent.ts\n        \n\n\n            \n                Extends\n            \n            \n                        HandlerBuilder\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                canHandle\n                            \n                            \n                                    Protected\n                                intentName\n                            \n                            \n                                    Public\n                                canHandle\n                            \n                            \n                                    Protected\n                                canHandleFilter\n                            \n                            \n                                    Public\n                                handle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getHandler\n                            \n                            \n                                    Public\n                                replaceHandler\n                            \n                            \n                                    Public\n                                setHandle\n                            \n                            \n                                    Public\n                                setHandleCondition\n                            \n                            \n                                    Public\n                                updateHandler\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(intentName: string)\n                    \n                \n                        \n                            \n                                Defined in packages/handlers/libs/requestHandlers/factories/Intent.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        intentName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            canHandle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CanHandle\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in packages/handlers/libs/requestHandlers/factories/Intent.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            intentName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/handlers/libs/requestHandlers/factories/Intent.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            canHandle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CanHandle\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         HandlerBuilder\n\n                                \n                            \n                        \n                            \n                                    Defined in         HandlerBuilder:8\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            canHandleFilter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CanHandle\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         HandlerBuilder\n\n                                \n                            \n                        \n                            \n                                    Defined in         HandlerBuilder:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            handle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Handle\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         HandlerBuilder\n\n                                \n                            \n                        \n                            \n                                    Defined in         HandlerBuilder:11\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getHandler\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getHandler()\n                \n            \n\n\n            \n                \n                    Inherited from         HandlerBuilder\n\n                \n            \n            \n                \n                        Defined in         HandlerBuilder:32\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     RequestHandler\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            replaceHandler\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    replaceHandler(handler: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         HandlerBuilder\n\n                \n            \n            \n                \n                        Defined in         HandlerBuilder:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    handler\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setHandle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setHandle(handle: Handle)\n                \n            \n\n\n            \n                \n                    Inherited from         HandlerBuilder\n\n                \n            \n            \n                \n                        Defined in         HandlerBuilder:18\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    handle\n                                    \n                                                Handle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setHandleCondition\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setHandleCondition(condition: CanHandle)\n                \n            \n\n\n            \n                \n                    Inherited from         HandlerBuilder\n\n                \n            \n            \n                \n                        Defined in         HandlerBuilder:14\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                CanHandle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateHandler\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateHandler(condition: CanHandle, handle: Handle)\n                \n            \n\n\n            \n                \n                    Inherited from         HandlerBuilder\n\n                \n            \n            \n                \n                        Defined in         HandlerBuilder:22\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                CanHandle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    handle\n                                    \n                                                Handle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { isMatchedIntent } from 'ask-utils'\nimport { HandlerBuilder } from './Base'\nimport {\n    CanHandle, CanHandleResponse\n} from './model'\n\nexport class IntentHandlerBuilder extends HandlerBuilder {\n    public constructor (intentName: string) {\n        super()\n        this.intentName = intentName\n    }\n    protected intentName: string\n    public canHandle: CanHandle = (handlerInput): CanHandleResponse => {\n        if (!isMatchedIntent(handlerInput, this.intentName)) return false\n        return this.canHandleFilter(handlerInput)\n    }\n}\nexport default IntentHandlerBuilder\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IntentHandlerFactory.html":{"url":"classes/IntentHandlerFactory.html","title":"class - IntentHandlerFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IntentHandlerFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/handlers/libs/requestHandlers/factories/index.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    init(intentName?: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/handlers/libs/requestHandlers/factories/index.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    intentName\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IntentHandlerBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import HandlerBuilder from './Base'\nimport IntentHandlerBuilder from './Intent'\nimport LaunchRequestBuilder from './LaunchRequest'\nexport * from './Base'\nexport * from './Intent'\nexport * from './model'\n\nexport class IntentHandlerFactory {\n    public static init (intentName?: string): IntentHandlerBuilder {\n        if (!intentName) throw new Error('intentName is required')\n        return new IntentHandlerBuilder(intentName)\n    }\n}\n\nexport class HandlerFactory {\n    public static init (type: string, intentName?: string): HandlerBuilder {\n        if (type === 'IntentRequest') {\n            return IntentHandlerFactory.init(intentName)\n        }\n        return new HandlerBuilder()\n    }\n}\n\nexport class LaunchRequestFactory {\n    public static init (): HandlerBuilder {\n        return new LaunchRequestBuilder()\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LaunchRequestFactory.html":{"url":"classes/LaunchRequestFactory.html","title":"class - LaunchRequestFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LaunchRequestFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/handlers/libs/requestHandlers/factories/index.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in packages/handlers/libs/requestHandlers/factories/index.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         HandlerBuilder\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import HandlerBuilder from './Base'\nimport IntentHandlerBuilder from './Intent'\nimport LaunchRequestBuilder from './LaunchRequest'\nexport * from './Base'\nexport * from './Intent'\nexport * from './model'\n\nexport class IntentHandlerFactory {\n    public static init (intentName?: string): IntentHandlerBuilder {\n        if (!intentName) throw new Error('intentName is required')\n        return new IntentHandlerBuilder(intentName)\n    }\n}\n\nexport class HandlerFactory {\n    public static init (type: string, intentName?: string): HandlerBuilder {\n        if (type === 'IntentRequest') {\n            return IntentHandlerFactory.init(intentName)\n        }\n        return new HandlerBuilder()\n    }\n}\n\nexport class LaunchRequestFactory {\n    public static init (): HandlerBuilder {\n        return new LaunchRequestBuilder()\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LaunchRequestHandlerFactory.html":{"url":"classes/LaunchRequestHandlerFactory.html","title":"class - LaunchRequestHandlerFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LaunchRequestHandlerFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/handlers/libs/requestHandlers/HandlerFactory.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            RequestHandlerBuilder\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                            \n                                supports\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handle\n                        \n                        \n                    \n                \n            \n            \n                \nhandle(handler: TMergeTargetHandler)\n                \n            \n\n\n            \n                \n                    Defined in packages/handlers/libs/requestHandlers/HandlerFactory.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    handler\n                                    \n                                                TMergeTargetHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TRequestHandler\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            supports\n                        \n                        \n                    \n                \n            \n            \n                \nsupports(type: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/handlers/libs/requestHandlers/HandlerFactory.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { RequestHandler, HandlerInput } from 'ask-sdk-core'\nimport { Response, Request, RequestEnvelope } from 'ask-sdk-model'\nimport Resolver, { interfaces } from 'class-resolver'\nimport { isLaunchRequest } from 'ask-utils'\n\nexport interface TMergeTargetHandler {\n    canHandle?: (input: Input) => Promise | boolean;\n    handle?: (input: Input) => Promise | Output;\n}\nexport interface TRequestHandler {\n    canHandle: (input: Input) => Promise | boolean;\n    handle: (input: Input) => Promise | Output;\n}\nexport interface CustomeRequestEnvelope extends RequestEnvelope {\n    request: CustomRequest;\n}\nexport interface CustomHandlerInput extends HandlerInput {\n    requestEnvelope: CustomeRequestEnvelope;\n}\nexport interface RequestHandlerBuilder extends interfaces.ResolveTarget {\n    handle(handler: TMergeTargetHandler): TRequestHandler;\n}\n\nconst merge = (handler: TMergeTargetHandler, target?: TMergeTargetHandler): TRequestHandler => {\n    const fallBackHandler: RequestHandler = {\n        canHandle () {\n            return true\n        },\n        handle (handlerInput) {\n            return handlerInput.responseBuilder.getResponse()\n        }\n    }\n    return Object.assign({}, fallBackHandler, target, handler)\n}\n\nexport type SupportedHandlerType = 'LaunchRequest'\nexport class RequestHandlerFactory {\n    public static create (type: SupportedHandlerType, handler: TMergeTargetHandler): TRequestHandler {\n        return new Resolver(\n            new LaunchRequestHandlerFactory(),\n            new FallbackIntentFactory()\n        ).resolve(type).handle(handler)\n    }\n}\nexport default RequestHandlerFactory\n\nexport class LaunchRequestHandlerFactory implements RequestHandlerBuilder {\n    supports (type: string) {\n        return type === 'LaunchRequest'\n    }\n    handle (handler: TMergeTargetHandler) {\n        return merge(handler, {\n            canHandle (handlerInput) {\n                return isLaunchRequest(handlerInput)\n            }\n        })\n    }\n}\n\nexport class FallbackIntentFactory implements RequestHandlerBuilder {\n    supports () {\n        return true\n    }\n    handle (handler: TMergeTargetHandler) {\n        return merge(handler)\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LaunchRequestrBuilder.html":{"url":"classes/LaunchRequestrBuilder.html","title":"class - LaunchRequestrBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LaunchRequestrBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/handlers/libs/requestHandlers/factories/LaunchRequest.ts\n        \n\n\n            \n                Extends\n            \n            \n                        HandlerBuilder\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                canHandle\n                            \n                            \n                                    Public\n                                canHandle\n                            \n                            \n                                    Protected\n                                canHandleFilter\n                            \n                            \n                                    Public\n                                handle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getHandler\n                            \n                            \n                                    Public\n                                replaceHandler\n                            \n                            \n                                    Public\n                                setHandle\n                            \n                            \n                                    Public\n                                setHandleCondition\n                            \n                            \n                                    Public\n                                updateHandler\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            canHandle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CanHandle\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in packages/handlers/libs/requestHandlers/factories/LaunchRequest.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            canHandle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CanHandle\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         HandlerBuilder\n\n                                \n                            \n                        \n                            \n                                    Defined in         HandlerBuilder:8\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            canHandleFilter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CanHandle\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         HandlerBuilder\n\n                                \n                            \n                        \n                            \n                                    Defined in         HandlerBuilder:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            handle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Handle\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         HandlerBuilder\n\n                                \n                            \n                        \n                            \n                                    Defined in         HandlerBuilder:11\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getHandler\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getHandler()\n                \n            \n\n\n            \n                \n                    Inherited from         HandlerBuilder\n\n                \n            \n            \n                \n                        Defined in         HandlerBuilder:32\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     RequestHandler\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            replaceHandler\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    replaceHandler(handler: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         HandlerBuilder\n\n                \n            \n            \n                \n                        Defined in         HandlerBuilder:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    handler\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setHandle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setHandle(handle: Handle)\n                \n            \n\n\n            \n                \n                    Inherited from         HandlerBuilder\n\n                \n            \n            \n                \n                        Defined in         HandlerBuilder:18\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    handle\n                                    \n                                                Handle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setHandleCondition\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setHandleCondition(condition: CanHandle)\n                \n            \n\n\n            \n                \n                    Inherited from         HandlerBuilder\n\n                \n            \n            \n                \n                        Defined in         HandlerBuilder:14\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                CanHandle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateHandler\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateHandler(condition: CanHandle, handle: Handle)\n                \n            \n\n\n            \n                \n                    Inherited from         HandlerBuilder\n\n                \n            \n            \n                \n                        Defined in         HandlerBuilder:22\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                CanHandle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    handle\n                                    \n                                                Handle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { isLaunchRequest } from 'ask-utils'\nimport { HandlerBuilder } from './Base'\nimport {\n    CanHandle, CanHandleResponse\n} from './model'\n\nexport class LaunchRequestrBuilder extends HandlerBuilder {\n    public canHandle: CanHandle = (handlerInput): CanHandleResponse => {\n        if (!isLaunchRequest(handlerInput)) return false\n        return this.canHandleFilter(handlerInput)\n    }\n}\nexport default LaunchRequestrBuilder\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ListManagementAPIClient.html":{"url":"classes/ListManagementAPIClient.html","title":"class - ListManagementAPIClient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ListManagementAPIClient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/serviceClients/libs/Lists.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Client\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                path\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createList\n                            \n                            \n                                    Public\n                                    Async\n                                createListItem\n                            \n                            \n                                    Public\n                                    Async\n                                deleteList\n                            \n                            \n                                    Public\n                                    Async\n                                deleteListItem\n                            \n                            \n                                    Public\n                                    Async\n                                getList\n                            \n                            \n                                    Public\n                                    Async\n                                getListItem\n                            \n                            \n                                    Public\n                                    Async\n                                getListsMetadata\n                            \n                            \n                                    Public\n                                    Async\n                                getProfileName\n                            \n                            \n                                    Public\n                                    Async\n                                updateList\n                            \n                            \n                                    Public\n                                    Async\n                                updateListItem\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'v2/householdlists/'\n                        \n                    \n                        \n                            \n                                    Defined in packages/serviceClients/libs/Lists.ts:6\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            createList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createList(request: listManagement.CreateListRequest)\n                \n            \n\n\n            \n                \n                    Defined in packages/serviceClients/libs/Lists.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            listManagement.CreateListRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            createListItem\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createListItem(listId: string, request: listManagement.CreateListItemRequest)\n                \n            \n\n\n            \n                \n                    Defined in packages/serviceClients/libs/Lists.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    listId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    request\n                                    \n                                            listManagement.CreateListItemRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            deleteList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteList(listId: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/serviceClients/libs/Lists.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    listId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            deleteListItem\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteListItem(listId: string, itemId: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/serviceClients/libs/Lists.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    listId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    itemId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getList(listId: string, status: ListStatus)\n                \n            \n\n\n            \n                \n                    Defined in packages/serviceClients/libs/Lists.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    listId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    status\n                                    \n                                                ListStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getListItem\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getListItem(listId: string, itemId: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/serviceClients/libs/Lists.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    listId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    itemId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getListsMetadata\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getListsMetadata()\n                \n            \n\n\n            \n                \n                    Defined in packages/serviceClients/libs/Lists.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getProfileName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getProfileName()\n                \n            \n\n\n            \n                \n                    Defined in packages/serviceClients/libs/Lists.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            updateList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateList(listId: string, request: listManagement.UpdateListRequest)\n                \n            \n\n\n            \n                \n                    Defined in packages/serviceClients/libs/Lists.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    listId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    request\n                                    \n                                            listManagement.UpdateListRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            updateListItem\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateListItem(listId: string, itemId: string, request: listManagement.UpdateListItemRequest)\n                \n            \n\n\n            \n                \n                    Defined in packages/serviceClients/libs/Lists.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    listId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    itemId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    request\n                                    \n                                            listManagement.UpdateListItemRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { services } from 'ask-sdk-model'\nimport Client from './client'\nimport listManagement = services.listManagement\ntype ListStatus = 'active' | 'completed'\nexport class ListManagementAPIClient extends Client {\n    protected path = 'v2/householdlists/'\n    public async getProfileName (): Promise {\n        return this.get('Profile.name')\n    }\n    public async getListsMetadata (): Promise {\n        return this.get()\n    }\n    public async getList (listId: string, status: ListStatus): Promise {\n        return this.get(`${listId}/${status}`)\n    }\n    public async createList (request: listManagement.CreateListRequest): Promise {\n        return this.post(request)\n    }\n    public async updateList (listId: string, request: listManagement.UpdateListRequest): Promise {\n        return this.put(request, listId)\n    }\n    public async deleteList (listId: string): Promise {\n        await this.delete(listId)\n    }\n    public async getListItem (listId: string, itemId: string): Promise {\n        return this.get(`${listId}/items/${itemId}`)\n    }\n    public async createListItem (listId: string, request: listManagement.CreateListItemRequest): Promise {\n        return this.post(request, `${listId}/items/`)\n    }\n    public async updateListItem (listId: string, itemId: string, request: listManagement.UpdateListItemRequest): Promise {\n        return this.put(request, `${listId}/items/${itemId}`)\n    }\n    public async deleteListItem (listId: string, itemId: string): Promise {\n        await this.delete(`${listId}/items/${itemId}`)\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LocalizedAttribute.html":{"url":"interfaces/LocalizedAttribute.html","title":"interface - LocalizedAttribute","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LocalizedAttribute\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        locale\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [name: string]:        string\n\n                    \n                \n                        \n                            \n                                Defined in packages/proactive-event/libs/model.ts:113\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        locale\n                                    \n                                \n                                \n                                    \n                                        locale:         Locale\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Locale\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LocalizedAttributesFactory.html":{"url":"classes/LocalizedAttributesFactory.html","title":"class - LocalizedAttributesFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LocalizedAttributesFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/LocalizedAttributes/Factory.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/LocalizedAttributes/Factory.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         interfaces.LocalizedAttributes.Factory\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n    Types,\n    interfaces\n} from '../model'\n\nexport default class LocalizedAttributesFactory {\n    public static init (): interfaces.LocalizedAttributes.Factory {\n        const localizedAttributes: Types.LocalizedAttributes = []\n        return {\n            putLocalizedAttribute (locale: Types.Locale, key: string, text: string) {\n                localizedAttributes.push({\n                    locale,\n                    [key]: text\n                })\n                return this\n            },\n            getLocalizedAttributes () {\n                return localizedAttributes\n            }\n        }\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MergeObjectType.html":{"url":"interfaces/MergeObjectType.html","title":"interface - MergeObjectType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MergeObjectType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/libs/requestHandler.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        canHandle\n                                \n                                \n                                            Optional\n                                        handle\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        canHandle\n                                    \n                                \n                                \n                                    \n                                        canHandle:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        handle\n                                    \n                                \n                                \n                                    \n                                        handle:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { RequestHandler, HandlerInput } from 'ask-sdk-core'\nimport {\n    Response,\n    RequestEnvelope\n} from 'ask-sdk-model'\n\nexport const cloneHandler = (cloneTarget: RequestHandler): RequestHandler => {\n    return Object.assign({}, cloneTarget)\n}\n\ninterface MergeObjectType {\n    canHandle?: (handlerInput: HandlerInput) => boolean;\n    handle?: (handlerInput: HandlerInput) => Response;\n}\n\nexport const mergeHandler = (cloneTarget: RequestHandler, mergeObject: MergeObjectType): RequestHandler => {\n    return Object.assign({}, cloneTarget, mergeObject)\n}\n\nexport const isSkillEvent = (requestEnvelope: RequestEnvelope): boolean => {\n    return /^AlexaSkillEvent/.test(requestEnvelope.request.type)\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MessageGroup.html":{"url":"interfaces/MessageGroup.html","title":"interface - MessageGroup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MessageGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        count\n                                \n                                \n                                        creator\n                                \n                                \n                                            Optional\n                                        urgency\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        count\n                                    \n                                \n                                \n                                    \n                                        count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator\n                                    \n                                \n                                \n                                    \n                                        creator:         Types.Person\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Types.Person\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        urgency\n                                    \n                                \n                                \n                                    \n                                        urgency:         MessageUrgent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MessageUrgent\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MessageState.html":{"url":"interfaces/MessageState.html","title":"interface - MessageState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MessageState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        freshness\n                                \n                                \n                                        status\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        freshness\n                                    \n                                \n                                \n                                    \n                                        freshness:         MessageFreshness\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MessageFreshness\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:         MessageStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MessageStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MockAttributeManager.html":{"url":"classes/MockAttributeManager.html","title":"class - MockAttributeManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MockAttributeManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/__tests__/libs/attributeManager.test.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        AttributesManager\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                db\n                            \n                            \n                                    Private\n                                persistent\n                            \n                            \n                                    Private\n                                request\n                            \n                            \n                                    Private\n                                session\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getPersistentAttributes\n                            \n                            \n                                    Public\n                                getRequestAttributes\n                            \n                            \n                                    Public\n                                getSessionAttributes\n                            \n                            \n                                    Public\n                                savePersistentAttributes\n                            \n                            \n                                    Public\n                                setPersistentAttributes\n                            \n                            \n                                    Public\n                                setRequestAttributes\n                            \n                            \n                                    Public\n                                setSessionAttributes\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            db\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AttributeType\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/__tests__/libs/attributeManager.test.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            persistent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AttributeType\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/__tests__/libs/attributeManager.test.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            request\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AttributeType\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/__tests__/libs/attributeManager.test.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            session\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AttributeType\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/__tests__/libs/attributeManager.test.ts:8\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getPersistentAttributes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPersistentAttributes()\n                \n            \n\n\n            \n                \n                    Defined in packages/core/__tests__/libs/attributeManager.test.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getRequestAttributes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getRequestAttributes()\n                \n            \n\n\n            \n                \n                    Defined in packages/core/__tests__/libs/attributeManager.test.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         AttributeType\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getSessionAttributes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSessionAttributes()\n                \n            \n\n\n            \n                \n                    Defined in packages/core/__tests__/libs/attributeManager.test.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         AttributeType\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            savePersistentAttributes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    savePersistentAttributes()\n                \n            \n\n\n            \n                \n                    Defined in packages/core/__tests__/libs/attributeManager.test.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setPersistentAttributes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setPersistentAttributes(attribute: AttributeType)\n                \n            \n\n\n            \n                \n                    Defined in packages/core/__tests__/libs/attributeManager.test.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    attribute\n                                    \n                                                AttributeType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setRequestAttributes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setRequestAttributes(attribute: AttributeType)\n                \n            \n\n\n            \n                \n                    Defined in packages/core/__tests__/libs/attributeManager.test.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    attribute\n                                    \n                                                AttributeType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setSessionAttributes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setSessionAttributes(attribute: AttributeType)\n                \n            \n\n\n            \n                \n                    Defined in packages/core/__tests__/libs/attributeManager.test.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    attribute\n                                    \n                                                AttributeType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HandlerInput, AttributesManager } from 'ask-sdk'\nimport { updateSessionAttributes, getSessionAttribute, getSessionAttributes } from '../../libs/attributeManager'\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ninterface AttributeType {[key: string]: any}\nclass MockAttributeManager implements AttributesManager {\n    private request: AttributeType = {}\n    private session: AttributeType = {}\n    private persistent: AttributeType = {}\n    private db: AttributeType = {}\n    public getRequestAttributes () {\n        return this.request\n    }\n    public getSessionAttributes () {\n        return this.session\n    }\n    public getPersistentAttributes () {\n        return Promise.resolve(this.db)\n    }\n    public setRequestAttributes (attribute: AttributeType) {\n        this.request = attribute\n    }\n    public setSessionAttributes (attribute: AttributeType) {\n        this.session = attribute\n    }\n    public setPersistentAttributes (attribute: AttributeType) {\n        this.persistent = attribute\n    }\n    public savePersistentAttributes () {\n        this.db = this.persistent\n        return Promise.resolve()\n    }\n}\n\nconst generateHandlerInput = (): HandlerInput => {\n    const attributesManager: AttributesManager = new MockAttributeManager()\n    const handlerInput = {\n        attributesManager\n    } as HandlerInput\n    return handlerInput\n}\ndescribe('attributeManager.ts', () => {\n    let handlerInput = generateHandlerInput()\n    beforeEach(() => {\n        handlerInput = generateHandlerInput()\n    })\n    describe('updateSessionAttributes()', () => {\n        it('should save attributes', () => {\n            updateSessionAttributes(handlerInput, { test: 'true' })\n            const result = getSessionAttribute(handlerInput, 'test')\n            expect(result).toEqual('true')\n        })\n\n        it('should add save attributes', () => {\n            updateSessionAttributes(handlerInput, { test: 'true' })\n            updateSessionAttributes(handlerInput, { test1: 'false' })\n            const result = getSessionAttribute(handlerInput, 'test')\n            expect(result).toEqual('true')\n            const result2 = getSessionAttribute(handlerInput, 'test1')\n            expect(result2).toEqual('false')\n        })\n    })\n    describe('getSessionAttributes()', () => {\n        it('should get saved attributes', () => {\n            updateSessionAttributes(handlerInput, { test: 'true' })\n            const result = getSessionAttributes(handlerInput)\n            expect(result).toEqual({ test: 'true' })\n        })\n        it('should add save attributes', () => {\n            updateSessionAttributes(handlerInput, { test: 'true' })\n            updateSessionAttributes(handlerInput, { test1: 'false' })\n            const result = getSessionAttributes(handlerInput)\n            expect(result).toEqual({\n                test: 'true',\n                test1: 'false'\n            })\n        })\n    })\n})\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Occasion.html":{"url":"interfaces/Occasion.html","title":"interface - Occasion","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Occasion\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        bookingTime\n                                \n                                \n                                            Optional\n                                        broker\n                                \n                                \n                                        occasionType\n                                \n                                \n                                        provider\n                                \n                                \n                                        subject\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bookingTime\n                                    \n                                \n                                \n                                    \n                                        bookingTime:         Types.dateTime\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Types.dateTime\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        broker\n                                    \n                                \n                                \n                                    \n                                        broker:         Skill\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Skill\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        occasionType\n                                    \n                                \n                                \n                                    \n                                        occasionType:         OccasionType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OccasionType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        provider\n                                    \n                                \n                                \n                                    \n                                        provider:         Ogranization\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Ogranization\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subject\n                                    \n                                \n                                \n                                    \n                                        subject:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Ogranization.html":{"url":"interfaces/Ogranization.html","title":"interface - Ogranization","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Ogranization\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Order.html":{"url":"interfaces/Order.html","title":"interface - Order","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Order\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        seller\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        seller\n                                    \n                                \n                                \n                                    \n                                        seller:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OrderState.html":{"url":"interfaces/OrderState.html","title":"interface - OrderState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OrderState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        deliveryDetails\n                                \n                                \n                                            Optional\n                                        enterTimestamp\n                                \n                                \n                                        status\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        deliveryDetails\n                                    \n                                \n                                \n                                    \n                                        deliveryDetails:         ParcelDelivery\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ParcelDelivery\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        enterTimestamp\n                                    \n                                \n                                \n                                    \n                                        enterTimestamp:         Types.dateTime\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Types.dateTime\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:         OrderStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OrderStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ParameterFactory.html":{"url":"classes/ParameterFactory.html","title":"class - ParameterFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ParameterFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/MediaContent/Available/PayloadFactory.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/MediaContent/Available/PayloadFactory.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         PayloadBuilder\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import moment from 'moment'\nimport {\n    interfaces,\n    Types,\n    event\n} from '../../model'\n\n// helper\nimport {\n    getCreativeWork,\n    getAvailability\n} from '../../helpers'\nimport MediaContent = interfaces.MediaContent\nimport PayloadBuilder = MediaContent.Available.PayloadBuilder\n\nexport default class ParameterFactory {\n    public static init (): PayloadBuilder {\n        const eventName = 'AMAZON.MediaContent.Available'\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const availability: any = {}\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const content: any = {\n            name: 'localizedattribute:contentName'\n        }\n        return {\n            setContentName (name: string) {\n                content.name = name\n                return this\n            },\n            setMediaType (type: Types.MediaType) {\n                content.contentType = type\n                return this\n            },\n            setStartTime (date: Date): PayloadBuilder {\n                availability.startTime = moment(date).toISOString()\n                return this\n            },\n            setDistributionMethod (method: Types.DistributionMethod): PayloadBuilder {\n                availability.method = method\n                return this\n            },\n            setProvider (providerName: string = 'localizedattribute:providerName'): PayloadBuilder {\n                availability.provider = {\n                    name: providerName\n                }\n                return this\n            },\n            getEventName (): event.MediaContent.EventName {\n                return eventName\n            },\n            getPayload (): event.MediaContent.Available.Payload {\n                return {\n                    availability: getAvailability(availability),\n                    content: getCreativeWork(content)\n                }\n            },\n            getParameter () {\n                return {\n                    name: eventName,\n                    payload: this.getPayload()\n                }\n            }\n        }\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ParameterFactory-1.html":{"url":"classes/ParameterFactory-1.html","title":"class - ParameterFactory-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ParameterFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/Occasion/Updated/PayloadFactory.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/Occasion/Updated/PayloadFactory.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         PayloadBuilder\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import moment from 'moment'\nimport {\n    interfaces,\n    Types\n} from '../../model'\n\n// helper\nimport {\n    getOccasion\n} from '../../helpers'\nimport Occasion = interfaces.Occasion\nimport PayloadBuilder = Occasion.Updated.PayloadBuilder\n\nexport default class ParameterFactory {\n    public static init (): PayloadBuilder {\n        const eventName = 'AMAZON.Occasion.Updated'\n        const confirmationState: Types.ConfirmationState = {\n            confirmationStatus: 'CONFIRMED'\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const occasion: any = {\n            broker: {\n                name: 'localizedattribute:brokerName'\n            },\n            provider: {\n                name: 'localizedattribute:providerName'\n            }\n        }\n        return {\n            updateConfirmationStatus (status: Types.ConfirmationStatus) {\n                confirmationState.confirmationStatus = status\n                return this\n            },\n            getConfirmationState (): Types.ConfirmationState {\n                return confirmationState\n            },\n            getConfirmationStatus (): Types.ConfirmationStatus {\n                return confirmationState.confirmationStatus\n            },\n            setOccasionType (type: Types.OccasionType) {\n                occasion.occasionType = type\n                return this\n            },\n            setSubject (subject: string) {\n                occasion.subject = subject\n                return this\n            },\n            setProviderName (name: string) {\n                occasion.provider.name = name\n                return this\n            },\n            setBookingTime (date: Date) {\n                occasion.bookingTime = moment(date).toISOString()\n                return this\n            },\n            setBrokerName (name: string) {\n                occasion.broker.name = name\n                return this\n            },\n            getEventName () {\n                return eventName\n            },\n            getPayload () {\n                return {\n                    state: confirmationState,\n                    occasion: getOccasion(occasion)\n                }\n            },\n            getParameter () {\n                return {\n                    name: eventName,\n                    payload: this.getPayload()\n                }\n            }\n        }\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ParameterFactory-2.html":{"url":"classes/ParameterFactory-2.html","title":"class - ParameterFactory-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ParameterFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/MessageAlert/Activated/PayloadFactory.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/MessageAlert/Activated/PayloadFactory.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         PayloadBuilder\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n    interfaces\n} from '../../model'\n\n// helper\nimport {\n    getMessageState,\n    getMessageGroup\n} from '../../helpers'\nimport MessageAlert = interfaces.MessageAlert\nimport PayloadBuilder = MessageAlert.Activated.PayloadBuilder\n\nexport default class ParameterFactory {\n    public static init (): PayloadBuilder {\n        const eventName = 'AMAZON.MessageAlert.Activated'\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const state: any = {}\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const group: any = {}\n        return {\n            setMessageCreator (name) {\n                const person = {\n                    name\n                }\n                group.creator = person\n                return this\n            },\n            setMessageCount (count) {\n                group.count = count\n                return this\n            },\n            setMessageUrgency (urgency = 'URGENT') {\n                group.urgency = urgency\n                return this\n            },\n            setMessageFreshness (freshness) {\n                state.freshness = freshness\n                return this\n            },\n            setMessageStatus (messageStatus) {\n                state.status = messageStatus\n                return this\n            },\n            getEventName () {\n                return eventName\n            },\n            getPayload () {\n                return {\n                    state: getMessageState(state),\n                    messageGroup: getMessageGroup(group)\n                }\n            },\n            getParameter () {\n                return {\n                    name: eventName,\n                    payload: this.getPayload()\n                }\n            }\n        }\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ParameterFactory-3.html":{"url":"classes/ParameterFactory-3.html","title":"class - ParameterFactory-3","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ParameterFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/OrderStatus/Updated/PayloadFactory.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/OrderStatus/Updated/PayloadFactory.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         PayloadBuilder\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import moment from 'moment'\nimport {\n    interfaces,\n    Types\n} from '../../model'\n\n// helper\nimport {\n    getOrderState\n} from '../../helpers'\nimport OrderStatus = interfaces.OrderStatus\nimport PayloadBuilder = OrderStatus.Updated.PayloadBuilder\n\nexport default class ParameterFactory {\n    public static init (): PayloadBuilder {\n        const eventName = 'AMAZON.OrderStatus.Updated'\n\n        const order: Types.Order = {\n            seller: {\n                name: 'localizedattribute:sellerName'\n            }\n        }\n\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const orderState: any = {}\n        return {\n            setOrderStatus (status: Types.OrderStatus) {\n                orderState.status = status\n                return this\n            },\n            setEnterTimestamp (date: Date) {\n                orderState.enterTimestamp = moment(date).toISOString()\n                return this\n            },\n            setExpectedArrival (date: Date) {\n                orderState.deliveryDetails = {\n                    expectedArrival: moment(date).toISOString()\n                }\n                return this\n            },\n            updateSellerName (name: string) {\n                order.seller.name = name\n                return this\n            },\n            getEventName () {\n                return eventName\n            },\n            getPayload () {\n                return {\n                    state: getOrderState(orderState),\n                    order\n                }\n            },\n            getParameter () {\n                return {\n                    name: eventName,\n                    payload: this.getPayload()\n                }\n            }\n        }\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ParameterFactory-4.html":{"url":"classes/ParameterFactory-4.html","title":"class - ParameterFactory-4","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ParameterFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/SocialGameInvite/Available/PayloadFactory.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/SocialGameInvite/Available/PayloadFactory.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         PayloadBuilder\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n    interfaces,\n    Types\n} from '../../model'\n\n// helper\nimport {\n    getGame,\n    getGameInvite\n} from '../../helpers'\nimport SocialGameInvite = interfaces.SocialGameInvite\nimport PayloadBuilder = SocialGameInvite.Available.PayloadBuilder\n\nexport default class ParameterFactory {\n    public static init (): PayloadBuilder {\n        const eventName = 'AMAZON.SocialGameInvite.Available'\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const invite: any = {\n            inviter: {\n                name: ''\n            }\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const game: any = {\n            name: 'localizedattribute:gameName'\n        }\n        return {\n            setInviterName (name: string) {\n                invite.inviter.name = name\n                return this\n            },\n            setRelationshipToInvitee (relation: Types.RelationshipToInvitee) {\n                invite.relationshipToInvitee = relation\n                return this\n            },\n            setInviteType (type: Types.InviteType) {\n                invite.inviteType = type\n                return this\n            },\n            setGameOfferName (name: Types.OfferType) {\n                game.offer = name\n                return this\n            },\n            setGameName (name: string) {\n                game.name = name\n                return this\n            },\n            getEventName () {\n                return eventName\n            },\n            getPayload () {\n                return {\n                    invite: getGameInvite(invite),\n                    game: getGame(game)\n                }\n            },\n            getParameter () {\n                return {\n                    name: eventName,\n                    payload: this.getPayload()\n                }\n            }\n        }\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ParameterFactory-5.html":{"url":"classes/ParameterFactory-5.html","title":"class - ParameterFactory-5","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ParameterFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/SportsEvent/Updated/PayloadFactory.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/SportsEvent/Updated/PayloadFactory.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         PayloadBuilder\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n    interfaces,\n    Types,\n    event\n} from '../../model'\n\n// helper\nimport SportsEvent = interfaces.SportsEvent\nimport PayloadBuilder = SportsEvent.Updated.PayloadBuilder\n\nexport default class ParameterFactory {\n    public static init (): PayloadBuilder {\n        const eventName = 'AMAZON.SportsEvent.Updated'\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const eventLeague: Types.Soccer = {\n            name: 'localizedattribute:eventLeagueName'\n        }\n        const homeTeamStatistic: Types.GameStatistic = {\n            team: {\n                name: ''\n            },\n            score: 0\n        }\n        const awayTeamStatistic: Types.GameStatistic = {\n            team: {\n                name: ''\n            },\n            score: 0\n        }\n        let updated: Types.Goal | null = null\n        return {\n            updateGoalData (teamName: string, score: number) {\n                if (updated === null) {\n                    updated = {\n                        scoreEarned: score,\n                        teamName\n                    }\n                }\n                updated.scoreEarned = score\n                updated.teamName = teamName\n                return this\n            },\n            setEventLeagueName (name: string) {\n                eventLeague.name = name\n                return this\n            },\n            setHomeTeamStatistic (teamName: string, score: number) {\n                homeTeamStatistic.team.name = teamName\n                homeTeamStatistic.score = score\n                return this\n            },\n            setAwayTeamStatistic (teamName: string, score: number) {\n                awayTeamStatistic.score = score\n                awayTeamStatistic.team.name = teamName\n                return this\n            },\n            getEventName () {\n                return eventName\n            },\n            getPayload () {\n                const payload: event.SportsEvent.Updated.Payload = {\n                    sportsEvent: {\n                        eventLeague,\n                        homeTeamStatistic,\n                        awayTeamStatistic\n                    }\n                }\n\n                if (updated !== null && updated.hasOwnProperty('scoreEarned') && updated.hasOwnProperty('teamName')) payload.update = updated\n                return payload\n            },\n            getParameter () {\n                return {\n                    name: eventName,\n                    payload: this.getPayload()\n                }\n            }\n        }\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ParameterFactory-6.html":{"url":"classes/ParameterFactory-6.html","title":"class - ParameterFactory-6","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ParameterFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/TrashCollectionAlert/Activated/PayloadFactory.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/TrashCollectionAlert/Activated/PayloadFactory.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         PayloadBuilder\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n    interfaces,\n    Types,\n    event\n} from '../../model'\nimport TrashCollectionAlert = interfaces.TrashCollectionAlert\nimport PayloadBuilder = TrashCollectionAlert.Activated.PayloadBuilder\n\nexport default class ParameterFactory {\n    public static init (): PayloadBuilder {\n        const eventName = 'AMAZON.TrashCollectionAlert.Activated'\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        let alert: any = {}\n        return {\n            putAlert (alertItem: Types.TrashCollectionAlert): PayloadBuilder {\n                alert = alertItem\n                return this\n            },\n            putGarbageTypes (garbageTypes: Types.GarbageType[]): PayloadBuilder {\n                alert.garbageTypes = garbageTypes\n                return this\n            },\n            addGarbageType (garbageType: Types.GarbageType): PayloadBuilder {\n                if (alert.garbageTypes && alert.garbageTypes.length > 0) {\n                    alert.garbageTypes.push(garbageType)\n                } else {\n                    alert.garbageTypes = [garbageType]\n                }\n                return this\n            },\n            setCollectionDayOfWeek (collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder {\n                alert.collectionDayOfWeek = collectionDayOfWeek\n                return this\n            },\n            getEventName () {\n                return eventName\n            },\n            getPayload (): event.TrashCollectionAlert.Activated.Payload {\n                return {\n                    alert\n                }\n            },\n            getParameter (): event.Props {\n                return {\n                    name: eventName,\n                    payload: this.getPayload()\n                }\n            }\n        }\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ParameterFactory-7.html":{"url":"classes/ParameterFactory-7.html","title":"class - ParameterFactory-7","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ParameterFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/WeatherAlert/Activated/PayloadFactory.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/WeatherAlert/Activated/PayloadFactory.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         PayloadBuilder\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n    interfaces\n} from '../../model'\n\n// helper\nimport {\n    getWeatherAlert\n} from '../../helpers'\nimport WeatherAlert = interfaces.WeatherAlert\nimport PayloadBuilder = WeatherAlert.Activated.PayloadBuilder\n\nexport default class ParameterFactory {\n    public static init (): PayloadBuilder {\n        const eventName = 'AMAZON.WeatherAlert.Activated'\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const weatherAlert: any = {}\n        return {\n            setAlertSource (source: string = 'localizedattribute:source') {\n                weatherAlert.source = source\n                return this\n            },\n            setAlertType (type) {\n                weatherAlert.alertType = type\n                return this\n            },\n            getEventName () {\n                return eventName\n            },\n            getPayload () {\n                return {\n                    weatherAlert: getWeatherAlert(weatherAlert)\n                }\n            },\n            getParameter () {\n                return {\n                    name: eventName,\n                    payload: this.getPayload()\n                }\n            }\n        }\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ParcelDelivery.html":{"url":"interfaces/ParcelDelivery.html","title":"interface - ParcelDelivery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ParcelDelivery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        expectedArrival\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        expectedArrival\n                                    \n                                \n                                \n                                    \n                                        expectedArrival:         Types.dateTime\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Types.dateTime\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Payload.html":{"url":"interfaces/Payload.html","title":"interface - Payload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Payload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        alert\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alert\n                                    \n                                \n                                \n                                    \n                                        alert:         Types.TrashCollectionAlert\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Types.TrashCollectionAlert\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Payload-1.html":{"url":"interfaces/Payload-1.html","title":"interface - Payload-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Payload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        weatherAlert\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        weatherAlert\n                                    \n                                \n                                \n                                    \n                                        weatherAlert:         Types.WeatherAlert\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Types.WeatherAlert\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Payload-2.html":{"url":"interfaces/Payload-2.html","title":"interface - Payload-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Payload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        sportsEvent\n                                \n                                \n                                            Optional\n                                        update\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        sportsEvent\n                                    \n                                \n                                \n                                    \n                                        sportsEvent:         Types.SportsEvent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Types.SportsEvent\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        update\n                                    \n                                \n                                \n                                    \n                                        update:         Types.Goal\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Types.Goal\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Payload-3.html":{"url":"interfaces/Payload-3.html","title":"interface - Payload-3","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Payload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        messageGroup\n                                \n                                \n                                        state\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        messageGroup\n                                    \n                                \n                                \n                                    \n                                        messageGroup:         Types.MessageGroup\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Types.MessageGroup\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        state\n                                    \n                                \n                                \n                                    \n                                        state:         Types.MessageState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Types.MessageState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Payload-4.html":{"url":"interfaces/Payload-4.html","title":"interface - Payload-4","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Payload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        order\n                                \n                                \n                                        state\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        order\n                                    \n                                \n                                \n                                    \n                                        order:         Types.Order\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Types.Order\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        state\n                                    \n                                \n                                \n                                    \n                                        state:     Types.OrderState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Types.OrderState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Payload-5.html":{"url":"interfaces/Payload-5.html","title":"interface - Payload-5","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Payload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        occasion\n                                \n                                \n                                        state\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        occasion\n                                    \n                                \n                                \n                                    \n                                        occasion:         Types.Occasion\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Types.Occasion\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        state\n                                    \n                                \n                                \n                                    \n                                        state:         Types.ConfirmationState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Types.ConfirmationState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Payload-6.html":{"url":"interfaces/Payload-6.html","title":"interface - Payload-6","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Payload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        availability\n                                \n                                \n                                        content\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        availability\n                                    \n                                \n                                \n                                    \n                                        availability:         Types.Availability\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Types.Availability\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:         Types.CreativeWork\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Types.CreativeWork\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Payload-7.html":{"url":"interfaces/Payload-7.html","title":"interface - Payload-7","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Payload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        game\n                                \n                                \n                                        invite\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        game\n                                    \n                                \n                                \n                                    \n                                        game:         Types.Game\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Types.Game\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        invite\n                                    \n                                \n                                \n                                    \n                                        invite:     Types.GameInvite\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Types.GameInvite\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PayloadBuilder.html":{"url":"interfaces/PayloadBuilder.html","title":"interface - PayloadBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PayloadBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getEventName\n                                \n                                \n                                    getParameter\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEventName\n                        \n                        \n                    \n                \n            \n            \n                \ngetEventName()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:264\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     event.EventName\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getParameter\n                        \n                        \n                    \n                \n            \n            \n                \ngetParameter()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:265\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         event.Props\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PayloadBuilder-1.html":{"url":"interfaces/PayloadBuilder-1.html","title":"interface - PayloadBuilder-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PayloadBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    addGarbageType\n                                \n                                \n                                    getEventName\n                                \n                                \n                                    getParameter\n                                \n                                \n                                    getPayload\n                                \n                                \n                                    putAlert\n                                \n                                \n                                    putGarbageTypes\n                                \n                                \n                                    setCollectionDayOfWeek\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addGarbageType\n                        \n                        \n                    \n                \n            \n            \n                \naddGarbageType(garbageType: Types.GarbageType)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:279\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    garbageType\n                                    \n                                                Types.GarbageType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEventName\n                        \n                        \n                    \n                \n            \n            \n                \ngetEventName()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:281\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         event.TrashCollectionAlert.Activated.EventName\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getParameter\n                        \n                        \n                    \n                \n            \n            \n                \ngetParameter()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:283\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     event.Props\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPayload\n                        \n                        \n                    \n                \n            \n            \n                \ngetPayload()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:282\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     event.TrashCollectionAlert.Payload\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            putAlert\n                        \n                        \n                    \n                \n            \n            \n                \nputAlert(alert: Types.TrashCollectionAlert)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:277\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    alert\n                                    \n                                                Types.TrashCollectionAlert\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            putGarbageTypes\n                        \n                        \n                    \n                \n            \n            \n                \nputGarbageTypes(garbageTypes: Types.GarbageType[])\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:278\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    garbageTypes\n                                    \n                                                Types.GarbageType[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setCollectionDayOfWeek\n                        \n                        \n                    \n                \n            \n            \n                \nsetCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:280\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collectionDayOfWeek\n                                    \n                                                Types.DayOfWeek\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PayloadBuilder-2.html":{"url":"interfaces/PayloadBuilder-2.html","title":"interface - PayloadBuilder-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PayloadBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getEventName\n                                \n                                \n                                    getParameter\n                                \n                                \n                                    getPayload\n                                \n                                \n                                    setAlertSource\n                                \n                                \n                                    setAlertType\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEventName\n                        \n                        \n                    \n                \n            \n            \n                \ngetEventName()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:293\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         event.WeatherAlert.Activated.EventName\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getParameter\n                        \n                        \n                    \n                \n            \n            \n                \ngetParameter()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:294\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     event.Props\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPayload\n                        \n                        \n                    \n                \n            \n            \n                \ngetPayload()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:295\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     event.WeatherAlert.Activated.Payload\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setAlertSource\n                        \n                        \n                    \n                \n            \n            \n                \nsetAlertSource(source?: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:291\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    source\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setAlertType\n                        \n                        \n                    \n                \n            \n            \n                \nsetAlertType(type: Types.WeatherAlertType)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:292\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                Types.WeatherAlertType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PayloadBuilder-3.html":{"url":"interfaces/PayloadBuilder-3.html","title":"interface - PayloadBuilder-3","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PayloadBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getEventName\n                                \n                                \n                                    getParameter\n                                \n                                \n                                    getPayload\n                                \n                                \n                                    setAwayTeamStatistic\n                                \n                                \n                                    setEventLeagueName\n                                \n                                \n                                    setHomeTeamStatistic\n                                \n                                \n                                    updateGoalData\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEventName\n                        \n                        \n                    \n                \n            \n            \n                \ngetEventName()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:307\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         event.SportsEvent.Updated.EventName\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getParameter\n                        \n                        \n                    \n                \n            \n            \n                \ngetParameter()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:308\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     event.Props\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPayload\n                        \n                        \n                    \n                \n            \n            \n                \ngetPayload()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:309\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     event.SportsEvent.Updated.Payload\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setAwayTeamStatistic\n                        \n                        \n                    \n                \n            \n            \n                \nsetAwayTeamStatistic(teamName: string, score: number)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:306\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    teamName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    score\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setEventLeagueName\n                        \n                        \n                    \n                \n            \n            \n                \nsetEventLeagueName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:304\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setHomeTeamStatistic\n                        \n                        \n                    \n                \n            \n            \n                \nsetHomeTeamStatistic(teamName: string, score: number)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:305\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    teamName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    score\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateGoalData\n                        \n                        \n                    \n                \n            \n            \n                \nupdateGoalData(teamName: string, score: number)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:303\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    teamName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    score\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PayloadBuilder-4.html":{"url":"interfaces/PayloadBuilder-4.html","title":"interface - PayloadBuilder-4","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PayloadBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getEventName\n                                \n                                \n                                    getParameter\n                                \n                                \n                                    getPayload\n                                \n                                \n                                    setMessageCount\n                                \n                                \n                                    setMessageCreator\n                                \n                                \n                                    setMessageFreshness\n                                \n                                \n                                    setMessageStatus\n                                \n                                \n                                    setMessageUrgency\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEventName\n                        \n                        \n                    \n                \n            \n            \n                \ngetEventName()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:322\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     event.MessageAlert.Activated.EventName\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getParameter\n                        \n                        \n                    \n                \n            \n            \n                \ngetParameter()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:323\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     event.Props\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPayload\n                        \n                        \n                    \n                \n            \n            \n                \ngetPayload()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:324\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     event.MessageAlert.Payload\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setMessageCount\n                        \n                        \n                    \n                \n            \n            \n                \nsetMessageCount(count: number)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:318\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    count\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setMessageCreator\n                        \n                        \n                    \n                \n            \n            \n                \nsetMessageCreator(name: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:317\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setMessageFreshness\n                        \n                        \n                    \n                \n            \n            \n                \nsetMessageFreshness(freshness: Types.MessageFreshness)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:320\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    freshness\n                                    \n                                                Types.MessageFreshness\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setMessageStatus\n                        \n                        \n                    \n                \n            \n            \n                \nsetMessageStatus(messageStatus: Types.MessageStatus)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:321\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    messageStatus\n                                    \n                                                Types.MessageStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setMessageUrgency\n                        \n                        \n                    \n                \n            \n            \n                \nsetMessageUrgency(urgency?: Types.MessageUrgent)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:319\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    urgency\n                                    \n                                                Types.MessageUrgent\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PayloadBuilder-5.html":{"url":"interfaces/PayloadBuilder-5.html","title":"interface - PayloadBuilder-5","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PayloadBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getEventName\n                                \n                                \n                                    getParameter\n                                \n                                \n                                    getPayload\n                                \n                                \n                                    setEnterTimestamp\n                                \n                                \n                                    setExpectedArrival\n                                \n                                \n                                    setOrderStatus\n                                \n                                \n                                    updateSellerName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEventName\n                        \n                        \n                    \n                \n            \n            \n                \ngetEventName()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:336\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         event.OrderStatus.EventName\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getParameter\n                        \n                        \n                    \n                \n            \n            \n                \ngetParameter()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:338\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     event.Props\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPayload\n                        \n                        \n                    \n                \n            \n            \n                \ngetPayload()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:337\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     event.OrderStatus.Updated.Payload\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setEnterTimestamp\n                        \n                        \n                    \n                \n            \n            \n                \nsetEnterTimestamp(date: Date)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:333\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setExpectedArrival\n                        \n                        \n                    \n                \n            \n            \n                \nsetExpectedArrival(date: Date)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:334\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setOrderStatus\n                        \n                        \n                    \n                \n            \n            \n                \nsetOrderStatus(status: Types.OrderStatus)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:332\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    status\n                                    \n                                                Types.OrderStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateSellerName\n                        \n                        \n                    \n                \n            \n            \n                \nupdateSellerName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:335\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PayloadBuilder-6.html":{"url":"interfaces/PayloadBuilder-6.html","title":"interface - PayloadBuilder-6","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PayloadBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getConfirmationState\n                                \n                                \n                                    getConfirmationStatus\n                                \n                                \n                                    getEventName\n                                \n                                \n                                    getParameter\n                                \n                                \n                                    getPayload\n                                \n                                \n                                    setBookingTime\n                                \n                                \n                                    setBrokerName\n                                \n                                \n                                    setOccasionType\n                                \n                                \n                                    setProviderName\n                                \n                                \n                                    setSubject\n                                \n                                \n                                    updateConfirmationStatus\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getConfirmationState\n                        \n                        \n                    \n                \n            \n            \n                \ngetConfirmationState()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:353\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Types.ConfirmationState\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getConfirmationStatus\n                        \n                        \n                    \n                \n            \n            \n                \ngetConfirmationStatus()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:354\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Types.ConfirmationStatus\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEventName\n                        \n                        \n                    \n                \n            \n            \n                \ngetEventName()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:352\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         event.Occasion.Updated.EventName\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getParameter\n                        \n                        \n                    \n                \n            \n            \n                \ngetParameter()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:356\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     event.Props\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPayload\n                        \n                        \n                    \n                \n            \n            \n                \ngetPayload()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:355\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     event.Occasion.Payload\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setBookingTime\n                        \n                        \n                    \n                \n            \n            \n                \nsetBookingTime(date: Date)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:350\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setBrokerName\n                        \n                        \n                    \n                \n            \n            \n                \nsetBrokerName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:351\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setOccasionType\n                        \n                        \n                    \n                \n            \n            \n                \nsetOccasionType(type: Types.OccasionType)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:347\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                Types.OccasionType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setProviderName\n                        \n                        \n                    \n                \n            \n            \n                \nsetProviderName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:349\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setSubject\n                        \n                        \n                    \n                \n            \n            \n                \nsetSubject(subject: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:348\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    subject\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateConfirmationStatus\n                        \n                        \n                    \n                \n            \n            \n                \nupdateConfirmationStatus(status: Types.ConfirmationStatus)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:346\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    status\n                                    \n                                                Types.ConfirmationStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PayloadBuilder-7.html":{"url":"interfaces/PayloadBuilder-7.html","title":"interface - PayloadBuilder-7","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PayloadBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getEventName\n                                \n                                \n                                    getParameter\n                                \n                                \n                                    getPayload\n                                \n                                \n                                    setContentName\n                                \n                                \n                                    setDistributionMethod\n                                \n                                \n                                    setMediaType\n                                \n                                \n                                    setProvider\n                                \n                                \n                                    setStartTime\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEventName\n                        \n                        \n                    \n                \n            \n            \n                \ngetEventName()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:365\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     event.MediaContent.EventName\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getParameter\n                        \n                        \n                    \n                \n            \n            \n                \ngetParameter()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:370\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     event.Props\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPayload\n                        \n                        \n                    \n                \n            \n            \n                \ngetPayload()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:369\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     event.MediaContent.Payload\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setContentName\n                        \n                        \n                    \n                \n            \n            \n                \nsetContentName(name?: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:363\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDistributionMethod\n                        \n                        \n                    \n                \n            \n            \n                \nsetDistributionMethod(method: Types.DistributionMethod)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:367\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                            Types.DistributionMethod\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setMediaType\n                        \n                        \n                    \n                \n            \n            \n                \nsetMediaType(type: Types.MediaType)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:364\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                Types.MediaType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setProvider\n                        \n                        \n                    \n                \n            \n            \n                \nsetProvider(providerName: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:368\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    providerName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setStartTime\n                        \n                        \n                    \n                \n            \n            \n                \nsetStartTime(date: Date)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:366\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PayloadBuilder-8.html":{"url":"interfaces/PayloadBuilder-8.html","title":"interface - PayloadBuilder-8","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PayloadBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getEventName\n                                \n                                \n                                    getPayload\n                                \n                                \n                                    setGameName\n                                \n                                \n                                    setGameOfferName\n                                \n                                \n                                    setInviterName\n                                \n                                \n                                    setInviteType\n                                \n                                \n                                    setRelationshipToInvitee\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEventName\n                        \n                        \n                    \n                \n            \n            \n                \ngetEventName()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:382\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     event.SocialGameInvite.Available.EventName\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPayload\n                        \n                        \n                    \n                \n            \n            \n                \ngetPayload()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:383\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     event.SocialGameInvite.Available.Payload\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setGameName\n                        \n                        \n                    \n                \n            \n            \n                \nsetGameName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:380\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setGameOfferName\n                        \n                        \n                    \n                \n            \n            \n                \nsetGameOfferName(name: Types.OfferType)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:381\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                Types.OfferType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setInviterName\n                        \n                        \n                    \n                \n            \n            \n                \nsetInviterName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:377\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setInviteType\n                        \n                        \n                    \n                \n            \n            \n                \nsetInviteType(type: Types.InviteType)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:379\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                Types.InviteType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setRelationshipToInvitee\n                        \n                        \n                    \n                \n            \n            \n                \nsetRelationshipToInvitee(relation: Types.RelationshipToInvitee)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:378\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    relation\n                                    \n                                                Types.RelationshipToInvitee\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Person.html":{"url":"interfaces/Person.html","title":"interface - Person","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Person\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProactiveClient.html":{"url":"classes/ProactiveClient.html","title":"class - ProactiveClient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProactiveClient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/clients.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                apiEndpoint\n                            \n                            \n                                    Private\n                                body\n                            \n                            \n                                    Protected\n                                clientId\n                            \n                            \n                                    Protected\n                                clientSecret\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                getAccessToken\n                            \n                            \n                                    Public\n                                getBody\n                            \n                            \n                                    Public\n                                getReferenceId\n                            \n                            \n                                    Public\n                                getRequestParams\n                            \n                            \n                                    Public\n                                    Async\n                                requestEvent\n                            \n                            \n                                    Public\n                                setEvent\n                            \n                            \n                                    Public\n                                setEventName\n                            \n                            \n                                    Public\n                                setExpiryTime\n                            \n                            \n                                    Public\n                                setLocalizedAttributes\n                            \n                            \n                                    Public\n                                setPayload\n                            \n                            \n                                    Public\n                                setReferenceId\n                            \n                            \n                                    Public\n                                setRelevantAudience\n                            \n                            \n                                    Public\n                                setTimestamp\n                            \n                            \n                                    Public\n                                updateReferenceId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(config: client.ClientConfig)\n                    \n                \n                        \n                            \n                                Defined in packages/proactive-event/libs/clients.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        client.ClientConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            apiEndpoint\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         client.APIEndpoint\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/proactive-event/libs/clients.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            body\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in packages/proactive-event/libs/clients.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            clientId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         client.ClientId\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/proactive-event/libs/clients.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            clientSecret\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         client.ClientSecret\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/proactive-event/libs/clients.ts:37\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getAccessToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAccessToken()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/clients.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getBody\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getBody()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/clients.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         client.RequstBody\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getReferenceId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getReferenceId()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/clients.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getRequestParams\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getRequestParams(accessToken: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/clients.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    accessToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     AxiosRequestConfig\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            requestEvent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    requestEvent()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/clients.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setEvent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setEvent(event: event.Props)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/clients.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                event.Props\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setEventName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setEventName(name: event.EventName)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/clients.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                            event.EventName\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setExpiryTime\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setExpiryTime(date: Date)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/clients.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setLocalizedAttributes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setLocalizedAttributes(localizedAttributes: literal type[])\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/clients.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    localizedAttributes\n                                    \n                                            literal type[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setPayload\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setPayload(payload: event.Payload)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/clients.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            event.Payload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setReferenceId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setReferenceId(id: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/clients.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setRelevantAudience\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setRelevantAudience(type: client.AudienceType, payload?: client.AudiencePayload)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/clients.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                client.AudienceType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    payload\n                                    \n                                            client.AudiencePayload\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setTimestamp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setTimestamp(date: Date)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/clients.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateReferenceId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateReferenceId(id: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/clients.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import axios, { AxiosRequestConfig } from 'axios'\nimport moment from 'moment'\nimport uuid from 'uuid'\nimport {\n    event,\n    client\n} from './model'\n\nexport const getApiURL = (config: client.ClientConfig): client.APIEndpoint => {\n    if (config.apiEndpont) return config.apiEndpont\n    switch (config.apiRegion) {\n        case 'FE':\n            return 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n        case 'EU':\n            return 'https://api.eu.amazonalexa.com/v1/proactiveEvents/'\n        case 'US':\n        default:\n            return 'https://api.amazonalexa.com/v1/proactiveEvents/'\n    }\n}\n\nexport const getApiEndpoint = (config: client.ClientConfig): client.APIEndpoint => {\n    const url = getApiURL(config)\n    if (!config.isProduction) return `${url}stages/development` as client.DevAPIURL\n    return url\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const isAuthResponse = (res: any): res is client.AuthResponse => {\n    if (!res) return false\n    if (!res.access_token || !res.expires_in || !res.scope || !res.token_type) return false\n    return true\n}\n\nexport default class ProactiveClient {\n    protected clientId: client.ClientId\n    protected clientSecret: client.ClientSecret\n    protected apiEndpoint: client.APIEndpoint\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    private body: any = {}\n\n    public constructor (config: client.ClientConfig) {\n        this.clientId = config.clientId\n        this.clientSecret = config.clientSecret\n        this.apiEndpoint = getApiEndpoint(config)\n        this.body = {\n            timestamp: moment().toISOString(),\n            expiryTime: moment().add(1, 'days').toISOString(),\n            event: {},\n            relevantAudience: 'Multicast',\n            referenceId: uuid.v4()\n        }\n        return this\n    }\n    public getReferenceId (): string {\n        return this.body.referenceId\n    }\n    public updateReferenceId (id: string): this{\n        this.body.referenceId = id\n        return this\n    }\n    public async getAccessToken (): Promise {\n        const response = await axios({\n            method: 'POST',\n            url: 'https://api.amazon.com/auth/O2/token',\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded'\n            },\n            data: [\n                'scope=alexa::proactive_events',\n                'grant_type=client_credentials',\n                `client_id=${this.clientId}`,\n                `client_secret=${this.clientSecret}`\n            ].join('&')\n        })\n        if (!isAuthResponse(response.data)) throw new Error('failed to get access token')\n        return response.data\n    }\n    public setReferenceId (id: string): this {\n        this.body.referenceId = id\n        return this\n    }\n    public setTimestamp (date: Date): this {\n        this.body.timestamp = moment(date).toISOString()\n        return this\n    }\n    public setExpiryTime (date: Date): this {\n        this.body.expiryTime = moment(date).toISOString()\n        return this\n    }\n    public setEvent (event: event.Props): this {\n        this.body.event = event\n        return this\n    }\n    public setPayload (payload: event.Payload): this {\n        this.body.event.payload = payload\n        return this\n    }\n    public setEventName (name: event.EventName): this {\n        this.body.event.name = name\n        return this\n    }\n    public setLocalizedAttributes (localizedAttributes: {}[]): this {\n        this.body.localizedAttributes = localizedAttributes\n        return this\n    }\n    public setRelevantAudience (type: client.AudienceType, payload?: client.AudiencePayload): this {\n        const relevantAudience: client.RelevantAudience = {\n            type\n        }\n        if (type === 'Unicast') relevantAudience.payload = payload\n        this.body.relevantAudience = relevantAudience\n        return this\n    }\n    public getBody (): client.RequstBody {\n        return this.body\n    }\n    public getRequestParams (accessToken: string): AxiosRequestConfig {\n        return {\n            method: 'POST',\n            url: this.apiEndpoint,\n            headers: {\n                'Content-type': 'application/json',\n                'Authorization': `Bearer ${accessToken}`\n            },\n            data: this.getBody()\n        }\n    }\n    public async requestEvent (): Promise {\n        const authResult = await this.getAccessToken()\n        if (!authResult.access_token) throw new Error('missing access_token')\n        const param = this.getRequestParams(authResult.access_token)\n        try {\n            const response = await axios(param)\n            return {\n                statusCode: response.status,\n                message: response.statusText,\n                request: this.getBody()\n            }\n        } catch (e) {\n            if (!e.response) throw e\n            const err = {\n                statusCode: 500,\n                errorCode: 'Error',\n                message: 'Internal Error'\n            }\n            if (e.response.data && e.response.data.message) err.message = e.response.data.message\n            if (e.response.status) err.statusCode = e.response.status\n            if (e.response.statusText) err.errorCode = e.response.statusText\n            throw err\n        }\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProductDetailResponseContentBuilder.html":{"url":"classes/ProductDetailResponseContentBuilder.html","title":"class - ProductDetailResponseContentBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProductDetailResponseContentBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/isp/libs/contentBuilders/Detail.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ContentBuilder\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                contents\n                            \n                            \n                                    Protected\n                                locale\n                            \n                            \n                                    Protected\n                                responseBuilder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getProductDetail\n                            \n                            \n                                    Public\n                                setProductDetail\n                            \n                            \n                                    Public\n                                getResponse\n                            \n                            \n                                    Protected\n                                isJP\n                            \n                            \n                                    Public\n                                putDirective\n                            \n                            \n                                    Public\n                                putDirectives\n                            \n                            \n                                    Public\n                                putRepromptText\n                            \n                            \n                                    Public\n                                putSpeechText\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            contents\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ResponseContent\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         ContentBuilder\n\n                                \n                            \n                        \n                            \n                                    Defined in         ContentBuilder:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            locale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ContentBuilder\n\n                                \n                            \n                        \n                            \n                                    Defined in         ContentBuilder:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            responseBuilder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ResponseBuilder\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ContentBuilder\n\n                                \n                            \n                        \n                            \n                                    Defined in         ContentBuilder:10\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getProductDetail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getProductDetail()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/Detail.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ResponseContent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setProductDetail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setProductDetail()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/Detail.ts:26\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getResponse()\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:43\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Response\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isJP\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isJP()\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:16\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putDirective\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putDirective(directive: Directive)\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:35\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    directive\n                                    \n                                                Directive\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putDirectives\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putDirectives(directives: Directive[])\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    directives\n                                    \n                                            Directive[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putRepromptText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putRepromptText(text: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:23\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putSpeechText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putSpeechText(text: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import ContentBuilder, {\n    ResponseContent\n} from './base'\n\nexport class ProductDetailResponseContentBuilder extends ContentBuilder {\n    // purchaseResult === 'DECLINED'\n    private getProductDetail (): ResponseContent {\n        const product = this.getProduct()\n        if (this.isJP()) {\n            return {\n                speechText: [\n                    product.summary,\n                    '購入しますか？'\n                ].join(' '),\n                repromptText: '購入しますか？'\n            }\n        }\n        return {\n            speechText: [\n                product.summary,\n                'Will you buy the product?'\n            ].join(' '),\n            repromptText: 'Will you buy the product?'\n        }\n    }\n    public setProductDetail (): this {\n        this.contents = this.getProductDetail()\n        return this\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProductListResponseContentBuilder.html":{"url":"classes/ProductListResponseContentBuilder.html","title":"class - ProductListResponseContentBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProductListResponseContentBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/isp/libs/contentBuilders/List.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ContentBuilder\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                listProducts\n                            \n                            \n                                    Protected\n                                contents\n                            \n                            \n                                    Protected\n                                locale\n                            \n                            \n                                    Protected\n                                responseBuilder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getListProducts\n                            \n                            \n                                    Private\n                                getProductLists\n                            \n                            \n                                    Public\n                                setListProducts\n                            \n                            \n                                    Public\n                                setProductLists\n                            \n                            \n                                    Public\n                                getResponse\n                            \n                            \n                                    Protected\n                                isJP\n                            \n                            \n                                    Public\n                                putDirective\n                            \n                            \n                                    Public\n                                putDirectives\n                            \n                            \n                                    Public\n                                putRepromptText\n                            \n                            \n                                    Public\n                                putSpeechText\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            listProducts\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         InSkillProduct[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in packages/isp/libs/contentBuilders/List.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            contents\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ResponseContent\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         ContentBuilder\n\n                                \n                            \n                        \n                            \n                                    Defined in         ContentBuilder:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            locale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ContentBuilder\n\n                                \n                            \n                        \n                            \n                                    Defined in         ContentBuilder:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            responseBuilder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ResponseBuilder\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ContentBuilder\n\n                                \n                            \n                        \n                            \n                                    Defined in         ContentBuilder:10\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getListProducts\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getListProducts()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/List.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ResponseContent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getProductLists\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getProductLists()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/List.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         InSkillProduct[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setListProducts\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setListProducts()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/List.ts:57\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setProductLists\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setProductLists(list: InSkillProduct[])\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/List.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    list\n                                    \n                                                InSkillProduct[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getResponse()\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:43\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Response\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isJP\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isJP()\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:16\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putDirective\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putDirective(directive: Directive)\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:35\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    directive\n                                    \n                                                Directive\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putDirectives\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putDirectives(directives: Directive[])\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    directives\n                                    \n                                            Directive[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putRepromptText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putRepromptText(text: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:23\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putSpeechText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putSpeechText(text: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { services } from 'ask-sdk-model'\nimport ContentBuilder, {\n    ResponseContent\n} from './base'\nimport InSkillProduct = services.monetization.InSkillProduct\nexport class ProductListResponseContentBuilder extends ContentBuilder {\n    private listProducts: InSkillProduct[] = []\n    public setProductLists (list: InSkillProduct[]): this {\n        this.listProducts = list\n        return this\n    }\n    private getProductLists (): InSkillProduct[] {\n        return this.listProducts\n    }\n    private getListProducts (): ResponseContent {\n        const products = this.getProductLists()\n        if (products.length === 1) {\n            const productText = `${products[0].name}. ${products[0].summary}`\n            if (this.isJP()) {\n                return {\n                    speechText: [\n                        productText,\n                        'どの商品を購入しますか？'\n                    ].join(' '),\n                    repromptText: 'どの商品を購入しますか？'\n                }\n            }\n            return {\n                speechText: [\n                    productText,\n                    'What item will you buy?'\n                ].join(' '),\n                repromptText: 'What item will you buy?'\n            }\n        }\n        if (this.isJP()) {\n            return {\n                speechText: [\n                    products.map((product, i): string => {\n                        return `${i + 1}番目。 ${product.name}. ${product.summary}`\n                    }).join(''),\n                    'どの商品を購入しますか？'\n                ].join(' '),\n                repromptText: 'どの商品を購入しますか？'\n            }\n        }\n        return {\n            speechText: [\n                products.map((product, i): string => {\n                    return `No.${i + 1}. ${product.name}. ${product.summary}`\n                }).join('Next.'),\n                'What item will you buy?'\n            ].join(' '),\n            repromptText: 'What item will you buy?'\n        }\n    }\n    public setListProducts (): this {\n        this.contents = this.getListProducts()\n        return this\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Props.html":{"url":"interfaces/Props.html","title":"interface - Props","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Props\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        name\n                                \n                                \n                                        payload\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     E\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     E\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payload\n                                    \n                                \n                                \n                                    \n                                        payload:     P\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     P\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RefundContentBuilder.html":{"url":"classes/RefundContentBuilder.html","title":"class - RefundContentBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RefundContentBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/isp/libs/contentBuilders/Refund.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ContentBuilder\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                contents\n                            \n                            \n                                    Protected\n                                locale\n                            \n                            \n                                    Protected\n                                responseBuilder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getNoEntitledProductResponse\n                            \n                            \n                                    Public\n                                setCancelDirective\n                            \n                            \n                                    Public\n                                setNoEntitledProductResponse\n                            \n                            \n                                    Public\n                                getResponse\n                            \n                            \n                                    Protected\n                                isJP\n                            \n                            \n                                    Public\n                                putDirective\n                            \n                            \n                                    Public\n                                putDirectives\n                            \n                            \n                                    Public\n                                putRepromptText\n                            \n                            \n                                    Public\n                                putSpeechText\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            contents\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ResponseContent\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         ContentBuilder\n\n                                \n                            \n                        \n                            \n                                    Defined in         ContentBuilder:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            locale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ContentBuilder\n\n                                \n                            \n                        \n                            \n                                    Defined in         ContentBuilder:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            responseBuilder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ResponseBuilder\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ContentBuilder\n\n                                \n                            \n                        \n                            \n                                    Defined in         ContentBuilder:10\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getNoEntitledProductResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNoEntitledProductResponse()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/Refund.ts:11\n                \n            \n\n\n            \n                \n                    If product not purchased yet\n\n\n                    \n                        Returns :         ResponseContent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setCancelDirective\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setCancelDirective(productId: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/Refund.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setNoEntitledProductResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setNoEntitledProductResponse()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/Refund.ts:31\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getResponse()\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:43\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Response\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isJP\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isJP()\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:16\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putDirective\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putDirective(directive: Directive)\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:35\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    directive\n                                    \n                                                Directive\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putDirectives\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putDirectives(directives: Directive[])\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    directives\n                                    \n                                            Directive[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putRepromptText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putRepromptText(text: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:23\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putSpeechText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putSpeechText(text: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n    getCancelProductDirective\n} from '../index'\nimport ContentBuilder, {\n    ResponseContent\n} from './base'\nexport class RefundContentBuilder extends ContentBuilder {\n    /**\n   * If product not purchased yet\n   */\n    public getNoEntitledProductResponse (): ResponseContent {\n        const product = this.getProduct()\n        if (this.isJP()) {\n            return {\n                speechText: [\n                    `${product.name} は購入していない商品ですので、キャンセルできません。`,\n                    '他になにをしますか？'\n                ].join(' '),\n                repromptText: '他に何をしますか？'\n            }\n        }\n        return {\n            speechText: [\n                'You can not refund it.',\n                `Because the ${product.name} is not purchased.`,\n                'What do you want to do next?'\n            ].join(' '),\n            repromptText: 'What will you do for next?'\n        }\n    }\n    public setNoEntitledProductResponse (): this {\n        this.contents = this.getNoEntitledProductResponse()\n        return this\n    }\n    public setCancelDirective (productId: string): this {\n        this.contents.directive = getCancelProductDirective(productId)\n        return this\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RefundResponseContentBuilder.html":{"url":"classes/RefundResponseContentBuilder.html","title":"class - RefundResponseContentBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RefundResponseContentBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/isp/libs/contentBuilders/RefundResponse.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ContentBuilder\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                contents\n                            \n                            \n                                    Protected\n                                locale\n                            \n                            \n                                    Protected\n                                responseBuilder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getAcceptedRefundResult\n                            \n                            \n                                    Private\n                                getDeclinedRefundResult\n                            \n                            \n                                    Private\n                                getFailedRefundResult\n                            \n                            \n                                    Public\n                                setAcceptedRefundResult\n                            \n                            \n                                    Public\n                                setDeclinedRefundResult\n                            \n                            \n                                    Public\n                                setFailedRefundResult\n                            \n                            \n                                    Public\n                                getResponse\n                            \n                            \n                                    Protected\n                                isJP\n                            \n                            \n                                    Public\n                                putDirective\n                            \n                            \n                                    Public\n                                putDirectives\n                            \n                            \n                                    Public\n                                putRepromptText\n                            \n                            \n                                    Public\n                                putSpeechText\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            contents\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ResponseContent\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         ContentBuilder\n\n                                \n                            \n                        \n                            \n                                    Defined in         ContentBuilder:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            locale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ContentBuilder\n\n                                \n                            \n                        \n                            \n                                    Defined in         ContentBuilder:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            responseBuilder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ResponseBuilder\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ContentBuilder\n\n                                \n                            \n                        \n                            \n                                    Defined in         ContentBuilder:10\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getAcceptedRefundResult\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAcceptedRefundResult()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/RefundResponse.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ResponseContent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getDeclinedRefundResult\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDeclinedRefundResult()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/RefundResponse.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ResponseContent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getFailedRefundResult\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFailedRefundResult()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/RefundResponse.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ResponseContent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setAcceptedRefundResult\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setAcceptedRefundResult()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/RefundResponse.ts:48\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setDeclinedRefundResult\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setDeclinedRefundResult()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/RefundResponse.ts:25\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setFailedRefundResult\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setFailedRefundResult()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/RefundResponse.ts:68\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getResponse()\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:43\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Response\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isJP\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isJP()\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:16\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putDirective\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putDirective(directive: Directive)\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:35\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    directive\n                                    \n                                                Directive\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putDirectives\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putDirectives(directives: Directive[])\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    directives\n                                    \n                                            Directive[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putRepromptText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putRepromptText(text: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:23\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putSpeechText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putSpeechText(text: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import ContentBuilder, {\n    ResponseContent\n} from './base'\n\nexport class RefundResponseContentBuilder extends ContentBuilder {\n    // purchaseResult === 'DECLINED'\n    private getDeclinedRefundResult (): ResponseContent {\n        if (this.isJP()) {\n            return {\n                speechText: [\n                    '承知しました。',\n                    '次はなにをしますか？'\n                ].join(' '),\n                repromptText: '次はなにをしますか？'\n            }\n        }\n        return {\n            speechText: [\n                `Ok.`,\n                'What will you do for next?'\n            ].join(' '),\n            repromptText: 'What will you do for next?'\n        }\n    }\n    public setDeclinedRefundResult (): this {\n        this.contents = this.getDeclinedRefundResult()\n        return this\n    }\n    // purchaseResult === 'ACCEPTED'\n    private getAcceptedRefundResult (): ResponseContent {\n        if (this.isJP()) {\n            return {\n                speechText: [\n                    `お使いいただいてありがとうございました。`,\n                    '次は何をしますか？'\n                ].join(' '),\n                repromptText: '次は何をしますか？'\n            }\n        }\n        return {\n            speechText: [\n                'Thanks for enjoy the packages. ',\n                'What will you do for next?'\n            ].join(' '),\n            repromptText: 'What will you do for next?'\n        }\n    }\n    public setAcceptedRefundResult (): this {\n        this.contents = this.getAcceptedRefundResult()\n        return this\n    }\n    private getFailedRefundResult (): ResponseContent {\n        if (this.isJP()) {\n            return {\n                speechText: [\n                    'キャンセル処理に失敗しました。',\n                    'もう一度トライするか、アレクサアプリからサポートに問い合わせてください。'\n                ].join(' ')\n            }\n        }\n        return {\n            speechText: [\n                'There was an error handling your refund request.',\n                'Please try again or contact us for help.'\n            ].join(' ')\n        }\n    }\n    public setFailedRefundResult (): this {\n        this.contents = this.getFailedRefundResult()\n        return this\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RelevantAudience.html":{"url":"interfaces/RelevantAudience.html","title":"interface - RelevantAudience","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RelevantAudience\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        payload\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        payload\n                                    \n                                \n                                \n                                    \n                                        payload:         AudiencePayload\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AudiencePayload\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         AudienceType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AudienceType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ReminderAPIClient.html":{"url":"classes/ReminderAPIClient.html","title":"class - ReminderAPIClient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ReminderAPIClient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/serviceClients/libs/Reminders.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Client\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                path\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createReminder\n                            \n                            \n                                    Public\n                                    Async\n                                deleteReminder\n                            \n                            \n                                    Public\n                                    Async\n                                getReminder\n                            \n                            \n                                    Public\n                                    Async\n                                getReminders\n                            \n                            \n                                    Public\n                                    Async\n                                updateReminder\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '/v1/alerts/reminders'\n                        \n                    \n                        \n                            \n                                    Defined in packages/serviceClients/libs/Reminders.ts:7\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            createReminder\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createReminder(reminderRequest: reminderManagement.ReminderRequest)\n                \n            \n\n\n            \n                \n                    Defined in packages/serviceClients/libs/Reminders.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reminderRequest\n                                    \n                                            reminderManagement.ReminderRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            deleteReminder\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteReminder(alertId: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/serviceClients/libs/Reminders.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    alertId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getReminder\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getReminder(alertId: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/serviceClients/libs/Reminders.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    alertId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getReminders\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getReminders()\n                \n            \n\n\n            \n                \n                    Defined in packages/serviceClients/libs/Reminders.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            updateReminder\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateReminder(alertId: string, reminderRequest: reminderManagement.ReminderRequest)\n                \n            \n\n\n            \n                \n                    Defined in packages/serviceClients/libs/Reminders.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    alertId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reminderRequest\n                                    \n                                            reminderManagement.ReminderRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { services } from 'ask-sdk-model'\nimport Client from './client'\n\nimport reminderManagement = services.reminderManagement\n\nexport class ReminderAPIClient extends Client {\n    protected path = '/v1/alerts/reminders'\n    public async deleteReminder (alertId: string): Promise {\n        return this.delete(alertId)\n    }\n    /**\n     *\n     * @param {string} alertId\n     */\n    public async getReminder (alertId: string): Promise {\n        return this.get(alertId)\n    }\n    /**\n     *\n     * @param {string} alertId\n     * @param {reminderManagement.ReminderRequest} reminderRequest\n     */\n    public async updateReminder (alertId: string, reminderRequest: reminderManagement.ReminderRequest): Promise {\n        return this.put(reminderRequest, alertId)\n    }\n    /**\n     *\n     */\n    public async getReminders (): Promise {\n        return this.get()\n    }\n    /**\n     *\n     * @param {reminderManagement.ReminderRequest} reminderRequest\n     */\n    public async createReminder (reminderRequest: reminderManagement.ReminderRequest): Promise {\n        return this.post(reminderRequest)\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RequestHandlerBuilder.html":{"url":"interfaces/RequestHandlerBuilder.html","title":"interface - RequestHandlerBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RequestHandlerBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/handlers/libs/requestHandlers/HandlerFactory.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    handle\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handle\n                        \n                        \n                    \n                \n            \n            \n                \nhandle(handler: TMergeTargetHandler)\n                \n            \n\n\n            \n                \n                    Defined in packages/handlers/libs/requestHandlers/HandlerFactory.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    handler\n                                    \n                                                TMergeTargetHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TRequestHandler\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { RequestHandler, HandlerInput } from 'ask-sdk-core'\nimport { Response, Request, RequestEnvelope } from 'ask-sdk-model'\nimport Resolver, { interfaces } from 'class-resolver'\nimport { isLaunchRequest } from 'ask-utils'\n\nexport interface TMergeTargetHandler {\n    canHandle?: (input: Input) => Promise | boolean;\n    handle?: (input: Input) => Promise | Output;\n}\nexport interface TRequestHandler {\n    canHandle: (input: Input) => Promise | boolean;\n    handle: (input: Input) => Promise | Output;\n}\nexport interface CustomeRequestEnvelope extends RequestEnvelope {\n    request: CustomRequest;\n}\nexport interface CustomHandlerInput extends HandlerInput {\n    requestEnvelope: CustomeRequestEnvelope;\n}\nexport interface RequestHandlerBuilder extends interfaces.ResolveTarget {\n    handle(handler: TMergeTargetHandler): TRequestHandler;\n}\n\nconst merge = (handler: TMergeTargetHandler, target?: TMergeTargetHandler): TRequestHandler => {\n    const fallBackHandler: RequestHandler = {\n        canHandle () {\n            return true\n        },\n        handle (handlerInput) {\n            return handlerInput.responseBuilder.getResponse()\n        }\n    }\n    return Object.assign({}, fallBackHandler, target, handler)\n}\n\nexport type SupportedHandlerType = 'LaunchRequest'\nexport class RequestHandlerFactory {\n    public static create (type: SupportedHandlerType, handler: TMergeTargetHandler): TRequestHandler {\n        return new Resolver(\n            new LaunchRequestHandlerFactory(),\n            new FallbackIntentFactory()\n        ).resolve(type).handle(handler)\n    }\n}\nexport default RequestHandlerFactory\n\nexport class LaunchRequestHandlerFactory implements RequestHandlerBuilder {\n    supports (type: string) {\n        return type === 'LaunchRequest'\n    }\n    handle (handler: TMergeTargetHandler) {\n        return merge(handler, {\n            canHandle (handlerInput) {\n                return isLaunchRequest(handlerInput)\n            }\n        })\n    }\n}\n\nexport class FallbackIntentFactory implements RequestHandlerBuilder {\n    supports () {\n        return true\n    }\n    handle (handler: TMergeTargetHandler) {\n        return merge(handler)\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RequestHandlerFactory.html":{"url":"classes/RequestHandlerFactory.html","title":"class - RequestHandlerFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RequestHandlerFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/handlers/libs/requestHandlers/HandlerFactory.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(type: SupportedHandlerType, handler: TMergeTargetHandler)\n                \n            \n\n\n            \n                \n                    Defined in packages/handlers/libs/requestHandlers/HandlerFactory.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                SupportedHandlerType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    handler\n                                    \n                                                TMergeTargetHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TRequestHandler\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { RequestHandler, HandlerInput } from 'ask-sdk-core'\nimport { Response, Request, RequestEnvelope } from 'ask-sdk-model'\nimport Resolver, { interfaces } from 'class-resolver'\nimport { isLaunchRequest } from 'ask-utils'\n\nexport interface TMergeTargetHandler {\n    canHandle?: (input: Input) => Promise | boolean;\n    handle?: (input: Input) => Promise | Output;\n}\nexport interface TRequestHandler {\n    canHandle: (input: Input) => Promise | boolean;\n    handle: (input: Input) => Promise | Output;\n}\nexport interface CustomeRequestEnvelope extends RequestEnvelope {\n    request: CustomRequest;\n}\nexport interface CustomHandlerInput extends HandlerInput {\n    requestEnvelope: CustomeRequestEnvelope;\n}\nexport interface RequestHandlerBuilder extends interfaces.ResolveTarget {\n    handle(handler: TMergeTargetHandler): TRequestHandler;\n}\n\nconst merge = (handler: TMergeTargetHandler, target?: TMergeTargetHandler): TRequestHandler => {\n    const fallBackHandler: RequestHandler = {\n        canHandle () {\n            return true\n        },\n        handle (handlerInput) {\n            return handlerInput.responseBuilder.getResponse()\n        }\n    }\n    return Object.assign({}, fallBackHandler, target, handler)\n}\n\nexport type SupportedHandlerType = 'LaunchRequest'\nexport class RequestHandlerFactory {\n    public static create (type: SupportedHandlerType, handler: TMergeTargetHandler): TRequestHandler {\n        return new Resolver(\n            new LaunchRequestHandlerFactory(),\n            new FallbackIntentFactory()\n        ).resolve(type).handle(handler)\n    }\n}\nexport default RequestHandlerFactory\n\nexport class LaunchRequestHandlerFactory implements RequestHandlerBuilder {\n    supports (type: string) {\n        return type === 'LaunchRequest'\n    }\n    handle (handler: TMergeTargetHandler) {\n        return merge(handler, {\n            canHandle (handlerInput) {\n                return isLaunchRequest(handlerInput)\n            }\n        })\n    }\n}\n\nexport class FallbackIntentFactory implements RequestHandlerBuilder {\n    supports () {\n        return true\n    }\n    handle (handler: TMergeTargetHandler) {\n        return merge(handler)\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RequstBody.html":{"url":"interfaces/RequstBody.html","title":"interface - RequstBody","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RequstBody\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        event\n                                \n                                \n                                        expiryTime\n                                \n                                \n                                        timestamp\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        event\n                                    \n                                \n                                \n                                    \n                                        event:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expiryTime\n                                    \n                                \n                                \n                                    \n                                        expiryTime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timestamp\n                                    \n                                \n                                \n                                    \n                                        timestamp:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Response.html":{"url":"interfaces/Response.html","title":"interface - Response","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Response\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        message\n                                \n                                \n                                        request\n                                \n                                \n                                        statusCode\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        request\n                                    \n                                \n                                \n                                    \n                                        request:         RequstBody\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RequstBody\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusCode\n                                    \n                                \n                                \n                                    \n                                        statusCode:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ResponseContent.html":{"url":"interfaces/ResponseContent.html","title":"interface - ResponseContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ResponseContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/libs/contentBuilder.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        directives\n                                \n                                \n                                            Optional\n                                        repromptText\n                                \n                                \n                                            Optional\n                                        speechText\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        directives\n                                    \n                                \n                                \n                                    \n                                        directives:     Directive[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Directive[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        repromptText\n                                    \n                                \n                                \n                                    \n                                        repromptText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        speechText\n                                    \n                                \n                                \n                                    \n                                        speechText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ResponseBuilder } from 'ask-sdk-core'\nimport { Response, Directive } from 'ask-sdk-model'\nexport interface ResponseContent {\n    speechText?: string;\n    repromptText?: string;\n    directives?: Directive[];\n}\nexport class ContentBuilder {\n    protected locale: string\n    protected responseBuilder: ResponseBuilder\n    protected contents: ResponseContent = {}\n    public constructor (locale: string, responseBuilder: ResponseBuilder) {\n        this.locale = locale\n        this.responseBuilder = responseBuilder\n    }\n    protected isJP (): boolean {\n        return /^ja/.test(this.locale)\n    }\n    public putSpeechText (text: string): this {\n        this.contents.speechText = text\n        return this\n    }\n    public putRepromptText (text: string): this {\n        this.contents.repromptText = text\n        return this\n    }\n    public putDirectives (directives: Directive[]): this {\n        if (!this.contents.directives) {\n            this.contents.directives = directives\n            return this\n        }\n        this.contents.directives = this.contents.directives.concat(directives)\n        return this\n    }\n    public putDirective (directive: Directive): this {\n        if (!this.contents.directives) {\n            this.contents.directives = [directive]\n            return this\n        }\n        this.contents.directives.push(directive)\n        return this\n    }\n    public getResponse (): Response {\n        const { speechText, repromptText, directives } = this.contents\n        if (speechText) this.responseBuilder.speak(speechText)\n        if (repromptText) this.responseBuilder.reprompt(repromptText)\n        if (directives) directives.forEach((directive): ResponseBuilder => this.responseBuilder.addDirective(directive))\n        return this.responseBuilder.getResponse()\n    }\n}\nexport default ContentBuilder\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ResponseContent-1.html":{"url":"interfaces/ResponseContent-1.html","title":"interface - ResponseContent-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ResponseContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/isp/libs/contentBuilders/base.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        directive\n                                \n                                \n                                            Optional\n                                        repromptText\n                                \n                                \n                                            Optional\n                                        speechText\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        directive\n                                    \n                                \n                                \n                                    \n                                        directive:         Directive\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Directive\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        repromptText\n                                    \n                                \n                                \n                                    \n                                        repromptText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        speechText\n                                    \n                                \n                                \n                                    \n                                        speechText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { services, Response, Directive } from 'ask-sdk-model'\nimport { ResponseBuilder } from 'ask-sdk-core'\n\nimport InSkillProduct = services.monetization.InSkillProduct\n\nexport interface ResponseContent {\n    speechText?: string;\n    repromptText?: string;\n    directive?: Directive;\n}\n\nexport class ContentBuilder {\n    protected locale: string\n    protected responseBuilder: ResponseBuilder\n    protected contents: ResponseContent = {}\n    public constructor (locale: string, responseBuilder: ResponseBuilder) {\n        this.locale = locale\n        this.responseBuilder = responseBuilder\n    }\n    protected isJP (): boolean {\n        return /^ja/.test(this.locale)\n    }\n    public getResponse (): Response {\n        const { speechText, repromptText, directive } = this.contents\n        if (speechText) this.responseBuilder.speak(speechText)\n        if (repromptText) this.responseBuilder.reprompt(repromptText)\n        if (directive) this.responseBuilder.addDirective(directive)\n        return this.responseBuilder.getResponse()\n    }\n}\n\nexport class ISPContentBuilder extends ContentBuilder {\n    protected productName?: string\n    protected product?: InSkillProduct\n    public constructor (locale: string, responseBuilder: ResponseBuilder, productName?: string, product?: InSkillProduct) {\n        super(locale, responseBuilder)\n        if (productName) this.productName = productName\n        if (product) this.product = product\n    }\n    public setProduct (product: InSkillProduct): this {\n        this.product = product\n        return this\n    }\n    protected getProduct (): InSkillProduct {\n        const { product } = this\n        if (!product) throw new Error('No products')\n        return product\n    }\n    public setProductName (name: string): this {\n        this.productName = name\n        return this\n    }\n    protected getProductName (): string {\n        if (!this.productName) throw new Error('No product name')\n        return this.productName\n    }\n    /**\n   * If the device or account does not supports ISP\n   */\n    private getUnSupportedISPResponse (): ResponseContent {\n        if (this.isJP()) {\n            return {\n                speechText: [\n                    'すみません。',\n                    'お使いのデバイス・アプリでは、スキル内課金を利用することができません。',\n                    '別のデバイスを利用するか、アレクサアプリから設定を確認してもう一度お試しください。',\n                    '次はなにをしますか？',\n                    'スキルを終了して、アプリの設定を確認したい場合は「終了」と話しかけてください。'\n                ].join(' '),\n                repromptText: [\n                    '次はなにをしますか？',\n                    'スキルを終了して、アプリの設定を確認したい場合は「終了」と話しかけてください。'\n                ].join(' ')\n            }\n        }\n        return {\n            speechText: [\n                'Sorry, you can not purchase by the device.',\n                'Please check your device and application settings by the Alexa app.',\n                'What will you do the next?'\n            ].join(' '),\n            repromptText: [\n                'What will you do the next?',\n                'If you want to stop the skill, please say me \"STOP\".'\n            ].join(' ')\n        }\n    }\n    public setUnSupportedISPResponse (): this {\n        this.contents = this.getUnSupportedISPResponse()\n        return this\n    }\n    /**\n   * Product does not found response\n   */\n    private getProductsNotFoundResponse (): ResponseContent {\n        if (this.isJP()) {\n            return {\n                speechText: [\n                    `すみません。商品が見つかりませんでした。`,\n                    '他に何をしますか？'\n                ].join(' '),\n                repromptText: '他に何をしますか？'\n            }\n        }\n        return {\n            speechText: `I can't find any products you can buy. What do you want to do next?`,\n            repromptText: `What do you want to do next?`\n        }\n    }\n    public setProductsNotFoundResponse (): this {\n        this.contents = this.getProductsNotFoundResponse()\n        return this\n    }\n    /**\n   * Product does not found response\n   */\n    private getProductNotFoundResponse (): ResponseContent {\n        try {\n            const productName = this.getProductName()\n            if (this.isJP()) {\n                return {\n                    speechText: [\n                        `${productName}を購入することができます。`,\n                        `詳細を聞きたい場合は「${productName}について教えて」、`,\n                        `購入する場合は「${productName}を購入」と話しかけてください。`,\n                        'どうしますか？'\n                    ].join(' '),\n                    repromptText: '購入・詳細、どちらにしますか？'\n                }\n            }\n            return {\n                speechText: `${productName}. what item do you want?`,\n                repromptText: `${productName}. what item do you want?`\n            }\n        } catch (e) {\n            return this.getProductsNotFoundResponse()\n        }\n    }\n    public setProductNotFoundResponse (): this {\n        this.contents = this.getProductNotFoundResponse()\n        return this\n    }\n    /**\n   * If product not found\n   */\n    private getCanNotBuyTheProductResponse (): ResponseContent {\n        if (this.isJP()) {\n            return {\n                speechText: 'すみません。その商品は現在購入できません。他に何をしますか？',\n                repromptText: '他に何をしますか？'\n            }\n        }\n        return {\n            speechText: \"I don't think we have a product by that name.  Can you try again?\",\n            repromptText: \"I didn't catch that. Can you try again?\"\n        }\n    }\n    public setCanNotBuyTheProductResponse (): this {\n        this.contents = this.getCanNotBuyTheProductResponse()\n        return this\n    }\n    /**\n   * If product already purchased\n   */\n    public getEntitledProductResponse (): ResponseContent {\n        if (this.isJP()) {\n            return {\n                speechText: 'その商品はすでに購入済の様子です。他に何をしますか？',\n                repromptText: '他に何をしますか？'\n            }\n        }\n        return {\n            speechText: 'You already entitled the product. What will you do for next?',\n            repromptText: 'What will you do for next?'\n        }\n    }\n    public setEntitledProductResponse (): this {\n        this.contents = this.getEntitledProductResponse()\n        return this\n    }\n}\nexport default ISPContentBuilder\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/S3SkillConfig.html":{"url":"interfaces/S3SkillConfig.html","title":"interface - S3SkillConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  S3SkillConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ask-utils/libs/models.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseSkillConfig\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        bucketName\n                                \n                                \n                                        bucketPathPrefix\n                                \n                                \n                                        persistanceType\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bucketName\n                                    \n                                \n                                \n                                    \n                                        bucketName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bucketPathPrefix\n                                    \n                                \n                                \n                                    \n                                        bucketPathPrefix:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        persistanceType\n                                    \n                                \n                                \n                                    \n                                        persistanceType:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n    RequestInterceptor,\n    ResponseInterceptor,\n    ErrorHandler,\n    RequestHandler\n} from 'ask-sdk'\nimport {\n    SkillConstants\n} from '@ask-utils/handlers'\n\ntype PersistanceType = 'DynamoDB' | 'S3'\ninterface BaseSkillConfig {\n    persistanceType: PersistanceType;\n    isISP?: boolean;\n    constants?: T;\n}\nexport interface S3SkillConfig extends BaseSkillConfig {\n    persistanceType: 'S3';\n    bucketName: string;\n    bucketPathPrefix: string;\n}\nexport interface DynamoDBSkillConfig extends BaseSkillConfig {\n    persistanceType: 'DynamoDB';\n    tableName: string;\n}\nexport type SkillConfig = S3SkillConfig | DynamoDBSkillConfig\nexport interface SkillHandlers {\n    requestHandlers: RequestHandler[];\n    requestInterceptors?: RequestInterceptor[];\n    responseInterceptors?: ResponseInterceptor[];\n    errorHandlers?: ErrorHandler[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SentryErrorHandlerFactory.html":{"url":"classes/SentryErrorHandlerFactory.html","title":"class - SentryErrorHandlerFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SentryErrorHandlerFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/error-handlers/libs/index.ts\n        \n\n            \n                Description\n            \n            \n                ErrorHandler Factory for Sentry\n\n            \n\n\n\n            \n                Example\n            \n            \n                        \n                            Basic\n```typescript\n * const ErrorHandler = SentryErrorHandlerFactory.init().getHandler()\n * ```\n                        \n                        \n                            Custom speech and reprompt\n```typescript\n * const ErrorHandler = SentryErrorHandlerFactory.init()\n *                          .setErrorResponse('Speech something', 'reprompt something')\n *                          .getHandler()\n * ```\n                        \n                        \n                            Custom handler\n```typescript\n * const ErrorHandler = SentryErrorHandlerFactory.init()\n *                          .setHandle((handlerInput) => {\n *                            return handlerInput.responseBuilder\n *                              .speak('Sorry I could not understand the meaning. Please tell me again')\n *                              .reprompt('Could you tell me onece more?')\n *                              .getResponse()\n *                          })\n *                          .getHandler()\n * ```\n                        \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in packages/error-handlers/libs/index.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorHandlerBuilder\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ErrorHandler, RequestInterceptor, HandlerInput } from 'ask-sdk-core'\nimport { Response } from 'ask-sdk-model'\nimport * as Sentry from '@sentry/node'\nSentry.init({ dsn: process.env.SENTRY_DNS as string })\n\nexport type ErrorHandle = (handlerInput: HandlerInput, error: Error) => Promise | Response\nexport interface ErrorHandlerBuilder {\n    getHandler(): ErrorHandler;\n    setHandle(handle: ErrorHandle): ErrorHandlerBuilder;\n    setErrorResponse(speechText: string, repromptText: string): ErrorHandlerBuilder;\n}\n/**\n * ErrorHandler Factory for Sentry\n *\n * @example Basic\n * ```typescript\n * const ErrorHandler = SentryErrorHandlerFactory.init().getHandler()\n * ```\n * @example Custom speech and reprompt\n * ```typescript\n * const ErrorHandler = SentryErrorHandlerFactory.init()\n *                          .setErrorResponse('Speech something', 'reprompt something')\n *                          .getHandler()\n * ```\n * @example Custom handler\n * ```typescript\n * const ErrorHandler = SentryErrorHandlerFactory.init()\n *                          .setHandle((handlerInput) => {\n *                            return handlerInput.responseBuilder\n *                              .speak('Sorry I could not understand the meaning. Please tell me again')\n *                              .reprompt('Could you tell me onece more?')\n *                              .getResponse()\n *                          })\n *                          .getHandler()\n * ```\n */\nexport class SentryErrorHandlerFactory {\n    public static init (): ErrorHandlerBuilder {\n        let handlerFilter: ErrorHandle = (handlerInput) => {\n            return handlerInput.responseBuilder\n                .speak('Sorry I could not understand the meaning. Please tell me again')\n                .reprompt('Could you tell me onece more?')\n                .getResponse()\n        }\n\n        const handler: ErrorHandler = {\n            canHandle: () => true,\n            handle: (handlerInput, error) => {\n                Sentry.captureEvent({\n                    message: error.message,\n                    extra: {\n                        request: handlerInput.requestEnvelope,\n                        error,\n                        stack: error.stack\n                    }\n                })\n                return handlerFilter(handlerInput, error)\n            }\n        }\n        return {\n            getHandler (): ErrorHandler {\n                return handler\n            },\n            setHandle (handle: ErrorHandle) {\n                handlerFilter = handle\n                return this\n            },\n            setErrorResponse (speechText: string, repromptText: string) {\n                handlerFilter = (handlerInput) => {\n                    return handlerInput.responseBuilder\n                        .speak(speechText)\n                        .reprompt(repromptText)\n                        .getResponse()\n                }\n                return this\n            }\n        }\n    }\n}\n\nexport const SentryDefaultErrorHandler: ErrorHandler = SentryErrorHandlerFactory.init().getHandler()\n\n/**\n * Set additional track information\n *\n * @example\n * import Alexa from 'ask-sdk'\n * import { SetErrorTrackerInterceptor, SentryDefaultErrorHandler } from '@ask-utils/error-handlers'\n *\n * export const handler = Alexa.SkillBuilders.standard()\n *                            .addErrorHandlers(SentryDefaultErrorHandler)\n *                            .addRequestInterceptors(SetErrorTrackerInterceptor)\n *                            .lambda()\n */\nexport const SetErrorTrackerInterceptor: RequestInterceptor = {\n    process ({ requestEnvelope }) {\n        const { System } = requestEnvelope.context\n        const userParams: {[key: string]: string} = {\n            userId: System.user.userId\n        }\n        if (System.device) userParams.deviceId = System.device.deviceId\n        if (requestEnvelope.session) userParams.sessionId = requestEnvelope.session.sessionId\n\n        Sentry.configureScope(scope => {\n            scope.setTag('request_id', requestEnvelope.request.requestId)\n            scope.setUser(userParams)\n        })\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SettingAPIClient.html":{"url":"classes/SettingAPIClient.html","title":"class - SettingAPIClient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SettingAPIClient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/serviceClients/libs/Settings.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Client\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                path\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                getDistanceUnits\n                            \n                            \n                                    Public\n                                    Async\n                                getTempratureUnit\n                            \n                            \n                                    Public\n                                    Async\n                                getTimezone\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '/v2/devices/'\n                        \n                    \n                        \n                            \n                                    Defined in packages/serviceClients/libs/Settings.ts:5\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getDistanceUnits\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDistanceUnits(deviceId: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/serviceClients/libs/Settings.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    deviceId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getTempratureUnit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTempratureUnit(deviceId: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/serviceClients/libs/Settings.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    deviceId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getTimezone\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTimezone(deviceId: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/serviceClients/libs/Settings.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    deviceId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { services } from 'ask-sdk-model'\nimport Client from './client'\n\nexport class SettingAPIClient extends Client {\n    protected path = '/v2/devices/'\n    public async getTimezone (deviceId: string): Promise {\n        return this.get(`${deviceId}/settings/System.timeZone`)\n    }\n    public async getTempratureUnit (deviceId: string): Promise {\n        return this.get(`${deviceId}/settings/System.temperatureUnit`)\n    }\n    public async getDistanceUnits (deviceId: string): Promise {\n        return this.get(`${deviceId}/settings/System.distanceUnits`)\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Skill.html":{"url":"interfaces/Skill.html","title":"interface - Skill","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Skill\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SkillConstants.html":{"url":"interfaces/SkillConstants.html","title":"interface - SkillConstants","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SkillConstants\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/handlers/libs/requestInterceptors/InjectConstants.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in packages/handlers/libs/requestInterceptors/InjectConstants.ts:4\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { HandlerInput } from 'ask-sdk-core'\nimport { RequestInterceptor } from 'ask-sdk-runtime'\n\nexport interface SkillConstants {\n    [key: string]: any;\n}\nexport class ConstantsInterceptorFactory {\n    public static init (constants: T): RequestInterceptor {\n        return {\n            async process ({ attributesManager }: HandlerInput) {\n                const atts = attributesManager.getRequestAttributes()\n                attributesManager.setRequestAttributes({\n                    ...atts,\n                    CONSTANTS: constants\n                })\n            }\n        }\n    }\n}\n\nexport default ConstantsInterceptorFactory\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SkillHandlers.html":{"url":"interfaces/SkillHandlers.html","title":"interface - SkillHandlers","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SkillHandlers\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ask-utils/libs/models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        errorHandlers\n                                \n                                \n                                        requestHandlers\n                                \n                                \n                                            Optional\n                                        requestInterceptors\n                                \n                                \n                                            Optional\n                                        responseInterceptors\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errorHandlers\n                                    \n                                \n                                \n                                    \n                                        errorHandlers:     ErrorHandler[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ErrorHandler[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        requestHandlers\n                                    \n                                \n                                \n                                    \n                                        requestHandlers:     RequestHandler[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     RequestHandler[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        requestInterceptors\n                                    \n                                \n                                \n                                    \n                                        requestInterceptors:     RequestInterceptor[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     RequestInterceptor[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        responseInterceptors\n                                    \n                                \n                                \n                                    \n                                        responseInterceptors:         ResponseInterceptor[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ResponseInterceptor[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n    RequestInterceptor,\n    ResponseInterceptor,\n    ErrorHandler,\n    RequestHandler\n} from 'ask-sdk'\nimport {\n    SkillConstants\n} from '@ask-utils/handlers'\n\ntype PersistanceType = 'DynamoDB' | 'S3'\ninterface BaseSkillConfig {\n    persistanceType: PersistanceType;\n    isISP?: boolean;\n    constants?: T;\n}\nexport interface S3SkillConfig extends BaseSkillConfig {\n    persistanceType: 'S3';\n    bucketName: string;\n    bucketPathPrefix: string;\n}\nexport interface DynamoDBSkillConfig extends BaseSkillConfig {\n    persistanceType: 'DynamoDB';\n    tableName: string;\n}\nexport type SkillConfig = S3SkillConfig | DynamoDBSkillConfig\nexport interface SkillHandlers {\n    requestHandlers: RequestHandler[];\n    requestInterceptors?: RequestInterceptor[];\n    responseInterceptors?: ResponseInterceptor[];\n    errorHandlers?: ErrorHandler[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SkillHandlersBuilder.html":{"url":"interfaces/SkillHandlersBuilder.html","title":"interface - SkillHandlersBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SkillHandlersBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ask-utils/libs/handlerBuilders.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    addErrorHandlers\n                                \n                                \n                                    addRequestHandlers\n                                \n                                \n                                    addRequestInterceptors\n                                \n                                \n                                    addResponseInterceptors\n                                \n                                \n                                    getHandlers\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addErrorHandlers\n                        \n                        \n                    \n                \n            \n            \n                \naddErrorHandlers(...errorHandlers: ErrorHandler[])\n                \n            \n\n\n            \n                \n                    Defined in packages/ask-utils/libs/handlerBuilders.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    errorHandlers\n                                    \n                                            ErrorHandler[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SkillHandlersBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addRequestHandlers\n                        \n                        \n                    \n                \n            \n            \n                \naddRequestHandlers(...requestHandlers: RequestHandler[])\n                \n            \n\n\n            \n                \n                    Defined in packages/ask-utils/libs/handlerBuilders.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    requestHandlers\n                                    \n                                            RequestHandler[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SkillHandlersBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addRequestInterceptors\n                        \n                        \n                    \n                \n            \n            \n                \naddRequestInterceptors(...requestInterceptors: RequestInterceptor[])\n                \n            \n\n\n            \n                \n                    Defined in packages/ask-utils/libs/handlerBuilders.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    requestInterceptors\n                                    \n                                            RequestInterceptor[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SkillHandlersBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addResponseInterceptors\n                        \n                        \n                    \n                \n            \n            \n                \naddResponseInterceptors(responseInterceptors: ResponseInterceptor[])\n                \n            \n\n\n            \n                \n                    Defined in packages/ask-utils/libs/handlerBuilders.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    responseInterceptors\n                                    \n                                                ResponseInterceptor[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SkillHandlersBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHandlers\n                        \n                        \n                    \n                \n            \n            \n                \ngetHandlers()\n                \n            \n\n\n            \n                \n                    Defined in packages/ask-utils/libs/handlerBuilders.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         SkillHandlers\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n    RequestInterceptor,\n    ResponseInterceptor,\n    ErrorHandler,\n    RequestHandler\n} from 'ask-sdk'\nimport {\n    SkillHandlers\n} from './models'\n\nexport interface SkillHandlersBuilder {\n    addRequestHandlers(...requestHandlers: RequestHandler[]): SkillHandlersBuilder;\n    addRequestInterceptors(...requestInterceptors: RequestInterceptor[]): SkillHandlersBuilder;\n    addResponseInterceptors(...responseInterceptors: ResponseInterceptor[]): SkillHandlersBuilder;\n    addErrorHandlers(...errorHandlers: ErrorHandler[]): SkillHandlersBuilder;\n    getHandlers(): SkillHandlers;\n}\nexport class SkillHandlersFactory {\n    public static create (): SkillHandlersBuilder {\n        const handlers: Required = {\n            requestHandlers: [],\n            requestInterceptors: [],\n            responseInterceptors: [],\n            errorHandlers: []\n        }\n        return {\n            addRequestHandlers (...requestHandlers: RequestHandler[]): SkillHandlersBuilder {\n                requestHandlers.forEach(handler => handlers.requestHandlers.push(handler))\n                return this\n            },\n            addRequestInterceptors (...requestInterceptors: RequestInterceptor[]): SkillHandlersBuilder {\n                if (!handlers.requestInterceptors) handlers.requestInterceptors = []\n                requestInterceptors.forEach(interceptor => handlers.requestInterceptors.push(interceptor))\n                return this\n            },\n            addResponseInterceptors (...responseInterceptors: ResponseInterceptor[]): SkillHandlersBuilder {\n                if (!handlers.responseInterceptors) handlers.responseInterceptors = []\n                responseInterceptors.forEach(interceptor => handlers.responseInterceptors.push(interceptor))\n                return this\n            },\n            addErrorHandlers (...errorHandlers: ErrorHandler[]): SkillHandlersBuilder {\n                if (!handlers.errorHandlers) handlers.errorHandlers = []\n                handlers.errorHandlers.concat(errorHandlers)\n                return this\n            },\n            getHandlers (): SkillHandlers {\n                return handlers\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SkillHandlersFactory.html":{"url":"classes/SkillHandlersFactory.html","title":"class - SkillHandlersFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SkillHandlersFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ask-utils/libs/handlerBuilders.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create()\n                \n            \n\n\n            \n                \n                    Defined in packages/ask-utils/libs/handlerBuilders.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         SkillHandlersBuilder\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n    RequestInterceptor,\n    ResponseInterceptor,\n    ErrorHandler,\n    RequestHandler\n} from 'ask-sdk'\nimport {\n    SkillHandlers\n} from './models'\n\nexport interface SkillHandlersBuilder {\n    addRequestHandlers(...requestHandlers: RequestHandler[]): SkillHandlersBuilder;\n    addRequestInterceptors(...requestInterceptors: RequestInterceptor[]): SkillHandlersBuilder;\n    addResponseInterceptors(...responseInterceptors: ResponseInterceptor[]): SkillHandlersBuilder;\n    addErrorHandlers(...errorHandlers: ErrorHandler[]): SkillHandlersBuilder;\n    getHandlers(): SkillHandlers;\n}\nexport class SkillHandlersFactory {\n    public static create (): SkillHandlersBuilder {\n        const handlers: Required = {\n            requestHandlers: [],\n            requestInterceptors: [],\n            responseInterceptors: [],\n            errorHandlers: []\n        }\n        return {\n            addRequestHandlers (...requestHandlers: RequestHandler[]): SkillHandlersBuilder {\n                requestHandlers.forEach(handler => handlers.requestHandlers.push(handler))\n                return this\n            },\n            addRequestInterceptors (...requestInterceptors: RequestInterceptor[]): SkillHandlersBuilder {\n                if (!handlers.requestInterceptors) handlers.requestInterceptors = []\n                requestInterceptors.forEach(interceptor => handlers.requestInterceptors.push(interceptor))\n                return this\n            },\n            addResponseInterceptors (...responseInterceptors: ResponseInterceptor[]): SkillHandlersBuilder {\n                if (!handlers.responseInterceptors) handlers.responseInterceptors = []\n                responseInterceptors.forEach(interceptor => handlers.responseInterceptors.push(interceptor))\n                return this\n            },\n            addErrorHandlers (...errorHandlers: ErrorHandler[]): SkillHandlersBuilder {\n                if (!handlers.errorHandlers) handlers.errorHandlers = []\n                handlers.errorHandlers.concat(errorHandlers)\n                return this\n            },\n            getHandlers (): SkillHandlers {\n                return handlers\n            }\n        }\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Soccer.html":{"url":"interfaces/Soccer.html","title":"interface - Soccer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Soccer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SportsEvent.html":{"url":"interfaces/SportsEvent.html","title":"interface - SportsEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SportsEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        awayTeamStatistic\n                                \n                                \n                                        eventLeague\n                                \n                                \n                                        homeTeamStatistic\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        awayTeamStatistic\n                                    \n                                \n                                \n                                    \n                                        awayTeamStatistic:         GameStatistic\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GameStatistic\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        eventLeague\n                                    \n                                \n                                \n                                    \n                                        eventLeague:         Soccer\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Soccer\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        homeTeamStatistic\n                                    \n                                \n                                \n                                    \n                                        homeTeamStatistic:         GameStatistic\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GameStatistic\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SportsTeam.html":{"url":"interfaces/SportsTeam.html","title":"interface - SportsTeam","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SportsTeam\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StateManager.html":{"url":"classes/StateManager.html","title":"class - StateManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StateManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/libs/stateManager.ts\n        \n\n            \n                Description\n            \n            \n                State manager class\n\n            \n\n\n\n            \n                Example\n            \n            \n                        \n                            ```\n * type NEWSTATE = 'BYE' | 'HELLO'\n * export const updateState = (attributeManager: AttributesManager): void => StateManager.updateState(attributeManager, 'HELLO')\n * export const getState = (attributeManager: AttributesManager): NEWSTATE => StateManager.getCurrentState(attributeManager)\n * export const isHelloState = (attributeManager: AttributesManager): boolean => {\n *   const state = getState(attributeManager)\n *   return state === 'HELLO'\n * }\n * const TestHandler: RequestHandler = {\n *   canHandle(handlerInput) {\n *     if (handlerInput.requestEnvelope.request.type !== 'LaunchRequest') return false\n *     return isHelloState(handlerInput.attributesManager)\n *   },\n *   handle(handlerInput) {\n *     ...\n *   }\n * }\n * ```\n                        \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getCurrentState\n                            \n                            \n                                    Static\n                                isMatchedState\n                            \n                            \n                                    Static\n                                resetState\n                            \n                            \n                                    Static\n                                updateState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getCurrentState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCurrentState(attributeManager: AttributesManager)\n                \n            \n\n\n            \n                \n                    Defined in packages/core/libs/stateManager.ts:35\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    attributeManager\n                                    \n                                            AttributesManager\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            isMatchedState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isMatchedState(attributeManager: AttributesManager, state: T)\n                \n            \n\n\n            \n                \n                    Defined in packages/core/libs/stateManager.ts:42\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    attributeManager\n                                    \n                                            AttributesManager\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            resetState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetState(attributeManager: AttributesManager)\n                \n            \n\n\n            \n                \n                    Defined in packages/core/libs/stateManager.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    attributeManager\n                                    \n                                            AttributesManager\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            updateState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateState(attributeManager: AttributesManager, state: T)\n                \n            \n\n\n            \n                \n                    Defined in packages/core/libs/stateManager.ts:29\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    attributeManager\n                                    \n                                            AttributesManager\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n    AttributesManager\n} from 'ask-sdk-core'\nexport type DefaultState = string\n\n/**\n * State manager class\n * @example\n * ```\n * type NEWSTATE = 'BYE' | 'HELLO'\n * export const updateState = (attributeManager: AttributesManager): void => StateManager.updateState(attributeManager, 'HELLO')\n * export const getState = (attributeManager: AttributesManager): NEWSTATE => StateManager.getCurrentState(attributeManager)\n * export const isHelloState = (attributeManager: AttributesManager): boolean => {\n *   const state = getState(attributeManager)\n *   return state === 'HELLO'\n * }\n * const TestHandler: RequestHandler = {\n *   canHandle(handlerInput) {\n *     if (handlerInput.requestEnvelope.request.type !== 'LaunchRequest') return false\n *     return isHelloState(handlerInput.attributesManager)\n *   },\n *   handle(handlerInput) {\n *     ...\n *   }\n * }\n * ```\n */\nexport class StateManager {\n    public static updateState (attributeManager: AttributesManager, state: T): void {\n        attributeManager.setSessionAttributes({\n            ...attributeManager.getSessionAttributes(),\n            state\n        })\n    }\n    public static getCurrentState (attributeManager: AttributesManager): T {\n        const att = attributeManager.getSessionAttributes()\n        return att.state || ''\n    }\n    public static resetState (attributeManager: AttributesManager): void {\n        this.updateState(attributeManager, '')\n    }\n    public static isMatchedState (attributeManager: AttributesManager, state: T): boolean {\n        return state === this.getCurrentState(attributeManager)\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TMergeTargetHandler.html":{"url":"interfaces/TMergeTargetHandler.html","title":"interface - TMergeTargetHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TMergeTargetHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/handlers/libs/requestHandlers/HandlerFactory.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        canHandle\n                                \n                                \n                                            Optional\n                                        handle\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        canHandle\n                                    \n                                \n                                \n                                    \n                                        canHandle:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        handle\n                                    \n                                \n                                \n                                    \n                                        handle:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { RequestHandler, HandlerInput } from 'ask-sdk-core'\nimport { Response, Request, RequestEnvelope } from 'ask-sdk-model'\nimport Resolver, { interfaces } from 'class-resolver'\nimport { isLaunchRequest } from 'ask-utils'\n\nexport interface TMergeTargetHandler {\n    canHandle?: (input: Input) => Promise | boolean;\n    handle?: (input: Input) => Promise | Output;\n}\nexport interface TRequestHandler {\n    canHandle: (input: Input) => Promise | boolean;\n    handle: (input: Input) => Promise | Output;\n}\nexport interface CustomeRequestEnvelope extends RequestEnvelope {\n    request: CustomRequest;\n}\nexport interface CustomHandlerInput extends HandlerInput {\n    requestEnvelope: CustomeRequestEnvelope;\n}\nexport interface RequestHandlerBuilder extends interfaces.ResolveTarget {\n    handle(handler: TMergeTargetHandler): TRequestHandler;\n}\n\nconst merge = (handler: TMergeTargetHandler, target?: TMergeTargetHandler): TRequestHandler => {\n    const fallBackHandler: RequestHandler = {\n        canHandle () {\n            return true\n        },\n        handle (handlerInput) {\n            return handlerInput.responseBuilder.getResponse()\n        }\n    }\n    return Object.assign({}, fallBackHandler, target, handler)\n}\n\nexport type SupportedHandlerType = 'LaunchRequest'\nexport class RequestHandlerFactory {\n    public static create (type: SupportedHandlerType, handler: TMergeTargetHandler): TRequestHandler {\n        return new Resolver(\n            new LaunchRequestHandlerFactory(),\n            new FallbackIntentFactory()\n        ).resolve(type).handle(handler)\n    }\n}\nexport default RequestHandlerFactory\n\nexport class LaunchRequestHandlerFactory implements RequestHandlerBuilder {\n    supports (type: string) {\n        return type === 'LaunchRequest'\n    }\n    handle (handler: TMergeTargetHandler) {\n        return merge(handler, {\n            canHandle (handlerInput) {\n                return isLaunchRequest(handlerInput)\n            }\n        })\n    }\n}\n\nexport class FallbackIntentFactory implements RequestHandlerBuilder {\n    supports () {\n        return true\n    }\n    handle (handler: TMergeTargetHandler) {\n        return merge(handler)\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TRequestHandler.html":{"url":"interfaces/TRequestHandler.html","title":"interface - TRequestHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TRequestHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/handlers/libs/requestHandlers/HandlerFactory.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        canHandle\n                                \n                                \n                                        handle\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        canHandle\n                                    \n                                \n                                \n                                    \n                                        canHandle:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        handle\n                                    \n                                \n                                \n                                    \n                                        handle:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { RequestHandler, HandlerInput } from 'ask-sdk-core'\nimport { Response, Request, RequestEnvelope } from 'ask-sdk-model'\nimport Resolver, { interfaces } from 'class-resolver'\nimport { isLaunchRequest } from 'ask-utils'\n\nexport interface TMergeTargetHandler {\n    canHandle?: (input: Input) => Promise | boolean;\n    handle?: (input: Input) => Promise | Output;\n}\nexport interface TRequestHandler {\n    canHandle: (input: Input) => Promise | boolean;\n    handle: (input: Input) => Promise | Output;\n}\nexport interface CustomeRequestEnvelope extends RequestEnvelope {\n    request: CustomRequest;\n}\nexport interface CustomHandlerInput extends HandlerInput {\n    requestEnvelope: CustomeRequestEnvelope;\n}\nexport interface RequestHandlerBuilder extends interfaces.ResolveTarget {\n    handle(handler: TMergeTargetHandler): TRequestHandler;\n}\n\nconst merge = (handler: TMergeTargetHandler, target?: TMergeTargetHandler): TRequestHandler => {\n    const fallBackHandler: RequestHandler = {\n        canHandle () {\n            return true\n        },\n        handle (handlerInput) {\n            return handlerInput.responseBuilder.getResponse()\n        }\n    }\n    return Object.assign({}, fallBackHandler, target, handler)\n}\n\nexport type SupportedHandlerType = 'LaunchRequest'\nexport class RequestHandlerFactory {\n    public static create (type: SupportedHandlerType, handler: TMergeTargetHandler): TRequestHandler {\n        return new Resolver(\n            new LaunchRequestHandlerFactory(),\n            new FallbackIntentFactory()\n        ).resolve(type).handle(handler)\n    }\n}\nexport default RequestHandlerFactory\n\nexport class LaunchRequestHandlerFactory implements RequestHandlerBuilder {\n    supports (type: string) {\n        return type === 'LaunchRequest'\n    }\n    handle (handler: TMergeTargetHandler) {\n        return merge(handler, {\n            canHandle (handlerInput) {\n                return isLaunchRequest(handlerInput)\n            }\n        })\n    }\n}\n\nexport class FallbackIntentFactory implements RequestHandlerBuilder {\n    supports () {\n        return true\n    }\n    handle (handler: TMergeTargetHandler) {\n        return merge(handler)\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Thing.html":{"url":"interfaces/Thing.html","title":"interface - Thing","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Thing\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TranslationBuilder.html":{"url":"interfaces/TranslationBuilder.html","title":"interface - TranslationBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TranslationBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/libs/translator.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    addLocale\n                                \n                                \n                                    addLocaleStrings\n                                \n                                \n                                    getLanguageStrings\n                                \n                                \n                                    putLocaleStrings\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addLocale\n                        \n                        \n                    \n                \n            \n            \n                \naddLocale(locale: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/core/libs/translator.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    locale\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TranslationBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addLocaleStrings\n                        \n                        \n                    \n                \n            \n            \n                \naddLocaleStrings(locale: string, key: string, message: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/core/libs/translator.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    locale\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TranslationBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLanguageStrings\n                        \n                        \n                    \n                \n            \n            \n                \ngetLanguageStrings()\n                \n            \n\n\n            \n                \n                    Defined in packages/core/libs/translator.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         TranslationObject | literal type\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            putLocaleStrings\n                        \n                        \n                    \n                \n            \n            \n                \nputLocaleStrings(locale: string, messages: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/core/libs/translator.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    locale\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    messages\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TranslationBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface TranslationObject {\n    translation: {\n        [key: string]: string;\n    };\n}\nexport interface TranslationBuilder {\n    addLocale(locale: string): TranslationBuilder;\n    putLocaleStrings(locale: string, messages: string): TranslationBuilder;\n    addLocaleStrings(locale: string, key: string, message: string): TranslationBuilder;\n    getLanguageStrings(): TranslationObject | {};\n}\n\n// beta\nexport class TranslationFactory {\n    public static init (): TranslationBuilder {\n        const translationObject: TranslationObject | null = null\n        const languageStrings: {\n            [lang: string]: TranslationObject;\n        } = {}\n        return {\n            addLocale (locale: string): TranslationBuilder {\n                if (languageStrings[locale] || !translationObject) return this\n                languageStrings[locale] = translationObject\n                return this\n            },\n            putLocaleStrings (locale: string, messages: string): TranslationBuilder {\n                if (!locale) throw new Error('locale is required')\n                if (!messages || Object.keys(messages).length \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TranslationFactory.html":{"url":"classes/TranslationFactory.html","title":"class - TranslationFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TranslationFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/libs/translator.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in packages/core/libs/translator.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         TranslationBuilder\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export interface TranslationObject {\n    translation: {\n        [key: string]: string;\n    };\n}\nexport interface TranslationBuilder {\n    addLocale(locale: string): TranslationBuilder;\n    putLocaleStrings(locale: string, messages: string): TranslationBuilder;\n    addLocaleStrings(locale: string, key: string, message: string): TranslationBuilder;\n    getLanguageStrings(): TranslationObject | {};\n}\n\n// beta\nexport class TranslationFactory {\n    public static init (): TranslationBuilder {\n        const translationObject: TranslationObject | null = null\n        const languageStrings: {\n            [lang: string]: TranslationObject;\n        } = {}\n        return {\n            addLocale (locale: string): TranslationBuilder {\n                if (languageStrings[locale] || !translationObject) return this\n                languageStrings[locale] = translationObject\n                return this\n            },\n            putLocaleStrings (locale: string, messages: string): TranslationBuilder {\n                if (!locale) throw new Error('locale is required')\n                if (!messages || Object.keys(messages).length \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TranslationObject.html":{"url":"interfaces/TranslationObject.html","title":"interface - TranslationObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TranslationObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/libs/translator.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        translation\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        translation\n                                    \n                                \n                                \n                                    \n                                        translation:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TranslationObject {\n    translation: {\n        [key: string]: string;\n    };\n}\nexport interface TranslationBuilder {\n    addLocale(locale: string): TranslationBuilder;\n    putLocaleStrings(locale: string, messages: string): TranslationBuilder;\n    addLocaleStrings(locale: string, key: string, message: string): TranslationBuilder;\n    getLanguageStrings(): TranslationObject | {};\n}\n\n// beta\nexport class TranslationFactory {\n    public static init (): TranslationBuilder {\n        const translationObject: TranslationObject | null = null\n        const languageStrings: {\n            [lang: string]: TranslationObject;\n        } = {}\n        return {\n            addLocale (locale: string): TranslationBuilder {\n                if (languageStrings[locale] || !translationObject) return this\n                languageStrings[locale] = translationObject\n                return this\n            },\n            putLocaleStrings (locale: string, messages: string): TranslationBuilder {\n                if (!locale) throw new Error('locale is required')\n                if (!messages || Object.keys(messages).length \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TrashCollectionAlert.html":{"url":"interfaces/TrashCollectionAlert.html","title":"interface - TrashCollectionAlert","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TrashCollectionAlert\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        collectionDayOfWeek\n                                \n                                \n                                        garbageTypes\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        collectionDayOfWeek\n                                    \n                                \n                                \n                                    \n                                        collectionDayOfWeek:         DayOfWeek\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DayOfWeek\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        garbageTypes\n                                    \n                                \n                                \n                                    \n                                        garbageTypes:         GarbageType[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GarbageType[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserProfileAPIClient.html":{"url":"classes/UserProfileAPIClient.html","title":"class - UserProfileAPIClient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserProfileAPIClient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/serviceClients/libs/UserProfiles.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Client\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                path\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                getEmail\n                            \n                            \n                                    Public\n                                    Async\n                                getGivenName\n                            \n                            \n                                    Public\n                                    Async\n                                getMobileNumber\n                            \n                            \n                                    Public\n                                    Async\n                                getProfileName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '/v2/accounts/~current/settings'\n                        \n                    \n                        \n                            \n                                    Defined in packages/serviceClients/libs/UserProfiles.ts:5\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getEmail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getEmail()\n                \n            \n\n\n            \n                \n                    Defined in packages/serviceClients/libs/UserProfiles.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getGivenName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGivenName()\n                \n            \n\n\n            \n                \n                    Defined in packages/serviceClients/libs/UserProfiles.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getMobileNumber\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMobileNumber()\n                \n            \n\n\n            \n                \n                    Defined in packages/serviceClients/libs/UserProfiles.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getProfileName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getProfileName()\n                \n            \n\n\n            \n                \n                    Defined in packages/serviceClients/libs/UserProfiles.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { services } from 'ask-sdk-model'\nimport Client from './client'\n\nexport class UserProfileAPIClient extends Client {\n    protected path = '/v2/accounts/~current/settings'\n    public async getProfileName (): Promise {\n        return this.get('Profile.name')\n    }\n    public async getGivenName (): Promise {\n        return this.get('Profile.givenName')\n    }\n    public async getEmail (): Promise {\n        return this.get('Profile.email')\n    }\n    public async getMobileNumber (): Promise {\n        return this.get('Profile.mobileNumber')\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WeatherAlert.html":{"url":"interfaces/WeatherAlert.html","title":"interface - WeatherAlert","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WeatherAlert\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        alertType\n                                \n                                \n                                            Optional\n                                        source\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alertType\n                                    \n                                \n                                \n                                    \n                                        alertType:         WeatherAlertType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         WeatherAlertType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source\n                                    \n                                \n                                \n                                    \n                                        source:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nASK-Utils - Utility functions for ask-sdk\n\n\n\n\n\n\nhttps://ask-utils.dev\nGetting started\n$ npm i -S ask-utilsPackages\n\n\n\nname\nnpm url\nRepository\nSummary\n\n\n\n\n@ask-utils/core\nhttps://www.npmjs.com/package/@ask-utils/core\nhttps://github.com/ask-utils/ask-utils/tree/master/packages/core\nCore utilities\n\n\n@ask-utils/proactive-event\nhttps://www.npmjs.com/package/@ask-utils/proactive-event\nhttps://github.com/ask-utils/ask-utils/tree/master/packages/proactive-event\nProactive Event parameter builder and request client\n\n\n@ask-utils/isp\nhttps://www.npmjs.com/package/@ask-utils/isp\nhttps://github.com/ask-utils/ask-utils/tree/master/packages/isp\nISP helpers\n\n\n@ask-utils/handlers\nhttps://www.npmjs.com/package/@ask-utils/handlers\nhttps://github.com/ask-utils/ask-utils/tree/master/packages/handlers\nUtility handler and interceptors\n\n\n@ask-utils/error-handlers\nhttps://www.npmjs.com/package/@ask-utils/error-handlers\nhttps://github.com/ask-utils/ask-utils/tree/master/packages/error-handlers\nError handler helpers\n\n\n@ask-utils/service-client\nhttps://www.npmjs.com/package/@ask-utils/service-client\nhttps://github.com/ask-utils/ask-utils/tree/master/packages/serviceClient s\nServiceClient alternative\n\n\n\ndevelopment\n$ git clone git@github.com:hideokamoto/ask-utils.git\n$ cd ask-utils\n$ yarn\n$ yarn bootstraptest\n$ npm testLint\n$ npm run lint\n\nor\n\n$ npm run lint -- --fixHistory\n-> Release Note\nContributors\n\n\n\nName\nVersion\n\n\n\n\n@ArtskydJ\nv0.13.0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    46 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    71 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            APIEndpoint   (packages/.../model.ts)\n                        \n                        \n                            ApiRegion   (packages/.../model.ts)\n                        \n                        \n                            APIURL   (packages/.../model.ts)\n                        \n                        \n                            AudienceType   (packages/.../model.ts)\n                        \n                        \n                            CanHandle   (packages/.../fixtures.ts)\n                        \n                        \n                            CanHandle   (packages/.../model.ts)\n                        \n                        \n                            CanHandleResponse   (packages/.../model.ts)\n                        \n                        \n                            ClientId   (packages/.../model.ts)\n                        \n                        \n                            ClientSecret   (packages/.../model.ts)\n                        \n                        \n                            ConfirmationStatus   (packages/.../model.ts)\n                        \n                        \n                            dateTime   (packages/.../model.ts)\n                        \n                        \n                            DayOfWeek   (packages/.../model.ts)\n                        \n                        \n                            DefaultState   (packages/.../stateManager.ts)\n                        \n                        \n                            DevAPIURL   (packages/.../model.ts)\n                        \n                        \n                            DistributionMethod   (packages/.../model.ts)\n                        \n                        \n                            ErrorHandle   (packages/.../index.ts)\n                        \n                        \n                            EventName   (packages/.../model.ts)\n                        \n                        \n                            EventName   (packages/.../model.ts)\n                        \n                        \n                            EventName   (packages/.../model.ts)\n                        \n                        \n                            EventName   (packages/.../model.ts)\n                        \n                        \n                            EventName   (packages/.../model.ts)\n                        \n                        \n                            EventName   (packages/.../model.ts)\n                        \n                        \n                            EventName   (packages/.../model.ts)\n                        \n                        \n                            EventName   (packages/.../model.ts)\n                        \n                        \n                            EventName   (packages/.../model.ts)\n                        \n                        \n                            EventName   (packages/.../model.ts)\n                        \n                        \n                            EventName   (packages/.../model.ts)\n                        \n                        \n                            EventName   (packages/.../model.ts)\n                        \n                        \n                            EventName   (packages/.../model.ts)\n                        \n                        \n                            EventName   (packages/.../model.ts)\n                        \n                        \n                            EventName   (packages/.../model.ts)\n                        \n                        \n                            EventName   (packages/.../model.ts)\n                        \n                        \n                            EventName   (packages/.../model.ts)\n                        \n                        \n                            FlashBriefings   (packages/.../flashbriefing.ts)\n                        \n                        \n                            GarbageType   (packages/.../model.ts)\n                        \n                        \n                            Handle   (packages/.../fixtures.ts)\n                        \n                        \n                            Handle   (packages/.../model.ts)\n                        \n                        \n                            HandleResponse   (packages/.../model.ts)\n                        \n                        \n                            InskillProducts   (packages/.../client.ts)\n                        \n                        \n                            InskillProducts   (packages/.../productFinders.ts)\n                        \n                        \n                            InskillProducts   (packages/.../productFinders.test.ts)\n                        \n                        \n                            InskillProducts   (packages/.../generalResponse.ts)\n                        \n                        \n                            InviteType   (packages/.../model.ts)\n                        \n                        \n                            ISPState   (packages/.../helpers.ts)\n                        \n                        \n                            ListStatus   (packages/.../Lists.ts)\n                        \n                        \n                            Locale   (packages/.../model.ts)\n                        \n                        \n                            LocalizedAttributes   (packages/.../model.ts)\n                        \n                        \n                            MediaType   (packages/.../model.ts)\n                        \n                        \n                            MessageFreshness   (packages/.../model.ts)\n                        \n                        \n                            MessageStatus   (packages/.../model.ts)\n                        \n                        \n                            MessageUrgent   (packages/.../model.ts)\n                        \n                        \n                            Method   (packages/.../client.ts)\n                        \n                        \n                            OccasionType   (packages/.../model.ts)\n                        \n                        \n                            OfferType   (packages/.../model.ts)\n                        \n                        \n                            OrderStatus   (packages/.../model.ts)\n                        \n                        \n                            Payload   (packages/.../model.ts)\n                        \n                        \n                            Payload   (packages/.../model.ts)\n                        \n                        \n                            Payload   (packages/.../model.ts)\n                        \n                        \n                            Payload   (packages/.../model.ts)\n                        \n                        \n                            Payload   (packages/.../model.ts)\n                        \n                        \n                            Payload   (packages/.../model.ts)\n                        \n                        \n                            Payload   (packages/.../model.ts)\n                        \n                        \n                            Payload   (packages/.../model.ts)\n                        \n                        \n                            Payload   (packages/.../model.ts)\n                        \n                        \n                            PayloadBuilder   (packages/.../model.ts)\n                        \n                        \n                            PayloadBuilder   (packages/.../model.ts)\n                        \n                        \n                            PayloadBuilder   (packages/.../model.ts)\n                        \n                        \n                            PayloadBuilder   (packages/.../model.ts)\n                        \n                        \n                            PayloadBuilder   (packages/.../model.ts)\n                        \n                        \n                            PayloadBuilder   (packages/.../model.ts)\n                        \n                        \n                            PersistanceType   (packages/.../models.ts)\n                        \n                        \n                            PollyLanguage   (packages/.../amznPolly.ts)\n                        \n                        \n                            ProgressiveResponseErrorHandler   (packages/.../responseHelpers.ts)\n                        \n                        \n                            RelationshipToInvitee   (packages/.../model.ts)\n                        \n                        \n                            resolutionSlot   (packages/.../slot.ts)\n                        \n                        \n                            SkillConfig   (packages/.../models.ts)\n                        \n                        \n                            SupportedHandlerType   (packages/.../HandlerFactory.ts)\n                        \n                        \n                            WeatherAlertType   (packages/.../model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    packages/proactive-event/libs/model.ts\n    \n    \n        \n            \n                \n                    \n                    APIEndpoint\n                \n            \n            \n                \n                        APIURL | DevAPIURL\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ApiRegion\n                \n            \n            \n                \n                        \"FE\" | \"US\" | \"EU\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    APIURL\n                \n            \n            \n                \n                        \"https://api.amazonalexa.com/v1/proactiveEvents/\" | \"https://api.eu.amazonalexa.com/v1/proactiveEvents/\" | \"https://api.fe.amazonalexa.com/v1/proactiveEvents/\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AudienceType\n                \n            \n            \n                \n                        \"Unicast\" | \"Multicast\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ClientId\n                \n            \n            \n                \n                            string\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ClientSecret\n                \n            \n            \n                \n                            string\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ConfirmationStatus\n                \n            \n            \n                \n                        \"CONFIRMED\" | \"CANCELED\" | \"RESCHEDULED\" | \"REQUESTED\" | \"CREATED\" | \"UPDATED\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    dateTime\n                \n            \n            \n                \n                            string\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DayOfWeek\n                \n            \n            \n                \n                        \"MONDAY\" | \"TUESDAY\" | \"WEDNESDAY\" | \"THURSDAY\" | \"FRIDAY\" | \"SATURDAY\" | \"SUNDAY\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DevAPIURL\n                \n            \n            \n                \n                        \"https://api.amazonalexa.com/v1/proactiveEvents/stages/development\" | \"https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development\" | \"https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DistributionMethod\n                \n            \n            \n                \n                        \"STREAM\" | \"AIR\" | \"RELEASE\" | \"PREMIERE\" | \"DROP\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EventName\n                \n            \n            \n                \n                        WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EventName\n                \n            \n            \n                \n                        Activated.EventName\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EventName\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EventName\n                \n            \n            \n                \n                        Activated.EventName\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EventName\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EventName\n                \n            \n            \n                \n                        Updated.EventName\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EventName\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EventName\n                \n            \n            \n                \n                        Activated.EventName\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EventName\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EventName\n                \n            \n            \n                \n                        Updated.EventName\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EventName\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EventName\n                \n            \n            \n                \n                        Updated.EventName\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EventName\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EventName\n                \n            \n            \n                \n                        Available.EventName\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EventName\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EventName\n                \n            \n            \n                \n                        Available.EventName\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EventName\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GarbageType\n                \n            \n            \n                \n                        \"BOTTLES\" | \"BULKY\" | \"BURNABLE\" | \"CANS\" | \"CLOTHING\" | \"COMPOSTABLE\" | \"CRUSHABLE\" | \"GARDEN_WASTE\" | \"GLASS\" | \"HAZARDOUS\" | \"HOME_APPLIANCES\" | \"KITCHEN_WASTE\" | \"LANDFILL\" | \"PET_BOTTLES\" | \"RECYCLABLE_PLASTICS\" | \"WASTE_PAPER\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    InviteType\n                \n            \n            \n                \n                        \"CHALLENGE\" | \"INVITE\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Locale\n                \n            \n            \n                \n                        \"de-DE\" | \"en-AU\" | \"en-CA\" | \"en-GB\" | \"en-IN\" | \"en-US\" | \"es-ES\" | \"es-MX\" | \"fr-CA\" | \"fr-FR\" | \"it-IT\" | \"ja-JP\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    LocalizedAttributes\n                \n            \n            \n                \n                            LocalizedAttribute[]\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MediaType\n                \n            \n            \n                \n                        \"BOOK\" | \"EPISODE\" | \"ALBUM\" | \"SINGLE\" | \"MOVIE\" | \"GAME\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MessageFreshness\n                \n            \n            \n                \n                        \"NEW\" | \"OVERDUE\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MessageStatus\n                \n            \n            \n                \n                        \"UNREAD\" | \"FLAGGED\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MessageUrgent\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    OccasionType\n                \n            \n            \n                \n                        \"RESERVATION_REQUEST\" | \"RESERVATION\" | \"APPOINTMENT_REQUEST\" | \"APPOINTMENT\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    OfferType\n                \n            \n            \n                \n                        \"MATCH\" | \"REMATCH\" | \"GAME\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    OrderStatus\n                \n            \n            \n                \n                        \"PREORDER_RECEIVED\" | \"ORDER_RECEIVED\" | \"ORDER_PREPARING\" | \"ORDER_SHIPPED\" | \"ORDER_OUT_FOR_DELIVERY\" | \"ORDER_OUT_FOR_DELIVERY\" | \"ORDER_DELIVERED\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Payload\n                \n            \n            \n                \n                        TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Payload\n                \n            \n            \n                \n                        Activated.Payload\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Payload\n                \n            \n            \n                \n                        Activated.Payload\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Payload\n                \n            \n            \n                \n                        Updated.Payload\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Payload\n                \n            \n            \n                \n                        Activated.Payload\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Payload\n                \n            \n            \n                \n                        Updated.Payload\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Payload\n                \n            \n            \n                \n                        Updated.Payload\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Payload\n                \n            \n            \n                \n                        Available.Payload\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Payload\n                \n            \n            \n                \n                        Available.Payload\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    PayloadBuilder\n                \n            \n            \n                \n                        Activated.PayloadBuilder\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    PayloadBuilder\n                \n            \n            \n                \n                        Activated.PayloadBuilder\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    PayloadBuilder\n                \n            \n            \n                \n                        Updated.PayloadBuilder\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    PayloadBuilder\n                \n            \n            \n                \n                        Activated.PayloadBuilder\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    PayloadBuilder\n                \n            \n            \n                \n                        Updated.PayloadBuilder\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    PayloadBuilder\n                \n            \n            \n                \n                        Updated.PayloadBuilder\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    RelationshipToInvitee\n                \n            \n            \n                \n                        \"FRIEND\" | \"CONTACT\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    WeatherAlertType\n                \n            \n            \n                \n                        \"TORNADO\" | \"HURRICANE\" | \"SNOW_STORM\" | \"THUNDER_STORM\"\n\n                \n            \n        \n    \n    packages/isp/libs/handlers/fixtures.ts\n    \n    \n        \n            \n                \n                    \n                    CanHandle\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Handle\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    packages/handlers/libs/requestHandlers/factories/model.ts\n    \n    \n        \n            \n                \n                    \n                    CanHandle\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    CanHandleResponse\n                \n            \n            \n                \n                        Promise | boolean\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Handle\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    HandleResponse\n                \n            \n            \n                \n                            Promise | Response\n\n                \n            \n        \n    \n    packages/core/libs/stateManager.ts\n    \n    \n        \n            \n                \n                    \n                    DefaultState\n                \n            \n            \n                \n                            string\n\n                \n            \n        \n    \n    packages/error-handlers/libs/index.ts\n    \n    \n        \n            \n                \n                    \n                    ErrorHandle\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    packages/handlers/libs/flashbriefing.ts\n    \n    \n        \n            \n                \n                    \n                    FlashBriefings\n                \n            \n            \n                \n                            FlashBriefingContent[]\n\n                \n            \n        \n    \n    packages/isp/libs/client.ts\n    \n    \n        \n            \n                \n                    \n                    InskillProducts\n                \n            \n            \n                \n                            InSkillProduct[]\n\n                \n            \n        \n    \n    packages/isp/libs/productFinders.ts\n    \n    \n        \n            \n                \n                    \n                    InskillProducts\n                \n            \n            \n                \n                            InSkillProduct[]\n\n                \n            \n        \n    \n    packages/isp/__tests__/libs/productFinders.test.ts\n    \n    \n        \n            \n                \n                    \n                    InskillProducts\n                \n            \n            \n                \n                            InSkillProduct[]\n\n                \n            \n        \n    \n    packages/isp/libs/contentBuilders/generalResponse.ts\n    \n    \n        \n            \n                \n                    \n                    InskillProducts\n                \n            \n            \n                \n                            InSkillProduct[]\n\n                \n            \n        \n    \n    packages/isp/libs/handlers/helpers.ts\n    \n    \n        \n            \n                \n                    \n                    ISPState\n                \n            \n            \n                \n                        \"BUY\" | \"CANCEL\" | \"PRODUCT_DETAIL\" | \"\"\n\n                \n            \n        \n    \n    packages/serviceClients/libs/Lists.ts\n    \n    \n        \n            \n                \n                    \n                    ListStatus\n                \n            \n            \n                \n                        \"active\" | \"completed\"\n\n                \n            \n        \n    \n    packages/serviceClients/libs/client.ts\n    \n    \n        \n            \n                \n                    \n                    Method\n                \n            \n            \n                \n                        \"GET\" | \"PUT\" | \"POST\" | \"DELETE\"\n\n                \n            \n        \n    \n    packages/ask-utils/libs/models.ts\n    \n    \n        \n            \n                \n                    \n                    PersistanceType\n                \n            \n            \n                \n                        \"DynamoDB\" | \"S3\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SkillConfig\n                \n            \n            \n                \n                            S3SkillConfig | DynamoDBSkillConfig\n\n                \n            \n        \n    \n    packages/core/libs/amznPolly.ts\n    \n    \n        \n            \n                \n                    \n                    PollyLanguage\n                \n            \n            \n                \n                        \"de-DE\" | \"en-AU\" | \"en-CA\" | \"en-GB\" | \"en-IN\" | \"en-US\" | \"es-ES\" | \"fr-FR\" | \"it-IT\" | \"ja-JP\"\n\n                \n            \n        \n    \n    packages/core/libs/responseHelpers.ts\n    \n    \n        \n            \n                \n                    \n                    ProgressiveResponseErrorHandler\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    packages/core/libs/slot.ts\n    \n    \n        \n            \n                \n                    \n                    resolutionSlot\n                \n            \n            \n                \n                        literal type | \"\"\n\n                \n            \n        \n    \n    packages/handlers/libs/requestHandlers/HandlerFactory.ts\n    \n    \n        \n            \n                \n                    \n                    SupportedHandlerType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
