var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/classes/APIClient.html",[0,0.208,1,3.254]],["body/classes/APIClient.html",[0,0.255,1,4.643,2,0.788,3,0.034,4,0.034,5,0.034,6,3.379,7,0.047,8,0.462,9,3.539,10,5.19,11,5.918,12,1.032,13,4.643,14,0.871,15,5.564,16,2.074,17,4.142,18,1.278,19,4.643,20,5.564,21,6.054,22,2.667,23,3.684,24,3.779,25,0.766,26,1.159,27,5.876,28,1.575,29,0.007,30,0.555,31,0.222,32,0.988,33,0.299,34,4.145,35,4.145,36,4.145,37,3.684,38,4.145,39,7.074,40,3.168,41,1.162,42,5.19,43,3.684,44,4.145,45,1.153,46,3.684,47,4.145,48,3.684,49,4.145,50,4.145,51,0.868,52,4.468,53,2.69,54,3.379,55,2.293,56,2.969,57,0.96,58,0.942,59,1.337,60,2.034,61,0.704,62,3.684,63,3.684,64,3.813,65,2.82,66,4.468,67,0.078,68,2.35,69,4.79,70,3.379,71,3.51,72,3.152,73,3.379,74,3.379,75,4.643,76,1.86,77,4.643,78,3.684,79,1.289,80,3.684,81,0.881,82,3.684,83,3.152,84,0.897,85,3.152,86,3.379,87,3.379,88,3.152,89,0.914,90,3.368,91,3.676,92,2.634,93,3.368,94,3.209,95,1.781,96,1.781,97,4.501,98,3.684,99,5.221,100,4.643,101,5.623,102,3.997,103,5.647,104,4.653,105,3.152,106,4.468,107,5.221,108,4.468,109,0.511,110,2.82,111,5.221,112,7.235,113,5.695,114,6.599,115,3.684,116,3.684,117,3.684,118,2.971,119,3.684,120,3.684,121,6.966,122,3.684,123,5.221,124,3.793,125,3.448,126,4.512,127,6.065,128,3.684,129,3.684,130,3.684,131,2.82,132,3.684,133,0.865,134,3.684,135,2.477,136,5.221,137,3.684,138,3.684,139,6.966,140,3.684,141,5.19,142,3.152,143,3.684,144,3.684,145,4.211,146,3.684,147,6.599,148,5.221,149,5.221,150,3.684,151,3.684,152,3.793,153,3.684,154,4.243,155,3.684,156,3.684,157,3.684,158,3.684,159,5.322,160,4.79,161,1.828,162,6.599,163,3.684,164,6.065,165,4.512,166,3.382,167,3.684,168,3.684,169,3.684,170,5.221,171,3.684,172,5.618,173,3.684,174,2.971,175,2.971,176,4.684,177,6.065,178,3.684,179,3.684,180,5.221,181,5.221,182,5.221,183,2.656,184,0.622,185,2.82,186,3.684,187,3.684,188,3.684,189,3.684,190,0.818,191,0.003,192,0.004,193,0.003]],["title/classes/APIClient-1.html",[0,0.174,1,2.73,194,2.158]],["body/classes/APIClient-1.html",[0,0.212,1,5.067,2,0.93,3,0.041,4,0.041,5,0.041,7,0.056,8,0.518,10,5.665,11,5.957,12,1.126,13,5.067,14,0.977,15,6.073,16,2.969,17,4.301,18,0.901,20,6.073,22,2.575,23,4.347,24,3.978,25,0.783,26,1.217,28,1.76,29,0.007,30,0.58,31,0.228,32,1.103,33,0.302,40,4.188,41,1.27,42,6.061,45,1.122,51,0.825,52,5.01,53,3.175,54,3.988,57,1.076,58,1.056,59,1.578,61,0.83,67,0.075,68,1.956,69,5.371,70,3.988,71,3.936,72,3.72,73,3.988,74,3.988,75,6.137,76,1.883,77,5.067,79,1.149,81,1.892,83,3.72,84,1.059,85,3.72,86,3.988,87,3.988,88,3.72,89,1.078,90,3.575,91,3.575,92,2.795,93,3.575,94,3.406,95,3.575,96,3.575,97,4.787,102,6.057,103,7.219,104,4.43,105,6.061,190,1.3,191,0.004,192,0.005,193,0.004,195,4.347,196,6.558,197,7.083,198,6.498,199,5.422,200,6.589,201,4.892,202,4.892,203,1.516,204,4.892,205,4.892,206,4.892,207,4.892,208,4.892,209,4.892,210,4.892,211,4.892,212,4.892,213,4.892,214,4.892,215,4.892,216,7.615,217,4.892,218,4.892,219,4.892,220,1.14,221,4.892,222,4.892,223,6.589,224,4.892,225,4.892,226,4.892,227,7.971,228,7.971,229,4.892,230,4.892,231,4.892]],["title/interfaces/AlexaSpeechComponentProps.html",[232,0.161,233,3.637]],["body/interfaces/AlexaSpeechComponentProps.html",[3,0.056,4,0.056,5,0.056,7,0.077,8,0.636,29,0.007,31,0.229,32,1.131,33,0.269,51,0.959,56,4.8,57,1.322,58,1.297,60,3.315,61,1.147,67,0.105,124,5.28,165,3.889,191,0.005,192,0.006,193,0.005,232,0.292,233,6.587,234,0.636,235,5.137,236,5.137,237,6.166,238,7.321,239,1.133,240,7.062,241,3.632,242,6.587,243,6.597,244,5.507,245,6.587,246,3.413,247,5.507,248,5.137,249,4.841,250,4.595,251,5.137,252,5.137,253,1.489,254,6.597]],["title/classes/ApplicationFactory.html",[0,0.208,255,3.9]],["body/classes/ApplicationFactory.html",[0,0.301,2,1.318,3,0.058,4,0.058,5,0.058,7,0.079,8,0.646,9,3.273,14,1.218,18,1.283,26,1.15,28,1.393,29,0.007,30,0.459,31,0.2,32,0.874,33,0.272,41,1.028,51,0.767,57,1.343,58,1.404,61,1.395,67,0.079,79,1.102,152,4.868,190,1.368,191,0.005,192,0.006,193,0.005,203,2.149,255,6.7,256,6.934,257,5.685,258,5.958,259,8.048,260,8.759,261,5.748,262,5.889,263,6.934,264,6.934,265,6.934,266,6.934,267,3.134,268,6.934,269,6.934]],["title/interfaces/AttributeType.html",[232,0.161,270,3.9]],["body/interfaces/AttributeType.html",[0,0.258,3,0.049,4,0.049,5,0.049,9,3.208,18,1.255,26,0.78,29,0.007,33,0.232,51,0.827,55,3.081,56,4.471,57,0.97,58,0.951,68,3.612,76,1.899,79,1.186,90,2.55,91,2.55,92,1.994,93,2.55,94,2.43,95,2.55,96,2.55,124,3.299,125,4.337,184,0.628,191,0.007,192,0.006,193,0.004,232,0.2,234,0.558,239,0.732,270,7.63,271,5.274,272,4.254,273,1.343,274,5.936,275,5.274,276,5.274,277,6.641,278,5.274,279,6.092,280,3.299,281,5.274,282,5.274,283,5.274,284,5.356,285,5.356,286,5.274,287,5.274,288,5.274,289,8.027,290,5.274,291,5.274,292,6.641,293,5.274,294,5.274,295,5.274,296,7.269,297,5.274,298,5.274,299,5.274,300,7.629,301,7.269,302,8.027,303,6.647,304,7.269,305,6.641,306,6.641,307,7.629,308,4.132,309,5.274,310,5.274,311,5.274,312,5.274,313,6.641,314,6.641]],["title/interfaces/AudiencePayload.html",[232,0.161,315,1.115]],["body/interfaces/AudiencePayload.html",[0,0.136,3,0.026,4,0.04,5,0.026,7,0.036,8,0.376,12,0.877,25,0.295,29,0.007,30,0.564,31,0.236,33,0.297,45,0.395,67,0.113,81,0.666,84,0.679,89,0.691,109,0.909,133,0.998,161,1.818,184,0.332,191,0.002,192,0.004,193,0.002,220,0.731,232,0.325,234,0.45,239,0.387,253,0.691,273,0.564,315,1.352,316,0.607,317,0.731,318,1.405,319,2.259,320,0.654,321,1.115,322,1.513,323,0.731,324,1.115,325,0.731,326,1.352,327,0.731,328,1.352,329,0.731,330,0.731,331,0.731,332,1.075,333,1.115,334,0.731,335,0.731,336,0.731,337,0.731,338,0.731,339,1.458,340,1.115,341,0.731,342,0.731,343,0.718,344,0.731,345,0.731,346,1.115,347,1.095,348,1.095,349,0.745,350,1.541,351,1.115,352,0.731,353,0.731,354,0.745,355,1.115,356,0.718,357,0.731,358,1.352,359,0.731,360,1.095,361,1.352,362,0.731,363,0.704,364,0.731,365,0.731,366,0.745,367,0.731,368,1.327,369,0.718,370,0.731,371,0.731,372,0.718,373,0.731,374,1.753,375,1.352,376,0.731,377,0.731,378,0.731,379,0.731,380,0.718,381,1.115,382,1.017,383,0.731,384,1.485,385,0.731,386,0.745,387,0.745,388,1.377,389,0.745,390,0.745,391,0.731,392,1.115,393,0.731,394,0.745,395,0.745,396,0.718,397,1.485,398,0.745,399,0.745,400,0.745,401,0.745,402,0.745,403,1.095,404,0.731,405,0.731,406,0.731,407,0.731,408,0.731,409,0.731,410,1.115,411,0.731,412,1.095,413,0.731,414,0.731,415,0.731,416,0.731,417,0.731,418,0.731,419,0.731,420,0.731,421,0.731,422,0.731,423,0.731,424,0.731,425,0.731,426,0.731,427,0.731,428,0.731,429,1.115,430,0.731,431,0.731,432,0.731,433,0.731,434,0.731,435,0.731,436,0.731,437,1.327,438,0.731,439,0.731,440,1.115,441,0.731,442,0.731,443,0.731,444,0.731,445,1.485,446,0.731,447,0.745,448,0.731,449,0.731,450,0.731,451,1.485,452,0.731,453,1.115,454,0.731,455,1.352,456,0.731,457,1.115,458,0.731,459,1.513,460,0.731,461,1.095,462,0.731,463,1.115,464,0.731,465,0.731,466,0.731,467,1.115,468,0.731,469,1.095,470,0.745,471,0.745,472,0.731,473,0.731,474,1.095,475,1.075,476,1.036,477,0.691,478,1.541,479,1.793,480,0.731,481,0.731,482,0.731,483,0.731,484,0.731,485,0.731,486,0.731,487,0.731,488,0.731,489,0.731,490,0.731,491,0.731,492,0.731,493,0.731,494,0.731,495,0.731,496,1.352,497,1.352,498,1.749,499,0.731,500,0.731,501,1.115,502,0.731,503,0.745,504,1.352,505,1.352,506,0.731,507,0.745,508,0.731,509,0.745,510,1.115,511,0.731,512,1.023,513,0.745,514,0.745,515,0.731,516,0.745,517,0.731,518,0.731,519,1.115,520,0.745,521,1.115,522,1.115,523,1.115,524,1.541,525,0.731,526,0.745,527,0.745,528,1.115,529,0.731,530,0.745,531,0.745,532,0.596,533,0.731,534,1.327,535,1.327,536,1.115,537,0.718,538,0.718,539,0.718,540,1.115,541,0.731,542,0.731,543,0.731,544,1.036,545,1.352,546,0.718,547,0.718,548,0.731,549,0.745,550,0.745,551,0.731,552,0.731,553,0.745,554,0.745,555,0.745,556,0.745,557,1.115,558,0.718,559,0.718,560,1.327,561,1.115,562,0.718,563,0.731,564,0.731,565,1.115,566,0.745,567,0.387,568,0.731,569,0.642,570,1.64,571,1.657,572,1.617,573,1.807,574,1.055,575,0.745,576,0.731,577,0.619,578,0.731,579,0.731,580,1.352,581,0.745,582,0.745,583,1.115,584,0.745,585,0.745,586,0.731,587,0.745,588,1.617,589,0.745,590,1.749,591,0.745,592,0.745,593,0.745,594,0.745,595,0.745,596,1.352,597,0.745,598,0.745,599,0.745,600,0.745,601,0.745,602,0.731,603,0.745,604,0.745,605,0.745,606,0.745,607,0.745,608,0.745,609,0.745,610,0.745,611,0.745,612,0.745,613,0.745,614,0.731,615,0.745,616,1.329,617,0.745,618,0.745,619,0.745,620,0.745,621,0.745,622,1.115,623,0.745,624,0.731,625,0.745,626,0.745,627,0.745,628,0.745,629,0.745,630,0.731,631,0.731,632,0.745,633,0.745,634,0.745,635,0.731,636,0.731,637,0.745,638,0.745,639,0.731,640,0.745,641,0.745,642,0.745,643,0.745,644,0.731,645,0.745,646,0.731,647,0.745,648,0.745,649,0.731,650,0.745,651,0.745]],["title/interfaces/AuthResponse.html",[232,0.161,551,1.115]],["body/interfaces/AuthResponse.html",[0,0.135,3,0.026,4,0.04,5,0.026,7,0.036,8,0.375,12,0.874,25,0.293,29,0.007,30,0.563,31,0.236,33,0.297,45,0.393,67,0.113,81,0.662,84,0.675,89,0.687,109,0.907,133,0.993,161,1.883,184,0.33,191,0.002,192,0.004,193,0.002,220,0.727,232,0.325,234,0.448,239,0.385,253,0.687,273,0.56,315,1.11,316,0.604,317,0.727,318,0.675,319,2.258,320,0.65,321,1.11,322,1.509,323,0.727,324,1.11,325,0.727,326,1.347,327,0.727,328,1.347,329,0.727,330,0.727,331,0.727,332,1.07,333,1.11,334,0.727,335,0.727,336,0.727,337,0.727,338,0.727,339,1.453,340,1.11,341,0.727,342,0.727,343,0.713,344,0.727,345,0.727,346,1.11,347,1.09,348,1.09,349,0.74,350,1.536,351,1.11,352,0.727,353,0.727,354,0.74,355,1.11,356,0.713,357,0.727,358,1.347,359,0.727,360,1.09,361,1.347,362,0.727,363,0.7,364,0.727,365,0.727,366,0.74,367,0.727,368,1.322,369,0.713,370,0.727,371,0.727,372,0.713,373,0.727,374,1.749,375,1.347,376,0.727,377,0.727,378,0.727,379,0.727,380,0.713,381,1.11,382,1.012,383,0.727,384,1.48,385,0.727,386,0.74,387,0.74,388,1.372,389,0.74,390,0.74,391,0.727,392,1.11,393,0.727,394,0.74,395,0.74,396,0.713,397,1.48,398,0.74,399,0.74,400,0.74,401,0.74,402,0.74,403,1.09,404,0.727,405,0.727,406,0.727,407,0.727,408,0.727,409,0.727,410,1.11,411,0.727,412,1.09,413,0.727,414,0.727,415,0.727,416,0.727,417,0.727,418,0.727,419,0.727,420,0.727,421,0.727,422,0.727,423,0.727,424,0.727,425,0.727,426,0.727,427,0.727,428,0.727,429,1.11,430,0.727,431,0.727,432,0.727,433,0.727,434,0.727,435,0.727,436,0.727,437,1.322,438,0.727,439,0.727,440,1.11,441,0.727,442,0.727,443,0.727,444,0.727,445,1.48,446,0.727,447,0.74,448,0.727,449,0.727,450,0.727,451,1.48,452,0.727,453,1.11,454,0.727,455,1.347,456,0.727,457,1.11,458,0.727,459,1.508,460,0.727,461,1.09,462,0.727,463,1.11,464,0.727,465,0.727,466,0.727,467,1.11,468,0.727,469,1.09,470,0.74,471,0.74,472,0.727,473,0.727,474,1.09,475,1.07,476,1.031,477,0.687,478,1.54,479,1.792,480,0.727,481,0.727,482,0.727,483,0.727,484,0.727,485,0.727,486,0.727,487,0.727,488,0.727,489,0.727,490,0.727,491,0.727,492,0.727,493,0.727,494,0.727,495,0.727,496,1.347,497,1.347,498,1.745,499,0.727,500,0.727,501,1.11,502,0.727,503,0.74,504,1.347,505,1.347,506,0.727,507,0.74,508,0.727,509,0.74,510,1.11,511,0.727,512,1.019,513,0.74,514,0.74,515,0.727,516,0.74,517,0.727,518,0.727,519,1.11,520,0.74,521,1.11,522,1.11,523,1.11,524,1.536,525,0.727,526,0.74,527,0.74,528,1.11,529,0.727,530,0.74,531,0.74,532,0.593,533,0.727,534,1.322,535,1.322,536,1.11,537,0.713,538,0.713,539,0.713,540,1.11,541,0.727,542,0.727,543,0.727,544,1.031,545,1.347,546,0.713,547,0.713,548,0.727,549,0.74,550,0.74,551,1.11,552,1.508,553,1.536,554,1.536,555,0.74,556,1.536,557,1.11,558,0.713,559,0.713,560,1.322,561,1.11,562,0.713,563,0.727,564,0.727,565,1.11,566,0.74,567,0.385,568,0.727,569,0.638,570,1.639,571,1.654,572,1.614,573,1.804,574,1.05,575,0.74,576,0.727,577,0.615,578,0.727,579,0.727,580,1.347,581,0.74,582,0.74,583,1.11,584,0.74,585,0.74,586,0.727,587,0.74,588,1.614,589,0.74,590,1.745,591,0.74,592,0.74,593,0.74,594,0.74,595,0.74,596,1.347,597,0.74,598,0.74,599,0.74,600,0.74,601,0.74,602,0.727,603,0.74,604,0.74,605,0.74,606,0.74,607,0.74,608,0.74,609,0.74,610,0.74,611,0.74,612,0.74,613,0.74,614,0.727,615,0.74,616,1.325,617,0.74,618,0.74,619,0.74,620,0.74,621,0.74,622,1.11,623,0.74,624,0.727,625,0.74,626,0.74,627,0.74,628,0.74,629,0.74,630,0.727,631,0.727,632,0.74,633,0.74,634,0.74,635,0.727,636,0.727,637,0.74,638,0.74,639,0.727,640,0.74,641,0.74,642,0.74,643,0.74,644,0.727,645,0.74,646,0.727,647,0.74,648,0.74,649,0.727,650,0.74,651,0.74]],["title/interfaces/Availability.html",[232,0.161,348,1.094]],["body/interfaces/Availability.html",[0,0.135,3,0.026,4,0.04,5,0.026,7,0.036,8,0.374,12,0.873,25,0.293,29,0.007,30,0.563,31,0.236,32,0.6,33,0.296,45,0.392,67,0.113,81,1.374,84,0.674,89,0.686,109,0.906,133,0.992,161,1.814,184,0.329,191,0.002,192,0.004,193,0.002,220,0.726,232,0.325,234,0.448,239,0.384,253,0.686,273,0.559,315,1.109,316,0.603,317,0.726,318,0.674,319,2.258,320,0.649,321,1.109,322,1.508,323,0.726,324,1.109,325,0.726,326,1.346,327,0.726,328,1.346,329,0.726,330,0.726,331,0.726,332,1.069,333,1.109,334,0.726,335,0.726,336,0.726,337,0.726,338,0.726,339,1.452,340,1.507,341,0.726,342,0.726,343,0.712,344,0.726,345,0.726,346,1.507,347,1.089,348,1.321,349,1.535,350,1.744,351,1.623,352,0.726,353,0.726,354,0.739,355,1.109,356,0.712,357,0.726,358,1.346,359,0.726,360,1.089,361,1.346,362,0.726,363,0.699,364,0.726,365,0.726,366,0.739,367,0.726,368,1.321,369,0.712,370,0.726,371,0.726,372,0.712,373,0.726,374,1.748,375,1.346,376,0.726,377,0.726,378,0.726,379,0.726,380,0.712,381,1.109,382,1.011,383,0.726,384,1.479,385,0.726,386,0.739,387,0.739,388,1.371,389,0.739,390,0.739,391,0.726,392,1.109,393,0.726,394,0.739,395,0.739,396,0.712,397,1.479,398,0.739,399,0.739,400,0.739,401,0.739,402,0.739,403,1.089,404,0.726,405,0.726,406,0.726,407,0.726,408,0.726,409,0.726,410,1.109,411,0.726,412,1.089,413,0.726,414,0.726,415,0.726,416,0.726,417,0.726,418,0.726,419,0.726,420,0.726,421,0.726,422,0.726,423,0.726,424,0.726,425,0.726,426,0.726,427,0.726,428,0.726,429,1.109,430,0.726,431,0.726,432,0.726,433,0.726,434,0.726,435,0.726,436,0.726,437,1.321,438,0.726,439,0.726,440,1.109,441,0.726,442,0.726,443,0.726,444,0.726,445,1.479,446,0.726,447,0.739,448,0.726,449,0.726,450,0.726,451,1.479,452,0.726,453,1.109,454,0.726,455,1.346,456,0.726,457,1.109,458,0.726,459,1.507,460,0.726,461,1.089,462,0.726,463,1.109,464,0.726,465,0.726,466,0.726,467,1.109,468,0.726,469,1.089,470,0.739,471,0.739,472,0.726,473,0.726,474,1.089,475,1.069,476,1.03,477,0.686,478,1.54,479,1.791,480,0.726,481,0.726,482,0.726,483,0.726,484,0.726,485,0.726,486,0.726,487,0.726,488,0.726,489,0.726,490,0.726,491,0.726,492,0.726,493,0.726,494,0.726,495,0.726,496,1.346,497,1.346,498,1.744,499,0.726,500,0.726,501,1.109,502,0.726,503,0.739,504,1.346,505,1.346,506,0.726,507,0.739,508,0.726,509,0.739,510,1.109,511,0.726,512,1.018,513,0.739,514,0.739,515,0.726,516,0.739,517,0.726,518,0.726,519,1.109,520,0.739,521,1.109,522,1.109,523,1.109,524,1.535,525,0.726,526,0.739,527,0.739,528,1.109,529,0.726,530,0.739,531,0.739,532,0.592,533,0.726,534,1.321,535,1.321,536,1.109,537,0.712,538,0.712,539,0.712,540,1.109,541,0.726,542,0.726,543,0.726,544,1.03,545,1.346,546,0.712,547,0.712,548,0.726,549,0.739,550,0.739,551,0.726,552,0.726,553,0.739,554,0.739,555,0.739,556,0.739,557,1.109,558,0.712,559,0.712,560,1.321,561,1.109,562,0.712,563,0.726,564,0.726,565,1.109,566,0.739,567,0.384,568,0.726,569,0.637,570,1.639,571,1.654,572,1.613,573,1.803,574,1.049,575,0.739,576,0.726,577,0.614,578,0.726,579,0.726,580,1.346,581,0.739,582,0.739,583,1.109,584,0.739,585,0.739,586,0.726,587,0.739,588,1.613,589,0.739,590,1.744,591,0.739,592,0.739,593,0.739,594,0.739,595,0.739,596,1.346,597,0.739,598,0.739,599,0.739,600,0.739,601,0.739,602,0.726,603,0.739,604,0.739,605,0.739,606,0.739,607,0.739,608,0.739,609,0.739,610,0.739,611,0.739,612,0.739,613,0.739,614,0.726,615,0.739,616,1.324,617,0.739,618,0.739,619,0.739,620,0.739,621,0.739,622,1.109,623,0.739,624,0.726,625,0.739,626,0.739,627,0.739,628,0.739,629,0.739,630,0.726,631,0.726,632,0.739,633,0.739,634,0.739,635,0.726,636,0.726,637,0.739,638,0.739,639,0.726,640,0.739,641,0.739,642,0.739,643,0.739,644,0.726,645,0.739,646,0.726,647,0.739,648,0.739,649,0.726,650,0.739,651,0.739]],["title/interfaces/BaseSkillConfig.html",[232,0.161,652,3.428]],["body/interfaces/BaseSkillConfig.html",[3,0.057,4,0.057,5,0.057,7,0.078,8,0.642,25,0.82,29,0.007,31,0.224,32,1.137,33,0.271,51,0.904,57,1.334,58,1.099,67,0.103,109,1.007,191,0.005,192,0.006,193,0.005,232,0.304,234,0.645,241,3.655,652,6.467,653,4.45,654,4.914,655,6.138,656,6.862,657,6.903,658,4.699,659,5.553,660,5.076,661,3.191,662,4.45,663,4.914,664,5.076,665,5.851,666,5.553,667,5.214,668,5.214,669,5.553,670,4.45,671,4.914,672,4.45,673,4.664,674,4.664,675,4.664,676,4.664]],["title/classes/BuyContentBuilder.html",[0,0.208,677,4.251]],["body/classes/BuyContentBuilder.html",[0,0.278,2,1.216,3,0.053,4,0.053,5,0.053,7,0.089,8,0.616,12,1.183,14,1.16,16,2.859,18,1.321,25,0.602,26,1.253,28,1.817,29,0.007,30,0.599,31,0.229,32,1.139,33,0.292,39,5.953,41,1.16,51,0.866,67,0.073,79,0.857,109,0.966,190,1.262,191,0.005,192,0.006,193,0.005,203,1.982,246,4.569,567,0.789,577,1.544,677,6.956,678,6.396,679,5.012,680,4.351,681,4.406,682,8.46,683,4.274,684,4.701,685,4.677,686,4.677,687,4.677,688,4.677,689,3.331,690,4.937,691,4.151,692,4.151,693,4.151,694,6.396,695,6.396,696,4.151,697,4.151,698,3.976,699,4.151,700,3.976,701,4.151,702,3.821,703,3.976,704,4.151,705,3.976,706,4.151,707,5.683,708,3.555,709,5.683,710,6.396]],["title/classes/BuyIntentHandlerBuilder.html",[0,0.208,711,4.251]],["body/classes/BuyIntentHandlerBuilder.html",[0,0.232,2,1.016,3,0.044,4,0.044,5,0.044,7,0.061,8,0.55,12,1.057,14,1.036,16,2.124,17,2.482,18,1.315,19,3.637,24,2.482,25,0.503,26,1.217,28,1.659,29,0.007,30,0.567,31,0.221,32,1.04,41,1.036,45,0.674,51,1.016,53,3.47,55,3.008,57,1.272,58,1.12,59,1.725,61,0.908,66,5.314,67,0.089,68,2.138,72,4.066,76,1.897,79,1.231,101,4.652,104,4.762,108,4.066,109,0.862,125,3.531,135,4.175,145,3.832,176,4.175,184,0.566,190,1.69,191,0.004,192,0.005,193,0.004,203,2.559,250,3.637,308,2.701,532,1.328,567,0.66,661,2.089,681,4.055,683,4.171,690,4.729,707,4.751,711,6.21,712,5.347,713,5.188,714,3.993,715,4.754,716,4.011,717,2.461,718,4.3,719,4.652,720,4.536,721,4.175,722,4.536,723,4.536,724,5.347,725,4.359,726,4.359,727,4.359,728,5.347,729,3.47,730,4.359,731,3.637,732,3.884,733,4.359,734,2.189,735,3.324,736,4.359,737,3.637,738,4.359,739,3.637,740,4.359,741,5.347,742,4.751,743,4.359,744,5.347,745,5.347,746,2.785,747,5.347,748,5.347,749,5.347,750,5.347,751,5.347,752,3.637,753,6.989,754,4.751,755,5.347,756,5.347,757,5.347,758,3.47,759,6.21,760,5.347,761,5.347,762,5.347,763,5.347,764,5.347,765,5.347,766,5.347,767,5.347,768,5.347,769,5.347,770,5.347,771,5.347,772,5.347,773,4.066,774,4.066,775,4.345,776,5.347,777,4.066,778,3.832,779,5.347,780,5.347,781,5.347,782,5.347,783,5.347,784,5.347,785,5.347,786,5.347,787,4.359,788,5.347]],["title/classes/BuyResponseContentBuilder.html",[0,0.208,789,4.251]],["body/classes/BuyResponseContentBuilder.html",[0,0.236,2,1.032,3,0.045,4,0.045,5,0.045,7,0.062,8,0.555,9,3.441,12,1.067,14,1.046,16,2.768,18,1.32,25,0.511,26,1.253,28,1.669,29,0.007,30,0.55,31,0.218,32,1.046,33,0.267,41,1.276,51,0.601,67,0.062,76,1.445,79,1.235,92,2.79,101,5.442,109,0.871,135,3.242,174,6.528,190,1.071,191,0.004,192,0.005,193,0.004,203,1.682,239,0.67,246,4.349,363,1.219,567,0.67,577,1.392,679,4.902,680,3.922,681,4.084,683,3.962,684,4.359,685,4.216,686,4.216,687,4.216,688,4.216,689,4.744,690,4.796,691,3.522,692,3.522,693,3.522,696,3.522,697,3.522,698,3.374,699,3.522,700,3.374,701,3.522,702,3.242,703,3.374,704,3.522,705,3.374,706,3.522,708,3.016,775,3.374,789,6.271,790,5.427,791,8.305,792,8.305,793,8.305,794,8.305,795,8.305,796,8.305,797,5.427,798,5.427,799,5.427,800,5.427,801,5.427,802,5.427,803,5.753,804,4.424,805,5.753,806,4.876,807,4.744,808,5.272,809,4.464,810,4.823,811,5.427,812,4.514,813,5.427,814,4.823,815,3.889,816,5.427,817,3.374,818,4.823,819,4.127,820,3.522,821,4.823,822,5.427]],["title/interfaces/Class.html",[0,0.208,232,0.161]],["body/interfaces/Class.html",[0,0.208,3,0.026,4,0.04,5,0.026,7,0.036,8,0.376,12,0.877,25,0.295,29,0.007,30,0.564,31,0.236,33,0.296,45,0.731,67,0.113,81,0.666,84,0.679,89,0.691,109,0.909,133,0.998,161,1.818,184,0.332,191,0.002,192,0.004,193,0.002,220,0.731,232,0.325,234,0.45,239,0.387,253,0.691,273,0.564,315,1.115,316,0.607,317,0.731,318,0.679,319,2.259,320,0.654,321,1.115,322,1.513,323,0.731,324,1.115,325,0.731,326,1.352,327,0.731,328,1.352,329,0.731,330,0.731,331,0.731,332,1.075,333,1.115,334,0.731,335,0.731,336,0.731,337,0.731,338,0.731,339,1.458,340,1.115,341,0.731,342,0.731,343,0.718,344,0.731,345,0.731,346,1.115,347,1.095,348,1.095,349,0.745,350,1.541,351,1.115,352,0.731,353,0.731,354,0.745,355,1.115,356,0.718,357,0.731,358,1.352,359,0.731,360,1.095,361,1.352,362,0.731,363,0.704,364,0.731,365,0.731,366,0.745,367,0.731,368,1.327,369,0.718,370,0.731,371,0.731,372,0.718,373,0.731,374,1.753,375,1.352,376,0.731,377,0.731,378,0.731,379,0.731,380,0.718,381,1.115,382,1.017,383,0.731,384,1.485,385,0.731,386,0.745,387,0.745,388,1.377,389,0.745,390,0.745,391,0.731,392,1.115,393,0.731,394,0.745,395,0.745,396,0.718,397,1.485,398,0.745,399,0.745,400,0.745,401,0.745,402,0.745,403,1.095,404,0.731,405,0.731,406,0.731,407,0.731,408,0.731,409,0.731,410,1.115,411,0.731,412,1.095,413,0.731,414,0.731,415,0.731,416,0.731,417,0.731,418,0.731,419,0.731,420,0.731,421,0.731,422,0.731,423,0.731,424,0.731,425,0.731,426,0.731,427,0.731,428,0.731,429,1.115,430,0.731,431,0.731,432,0.731,433,0.731,434,0.731,435,0.731,436,0.731,437,1.327,438,0.731,439,0.731,440,1.115,441,0.731,442,0.731,443,0.731,444,0.731,445,1.485,446,0.731,447,0.745,448,0.731,449,0.731,450,0.731,451,1.485,452,0.731,453,1.115,454,0.731,455,1.352,456,0.731,457,1.115,458,0.731,459,1.513,460,0.731,461,1.095,462,0.731,463,1.115,464,0.731,465,0.731,466,0.731,467,1.115,468,0.731,469,1.095,470,0.745,471,0.745,472,0.731,473,0.731,474,1.095,475,1.075,476,1.036,477,0.691,478,1.541,479,1.793,480,0.731,481,0.731,482,0.731,483,0.731,484,0.731,485,0.731,486,0.731,487,0.731,488,0.731,489,0.731,490,0.731,491,0.731,492,0.731,493,0.731,494,0.731,495,0.731,496,1.352,497,1.352,498,1.749,499,0.731,500,0.731,501,1.115,502,0.731,503,0.745,504,1.352,505,1.352,506,0.731,507,0.745,508,0.731,509,0.745,510,1.115,511,0.731,512,1.023,513,0.745,514,0.745,515,0.731,516,0.745,517,0.731,518,0.731,519,1.115,520,0.745,521,1.115,522,1.115,523,1.115,524,1.541,525,0.731,526,0.745,527,0.745,528,1.115,529,0.731,530,0.745,531,0.745,532,0.596,533,1.513,534,1.327,535,1.327,536,1.115,537,0.718,538,0.718,539,0.718,540,1.115,541,0.731,542,0.731,543,0.731,544,1.036,545,1.352,546,0.718,547,0.718,548,0.731,549,0.745,550,0.745,551,0.731,552,0.731,553,0.745,554,0.745,555,0.745,556,0.745,557,1.115,558,0.718,559,0.718,560,1.327,561,1.115,562,0.718,563,0.731,564,0.731,565,1.115,566,0.745,567,0.387,568,0.731,569,0.642,570,1.64,571,1.657,572,1.617,573,1.807,574,1.055,575,0.745,576,0.731,577,0.619,578,0.731,579,0.731,580,1.352,581,0.745,582,0.745,583,1.115,584,0.745,585,0.745,586,0.731,587,0.745,588,1.617,589,0.745,590,1.749,591,0.745,592,0.745,593,0.745,594,0.745,595,0.745,596,1.352,597,0.745,598,0.745,599,0.745,600,0.745,601,0.745,602,0.731,603,0.745,604,0.745,605,0.745,606,0.745,607,0.745,608,0.745,609,0.745,610,0.745,611,0.745,612,0.745,613,0.745,614,0.731,615,0.745,616,1.329,617,0.745,618,0.745,619,0.745,620,0.745,621,0.745,622,1.115,623,0.745,624,0.731,625,0.745,626,0.745,627,0.745,628,0.745,629,0.745,630,0.731,631,0.731,632,0.745,633,0.745,634,0.745,635,0.731,636,0.731,637,0.745,638,0.745,639,0.731,640,0.745,641,0.745,642,0.745,643,0.745,644,0.731,645,0.745,646,0.731,647,0.745,648,0.745,649,0.731,650,0.745,651,0.745]],["title/interfaces/ClientConfig.html",[232,0.161,548,1.115]],["body/interfaces/ClientConfig.html",[0,0.134,3,0.026,4,0.039,5,0.026,7,0.035,8,0.372,12,0.869,25,0.541,29,0.007,30,0.562,31,0.236,32,0.922,33,0.295,45,0.389,67,0.113,81,0.656,84,0.668,89,0.681,109,0.903,133,0.986,161,1.81,184,0.327,191,0.002,192,0.004,193,0.002,220,0.72,232,0.325,234,0.445,239,0.381,253,0.681,273,0.555,315,1.102,316,0.598,317,0.72,318,0.668,319,2.256,320,0.644,321,1.102,322,1.502,323,0.72,324,1.102,325,0.72,326,1.339,327,0.72,328,1.339,329,0.72,330,0.72,331,0.72,332,1.062,333,1.102,334,0.72,335,0.72,336,0.72,337,0.72,338,0.72,339,1.446,340,1.102,341,0.72,342,0.72,343,0.707,344,0.72,345,0.72,346,1.102,347,1.082,348,1.082,349,0.733,350,1.529,351,1.102,352,0.72,353,0.72,354,0.733,355,1.102,356,0.707,357,0.72,358,1.339,359,0.72,360,1.082,361,1.339,362,0.72,363,0.694,364,0.72,365,0.72,366,0.733,367,0.72,368,1.315,369,0.707,370,0.72,371,0.72,372,0.707,373,0.72,374,1.743,375,1.339,376,0.72,377,0.72,378,0.72,379,0.72,380,0.707,381,1.102,382,1.005,383,0.72,384,1.473,385,0.72,386,0.733,387,0.733,388,1.364,389,0.733,390,0.733,391,0.72,392,1.102,393,0.72,394,0.733,395,0.733,396,0.707,397,1.473,398,0.733,399,0.733,400,0.733,401,0.733,402,0.733,403,1.082,404,0.72,405,0.72,406,0.72,407,0.72,408,0.72,409,0.72,410,1.102,411,0.72,412,1.082,413,0.72,414,0.72,415,0.72,416,0.72,417,0.72,418,0.72,419,0.72,420,0.72,421,0.72,422,0.72,423,0.72,424,0.72,425,0.72,426,0.72,427,0.72,428,0.72,429,1.102,430,0.72,431,0.72,432,0.72,433,0.72,434,0.72,435,0.72,436,0.72,437,1.315,438,0.72,439,0.72,440,1.102,441,0.72,442,0.72,443,0.72,444,0.72,445,1.473,446,0.72,447,0.733,448,0.72,449,0.72,450,0.72,451,1.473,452,0.72,453,1.102,454,0.72,455,1.339,456,0.72,457,1.102,458,0.72,459,1.501,460,0.72,461,1.082,462,0.72,463,1.102,464,0.72,465,0.72,466,0.72,467,1.102,468,0.72,469,1.082,470,0.733,471,0.733,472,0.72,473,0.72,474,1.082,475,1.062,476,1.023,477,0.681,478,1.538,479,1.789,480,0.72,481,0.72,482,0.72,483,0.72,484,0.72,485,0.72,486,0.72,487,0.72,488,0.72,489,0.72,490,0.72,491,0.72,492,0.72,493,0.72,494,0.72,495,0.72,496,1.339,497,1.339,498,1.738,499,0.72,500,0.72,501,1.102,502,0.72,503,0.733,504,1.339,505,1.339,506,0.72,507,0.733,508,0.72,509,0.733,510,1.102,511,0.72,512,1.013,513,0.733,514,0.733,515,0.72,516,0.733,517,0.72,518,0.72,519,1.102,520,0.733,521,1.102,522,1.102,523,1.102,524,1.529,525,0.72,526,0.733,527,0.733,528,1.102,529,0.72,530,0.733,531,0.733,532,0.587,533,0.72,534,1.798,535,1.798,536,1.102,537,0.707,538,0.707,539,0.707,540,1.102,541,0.72,542,0.72,543,0.72,544,1.394,545,1.832,546,0.707,547,0.707,548,1.102,549,1.529,550,1.529,551,0.72,552,0.72,553,0.733,554,0.733,555,0.733,556,0.733,557,1.102,558,0.707,559,0.707,560,1.315,561,1.102,562,0.707,563,0.72,564,0.72,565,1.102,566,0.733,567,0.381,568,0.72,569,0.632,570,1.638,571,1.65,572,1.609,573,1.798,574,1.043,575,0.733,576,0.72,577,0.609,578,0.72,579,0.72,580,1.339,581,0.733,582,0.733,583,1.102,584,0.733,585,0.733,586,0.72,587,0.733,588,1.609,589,0.733,590,1.738,591,0.733,592,0.733,593,0.733,594,0.733,595,0.733,596,1.339,597,0.733,598,0.733,599,0.733,600,0.733,601,0.733,602,0.72,603,0.733,604,0.733,605,0.733,606,0.733,607,0.733,608,0.733,609,0.733,610,0.733,611,0.733,612,0.733,613,0.733,614,0.72,615,0.733,616,1.318,617,0.733,618,0.733,619,0.733,620,0.733,621,0.733,622,1.102,623,0.733,624,0.72,625,0.733,626,0.733,627,0.733,628,0.733,629,0.733,630,0.72,631,0.72,632,0.733,633,0.733,634,0.733,635,0.72,636,0.72,637,0.733,638,0.733,639,0.72,640,0.733,641,0.733,642,0.733,643,0.733,644,0.72,645,0.733,646,0.72,647,0.733,648,0.733,649,0.72,650,0.733,651,0.733]],["title/interfaces/ConfirmationState.html",[232,0.161,380,1.094]],["body/interfaces/ConfirmationState.html",[0,0.136,3,0.026,4,0.04,5,0.026,7,0.036,8,0.376,12,0.877,25,0.295,29,0.007,30,0.564,31,0.236,33,0.296,45,0.395,67,0.113,81,0.666,84,0.679,89,0.691,109,0.909,133,0.998,161,1.818,184,0.332,191,0.002,192,0.004,193,0.002,220,0.731,232,0.325,234,0.45,239,0.387,253,0.691,273,0.564,315,1.115,316,0.607,317,0.731,318,0.679,319,2.259,320,0.654,321,1.115,322,1.513,323,0.731,324,1.115,325,0.731,326,1.352,327,0.731,328,1.352,329,0.731,330,0.731,331,0.731,332,1.075,333,1.115,334,0.731,335,0.731,336,0.731,337,0.731,338,0.731,339,1.458,340,1.115,341,0.731,342,0.731,343,0.718,344,0.731,345,0.731,346,1.115,347,1.095,348,1.095,349,0.745,350,1.541,351,1.115,352,0.731,353,0.731,354,0.745,355,1.115,356,0.718,357,0.731,358,1.352,359,0.731,360,1.095,361,1.352,362,0.731,363,0.704,364,0.731,365,0.731,366,0.745,367,0.731,368,1.807,369,0.718,370,0.731,371,0.731,372,0.718,373,0.731,374,1.753,375,1.352,376,0.731,377,0.731,378,0.731,379,0.731,380,1.095,381,1.115,382,1.017,383,0.731,384,1.485,385,0.731,386,0.745,387,0.745,388,1.377,389,0.745,390,0.745,391,0.731,392,1.115,393,0.731,394,0.745,395,0.745,396,0.718,397,1.485,398,0.745,399,0.745,400,0.745,401,0.745,402,0.745,403,1.095,404,0.731,405,0.731,406,0.731,407,0.731,408,0.731,409,0.731,410,1.115,411,0.731,412,1.095,413,0.731,414,0.731,415,0.731,416,0.731,417,0.731,418,0.731,419,0.731,420,0.731,421,0.731,422,0.731,423,0.731,424,0.731,425,0.731,426,0.731,427,0.731,428,0.731,429,1.115,430,0.731,431,0.731,432,0.731,433,0.731,434,0.731,435,0.731,436,0.731,437,1.327,438,0.731,439,0.731,440,1.115,441,0.731,442,0.731,443,0.731,444,0.731,445,1.485,446,0.731,447,0.745,448,0.731,449,0.731,450,0.731,451,1.485,452,0.731,453,1.115,454,0.731,455,1.352,456,0.731,457,1.115,458,0.731,459,1.513,460,0.731,461,1.095,462,0.731,463,1.115,464,0.731,465,0.731,466,0.731,467,1.115,468,0.731,469,1.095,470,0.745,471,0.745,472,0.731,473,0.731,474,1.095,475,1.075,476,1.036,477,0.691,478,1.541,479,1.793,480,0.731,481,0.731,482,0.731,483,0.731,484,0.731,485,0.731,486,0.731,487,0.731,488,0.731,489,0.731,490,0.731,491,0.731,492,0.731,493,0.731,494,0.731,495,0.731,496,1.352,497,1.352,498,1.749,499,0.731,500,0.731,501,1.115,502,0.731,503,0.745,504,1.352,505,1.352,506,0.731,507,0.745,508,0.731,509,0.745,510,1.115,511,0.731,512,1.023,513,0.745,514,0.745,515,0.731,516,0.745,517,0.731,518,0.731,519,1.115,520,0.745,521,1.115,522,1.115,523,1.115,524,1.541,525,0.731,526,0.745,527,0.745,528,1.115,529,0.731,530,0.745,531,0.745,532,0.596,533,0.731,534,1.327,535,1.327,536,1.115,537,0.718,538,0.718,539,0.718,540,1.115,541,0.731,542,0.731,543,0.731,544,1.036,545,1.352,546,0.718,547,0.718,548,0.731,549,0.745,550,0.745,551,0.731,552,0.731,553,0.745,554,0.745,555,0.745,556,0.745,557,1.115,558,0.718,559,0.718,560,1.327,561,1.115,562,0.718,563,0.731,564,0.731,565,1.115,566,0.745,567,0.387,568,0.731,569,0.642,570,1.64,571,1.657,572,1.617,573,1.807,574,1.055,575,0.745,576,0.731,577,0.619,578,0.731,579,0.731,580,1.352,581,0.745,582,0.745,583,1.115,584,0.745,585,0.745,586,0.731,587,0.745,588,1.617,589,0.745,590,1.749,591,0.745,592,0.745,593,0.745,594,0.745,595,0.745,596,1.352,597,0.745,598,0.745,599,0.745,600,0.745,601,0.745,602,0.731,603,0.745,604,0.745,605,0.745,606,0.745,607,0.745,608,0.745,609,0.745,610,0.745,611,0.745,612,0.745,613,0.745,614,0.731,615,0.745,616,1.329,617,0.745,618,0.745,619,0.745,620,0.745,621,0.745,622,1.115,623,0.745,624,0.731,625,0.745,626,0.745,627,0.745,628,0.745,629,0.745,630,0.731,631,0.731,632,0.745,633,0.745,634,0.745,635,0.731,636,0.731,637,0.745,638,0.745,639,0.731,640,0.745,641,0.745,642,0.745,643,0.745,644,0.731,645,0.745,646,0.731,647,0.745,648,0.745,649,0.731,650,0.745,651,0.745]],["title/classes/ConstantsInterceptorFactory.html",[0,0.208,823,3.9]],["body/classes/ConstantsInterceptorFactory.html",[0,0.304,2,1.333,3,0.058,4,0.058,5,0.058,7,0.08,14,1.226,17,3.255,18,0.959,26,0.921,28,1.663,29,0.007,30,0.464,31,0.201,32,0.883,33,0.218,41,1.039,51,0.916,55,2.78,56,3.542,57,1.352,58,1.326,59,2.262,67,0.101,76,1.436,79,0.94,145,5.929,190,1.383,191,0.005,192,0.006,193,0.005,232,0.236,241,3.811,273,1.26,655,6.183,658,5.065,662,4.551,717,2.782,823,7.174,824,6.231,825,3.69,826,7.012,827,7.012,828,6.231,829,5.332,830,6.231,831,6.231]],["title/classes/ContentBuilder.html",[0,0.208,679,2.491]],["body/classes/ContentBuilder.html",[0,0.254,2,1.111,3,0.049,4,0.049,5,0.049,7,0.067,8,0.582,12,1.36,14,1.097,16,2.89,18,1.324,22,2.892,25,0.696,26,1.235,28,1.77,29,0.007,30,0.583,31,0.225,32,1.11,33,0.297,41,1.097,51,0.819,57,1.209,58,1.186,59,1.885,61,0.992,67,0.093,71,3.492,76,1.197,79,1.24,190,1.46,191,0.004,192,0.005,193,0.004,203,1.811,232,0.197,246,4.78,567,1.002,577,1.775,679,4.23,680,4.514,681,4.994,683,4.313,684,4.745,685,4.852,686,4.852,687,4.852,688,4.852,689,4.23,698,3.633,700,3.633,702,5.376,703,3.633,705,3.633,807,4.366,809,4.366,812,3.364,832,5.193,833,4.188,834,7.401,835,5.844,836,5.844,837,5.844,838,5.844,839,5.844,840,5.844,841,5.844,842,5.844,843,4.188,844,4.188,845,5.193,846,5.193,847,7.827,848,5.193,849,5.193,850,4.188,851,4.188,852,5.193,853,4.188,854,4.188]],["title/classes/ContentBuilder-1.html",[0,0.174,194,2.158,679,2.09]],["body/classes/ContentBuilder-1.html",[0,0.284,2,0.92,3,0.04,4,0.04,5,0.04,7,0.055,8,0.514,9,2.966,12,1.32,14,0.97,16,2.87,18,1.281,19,3.292,22,2.896,25,0.615,26,1.122,28,0.973,29,0.007,30,0.549,31,0.193,32,0.61,33,0.287,41,0.97,51,0.82,57,1.069,58,1.048,59,1.561,60,2.375,61,0.822,64,5.38,65,3.292,67,0.091,71,2.892,76,1.517,79,1.289,92,2.87,100,3.292,101,5.644,109,0.597,113,4.449,126,3.765,131,3.292,135,4.427,159,3.469,172,6.522,183,2.957,184,0.692,185,4.449,190,1.29,191,0.004,192,0.005,193,0.004,203,1.5,232,0.163,246,4.188,258,3.292,261,3.009,382,1.028,477,1.067,567,1.023,679,3.859,680,4.118,681,4.92,683,4.009,684,4.411,689,4.626,758,3.141,773,3.68,774,3.68,775,4.067,777,3.68,778,4.688,806,5.154,807,5.005,808,5.104,809,5.005,812,4.918,815,3.469,819,3.68,820,4.245,833,3.469,843,3.469,844,3.469,850,3.469,851,3.469,853,3.469,854,3.469,855,3.946,856,6.541,857,4.84,858,4.84,859,4.84,860,4.84,861,4.974,862,3.946,863,6.47,864,5.333,865,3.946,866,3.946,867,3.946,868,5.634,869,3.946,870,2.69,871,3.946,872,3.946,873,3.946,874,3.469,875,6.303,876,5.333,877,3.946,878,3.946,879,6.04,880,3.946,881,3.946,882,3.946,883,5.333,884,3.946,885,3.946,886,3.946,887,3.946,888,3.946,889,3.946,890,3.946,891,5.333,892,3.946,893,3.946,894,3.946,895,3.946]],["title/classes/ContextFactory.html",[0,0.208,896,3.9]],["body/classes/ContextFactory.html",[0,0.293,2,1.285,3,0.056,4,0.056,5,0.056,7,0.077,8,0.637,9,3.239,14,1.2,18,1.309,26,1.18,28,1.359,29,0.007,30,0.448,31,0.197,32,0.852,41,1.002,51,0.896,57,1.323,58,1.389,61,1.374,67,0.077,79,1.085,184,0.857,190,1.597,191,0.005,192,0.006,193,0.005,203,2.509,237,6.324,257,5.625,267,3.057,896,6.601,897,6.763,898,7.089,899,8.983,900,8.667,901,8.667,902,6.763,903,7.323,904,6.763,905,6.763,906,6.763,907,6.763,908,7.195]],["title/interfaces/CreativeWork.html",[232,0.161,352,1.115]],["body/interfaces/CreativeWork.html",[0,0.136,3,0.026,4,0.04,5,0.026,7,0.036,8,0.375,12,0.875,25,0.294,29,0.007,30,0.582,31,0.236,33,0.297,45,0.394,67,0.113,81,0.664,84,0.677,89,0.689,109,0.908,133,0.996,161,1.816,184,0.331,191,0.002,192,0.004,193,0.002,220,0.729,232,0.325,234,0.449,239,0.386,253,0.689,273,0.562,315,1.112,316,0.605,317,0.729,318,0.677,319,2.259,320,0.652,321,1.112,322,1.51,323,0.729,324,1.112,325,0.729,326,1.349,327,0.729,328,1.349,329,0.729,330,0.729,331,0.729,332,1.072,333,1.51,334,0.729,335,0.729,336,0.729,337,0.729,338,0.729,339,1.455,340,1.112,341,0.729,342,0.729,343,0.715,344,0.729,345,0.729,346,1.112,347,1.092,348,1.092,349,0.742,350,1.538,351,1.112,352,1.112,353,0.729,354,1.538,355,1.112,356,0.715,357,0.729,358,1.349,359,0.729,360,1.092,361,1.349,362,0.729,363,0.702,364,0.729,365,0.729,366,0.742,367,0.729,368,1.325,369,0.715,370,0.729,371,0.729,372,0.715,373,0.729,374,1.751,375,1.349,376,0.729,377,0.729,378,0.729,379,0.729,380,0.715,381,1.112,382,1.014,383,0.729,384,1.482,385,0.729,386,0.742,387,0.742,388,1.375,389,0.742,390,0.742,391,0.729,392,1.112,393,0.729,394,0.742,395,0.742,396,0.715,397,1.482,398,0.742,399,0.742,400,0.742,401,0.742,402,0.742,403,1.092,404,0.729,405,0.729,406,0.729,407,0.729,408,0.729,409,0.729,410,1.112,411,0.729,412,1.092,413,0.729,414,0.729,415,0.729,416,0.729,417,0.729,418,0.729,419,0.729,420,0.729,421,0.729,422,0.729,423,0.729,424,0.729,425,0.729,426,0.729,427,0.729,428,0.729,429,1.112,430,0.729,431,0.729,432,0.729,433,0.729,434,0.729,435,0.729,436,0.729,437,1.325,438,0.729,439,0.729,440,1.112,441,0.729,442,0.729,443,0.729,444,0.729,445,1.482,446,0.729,447,0.742,448,0.729,449,0.729,450,0.729,451,1.482,452,0.729,453,1.112,454,0.729,455,1.349,456,0.729,457,1.112,458,0.729,459,1.51,460,0.729,461,1.092,462,0.729,463,1.112,464,0.729,465,0.729,466,0.729,467,1.112,468,0.729,469,1.092,470,0.742,471,0.742,472,0.729,473,0.729,474,1.092,475,1.072,476,1.033,477,0.689,478,1.541,479,1.792,480,0.729,481,0.729,482,0.729,483,0.729,484,0.729,485,0.729,486,0.729,487,0.729,488,0.729,489,0.729,490,0.729,491,0.729,492,0.729,493,0.729,494,0.729,495,0.729,496,1.349,497,1.349,498,1.747,499,0.729,500,0.729,501,1.112,502,0.729,503,0.742,504,1.349,505,1.349,506,0.729,507,0.742,508,0.729,509,0.742,510,1.112,511,0.729,512,1.021,513,0.742,514,0.742,515,0.729,516,0.742,517,0.729,518,0.729,519,1.112,520,0.742,521,1.112,522,1.112,523,1.112,524,1.538,525,0.729,526,0.742,527,0.742,528,1.112,529,0.729,530,0.742,531,0.742,532,0.594,533,0.729,534,1.325,535,1.325,536,1.112,537,0.715,538,0.715,539,0.715,540,1.112,541,0.729,542,0.729,543,0.729,544,1.033,545,1.349,546,0.715,547,0.715,548,0.729,549,0.742,550,0.742,551,0.729,552,0.729,553,0.742,554,0.742,555,0.742,556,0.742,557,1.112,558,0.715,559,0.715,560,1.325,561,1.112,562,0.715,563,0.729,564,0.729,565,1.112,566,0.742,567,0.386,568,0.729,569,0.64,570,1.639,571,1.656,572,1.615,573,1.805,574,1.052,575,0.742,576,0.729,577,0.617,578,0.729,579,0.729,580,1.349,581,0.742,582,0.742,583,1.112,584,0.742,585,0.742,586,0.729,587,0.742,588,1.615,589,0.742,590,1.747,591,0.742,592,0.742,593,0.742,594,0.742,595,0.742,596,1.349,597,0.742,598,0.742,599,0.742,600,0.742,601,0.742,602,0.729,603,0.742,604,0.742,605,0.742,606,0.742,607,0.742,608,0.742,609,0.742,610,0.742,611,0.742,612,0.742,613,0.742,614,0.729,615,0.742,616,1.327,617,0.742,618,0.742,619,0.742,620,0.742,621,0.742,622,1.112,623,0.742,624,0.729,625,0.742,626,0.742,627,0.742,628,0.742,629,0.742,630,0.729,631,0.729,632,0.742,633,0.742,634,0.742,635,0.729,636,0.729,637,0.742,638,0.742,639,0.729,640,0.742,641,0.742,642,0.742,643,0.742,644,0.729,645,0.742,646,0.729,647,0.742,648,0.742,649,0.729,650,0.742,651,0.742]],["title/interfaces/CustomHandlerInput.html",[232,0.161,909,2.858]],["body/interfaces/CustomHandlerInput.html",[0,0.377,3,0.051,4,0.051,5,0.051,7,0.07,8,0.599,18,0.838,24,4.226,25,0.717,29,0.007,31,0.217,33,0.19,45,1.094,51,0.961,55,3,57,1.355,58,1.221,59,1.975,61,1.039,67,0.108,68,3.047,76,1.56,79,1.261,109,1.071,166,4.386,184,0.878,190,1.208,191,0.005,192,0.006,193,0.005,232,0.301,234,0.717,239,0.94,280,4.234,567,0.755,661,2.977,714,3.64,716,3.837,717,1.935,718,3.188,734,3.656,870,4.234,909,4.552,910,3.657,911,5.186,912,5.157,913,3.657,914,3.402,915,5.516,916,4.578,917,4.737,918,5.186,919,3.806,920,4.956,921,3.806,922,3.806,923,3.806,924,4.737,925,3.806,926,3.657,927,4.552,928,3.968,929,4.234,930,4.552,931,4.552,932,3.806,933,4.737,934,3.657]],["title/interfaces/CustomeRequestEnvelope.html",[232,0.161,911,2.858]],["body/interfaces/CustomeRequestEnvelope.html",[0,0.377,3,0.051,4,0.051,5,0.051,7,0.07,8,0.599,18,0.838,24,4.03,25,0.717,29,0.007,31,0.217,33,0.19,45,1.094,51,0.961,55,2.917,57,1.355,58,1.221,59,1.975,61,1.039,67,0.108,68,3.047,76,1.56,79,1.261,109,1.071,166,4.386,184,0.878,190,1.208,191,0.005,192,0.006,193,0.005,232,0.301,234,0.717,239,1.102,280,4.234,567,0.755,661,2.977,714,3.64,716,3.837,717,1.935,718,3.188,734,3.656,870,4.234,909,3.657,910,3.657,911,4.956,912,5.157,913,3.657,914,3.402,915,5.516,916,4.578,917,4.737,918,5.186,919,5.157,920,4.956,921,3.806,922,3.806,923,3.806,924,4.737,925,3.806,926,3.657,927,4.552,928,3.968,929,4.234,930,4.552,931,4.552,932,3.806,933,4.737,934,3.657]],["title/classes/DBClient.html",[0,0.208,935,3.637]],["body/classes/DBClient.html",[0,0.255,2,1.115,3,0.049,4,0.049,5,0.049,7,0.067,8,0.583,11,5.814,14,1.099,16,2.891,17,4.18,18,1.266,22,2.898,25,0.765,26,1.201,28,1.635,29,0.007,30,0.539,31,0.222,32,1.025,33,0.299,40,2.722,41,1.099,45,1.077,51,0.821,58,0.94,67,0.093,75,5.997,76,1.75,79,1.091,90,2.52,91,2.52,92,1.97,93,2.52,94,2.401,95,2.52,96,2.52,97,4.595,102,5.814,104,4.122,125,4.319,126,5.075,152,5.143,184,0.785,191,0.006,192,0.006,193,0.004,199,5.533,232,0.25,273,1.333,308,3.747,532,1.625,664,3.646,670,6.006,935,5.64,936,4.781,937,6.969,938,5.865,939,6.848,940,6.5,941,7.417,942,7.342,943,5.865,944,5.865,945,5.865,946,5.865,947,5.865,948,5.865,949,6.5,950,5.865,951,4.781,952,4.781,953,4.781,954,4.781,955,4.781,956,6.631,957,4.781,958,6.631,959,4.781,960,6.046,961,4.781,962,4.781,963,6.046,964,4.781]],["title/interfaces/DBConfig.html",[232,0.161,940,3.637]],["body/interfaces/DBConfig.html",[0,0.271,3,0.052,4,0.052,5,0.052,7,0.071,8,0.607,11,6.109,16,2.656,17,3.58,18,1.145,22,2.44,25,0.822,29,0.007,31,0.203,32,1.153,33,0.293,45,0.972,51,0.854,58,1.001,67,0.096,75,6.109,76,1.79,79,1.122,90,2.683,91,2.683,92,2.098,93,2.683,94,2.556,95,2.683,96,2.683,97,4.699,102,5.946,104,4.287,125,3.897,126,5.17,152,5.084,184,0.816,191,0.006,192,0.006,193,0.005,199,4.247,232,0.26,234,0.587,273,1.386,308,3.897,532,1.707,664,3.882,670,5.829,935,4.748,936,5.09,937,7.322,939,6.647,940,6.364,942,7.558,949,5.865,951,5.09,952,5.09,953,5.09,954,5.09,955,5.09,956,6.823,957,5.09,958,6.823,959,5.09,960,6.288,961,5.09,962,5.09,963,6.288,964,5.09]],["title/interfaces/DBItem.html",[232,0.161,949,3.637]],["body/interfaces/DBItem.html",[0,0.277,3,0.053,4,0.053,5,0.053,11,5.322,16,2.678,17,3.632,18,1.157,22,2.497,25,0.736,26,0.839,29,0.007,33,0.292,45,0.986,51,0.866,58,1.024,67,0.097,75,6.149,76,1.804,79,1.134,90,2.746,91,2.746,92,2.147,93,2.746,94,2.616,95,2.746,96,2.746,97,4.737,102,5.994,104,4.348,125,3.953,126,5.204,152,5.113,184,0.828,191,0.007,192,0.006,193,0.005,199,4.346,232,0.264,234,0.601,272,4.579,273,1.519,308,3.953,532,1.487,664,3.973,670,5.867,935,4.859,936,5.209,937,6.378,939,6.701,940,5.949,942,7.37,949,6.43,951,5.209,952,5.209,953,5.209,954,5.209,955,5.209,956,6.894,957,5.209,958,6.894,959,5.209,960,6.378,961,5.209,962,5.209,963,6.378,964,5.209,965,6.39]],["title/classes/DeviceAPIClient.html",[0,0.208,966,4.251]],["body/classes/DeviceAPIClient.html",[0,0.299,2,1.307,3,0.057,4,0.057,5,0.057,7,0.079,8,0.643,14,1.212,16,2.652,17,4.344,18,1.281,26,1.146,28,1.644,29,0.007,30,0.542,31,0.212,32,1.03,33,0.294,41,1.212,45,1.138,51,0.905,57,1.124,58,1.102,60,3.375,61,1.168,67,0.079,79,1.097,109,1.009,190,1.357,191,0.005,192,0.006,193,0.005,196,5.938,203,2.132,532,1.717,966,7.268,967,6.878,968,8.729,969,8.729,970,8.179,971,6.878,972,6.878,973,6.878,974,8.027,975,6.878,976,6.878,977,6.878,978,6.878]],["title/interfaces/DynamoDBSkillConfig.html",[232,0.161,669,3.254]],["body/interfaces/DynamoDBSkillConfig.html",[3,0.058,4,0.058,5,0.058,7,0.079,8,0.647,25,0.654,29,0.007,31,0.213,33,0.287,51,0.911,57,1.344,58,1.114,67,0.104,109,1.081,191,0.005,192,0.006,193,0.005,232,0.306,234,0.654,241,2.913,652,6.495,653,4.509,654,4.979,655,4.726,656,5.283,657,6.842,658,4.736,659,5.597,660,5.115,661,3.216,662,4.509,663,4.979,664,5.115,665,5.897,666,5.597,667,5.283,668,5.283,669,5.963,670,5.882,671,4.979,672,4.509,673,4.726,674,4.726,675,4.726,676,4.726]],["title/interfaces/ErrorHandlerBuilder.html",[232,0.161,979,3.9]],["body/interfaces/ErrorHandlerBuilder.html",[0,0.235,3,0.045,4,0.045,5,0.045,7,0.062,14,1.045,18,0.741,24,2.515,26,1.029,28,1.417,29,0.007,30,0.467,31,0.19,32,0.888,33,0.29,41,1.162,45,0.683,51,0.952,55,2.963,57,1.356,58,1.256,59,1.748,61,0.92,67,0.101,68,2.167,76,1.885,79,1.221,94,3.208,191,0.004,192,0.005,193,0.004,232,0.183,234,0.51,239,0.668,249,3.883,250,4.795,273,0.974,567,0.87,569,1.109,574,1.195,658,4.058,660,5.773,683,3.959,714,2.272,716,3.566,717,1.713,719,5.366,721,4.682,734,3.398,735,4.383,775,4.383,787,6.388,807,3.79,809,4.461,817,5.349,820,4.575,825,2.272,829,4.12,874,3.883,898,4.12,979,7.322,980,6.766,981,4.417,982,6.964,983,5.419,984,6.265,985,5.419,986,7.19,987,5.419,988,6.265,989,4.815,990,4.815,991,4.815,992,4.815,993,6.766,994,4.815,995,6.265,996,4.575,997,6.265,998,4.815,999,6.265,1000,4.815,1001,6.265,1002,6.265,1003,6.265,1004,7.375,1005,6.265,1006,6.265,1007,6.265,1008,4.417,1009,6.388,1010,4.815,1011,4.815,1012,4.815,1013,4.815,1014,4.815,1015,4.815,1016,4.815,1017,4.815,1018,4.815,1019,6.265,1020,4.417,1021,4.815,1022,4.815,1023,4.815,1024,6.265,1025,4.417,1026,3.883,1027,4.815,1028,4.815,1029,4.815,1030,4.815,1031,4.815,1032,4.815,1033,3.517,1034,4.815,1035,4.815,1036,4.815,1037,4.815,1038,4.815,1039,4.815,1040,4.815,1041,4.815,1042,4.815,1043,4.815,1044,4.815]],["title/interfaces/Factory.html",[232,0.161,574,1.055]],["body/interfaces/Factory.html",[0,0.134,3,0.026,4,0.039,5,0.026,7,0.035,12,0.975,14,0.703,25,0.291,26,0.623,28,0.623,29,0.007,30,0.569,31,0.236,32,0.39,33,0.297,41,0.703,45,0.39,67,0.113,81,0.658,84,0.671,89,0.683,109,0.904,133,0.989,161,1.811,184,0.328,191,0.002,192,0.004,193,0.002,220,0.722,232,0.325,234,0.446,239,0.382,253,0.683,273,1.035,315,1.105,316,1.115,317,0.722,318,0.671,319,2.257,320,0.646,321,1.105,322,1.504,323,0.722,324,1.105,325,0.722,326,1.342,327,0.722,328,1.342,329,0.722,330,0.722,331,0.722,332,1.065,333,1.105,334,0.722,335,0.722,336,0.722,337,0.722,338,0.722,339,1.448,340,1.105,341,0.722,342,0.722,343,0.709,344,0.722,345,0.722,346,1.105,347,1.084,348,1.084,349,0.736,350,1.531,351,1.105,352,0.722,353,0.722,354,0.736,355,1.105,356,0.709,357,0.722,358,1.342,359,0.722,360,1.084,361,1.342,362,0.722,363,0.696,364,0.722,365,0.722,366,0.736,367,0.722,368,1.317,369,0.709,370,0.722,371,0.722,372,0.709,373,0.722,374,1.745,375,1.342,376,0.722,377,0.722,378,0.722,379,0.722,380,0.709,381,1.105,382,1.007,383,0.722,384,1.475,385,0.722,386,0.736,387,0.736,388,1.367,389,0.736,390,0.736,391,0.722,392,1.105,393,0.722,394,0.736,395,0.736,396,0.709,397,1.475,398,0.736,399,0.736,400,0.736,401,0.736,402,0.736,403,1.084,404,0.722,405,0.722,406,0.722,407,0.722,408,0.722,409,0.722,410,1.105,411,0.722,412,1.084,413,0.722,414,0.722,415,0.722,416,0.722,417,0.722,418,0.722,419,0.722,420,0.722,421,0.722,422,0.722,423,0.722,424,0.722,425,0.722,426,0.722,427,0.722,428,0.722,429,1.105,430,0.722,431,0.722,432,0.722,433,0.722,434,0.722,435,0.722,436,0.722,437,1.317,438,0.722,439,0.722,440,1.105,441,0.722,442,0.722,443,0.722,444,0.722,445,1.475,446,0.722,447,0.736,448,0.722,449,0.722,450,0.722,451,1.475,452,0.722,453,1.105,454,0.722,455,1.342,456,0.722,457,1.105,458,0.722,459,1.503,460,0.722,461,1.084,462,0.722,463,1.105,464,0.722,465,0.722,466,0.722,467,1.105,468,0.722,469,1.084,470,0.736,471,0.736,472,0.722,473,0.722,474,1.084,475,1.065,476,1.026,477,0.683,478,1.539,479,1.79,480,0.722,481,0.722,482,0.722,483,0.722,484,0.722,485,0.722,486,0.722,487,0.722,488,0.722,489,0.722,490,0.722,491,0.722,492,0.722,493,0.722,494,0.722,495,0.722,496,1.342,497,1.342,498,1.74,499,0.722,500,0.722,501,1.105,502,0.722,503,0.736,504,1.342,505,1.342,506,0.722,507,0.736,508,0.722,509,0.736,510,1.105,511,0.722,512,1.015,513,0.736,514,0.736,515,0.722,516,0.736,517,0.722,518,0.722,519,1.105,520,0.736,521,1.105,522,1.105,523,1.105,524,1.531,525,0.722,526,0.736,527,0.736,528,1.105,529,0.722,530,0.736,531,0.736,532,0.589,533,0.722,534,1.317,535,1.317,536,1.105,537,0.709,538,0.709,539,0.709,540,1.105,541,0.722,542,0.722,543,0.722,544,1.026,545,1.342,546,0.709,547,0.709,548,0.722,549,0.736,550,0.736,551,0.722,552,0.722,553,0.736,554,0.736,555,0.736,556,0.736,557,1.105,558,0.709,559,0.709,560,1.317,561,1.105,562,0.709,563,0.722,564,0.722,565,1.105,566,0.736,567,0.382,568,0.722,569,0.634,570,1.638,571,1.651,572,1.611,573,1.8,574,1.422,575,1.125,576,1.342,577,1.136,578,1.503,579,1.105,580,1.342,581,0.736,582,0.736,583,1.105,584,0.736,585,0.736,586,0.722,587,0.736,588,1.611,589,0.736,590,1.74,591,0.736,592,0.736,593,0.736,594,0.736,595,0.736,596,1.342,597,0.736,598,0.736,599,0.736,600,0.736,601,0.736,602,0.722,603,0.736,604,0.736,605,0.736,606,0.736,607,0.736,608,0.736,609,0.736,610,0.736,611,0.736,612,0.736,613,0.736,614,0.722,615,0.736,616,1.32,617,0.736,618,0.736,619,0.736,620,0.736,621,0.736,622,1.105,623,0.736,624,0.722,625,0.736,626,0.736,627,0.736,628,0.736,629,0.736,630,0.722,631,0.722,632,0.736,633,0.736,634,0.736,635,0.722,636,0.722,637,0.736,638,0.736,639,0.722,640,0.736,641,0.736,642,0.736,643,0.736,644,0.722,645,0.736,646,0.722,647,0.736,648,0.736,649,0.722,650,0.736,651,0.736,1045,4.212,1046,3.098,1047,3.098]],["title/classes/FallbackIntentFactory.html",[0,0.208,931,2.858]],["body/classes/FallbackIntentFactory.html",[0,0.375,2,1.146,3,0.05,4,0.05,5,0.05,7,0.069,14,1.119,18,0.825,24,3.824,25,0.775,26,0.991,28,1.212,29,0.007,30,0.399,31,0.216,32,0.76,33,0.187,41,1.119,45,1.088,51,0.956,55,2.901,57,1.346,58,1.21,59,1.945,61,1.024,67,0.108,68,3.018,76,1.545,79,1.258,109,1.016,166,4.344,184,0.872,190,1.189,191,0.004,192,0.006,193,0.004,232,0.3,234,0.567,239,0.931,280,4.579,567,0.744,661,2.95,714,3.62,716,3.954,717,1.906,718,3.14,734,3.713,870,4.941,909,3.602,910,3.602,911,4.509,912,5.122,913,3.602,914,3.351,915,5.607,916,4.565,917,4.692,918,5.311,919,3.749,920,5.158,921,3.749,922,4.692,923,3.749,924,4.692,925,3.749,926,3.602,927,4.509,928,3.931,929,4.195,930,4.509,931,4.922,932,3.749,933,4.692,934,3.602,1048,6.03,1049,6.03]],["title/interfaces/FlashBriefingContent.html",[232,0.161,1050,3.9]],["body/interfaces/FlashBriefingContent.html",[3,0.058,4,0.058,5,0.058,7,0.08,8,0.652,29,0.007,31,0.231,32,1.044,33,0.306,67,0.095,142,5.348,191,0.005,192,0.006,193,0.005,232,0.237,234,0.662,382,1.494,1050,7.183,1051,6.25,1052,4.784,1053,7.034,1054,8.288,1055,7.034,1056,7.034,1057,7.034,1058,7.034,1059,9.099,1060,9.099,1061,9.099,1062,9.099,1063,9.099,1064,9.099,1065,6.25]],["title/interfaces/Game.html",[232,0.161,339,1.074]],["body/interfaces/Game.html",[0,0.136,3,0.026,4,0.04,5,0.026,7,0.036,8,0.375,12,0.875,25,0.294,29,0.007,30,0.582,31,0.236,33,0.297,45,0.394,67,0.113,81,0.664,84,0.677,89,0.689,109,0.908,133,0.996,161,1.816,184,0.331,191,0.002,192,0.004,193,0.002,220,0.729,232,0.325,234,0.449,239,0.386,253,0.689,273,0.562,315,1.112,316,0.605,317,0.729,318,0.677,319,2.259,320,0.652,321,1.112,322,1.51,323,0.729,324,1.112,325,0.729,326,1.349,327,0.729,328,1.349,329,0.729,330,0.729,331,0.729,332,1.072,333,1.112,334,0.729,335,0.729,336,0.729,337,0.729,338,0.729,339,1.567,340,1.112,341,0.729,342,0.729,343,0.715,344,0.729,345,0.729,346,1.112,347,1.092,348,1.092,349,0.742,350,1.538,351,1.112,352,0.729,353,0.729,354,0.742,355,1.51,356,0.715,357,0.729,358,1.349,359,0.729,360,1.092,361,1.349,362,0.729,363,0.702,364,0.729,365,0.729,366,1.538,367,0.729,368,1.325,369,0.715,370,0.729,371,0.729,372,0.715,373,0.729,374,1.751,375,1.349,376,0.729,377,0.729,378,0.729,379,0.729,380,0.715,381,1.112,382,1.014,383,0.729,384,1.482,385,0.729,386,0.742,387,0.742,388,1.375,389,0.742,390,0.742,391,0.729,392,1.112,393,0.729,394,0.742,395,0.742,396,0.715,397,1.482,398,0.742,399,0.742,400,0.742,401,0.742,402,0.742,403,1.092,404,0.729,405,0.729,406,0.729,407,0.729,408,0.729,409,0.729,410,1.112,411,0.729,412,1.092,413,0.729,414,0.729,415,0.729,416,0.729,417,0.729,418,0.729,419,0.729,420,0.729,421,0.729,422,0.729,423,0.729,424,0.729,425,0.729,426,0.729,427,0.729,428,0.729,429,1.112,430,0.729,431,0.729,432,0.729,433,0.729,434,0.729,435,0.729,436,0.729,437,1.325,438,0.729,439,0.729,440,1.112,441,0.729,442,0.729,443,0.729,444,0.729,445,1.482,446,0.729,447,0.742,448,0.729,449,0.729,450,0.729,451,1.482,452,0.729,453,1.112,454,0.729,455,1.349,456,0.729,457,1.112,458,0.729,459,1.51,460,0.729,461,1.092,462,0.729,463,1.112,464,0.729,465,0.729,466,0.729,467,1.112,468,0.729,469,1.092,470,0.742,471,0.742,472,0.729,473,0.729,474,1.092,475,1.072,476,1.033,477,0.689,478,1.541,479,1.792,480,0.729,481,0.729,482,0.729,483,0.729,484,0.729,485,0.729,486,0.729,487,0.729,488,0.729,489,0.729,490,0.729,491,0.729,492,0.729,493,0.729,494,0.729,495,0.729,496,1.349,497,1.349,498,1.747,499,0.729,500,0.729,501,1.112,502,0.729,503,0.742,504,1.349,505,1.349,506,0.729,507,0.742,508,0.729,509,0.742,510,1.112,511,0.729,512,1.021,513,0.742,514,0.742,515,0.729,516,0.742,517,0.729,518,0.729,519,1.112,520,0.742,521,1.112,522,1.112,523,1.112,524,1.538,525,0.729,526,0.742,527,0.742,528,1.112,529,0.729,530,0.742,531,0.742,532,0.594,533,0.729,534,1.325,535,1.325,536,1.112,537,0.715,538,0.715,539,0.715,540,1.112,541,0.729,542,0.729,543,0.729,544,1.033,545,1.349,546,0.715,547,0.715,548,0.729,549,0.742,550,0.742,551,0.729,552,0.729,553,0.742,554,0.742,555,0.742,556,0.742,557,1.112,558,0.715,559,0.715,560,1.325,561,1.112,562,0.715,563,0.729,564,0.729,565,1.112,566,0.742,567,0.386,568,0.729,569,0.64,570,1.639,571,1.656,572,1.615,573,1.805,574,1.052,575,0.742,576,0.729,577,0.617,578,0.729,579,0.729,580,1.349,581,0.742,582,0.742,583,1.112,584,0.742,585,0.742,586,0.729,587,0.742,588,1.615,589,0.742,590,1.747,591,0.742,592,0.742,593,0.742,594,0.742,595,0.742,596,1.349,597,0.742,598,0.742,599,0.742,600,0.742,601,0.742,602,0.729,603,0.742,604,0.742,605,0.742,606,0.742,607,0.742,608,0.742,609,0.742,610,0.742,611,0.742,612,0.742,613,0.742,614,0.729,615,0.742,616,1.327,617,0.742,618,0.742,619,0.742,620,0.742,621,0.742,622,1.112,623,0.742,624,0.729,625,0.742,626,0.742,627,0.742,628,0.742,629,0.742,630,0.729,631,0.729,632,0.742,633,0.742,634,0.742,635,0.729,636,0.729,637,0.742,638,0.742,639,0.729,640,0.742,641,0.742,642,0.742,643,0.742,644,0.729,645,0.742,646,0.729,647,0.742,648,0.742,649,0.729,650,0.742,651,0.742]],["title/interfaces/GameInvite.html",[232,0.161,364,1.115]],["body/interfaces/GameInvite.html",[0,0.135,3,0.026,4,0.04,5,0.026,7,0.036,8,0.374,12,0.874,25,0.293,29,0.007,30,0.563,31,0.236,33,0.296,45,0.393,67,0.113,81,0.662,84,0.674,89,0.687,109,0.906,133,0.993,161,1.814,184,0.33,191,0.002,192,0.004,193,0.002,220,0.726,232,0.325,234,0.448,239,0.384,253,0.687,273,0.56,315,1.11,316,0.603,317,0.726,318,0.674,319,2.258,320,0.65,321,1.11,322,1.508,323,0.726,324,1.11,325,0.726,326,1.347,327,0.726,328,1.347,329,0.726,330,0.726,331,0.726,332,1.453,333,1.11,334,0.726,335,0.726,336,0.726,337,0.726,338,0.726,339,1.453,340,1.11,341,0.726,342,0.726,343,0.713,344,0.726,345,0.726,346,1.11,347,1.089,348,1.089,349,0.74,350,1.536,351,1.11,352,0.726,353,0.726,354,0.74,355,1.11,356,0.713,357,0.726,358,1.837,359,0.726,360,1.089,361,1.837,362,0.726,363,0.7,364,1.11,365,1.508,366,0.74,367,0.726,368,1.322,369,0.713,370,0.726,371,0.726,372,0.713,373,0.726,374,1.749,375,1.347,376,0.726,377,0.726,378,0.726,379,0.726,380,0.713,381,1.11,382,1.012,383,0.726,384,1.48,385,0.726,386,0.74,387,0.74,388,1.372,389,0.74,390,0.74,391,0.726,392,1.11,393,0.726,394,0.74,395,0.74,396,0.713,397,1.48,398,0.74,399,0.74,400,0.74,401,0.74,402,0.74,403,1.089,404,0.726,405,0.726,406,0.726,407,0.726,408,0.726,409,0.726,410,1.11,411,0.726,412,1.089,413,0.726,414,0.726,415,0.726,416,0.726,417,0.726,418,0.726,419,0.726,420,0.726,421,0.726,422,0.726,423,0.726,424,0.726,425,0.726,426,0.726,427,0.726,428,0.726,429,1.11,430,0.726,431,0.726,432,0.726,433,0.726,434,0.726,435,0.726,436,0.726,437,1.322,438,0.726,439,0.726,440,1.11,441,0.726,442,0.726,443,0.726,444,0.726,445,1.48,446,0.726,447,0.74,448,0.726,449,0.726,450,0.726,451,1.48,452,0.726,453,1.11,454,0.726,455,1.347,456,0.726,457,1.11,458,0.726,459,1.508,460,0.726,461,1.089,462,0.726,463,1.11,464,0.726,465,0.726,466,0.726,467,1.11,468,0.726,469,1.089,470,0.74,471,0.74,472,0.726,473,0.726,474,1.089,475,1.069,476,1.031,477,0.687,478,1.54,479,1.791,480,0.726,481,0.726,482,0.726,483,0.726,484,0.726,485,0.726,486,0.726,487,0.726,488,0.726,489,0.726,490,0.726,491,0.726,492,0.726,493,0.726,494,0.726,495,0.726,496,1.347,497,1.347,498,1.744,499,0.726,500,0.726,501,1.11,502,0.726,503,0.74,504,1.347,505,1.347,506,0.726,507,0.74,508,0.726,509,0.74,510,1.11,511,0.726,512,1.019,513,0.74,514,0.74,515,0.726,516,0.74,517,0.726,518,0.726,519,1.11,520,0.74,521,1.11,522,1.11,523,1.11,524,1.536,525,0.726,526,0.74,527,0.74,528,1.11,529,0.726,530,0.74,531,0.74,532,0.592,533,0.726,534,1.322,535,1.322,536,1.11,537,0.713,538,0.713,539,0.713,540,1.11,541,0.726,542,0.726,543,0.726,544,1.031,545,1.347,546,0.713,547,0.713,548,0.726,549,0.74,550,0.74,551,0.726,552,0.726,553,0.74,554,0.74,555,0.74,556,0.74,557,1.11,558,0.713,559,0.713,560,1.322,561,1.11,562,0.713,563,0.726,564,0.726,565,1.11,566,0.74,567,0.384,568,0.726,569,0.638,570,1.639,571,1.654,572,1.614,573,1.803,574,1.05,575,0.74,576,0.726,577,0.615,578,0.726,579,0.726,580,1.347,581,0.74,582,0.74,583,1.11,584,0.74,585,0.74,586,0.726,587,0.74,588,1.614,589,0.74,590,1.744,591,0.74,592,0.74,593,0.74,594,0.74,595,0.74,596,1.347,597,0.74,598,0.74,599,0.74,600,0.74,601,0.74,602,0.726,603,0.74,604,0.74,605,0.74,606,0.74,607,0.74,608,0.74,609,0.74,610,0.74,611,0.74,612,0.74,613,0.74,614,0.726,615,0.74,616,1.325,617,0.74,618,0.74,619,0.74,620,0.74,621,0.74,622,1.11,623,0.74,624,0.726,625,0.74,626,0.74,627,0.74,628,0.74,629,0.74,630,0.726,631,0.726,632,0.74,633,0.74,634,0.74,635,0.726,636,0.726,637,0.74,638,0.74,639,0.726,640,0.74,641,0.74,642,0.74,643,0.74,644,0.726,645,0.74,646,0.726,647,0.74,648,0.74,649,0.726,650,0.74,651,0.74]],["title/interfaces/GameStatistic.html",[232,0.161,455,1.115]],["body/interfaces/GameStatistic.html",[0,0.136,3,0.026,4,0.04,5,0.026,7,0.036,8,0.375,12,0.875,25,0.294,29,0.007,30,0.564,31,0.236,33,0.296,45,0.394,67,0.113,81,0.664,84,0.677,89,0.689,109,0.908,133,0.996,161,1.884,184,0.331,191,0.002,192,0.004,193,0.002,220,0.729,232,0.325,234,0.449,239,0.386,253,0.689,273,0.562,315,1.112,316,0.605,317,0.729,318,0.677,319,2.259,320,0.652,321,1.112,322,1.51,323,0.729,324,1.112,325,0.729,326,1.349,327,0.729,328,1.349,329,0.729,330,0.729,331,0.729,332,1.072,333,1.112,334,0.729,335,0.729,336,0.729,337,0.729,338,0.729,339,1.455,340,1.112,341,0.729,342,0.729,343,0.715,344,0.729,345,0.729,346,1.112,347,1.092,348,1.092,349,0.742,350,1.538,351,1.112,352,0.729,353,0.729,354,0.742,355,1.112,356,0.715,357,0.729,358,1.349,359,0.729,360,1.092,361,1.349,362,0.729,363,0.702,364,0.729,365,0.729,366,0.742,367,0.729,368,1.325,369,0.715,370,0.729,371,0.729,372,0.715,373,0.729,374,1.751,375,1.349,376,0.729,377,0.729,378,0.729,379,0.729,380,0.715,381,1.112,382,1.014,383,0.729,384,1.482,385,0.729,386,0.742,387,0.742,388,1.375,389,0.742,390,0.742,391,0.729,392,1.112,393,0.729,394,0.742,395,0.742,396,0.715,397,1.482,398,0.742,399,0.742,400,0.742,401,0.742,402,0.742,403,1.092,404,0.729,405,0.729,406,0.729,407,0.729,408,0.729,409,0.729,410,1.112,411,0.729,412,1.092,413,0.729,414,0.729,415,0.729,416,0.729,417,0.729,418,0.729,419,0.729,420,0.729,421,0.729,422,0.729,423,0.729,424,0.729,425,0.729,426,0.729,427,0.729,428,0.729,429,1.112,430,0.729,431,0.729,432,0.729,433,0.729,434,0.729,435,0.729,436,0.729,437,1.325,438,0.729,439,0.729,440,1.112,441,0.729,442,0.729,443,0.729,444,0.729,445,1.482,446,0.729,447,0.742,448,0.729,449,0.729,450,0.729,451,1.482,452,0.729,453,1.112,454,0.729,455,1.51,456,0.729,457,1.51,458,1.51,459,1.783,460,0.729,461,1.092,462,0.729,463,1.112,464,0.729,465,0.729,466,0.729,467,1.112,468,0.729,469,1.092,470,0.742,471,0.742,472,0.729,473,0.729,474,1.092,475,1.072,476,1.033,477,0.689,478,1.541,479,1.792,480,0.729,481,0.729,482,0.729,483,0.729,484,0.729,485,0.729,486,0.729,487,0.729,488,0.729,489,0.729,490,0.729,491,0.729,492,0.729,493,0.729,494,0.729,495,0.729,496,1.349,497,1.349,498,1.747,499,0.729,500,0.729,501,1.112,502,0.729,503,0.742,504,1.349,505,1.349,506,0.729,507,0.742,508,0.729,509,0.742,510,1.112,511,0.729,512,1.021,513,0.742,514,0.742,515,0.729,516,0.742,517,0.729,518,0.729,519,1.112,520,0.742,521,1.112,522,1.112,523,1.112,524,1.538,525,0.729,526,0.742,527,0.742,528,1.112,529,0.729,530,0.742,531,0.742,532,0.594,533,0.729,534,1.325,535,1.325,536,1.112,537,0.715,538,0.715,539,0.715,540,1.112,541,0.729,542,0.729,543,0.729,544,1.033,545,1.349,546,0.715,547,0.715,548,0.729,549,0.742,550,0.742,551,0.729,552,0.729,553,0.742,554,0.742,555,0.742,556,0.742,557,1.112,558,0.715,559,0.715,560,1.325,561,1.112,562,0.715,563,0.729,564,0.729,565,1.112,566,0.742,567,0.386,568,0.729,569,0.64,570,1.639,571,1.656,572,1.615,573,1.805,574,1.052,575,0.742,576,0.729,577,0.617,578,0.729,579,0.729,580,1.349,581,0.742,582,0.742,583,1.112,584,0.742,585,0.742,586,0.729,587,0.742,588,1.615,589,0.742,590,1.747,591,0.742,592,0.742,593,0.742,594,0.742,595,0.742,596,1.349,597,0.742,598,0.742,599,0.742,600,0.742,601,0.742,602,0.729,603,0.742,604,0.742,605,0.742,606,0.742,607,0.742,608,0.742,609,0.742,610,0.742,611,0.742,612,0.742,613,0.742,614,0.729,615,0.742,616,1.327,617,0.742,618,0.742,619,0.742,620,0.742,621,0.742,622,1.112,623,0.742,624,0.729,625,0.742,626,0.742,627,0.742,628,0.742,629,0.742,630,0.729,631,0.729,632,0.742,633,0.742,634,0.742,635,0.729,636,0.729,637,0.742,638,0.742,639,0.729,640,0.742,641,0.742,642,0.742,643,0.742,644,0.729,645,0.742,646,0.729,647,0.742,648,0.742,649,0.729,650,0.742,651,0.742]],["title/interfaces/Goal.html",[232,0.161,448,1.115]],["body/interfaces/Goal.html",[0,0.136,3,0.026,4,0.04,5,0.026,7,0.036,8,0.375,12,0.875,25,0.294,29,0.007,30,0.564,31,0.236,33,0.297,45,0.394,67,0.113,81,0.664,84,0.677,89,0.689,109,0.908,133,0.996,161,1.884,184,0.331,191,0.002,192,0.004,193,0.002,220,0.729,232,0.325,234,0.449,239,0.386,253,0.689,273,0.562,315,1.112,316,0.605,317,0.729,318,0.677,319,2.259,320,0.652,321,1.112,322,1.51,323,0.729,324,1.112,325,0.729,326,1.349,327,0.729,328,1.349,329,0.729,330,0.729,331,0.729,332,1.072,333,1.112,334,0.729,335,0.729,336,0.729,337,0.729,338,0.729,339,1.455,340,1.112,341,0.729,342,0.729,343,0.715,344,0.729,345,0.729,346,1.112,347,1.092,348,1.092,349,0.742,350,1.538,351,1.112,352,0.729,353,0.729,354,0.742,355,1.112,356,0.715,357,0.729,358,1.349,359,0.729,360,1.092,361,1.349,362,0.729,363,0.702,364,0.729,365,0.729,366,0.742,367,0.729,368,1.325,369,0.715,370,0.729,371,0.729,372,0.715,373,0.729,374,1.751,375,1.349,376,0.729,377,0.729,378,0.729,379,0.729,380,0.715,381,1.112,382,1.014,383,0.729,384,1.482,385,0.729,386,0.742,387,0.742,388,1.375,389,0.742,390,0.742,391,0.729,392,1.112,393,0.729,394,0.742,395,0.742,396,0.715,397,1.482,398,0.742,399,0.742,400,0.742,401,0.742,402,0.742,403,1.092,404,0.729,405,0.729,406,0.729,407,0.729,408,0.729,409,0.729,410,1.112,411,0.729,412,1.092,413,0.729,414,0.729,415,0.729,416,0.729,417,0.729,418,0.729,419,0.729,420,0.729,421,0.729,422,0.729,423,0.729,424,0.729,425,0.729,426,0.729,427,0.729,428,0.729,429,1.112,430,0.729,431,0.729,432,0.729,433,0.729,434,0.729,435,0.729,436,0.729,437,1.325,438,0.729,439,0.729,440,1.112,441,0.729,442,0.729,443,0.729,444,0.729,445,1.482,446,0.729,447,0.742,448,1.112,449,1.51,450,1.51,451,1.482,452,0.729,453,1.112,454,0.729,455,1.349,456,0.729,457,1.112,458,0.729,459,1.51,460,0.729,461,1.092,462,0.729,463,1.112,464,0.729,465,0.729,466,0.729,467,1.112,468,0.729,469,1.092,470,0.742,471,0.742,472,0.729,473,0.729,474,1.092,475,1.072,476,1.033,477,0.689,478,1.541,479,1.792,480,0.729,481,0.729,482,0.729,483,0.729,484,0.729,485,0.729,486,0.729,487,0.729,488,0.729,489,0.729,490,0.729,491,0.729,492,0.729,493,0.729,494,0.729,495,0.729,496,1.349,497,1.349,498,1.747,499,0.729,500,0.729,501,1.112,502,0.729,503,0.742,504,1.349,505,1.349,506,0.729,507,0.742,508,0.729,509,0.742,510,1.112,511,0.729,512,1.021,513,0.742,514,0.742,515,0.729,516,0.742,517,0.729,518,0.729,519,1.112,520,0.742,521,1.112,522,1.112,523,1.112,524,1.538,525,0.729,526,0.742,527,0.742,528,1.112,529,0.729,530,0.742,531,0.742,532,0.594,533,0.729,534,1.325,535,1.325,536,1.112,537,0.715,538,0.715,539,0.715,540,1.112,541,0.729,542,0.729,543,0.729,544,1.033,545,1.349,546,0.715,547,0.715,548,0.729,549,0.742,550,0.742,551,0.729,552,0.729,553,0.742,554,0.742,555,0.742,556,0.742,557,1.112,558,0.715,559,0.715,560,1.325,561,1.112,562,0.715,563,0.729,564,0.729,565,1.112,566,0.742,567,0.386,568,0.729,569,0.64,570,1.639,571,1.656,572,1.615,573,1.805,574,1.052,575,0.742,576,0.729,577,0.617,578,0.729,579,0.729,580,1.349,581,0.742,582,0.742,583,1.112,584,0.742,585,0.742,586,0.729,587,0.742,588,1.615,589,0.742,590,1.747,591,0.742,592,0.742,593,0.742,594,0.742,595,0.742,596,1.349,597,0.742,598,0.742,599,0.742,600,0.742,601,0.742,602,0.729,603,0.742,604,0.742,605,0.742,606,0.742,607,0.742,608,0.742,609,0.742,610,0.742,611,0.742,612,0.742,613,0.742,614,0.729,615,0.742,616,1.327,617,0.742,618,0.742,619,0.742,620,0.742,621,0.742,622,1.112,623,0.742,624,0.729,625,0.742,626,0.742,627,0.742,628,0.742,629,0.742,630,0.729,631,0.729,632,0.742,633,0.742,634,0.742,635,0.729,636,0.729,637,0.742,638,0.742,639,0.729,640,0.742,641,0.742,642,0.742,643,0.742,644,0.729,645,0.742,646,0.729,647,0.742,648,0.742,649,0.729,650,0.742,651,0.742]],["title/classes/HandlerBuilder.html",[0,0.208,713,2.659]],["body/classes/HandlerBuilder.html",[0,0.322,2,1.117,3,0.049,4,0.049,5,0.049,7,0.067,8,0.584,14,1.101,16,2.475,18,1.337,25,0.553,26,1.216,28,1.719,29,0.007,30,0.567,31,0.227,32,1.078,41,0.872,45,0.936,51,0.822,55,3.075,57,1.214,58,1.191,59,1.896,61,0.998,67,0.101,68,2.351,76,1.204,79,1.227,176,5.272,183,2.658,184,0.786,190,1.688,191,0.004,192,0.006,193,0.004,203,2.524,239,0.725,567,0.916,661,3.183,713,4.526,714,4.037,715,5.54,716,4.177,717,1.859,719,5.112,720,5.285,721,4.866,722,5.285,723,5.285,731,3.999,732,4.526,734,3.041,735,3.655,737,3.999,739,3.999,752,3.999,825,2.465,1066,4.793,1067,5.88,1068,5.88,1069,5.88,1070,5.88,1071,5.88,1072,5.88,1073,5.88,1074,5.88,1075,4.793,1076,4.793,1077,4.793,1078,6.056,1079,4.793,1080,4.793,1081,4.793,1082,4.793,1083,4.793,1084,4.793,1085,4.471,1086,4.821,1087,6.056]],["title/classes/HandlerBuilder-1.html",[0,0.174,194,2.158,713,2.231]],["body/classes/HandlerBuilder-1.html",[0,0.256,2,1.121,3,0.049,4,0.049,5,0.049,7,0.067,8,0.585,14,1.104,16,2.741,18,1.335,26,1.228,28,1.722,29,0.007,30,0.567,31,0.225,32,1.079,41,0.875,51,0.824,55,2.741,57,0.964,58,0.946,59,1.903,61,1.002,67,0.085,68,2.359,79,1.228,176,5.277,183,2.667,184,0.624,190,1.742,191,0.004,192,0.006,193,0.004,203,2.655,239,0.728,280,4.138,661,3.188,713,4.533,714,4.038,715,5.548,716,4.192,719,5.118,720,5.294,721,4.873,722,5.294,723,5.294,731,4.013,732,4.533,734,3.048,735,3.668,737,4.013,739,4.013,752,4.013,1009,6.65,1075,4.81,1076,4.81,1077,4.81,1078,4.81,1079,4.81,1080,4.81,1081,4.81,1082,4.81,1083,4.81,1084,4.81,1085,4.486,1088,5.9,1089,6.65,1090,5.9,1091,5.9,1092,5.9,1093,5.9,1094,5.9,1095,5.9,1096,5.9,1097,5.9,1098,5.9,1099,5.846,1100,6.65,1101,5.9,1102,5.9]],["title/interfaces/HandlerBuilderInterface.html",[232,0.161,1089,3.9]],["body/interfaces/HandlerBuilderInterface.html",[3,0.054,4,0.054,5,0.054,7,0.074,8,0.619,14,1.166,25,0.607,26,1.191,28,1.777,29,0.007,30,0.586,31,0.232,32,1.114,41,1.344,45,1.07,51,0.871,55,3.046,57,1.286,58,1.261,59,2.081,61,1.095,67,0.104,176,4.701,191,0.005,192,0.006,193,0.005,232,0.217,234,0.607,567,1.047,661,3.318,714,4.066,716,4.202,719,5.282,720,5.107,721,4.701,722,5.107,723,5.107,731,5.352,732,4.719,734,2.641,735,4.892,737,5.352,739,5.352,1089,7.784,1099,5.639,1100,5.258,1103,5.732,1104,6.45,1105,6.45,1106,6.45,1107,6.45,1108,6.45]],["title/classes/HandlerFactory.html",[0,0.208,1086,3.104]],["body/classes/HandlerFactory.html",[0,0.343,2,1.235,3,0.054,4,0.054,5,0.054,7,0.074,14,1.172,16,1.975,18,1.291,25,0.611,26,0.854,29,0.007,31,0.192,41,0.963,45,0.996,51,0.875,55,3.141,57,1.292,58,1.267,59,2.096,61,1.103,67,0.104,68,2.599,76,1.331,79,1.253,176,5.09,183,2.938,184,0.836,190,1.282,191,0.005,192,0.006,193,0.005,239,0.802,567,0.975,661,3.089,713,4.735,714,3.92,715,4.421,716,4.084,717,2.693,719,3.883,720,4.218,721,3.883,722,4.218,723,4.218,732,3.612,734,2.661,752,4.421,825,3.716,1066,5.298,1075,5.298,1076,5.298,1077,5.298,1078,6.444,1079,5.298,1080,5.298,1081,5.298,1082,5.298,1083,5.298,1084,5.298,1085,4.942,1086,5.529,1087,6.444,1109,6.499]],["title/classes/HandlerFactory-1.html",[0,0.174,194,2.158,1086,2.605]],["body/classes/HandlerFactory-1.html",[0,0.378,2,1.302,3,0.057,4,0.057,5,0.057,7,0.078,14,1.209,18,1.192,26,0.9,28,1.377,29,0.007,30,0.454,31,0.219,32,0.863,33,0.293,40,3.18,41,1.015,51,0.964,61,1.163,67,0.107,79,1.209,183,3.097,184,0.954,191,0.005,192,0.006,193,0.005,708,4.535,713,5.122,717,2.914,825,3.864,928,3.568,1086,5.295,1110,5.585,1111,6.851,1112,5.729,1113,6.851,1114,5.847,1115,5.55,1116,6.652,1117,5.209,1118,5.585,1119,3.807,1120,5.585,1121,4.909,1122,5.585,1123,4.66]],["title/interfaces/HandlerHelpers.html",[232,0.161,1124,3.428]],["body/interfaces/HandlerHelpers.html",[3,0.057,4,0.057,5,0.057,7,0.079,8,0.644,25,0.77,29,0.007,31,0.199,33,0.271,45,1.031,51,0.967,55,3.036,57,1.508,58,1.479,61,1.389,67,0.103,92,2.313,191,0.005,192,0.006,193,0.005,232,0.305,234,0.648,239,0.849,267,3.112,512,1.443,567,1.01,734,2.818,746,3.586,916,3.378,996,4.468,1112,4.28,1124,6.258,1125,4.934,1126,5.124,1127,4.683,1128,5.311,1129,5.235,1130,5.94,1131,5.865,1132,5.235,1133,4.28,1134,5.865,1135,4.468,1136,5.235]],["title/classes/HandlerInputFactory.html",[0,0.208,1137,4.251]],["body/classes/HandlerInputFactory.html",[0,0.248,1,6.479,2,1.086,3,0.048,4,0.048,5,0.048,7,0.065,8,0.574,9,3.003,14,1.081,16,2.825,18,1.309,22,2.233,24,4.377,26,1.221,28,1.758,29,0.007,30,0.579,31,0.224,32,1.171,40,2.652,41,1.081,51,0.99,55,2.844,56,2.886,57,1.429,58,1.434,59,1.843,60,3.579,61,1.437,67,0.065,76,1.831,79,1.199,124,4.054,184,0.604,191,0.004,192,0.005,193,0.004,237,5.494,239,0.705,267,2.582,532,1.527,544,1.739,681,2.975,718,4.185,759,7.773,916,3.579,1137,6.482,1138,5.713,1139,9.37,1140,7.73,1141,8.466,1142,8.036,1143,8.036,1144,6.11,1145,7.294,1146,7.294,1147,5.713,1148,5.713,1149,5.713,1150,5.713,1151,5.713,1152,7.141,1153,5.713,1154,5.713,1155,5.713,1156,5.713,1157,8.036,1158,5.713,1159,5.713,1160,5.713,1161,5.713,1162,5.713,1163,5.713,1164,5.713,1165,5.713,1166,5.713,1167,7.294,1168,5.713,1169,5.713,1170,5.713,1171,5.713,1172,7.294,1173,7.141,1174,5.713,1175,5.713,1176,5.713,1177,5.713,1178,5.713]],["title/classes/ISPContentBuilder.html",[0,0.208,861,3.637]],["body/classes/ISPContentBuilder.html",[0,0.252,2,0.776,3,0.034,4,0.034,5,0.034,7,0.047,8,0.457,9,3.358,12,1.26,14,0.862,16,2.888,18,1.329,19,5.017,22,2.646,25,0.547,26,1.254,28,1.675,29,0.007,30,0.595,31,0.218,32,1.121,33,0.293,40,2.699,41,1.285,51,0.749,57,0.95,58,0.932,59,1.317,60,2.004,61,0.693,64,5.774,65,2.778,67,0.084,71,2.44,76,1.386,79,1.268,92,2.722,100,3.954,101,5.691,109,0.717,113,3.954,126,3.346,131,2.778,135,4.044,159,2.926,172,6.542,183,2.628,184,0.615,185,3.954,190,1.147,191,0.003,192,0.004,193,0.003,203,1.266,232,0.138,246,4.443,258,2.778,261,2.539,382,0.868,477,0.9,567,1.028,577,1.147,679,4.68,680,3.762,681,4.811,683,3.726,684,4.099,685,3.473,686,3.473,687,3.473,688,3.473,689,4.719,690,4.515,691,2.65,692,2.65,693,2.65,696,2.65,697,2.65,698,2.539,699,2.65,700,2.539,701,2.65,702,2.44,703,2.539,704,2.65,705,2.539,706,2.65,758,2.65,773,3.105,774,3.105,775,3.614,777,3.105,778,4.166,806,4.846,807,4.871,808,4.84,809,4.871,812,4.663,815,4.166,819,3.105,820,3.773,833,2.926,843,2.926,844,2.926,850,2.926,851,2.926,853,2.926,854,2.926,855,3.329,861,5.148,862,3.329,863,6.013,864,4.739,865,5.519,866,5.519,867,6.013,868,5.609,869,4.739,870,3.231,871,6.013,872,3.329,873,3.329,874,2.926,875,5.927,876,4.739,877,6.013,878,3.329,879,6.605,880,6.013,881,3.329,882,6.013,883,4.739,884,6.013,885,3.329,886,6.013,887,3.329,888,6.013,889,6.013,890,3.329,891,5.519,892,6.013,893,3.329,894,6.013,895,3.329,1179,5.814,1180,4.084,1181,4.084,1182,4.084,1183,4.084,1184,4.084,1185,4.084,1186,4.084,1187,4.084,1188,4.084,1189,4.084,1190,4.084,1191,4.084,1192,4.084,1193,4.084,1194,4.084,1195,4.084,1196,4.084]],["title/classes/ISPProductClient.html",[0,0.208,108,3.637]],["body/classes/ISPProductClient.html",[0,0.226,1,5.933,2,0.666,3,0.029,4,0.029,5,0.029,6,2.858,7,0.04,8,0.409,9,3.56,10,4.718,11,5.677,12,0.938,13,4.221,14,0.771,15,5.058,16,1.885,17,4.378,18,1.314,19,4.221,20,5.058,21,5.597,22,2.425,24,2.88,25,0.723,26,1.232,28,1.707,29,0.007,30,0.589,31,0.227,32,1.07,33,0.298,37,3.116,39,7.012,40,2.88,41,1.329,42,4.718,43,3.116,45,1.171,46,3.116,48,3.116,51,0.812,52,3.957,53,2.275,54,2.858,55,2.581,56,3.135,57,0.85,58,0.834,59,1.131,60,1.72,61,0.595,62,3.116,63,3.116,64,3.377,65,2.385,66,5.221,67,0.071,68,2.081,69,4.242,70,2.858,71,3.109,72,2.666,73,2.858,74,2.858,75,4.221,76,1.805,77,4.221,78,3.116,79,1.273,80,3.116,81,0.745,82,3.116,83,2.666,84,0.759,85,2.666,86,2.858,87,2.858,88,2.666,89,0.773,90,3.151,91,3.649,92,2.464,93,3.151,94,3.002,95,1.507,96,1.507,97,4.276,98,3.116,99,4.624,100,4.67,101,5.682,102,3.539,103,5.221,104,4.421,105,2.666,106,3.957,107,4.624,108,4.718,109,0.642,110,4.221,111,6.517,112,7.417,113,5.861,114,6.101,115,3.116,116,3.116,117,3.116,118,2.513,119,3.116,120,6.101,121,6.517,122,4.624,123,6.101,124,4.421,125,4.018,126,4.578,127,6.827,128,6.101,129,4.624,130,6.101,131,3.539,132,4.624,133,1.085,134,4.624,135,3.109,136,6.101,137,4.624,138,6.101,139,6.517,140,3.116,141,4.718,142,3.957,143,4.624,144,6.101,145,3.729,146,3.116,147,6.101,148,4.624,149,4.624,150,3.116,151,3.116,152,4.27,153,5.514,154,3.858,155,3.116,156,3.116,157,6.101,158,3.116,159,5.855,160,5.597,161,1.935,162,6.827,163,5.514,164,5.514,165,4.221,166,2.995,167,3.116,168,4.624,169,5.514,170,4.624,171,3.116,172,5.506,173,5.514,174,2.513,175,3.729,176,4.752,177,6.101,178,4.624,179,5.514,180,4.624,181,4.624,182,4.624,183,2.352,184,0.551,185,2.385,186,3.116,187,3.116,188,3.116,189,3.116,190,1.224,191,0.003,192,0.004,193,0.003,203,1.613,690,4.347,1052,4.67,1197,6.205,1198,3.506,1199,5.204,1200,3.506,1201,3.506,1202,3.506,1203,3.506,1204,3.506,1205,3.506,1206,3.506,1207,3.506,1208,3.506,1209,3.506,1210,3.506,1211,3.506,1212,3.506,1213,3.506,1214,3.506,1215,3.506,1216,3.506,1217,3.506,1218,3.506,1219,3.506,1220,3.506,1221,3.506,1222,3.377,1223,3.506,1224,3.506,1225,3.506,1226,3.506,1227,3.506,1228,3.506]],["title/interfaces/InitialState.html",[232,0.161,1229,3.428]],["body/interfaces/InitialState.html",[0,0.252,3,0.048,4,0.048,5,0.048,7,0.066,8,0.58,9,3.184,18,1.294,22,2.272,25,0.802,29,0.007,31,0.197,32,1.074,33,0.229,51,0.644,56,4.093,57,0.95,58,0.932,59,1.876,67,0.097,76,1.924,79,1.28,90,2.498,91,2.498,92,3.133,93,2.498,94,2.38,95,2.498,96,2.498,110,5.982,118,4.167,125,3.727,191,0.004,192,0.005,193,0.004,232,0.249,234,0.547,241,4.063,257,3.774,308,2.938,512,1.683,1126,3.126,1133,5.743,1229,6.44,1230,4.421,1231,6.48,1232,6.605,1233,6.947,1234,4.74,1235,6.014,1236,6.014,1237,6.014,1238,4.74,1239,6.014,1240,4.74,1241,6.161,1242,4.74,1243,4.74,1244,6.014,1245,4.421,1246,7.169,1247,4.74,1248,4.74,1249,4.74,1250,4.74,1251,4.74,1252,6.947,1253,4.421,1254,4.74,1255,4.74,1256,4.74,1257,4.74,1258,4.74,1259,4.74,1260,4.74,1261,4.74,1262,4.74,1263,4.74,1264,4.74]],["title/classes/IntentHandlerBuilder.html",[0,0.208,1114,3.428]],["body/classes/IntentHandlerBuilder.html",[0,0.263,2,1.153,3,0.05,4,0.05,5,0.05,7,0.069,8,0.596,14,1.123,16,2.706,18,1.334,22,2.961,26,1.25,28,1.79,29,0.007,30,0.59,31,0.23,32,1.122,33,0.276,41,0.899,51,0.914,55,2.038,57,0.991,61,1.03,67,0.087,79,1.016,109,0.935,176,4.527,190,1.757,191,0.005,192,0.006,193,0.005,203,2.682,308,3.065,661,2.371,690,4.851,708,3.372,713,5.287,714,4.038,715,5.154,716,4.065,719,4.936,720,4.917,721,4.527,722,4.917,723,4.917,725,4.946,726,4.946,727,4.946,730,4.946,731,4.127,732,4.211,733,4.946,734,2.484,735,3.772,736,4.946,737,4.127,738,4.946,739,4.127,740,4.946,742,5.391,752,4.127,754,5.391,914,3.372,1099,5.43,1112,5.647,1114,5.921,1265,6.067,1266,6.067,1267,6.067,1268,6.067,1269,6.067,1270,6.067,1271,7.577]],["title/classes/IntentHandlerFactory.html",[0,0.208,1117,3.637]],["body/classes/IntentHandlerFactory.html",[0,0.379,2,1.307,3,0.057,4,0.057,5,0.057,7,0.079,14,1.212,18,1.194,26,0.903,28,1.382,29,0.007,30,0.456,31,0.212,32,0.867,33,0.286,40,3.193,41,1.02,51,0.966,61,1.168,67,0.107,79,1.211,183,3.109,184,0.956,191,0.005,192,0.006,193,0.005,708,4.545,713,5.02,717,2.917,825,3.868,928,3.582,1086,4.464,1110,5.607,1112,5.616,1114,6.256,1115,5.563,1116,6.668,1117,6.219,1118,5.607,1119,3.823,1120,5.607,1121,4.929,1122,5.607,1123,4.678,1272,6.878,1273,6.878]],["title/classes/IntentRequestFactory.html",[0,0.208,1274,3.9]],["body/classes/IntentRequestFactory.html",[0,0.303,2,1.016,3,0.044,4,0.044,5,0.044,7,0.061,8,0.55,9,3.393,12,1.329,14,1.036,16,2.913,18,1.324,22,2.731,26,1.271,28,1.845,29,0.007,30,0.608,31,0.231,32,1.176,33,0.294,40,2.482,41,1.327,51,0.773,53,5.053,57,1.142,58,1.248,61,1.186,67,0.08,79,0.937,97,2.874,109,0.96,152,2.972,175,3.832,183,2.417,184,0.739,190,1.379,191,0.004,192,0.005,193,0.004,203,2.413,239,1.057,241,2.93,267,2.417,303,3.832,322,1.157,512,1.373,569,1.095,616,1.833,690,4.993,729,5.053,732,4.327,817,3.324,833,3.832,1115,6.09,1119,2.972,1121,5.008,1135,4.536,1144,5.314,1274,5.697,1275,4.751,1276,6.583,1277,5.314,1278,6.919,1279,6.919,1280,6.808,1281,5.58,1282,6.347,1283,6.347,1284,6.347,1285,5.697,1286,5.697,1287,5.697,1288,5.697,1289,5.697,1290,5.347,1291,4.751,1292,4.751,1293,4.751,1294,4.751,1295,4.751,1296,5.347,1297,7.613,1298,5.347,1299,5.347,1300,5.347,1301,5.347,1302,4.751,1303,4.751,1304,4.751,1305,4.751,1306,4.751,1307,4.359,1308,4.751,1309,4.359,1310,4.751,1311,4.359,1312,4.751,1313,4.359,1314,4.751,1315,4.359,1316,4.751,1317,4.359,1318,4.751,1319,4.751,1320,4.066,1321,5.697,1322,4.751,1323,4.359,1324,4.751,1325,5.314,1326,4.751]],["title/classes/InvalidIntentRequestException.html",[0,0.208,1321,3.9]],["body/classes/InvalidIntentRequestException.html",[0,0.355,2,1.307,3,0.057,4,0.057,5,0.057,7,0.079,8,0.643,12,1.236,16,2.09,18,1.281,22,2.688,26,0.903,29,0.007,31,0.167,33,0.254,51,0.905,57,1.336,58,1.399,61,1.388,67,0.093,79,1.097,109,1.077,183,3.109,184,0.728,190,1.357,191,0.005,192,0.006,193,0.005,203,2.132,267,3.109,322,1.488,512,1.442,569,1.787,729,4.464,817,5.085,1115,6.144,1121,6.256,1274,5.607,1275,6.112,1276,5.938,1278,6.112,1279,6.112,1280,5.23,1297,7.757,1321,7.116,1322,7.268,1323,6.668,1324,6.112,1325,6.219,1326,6.112,1327,6.878]],["title/classes/LaunchRequestFactory.html",[0,0.208,1123,3.254]],["body/classes/LaunchRequestFactory.html",[0,0.243,2,1.066,3,0.047,4,0.047,5,0.047,7,0.064,8,0.567,9,3.427,12,1.346,14,1.069,16,2.9,18,1.318,22,2.818,26,1.271,28,1.843,29,0.007,30,0.607,31,0.232,32,1.177,33,0.296,40,2.604,41,1.32,51,0.798,53,5.171,57,1.178,58,1.277,61,1.224,67,0.064,79,0.752,97,3.016,109,0.889,152,3.118,175,4.02,184,0.594,190,1.422,191,0.004,192,0.005,193,0.004,203,2.469,239,1.073,241,3.023,267,2.536,303,4.02,322,1.214,616,1.854,690,5.017,729,3.641,732,4.428,833,4.02,928,2.921,1119,3.118,1123,4.904,1135,4.679,1144,5.482,1276,6.61,1277,5.482,1280,6.058,1281,5.71,1282,6.495,1283,6.495,1284,6.495,1285,5.877,1286,5.877,1287,5.877,1288,5.877,1289,5.877,1291,4.985,1292,4.985,1293,4.985,1294,4.985,1295,4.985,1302,4.985,1303,4.985,1304,4.985,1305,4.985,1306,4.985,1307,4.573,1308,4.985,1309,4.573,1310,4.985,1311,4.573,1312,4.985,1313,4.573,1314,4.985,1315,4.573,1316,4.985,1317,4.573,1318,4.985,1319,4.985,1320,4.266,1325,4.266,1328,5.61,1329,7.967,1330,5.61,1331,5.61,1332,9.055,1333,5.61,1334,5.61]],["title/classes/LaunchRequestFactory-1.html",[0,0.174,194,2.158,1123,2.73]],["body/classes/LaunchRequestFactory-1.html",[0,0.38,2,1.319,3,0.058,4,0.058,5,0.058,7,0.079,14,1.219,18,1.199,26,0.912,29,0.007,31,0.2,33,0.272,41,1.029,51,0.97,61,1.178,67,0.107,79,1.215,183,3.138,184,0.959,191,0.005,192,0.006,193,0.005,708,4.57,713,5.14,717,2.924,825,3.932,928,3.615,1086,4.504,1110,5.658,1112,5.448,1114,5.893,1115,5.593,1116,6.704,1117,5.278,1118,5.658,1119,3.857,1120,5.658,1121,4.974,1122,5.658,1123,5.593,1335,6.941]],["title/classes/LaunchRequestHandlerFactory.html",[0,0.208,930,2.858]],["body/classes/LaunchRequestHandlerFactory.html",[0,0.374,2,1.138,3,0.05,4,0.05,5,0.05,7,0.068,14,1.114,18,0.819,24,3.812,25,0.773,26,0.987,28,1.51,29,0.007,30,0.498,31,0.223,32,0.947,33,0.255,41,1.114,45,1.085,51,0.953,55,2.894,57,1.342,58,1.204,59,1.931,61,1.016,67,0.108,68,3.005,76,1.538,79,1.257,109,1.013,166,4.325,184,0.869,190,1.181,191,0.004,192,0.006,193,0.004,232,0.299,234,0.563,239,0.927,280,4.564,567,0.739,661,2.937,714,3.611,716,3.948,717,1.893,718,3.118,734,3.706,870,4.787,909,3.577,910,3.577,911,4.489,912,5.106,913,3.577,914,3.328,915,5.6,916,4.559,917,4.672,918,5.3,919,3.722,920,5.145,921,3.722,922,4.672,923,3.722,924,4.672,925,3.722,926,3.577,927,4.489,928,3.913,929,4.176,930,4.906,931,4.489,932,3.722,933,4.672,934,3.577,1336,5.988,1337,5.988,1338,5.988]],["title/classes/LaunchRequestrBuilder.html",[0,0.208,1339,4.251]],["body/classes/LaunchRequestrBuilder.html",[0,0.272,2,1.191,3,0.052,4,0.052,5,0.052,7,0.072,8,0.608,14,1.146,16,2.349,18,1.332,26,1.241,28,1.759,29,0.007,30,0.58,31,0.228,32,1.103,41,0.929,51,0.928,55,2.106,57,1.024,61,1.064,67,0.088,79,1.036,109,0.954,176,4.619,190,1.774,191,0.005,192,0.006,193,0.005,203,2.713,308,3.166,661,2.449,690,4.881,708,3.483,713,5.311,714,4.053,715,5.259,716,4.085,719,5.009,720,5.017,721,4.619,722,5.017,723,5.017,725,5.109,726,5.109,727,5.109,730,5.109,731,4.263,732,4.296,733,5.109,734,2.566,735,3.896,736,5.109,737,4.263,738,5.109,739,4.263,740,5.109,752,4.263,913,3.744,914,3.483,934,3.744,1099,5.54,1339,7.45,1340,6.267,1341,6.267]],["title/classes/ListManagementAPIClient.html",[0,0.208,1342,4.251]],["body/classes/ListManagementAPIClient.html",[0,0.234,2,1.023,3,0.045,4,0.045,5,0.045,7,0.061,8,0.552,14,1.04,16,2.373,17,4.549,18,1.341,26,1.227,28,1.827,29,0.007,30,0.602,31,0.225,32,1.146,33,0.305,41,1.375,45,1.218,51,0.864,57,0.879,58,0.862,60,2.64,61,0.913,67,0.061,79,1.219,104,3.9,106,4.091,109,0.866,133,1.629,190,1.061,191,0.004,192,0.005,193,0.004,196,5.312,203,1.667,239,1.153,532,1.573,1342,6.236,1343,4.781,1344,7.81,1345,7.81,1346,7.81,1347,7.81,1348,7.81,1349,7.81,1350,8.277,1351,7.355,1352,7.81,1353,7.81,1354,7.018,1355,5.38,1356,5.38,1357,7.81,1358,5.38,1359,5.38,1360,7.81,1361,5.38,1362,9.531,1363,5.38,1364,5.38,1365,5.38,1366,9.193,1367,5.38,1368,5.38,1369,7.355,1370,5.38,1371,5.38,1372,5.38,1373,5.38,1374,5.38,1375,5.38,1376,7.81,1377,5.38,1378,5.38,1379,7.81,1380,5.38,1381,5.38,1382,5.38,1383,4.781,1384,4.781,1385,4.781,1386,5.38,1387,7.018,1388,7.018,1389,5.38,1390,5.38,1391,5.38,1392,5.38,1393,5.38]],["title/interfaces/LocalizedAttribute.html",[232,0.161,474,1.094]],["body/interfaces/LocalizedAttribute.html",[0,0.136,3,0.026,4,0.04,5,0.026,7,0.036,8,0.375,12,1.193,25,0.294,26,0.411,29,0.007,30,0.57,31,0.236,33,0.297,45,0.394,67,0.113,81,0.664,84,0.677,89,0.689,109,0.908,133,0.996,161,1.816,184,0.331,191,0.002,192,0.004,193,0.002,220,0.729,232,0.325,234,0.449,239,0.386,253,0.689,272,2.241,273,0.562,315,1.112,316,0.924,317,0.729,318,0.677,319,2.259,320,0.652,321,1.112,322,1.51,323,0.729,324,1.112,325,0.729,326,1.349,327,0.729,328,1.349,329,0.729,330,0.729,331,0.729,332,1.072,333,1.112,334,0.729,335,0.729,336,0.729,337,0.729,338,0.729,339,1.455,340,1.112,341,0.729,342,0.729,343,0.715,344,0.729,345,0.729,346,1.112,347,1.092,348,1.092,349,0.742,350,1.538,351,1.112,352,0.729,353,0.729,354,0.742,355,1.112,356,0.715,357,0.729,358,1.349,359,0.729,360,1.092,361,1.349,362,0.729,363,0.702,364,0.729,365,0.729,366,0.742,367,0.729,368,1.325,369,0.715,370,0.729,371,0.729,372,0.715,373,0.729,374,1.751,375,1.349,376,0.729,377,0.729,378,0.729,379,0.729,380,0.715,381,1.112,382,1.014,383,0.729,384,1.482,385,0.729,386,0.742,387,0.742,388,1.375,389,0.742,390,0.742,391,0.729,392,1.112,393,0.729,394,0.742,395,0.742,396,0.715,397,1.482,398,0.742,399,0.742,400,0.742,401,0.742,402,0.742,403,1.092,404,0.729,405,0.729,406,0.729,407,0.729,408,0.729,409,0.729,410,1.112,411,0.729,412,1.092,413,0.729,414,0.729,415,0.729,416,0.729,417,0.729,418,0.729,419,0.729,420,0.729,421,0.729,422,0.729,423,0.729,424,0.729,425,0.729,426,0.729,427,0.729,428,0.729,429,1.112,430,0.729,431,0.729,432,0.729,433,0.729,434,0.729,435,0.729,436,0.729,437,1.325,438,0.729,439,0.729,440,1.112,441,0.729,442,0.729,443,0.729,444,0.729,445,1.482,446,0.729,447,0.742,448,0.729,449,0.729,450,0.729,451,1.482,452,0.729,453,1.112,454,0.729,455,1.349,456,0.729,457,1.112,458,0.729,459,1.51,460,0.729,461,1.092,462,0.729,463,1.112,464,0.729,465,0.729,466,0.729,467,1.112,468,0.729,469,1.092,470,0.742,471,0.742,472,0.729,473,0.729,474,1.325,475,1.072,476,1.033,477,0.689,478,1.541,479,1.792,480,0.729,481,0.729,482,0.729,483,0.729,484,0.729,485,0.729,486,0.729,487,0.729,488,0.729,489,0.729,490,0.729,491,0.729,492,0.729,493,0.729,494,0.729,495,0.729,496,1.349,497,1.349,498,1.747,499,0.729,500,0.729,501,1.112,502,0.729,503,0.742,504,1.349,505,1.349,506,0.729,507,0.742,508,0.729,509,0.742,510,1.112,511,0.729,512,1.021,513,0.742,514,0.742,515,0.729,516,0.742,517,0.729,518,0.729,519,1.112,520,0.742,521,1.112,522,1.112,523,1.112,524,1.538,525,0.729,526,0.742,527,0.742,528,1.112,529,0.729,530,0.742,531,0.742,532,0.594,533,0.729,534,1.325,535,1.325,536,1.112,537,0.715,538,0.715,539,0.715,540,1.112,541,0.729,542,0.729,543,0.729,544,1.033,545,1.349,546,0.715,547,0.715,548,0.729,549,0.742,550,0.742,551,0.729,552,0.729,553,0.742,554,0.742,555,0.742,556,0.742,557,1.112,558,0.715,559,0.715,560,1.325,561,1.112,562,0.715,563,0.729,564,0.729,565,1.112,566,0.742,567,0.386,568,0.729,569,0.64,570,1.639,571,1.656,572,1.615,573,1.805,574,1.052,575,0.742,576,0.729,577,0.617,578,0.729,579,0.729,580,1.349,581,0.742,582,0.742,583,1.112,584,0.742,585,0.742,586,0.729,587,0.742,588,1.615,589,0.742,590,1.747,591,0.742,592,0.742,593,0.742,594,0.742,595,0.742,596,1.349,597,0.742,598,0.742,599,0.742,600,0.742,601,0.742,602,0.729,603,0.742,604,0.742,605,0.742,606,0.742,607,0.742,608,0.742,609,0.742,610,0.742,611,0.742,612,0.742,613,0.742,614,0.729,615,0.742,616,1.327,617,0.742,618,0.742,619,0.742,620,0.742,621,0.742,622,1.112,623,0.742,624,0.729,625,0.742,626,0.742,627,0.742,628,0.742,629,0.742,630,0.729,631,0.729,632,0.742,633,0.742,634,0.742,635,0.729,636,0.729,637,0.742,638,0.742,639,0.729,640,0.742,641,0.742,642,0.742,643,0.742,644,0.729,645,0.742,646,0.729,647,0.742,648,0.742,649,0.729,650,0.742,651,0.742,1394,3.127]],["title/classes/LocalizedAttributesFactory.html",[0,0.208,1395,4.251]],["body/classes/LocalizedAttributesFactory.html",[0,0.31,2,1.359,3,0.059,4,0.059,5,0.059,7,0.082,12,1.265,14,1.241,18,0.978,26,0.939,29,0.007,33,0.26,41,1.06,51,0.791,61,1.214,67,0.082,76,1.464,79,1.19,190,1.411,191,0.005,192,0.006,193,0.005,234,0.673,273,1.504,316,1.621,320,1.491,475,1.879,576,1.666,577,1.651,578,1.666,579,1.666,717,2.805,825,3.836,1045,6.354,1395,7.437,1396,7.151,1397,7.151,1398,8.369,1399,7.151]],["title/interfaces/MergeObjectType.html",[232,0.161,1400,4.251]],["body/interfaces/MergeObjectType.html",[3,0.058,4,0.058,5,0.058,7,0.079,8,0.647,24,4.068,25,0.774,29,0.007,31,0.2,32,1.141,51,0.91,55,3.107,57,1.344,58,1.318,59,2.239,61,1.178,67,0.1,76,1.794,79,1.175,154,5.633,191,0.005,192,0.006,193,0.005,232,0.234,234,0.653,567,1.014,661,3.614,714,3.799,716,3.893,926,4.913,1400,7.787,1401,6.941,1402,6.941,1403,9.06,1404,6.941,1405,8.223,1406,6.941,1407,6.941]],["title/interfaces/MessageGroup.html",[232,0.161,469,1.094]],["body/interfaces/MessageGroup.html",[0,0.135,3,0.026,4,0.04,5,0.026,7,0.036,8,0.374,12,0.873,25,0.293,29,0.007,30,0.563,31,0.236,32,0.6,33,0.296,45,0.392,67,0.113,81,0.662,84,0.674,89,0.686,109,0.906,133,0.992,161,1.882,184,0.329,191,0.002,192,0.004,193,0.002,220,0.726,232,0.325,234,0.448,239,0.384,253,0.686,273,0.559,315,1.109,316,0.603,317,0.726,318,0.674,319,2.258,320,0.649,321,1.109,322,1.508,323,0.726,324,1.109,325,0.726,326,1.346,327,0.726,328,1.346,329,0.726,330,0.726,331,0.726,332,1.069,333,1.109,334,0.726,335,0.726,336,0.726,337,0.726,338,0.726,339,1.452,340,1.109,341,0.726,342,0.726,343,0.712,344,0.726,345,0.726,346,1.109,347,1.089,348,1.089,349,0.739,350,1.535,351,1.109,352,0.726,353,0.726,354,0.739,355,1.109,356,0.712,357,0.726,358,1.346,359,0.726,360,1.089,361,1.346,362,0.726,363,0.699,364,0.726,365,0.726,366,0.739,367,0.726,368,1.321,369,0.712,370,0.726,371,0.726,372,0.712,373,0.726,374,1.748,375,1.346,376,0.726,377,0.726,378,0.726,379,0.726,380,0.712,381,1.109,382,1.011,383,0.726,384,1.479,385,0.726,386,0.739,387,0.739,388,1.371,389,0.739,390,0.739,391,0.726,392,1.109,393,0.726,394,0.739,395,0.739,396,0.712,397,1.479,398,0.739,399,0.739,400,0.739,401,0.739,402,0.739,403,1.089,404,0.726,405,0.726,406,0.726,407,0.726,408,0.726,409,0.726,410,1.109,411,0.726,412,1.089,413,0.726,414,0.726,415,0.726,416,0.726,417,0.726,418,0.726,419,0.726,420,0.726,421,0.726,422,0.726,423,0.726,424,0.726,425,0.726,426,0.726,427,0.726,428,0.726,429,1.109,430,0.726,431,0.726,432,0.726,433,0.726,434,0.726,435,0.726,436,0.726,437,1.321,438,0.726,439,0.726,440,1.109,441,0.726,442,0.726,443,0.726,444,0.726,445,1.479,446,0.726,447,0.739,448,0.726,449,0.726,450,0.726,451,1.479,452,0.726,453,1.109,454,0.726,455,1.346,456,0.726,457,1.109,458,0.726,459,1.507,460,0.726,461,1.089,462,0.726,463,1.109,464,0.726,465,0.726,466,0.726,467,1.507,468,0.726,469,1.321,470,1.535,471,1.371,472,1.507,473,1.507,474,1.089,475,1.069,476,1.03,477,0.686,478,1.54,479,1.791,480,0.726,481,0.726,482,0.726,483,0.726,484,0.726,485,0.726,486,0.726,487,0.726,488,0.726,489,0.726,490,0.726,491,0.726,492,0.726,493,0.726,494,0.726,495,0.726,496,1.346,497,1.346,498,1.744,499,0.726,500,0.726,501,1.109,502,0.726,503,0.739,504,1.346,505,1.346,506,0.726,507,0.739,508,0.726,509,0.739,510,1.109,511,0.726,512,1.018,513,0.739,514,0.739,515,0.726,516,0.739,517,0.726,518,0.726,519,1.109,520,0.739,521,1.109,522,1.109,523,1.109,524,1.535,525,0.726,526,0.739,527,0.739,528,1.109,529,0.726,530,0.739,531,0.739,532,0.592,533,0.726,534,1.321,535,1.321,536,1.109,537,0.712,538,0.712,539,0.712,540,1.109,541,0.726,542,0.726,543,0.726,544,1.03,545,1.346,546,0.712,547,0.712,548,0.726,549,0.739,550,0.739,551,0.726,552,0.726,553,0.739,554,0.739,555,0.739,556,0.739,557,1.109,558,0.712,559,0.712,560,1.321,561,1.109,562,0.712,563,0.726,564,0.726,565,1.109,566,0.739,567,0.384,568,0.726,569,0.637,570,1.639,571,1.654,572,1.613,573,1.803,574,1.049,575,0.739,576,0.726,577,0.614,578,0.726,579,0.726,580,1.346,581,0.739,582,0.739,583,1.109,584,0.739,585,0.739,586,0.726,587,0.739,588,1.613,589,0.739,590,1.744,591,0.739,592,0.739,593,0.739,594,0.739,595,0.739,596,1.346,597,0.739,598,0.739,599,0.739,600,0.739,601,0.739,602,0.726,603,0.739,604,0.739,605,0.739,606,0.739,607,0.739,608,0.739,609,0.739,610,0.739,611,0.739,612,0.739,613,0.739,614,0.726,615,0.739,616,1.324,617,0.739,618,0.739,619,0.739,620,0.739,621,0.739,622,1.109,623,0.739,624,0.726,625,0.739,626,0.739,627,0.739,628,0.739,629,0.739,630,0.726,631,0.726,632,0.739,633,0.739,634,0.739,635,0.726,636,0.726,637,0.739,638,0.739,639,0.726,640,0.739,641,0.739,642,0.739,643,0.739,644,0.726,645,0.739,646,0.726,647,0.739,648,0.739,649,0.726,650,0.739,651,0.739]],["title/interfaces/MessageState.html",[232,0.161,460,1.115]],["body/interfaces/MessageState.html",[0,0.136,3,0.026,4,0.04,5,0.026,7,0.036,8,0.375,12,0.875,25,0.294,29,0.007,30,0.563,31,0.236,32,0.601,33,0.296,45,0.394,67,0.113,81,0.664,84,0.676,89,0.689,109,0.907,133,1.455,161,1.816,184,0.33,191,0.002,192,0.004,193,0.002,220,0.728,232,0.325,234,0.449,239,0.385,253,0.689,273,0.561,315,1.112,316,0.605,317,0.728,318,0.676,319,2.259,320,0.651,321,1.112,322,1.51,323,0.728,324,1.112,325,0.728,326,1.349,327,0.728,328,1.349,329,0.728,330,0.728,331,0.728,332,1.071,333,1.112,334,0.728,335,0.728,336,0.728,337,0.728,338,0.728,339,1.455,340,1.112,341,0.728,342,0.728,343,0.715,344,0.728,345,0.728,346,1.112,347,1.091,348,1.091,349,0.742,350,1.538,351,1.112,352,0.728,353,0.728,354,0.742,355,1.112,356,0.715,357,0.728,358,1.349,359,0.728,360,1.091,361,1.349,362,0.728,363,0.702,364,0.728,365,0.728,366,0.742,367,0.728,368,1.324,369,0.715,370,0.728,371,0.728,372,0.715,373,0.728,374,1.75,375,1.349,376,0.728,377,0.728,378,0.728,379,0.728,380,0.715,381,1.112,382,1.013,383,0.728,384,1.482,385,0.728,386,0.742,387,0.742,388,1.374,389,0.742,390,0.742,391,0.728,392,1.112,393,0.728,394,0.742,395,0.742,396,0.715,397,1.482,398,0.742,399,0.742,400,0.742,401,0.742,402,0.742,403,1.091,404,0.728,405,0.728,406,0.728,407,0.728,408,0.728,409,0.728,410,1.112,411,0.728,412,1.091,413,0.728,414,0.728,415,0.728,416,0.728,417,0.728,418,0.728,419,0.728,420,0.728,421,0.728,422,0.728,423,0.728,424,0.728,425,0.728,426,0.728,427,0.728,428,0.728,429,1.112,430,0.728,431,0.728,432,0.728,433,0.728,434,0.728,435,0.728,436,0.728,437,1.324,438,0.728,439,0.728,440,1.112,441,0.728,442,0.728,443,0.728,444,0.728,445,1.482,446,0.728,447,0.742,448,0.728,449,0.728,450,0.728,451,1.482,452,0.728,453,1.112,454,0.728,455,1.349,456,0.728,457,1.112,458,0.728,459,1.509,460,1.112,461,1.482,462,1.509,463,1.509,464,0.728,465,0.728,466,0.728,467,1.112,468,0.728,469,1.091,470,0.742,471,0.742,472,0.728,473,0.728,474,1.091,475,1.071,476,1.032,477,0.689,478,1.541,479,1.792,480,0.728,481,0.728,482,0.728,483,0.728,484,0.728,485,0.728,486,0.728,487,0.728,488,0.728,489,0.728,490,0.728,491,0.728,492,0.728,493,0.728,494,0.728,495,0.728,496,1.349,497,1.349,498,1.746,499,0.728,500,0.728,501,1.112,502,0.728,503,0.742,504,1.349,505,1.349,506,0.728,507,0.742,508,0.728,509,0.742,510,1.112,511,0.728,512,1.02,513,0.742,514,0.742,515,0.728,516,0.742,517,0.728,518,0.728,519,1.112,520,0.742,521,1.112,522,1.112,523,1.112,524,1.538,525,0.728,526,0.742,527,0.742,528,1.112,529,0.728,530,0.742,531,0.742,532,0.594,533,0.728,534,1.324,535,1.324,536,1.112,537,0.715,538,0.715,539,0.715,540,1.112,541,0.728,542,0.728,543,0.728,544,1.032,545,1.349,546,0.715,547,0.715,548,0.728,549,0.742,550,0.742,551,0.728,552,0.728,553,0.742,554,0.742,555,0.742,556,0.742,557,1.112,558,0.715,559,0.715,560,1.324,561,1.112,562,0.715,563,0.728,564,0.728,565,1.112,566,0.742,567,0.385,568,0.728,569,0.64,570,1.639,571,1.655,572,1.615,573,1.805,574,1.052,575,0.742,576,0.728,577,0.616,578,0.728,579,0.728,580,1.349,581,0.742,582,0.742,583,1.112,584,0.742,585,0.742,586,0.728,587,0.742,588,1.615,589,0.742,590,1.746,591,0.742,592,0.742,593,0.742,594,0.742,595,0.742,596,1.349,597,0.742,598,0.742,599,0.742,600,0.742,601,0.742,602,0.728,603,0.742,604,0.742,605,0.742,606,0.742,607,0.742,608,0.742,609,0.742,610,0.742,611,0.742,612,0.742,613,0.742,614,0.728,615,0.742,616,1.326,617,0.742,618,0.742,619,0.742,620,0.742,621,0.742,622,1.112,623,0.742,624,0.728,625,0.742,626,0.742,627,0.742,628,0.742,629,0.742,630,0.728,631,0.728,632,0.742,633,0.742,634,0.742,635,0.728,636,0.728,637,0.742,638,0.742,639,0.728,640,0.742,641,0.742,642,0.742,643,0.742,644,0.728,645,0.742,646,0.728,647,0.742,648,0.742,649,0.728,650,0.742,651,0.742]],["title/classes/MockAttributeManager.html",[0,0.208,279,3.9]],["body/classes/MockAttributeManager.html",[0,0.229,2,1.001,3,0.044,4,0.044,5,0.044,7,0.06,8,0.544,9,3.502,14,1.026,18,1.323,26,1.223,28,1.554,29,0.007,30,0.512,31,0.217,32,0.974,33,0.164,41,1.322,51,0.766,55,2.997,56,4.422,57,0.861,58,0.844,68,3.5,76,1.853,79,1.143,90,2.264,91,2.264,92,1.77,93,2.264,94,2.157,95,2.264,96,2.264,124,4.296,125,4.148,184,0.557,190,1.62,191,0.006,192,0.005,193,0.004,203,2.544,232,0.178,239,0.954,270,7.863,271,4.682,273,0.947,275,4.682,276,4.682,277,7.577,278,4.682,279,6.302,280,3.847,281,6.869,282,6.869,283,7.295,284,4.96,285,4.96,286,7.295,287,4.682,288,6.869,289,8.136,290,6.869,291,6.869,292,6.151,293,7.295,294,4.682,295,4.682,296,6.869,297,4.682,298,4.682,299,4.682,300,7.295,301,6.869,302,7.778,303,6.487,304,6.869,305,6.151,306,6.151,307,7.295,308,3.905,309,4.682,310,4.682,311,4.682,312,4.682,313,6.151,314,6.151,729,5.017,1408,5.269,1409,5.269,1410,5.269,1411,5.269,1412,5.269,1413,5.269,1414,5.269,1415,5.269,1416,5.269,1417,5.269,1418,5.269,1419,5.269,1420,5.269,1421,5.269]],["title/interfaces/Occasion.html",[232,0.161,384,1.094]],["body/interfaces/Occasion.html",[0,0.134,3,0.026,4,0.039,5,0.026,7,0.035,8,0.372,12,0.87,25,0.291,29,0.007,30,0.562,31,0.237,32,0.597,33,0.296,45,0.39,67,0.113,81,0.657,84,0.67,89,0.682,109,0.904,133,0.988,161,1.811,184,0.327,191,0.002,192,0.004,193,0.002,220,0.721,232,0.325,234,0.445,239,0.382,253,0.682,273,0.556,315,1.104,316,0.599,317,0.721,318,0.67,319,2.257,320,0.645,321,1.104,322,1.503,323,0.721,324,1.104,325,0.721,326,1.341,327,0.721,328,1.341,329,0.721,330,0.721,331,0.721,332,1.063,333,1.104,334,0.721,335,0.721,336,0.721,337,0.721,338,0.721,339,1.447,340,1.104,341,0.721,342,0.721,343,0.708,344,0.721,345,0.721,346,1.104,347,1.083,348,1.083,349,0.735,350,1.739,351,1.619,352,0.721,353,0.721,354,0.735,355,1.104,356,0.708,357,0.721,358,1.341,359,0.721,360,1.083,361,1.341,362,0.721,363,0.695,364,0.721,365,0.721,366,0.735,367,0.721,368,1.316,369,0.708,370,0.721,371,0.721,372,0.708,373,0.721,374,1.744,375,1.833,376,0.721,377,0.721,378,0.721,379,0.721,380,0.708,381,1.502,382,1.369,383,0.721,384,1.589,385,1.502,386,0.735,387,1.53,388,1.366,389,0.735,390,0.735,391,1.502,392,1.104,393,0.721,394,0.735,395,0.735,396,0.708,397,1.474,398,0.735,399,0.735,400,0.735,401,0.735,402,0.735,403,1.083,404,0.721,405,0.721,406,0.721,407,0.721,408,0.721,409,0.721,410,1.104,411,0.721,412,1.083,413,0.721,414,0.721,415,0.721,416,0.721,417,0.721,418,0.721,419,0.721,420,0.721,421,0.721,422,0.721,423,0.721,424,0.721,425,0.721,426,0.721,427,0.721,428,0.721,429,1.104,430,0.721,431,0.721,432,0.721,433,0.721,434,0.721,435,0.721,436,0.721,437,1.316,438,0.721,439,0.721,440,1.104,441,0.721,442,0.721,443,0.721,444,0.721,445,1.474,446,0.721,447,0.735,448,0.721,449,0.721,450,0.721,451,1.474,452,0.721,453,1.104,454,0.721,455,1.341,456,0.721,457,1.104,458,0.721,459,1.502,460,0.721,461,1.083,462,0.721,463,1.104,464,0.721,465,0.721,466,0.721,467,1.104,468,0.721,469,1.083,470,0.735,471,0.735,472,0.721,473,0.721,474,1.083,475,1.063,476,1.025,477,0.682,478,1.538,479,1.789,480,0.721,481,0.721,482,0.721,483,0.721,484,0.721,485,0.721,486,0.721,487,0.721,488,0.721,489,0.721,490,0.721,491,0.721,492,0.721,493,0.721,494,0.721,495,0.721,496,1.341,497,1.341,498,1.739,499,0.721,500,0.721,501,1.104,502,0.721,503,0.735,504,1.341,505,1.341,506,0.721,507,0.735,508,0.721,509,0.735,510,1.104,511,0.721,512,1.014,513,0.735,514,0.735,515,0.721,516,0.735,517,0.721,518,0.721,519,1.104,520,0.735,521,1.104,522,1.104,523,1.104,524,1.53,525,0.721,526,0.735,527,0.735,528,1.104,529,0.721,530,0.735,531,0.735,532,0.588,533,0.721,534,1.316,535,1.316,536,1.104,537,0.708,538,0.708,539,0.708,540,1.104,541,0.721,542,0.721,543,0.721,544,1.025,545,1.341,546,0.708,547,0.708,548,0.721,549,0.735,550,0.735,551,0.721,552,0.721,553,0.735,554,0.735,555,0.735,556,0.735,557,1.104,558,0.708,559,0.708,560,1.316,561,1.104,562,0.708,563,0.721,564,0.721,565,1.104,566,0.735,567,0.382,568,0.721,569,0.633,570,1.638,571,1.651,572,1.61,573,1.799,574,1.044,575,0.735,576,0.721,577,0.61,578,0.721,579,0.721,580,1.341,581,0.735,582,0.735,583,1.104,584,0.735,585,0.735,586,0.721,587,0.735,588,1.61,589,0.735,590,1.739,591,0.735,592,0.735,593,0.735,594,0.735,595,0.735,596,1.341,597,0.735,598,0.735,599,0.735,600,0.735,601,0.735,602,0.721,603,0.735,604,0.735,605,0.735,606,0.735,607,0.735,608,0.735,609,0.735,610,0.735,611,0.735,612,0.735,613,0.735,614,0.721,615,0.735,616,1.32,617,0.735,618,0.735,619,0.735,620,0.735,621,0.735,622,1.104,623,0.735,624,0.721,625,0.735,626,0.735,627,0.735,628,0.735,629,0.735,630,0.721,631,0.721,632,0.735,633,0.735,634,0.735,635,0.721,636,0.721,637,0.735,638,0.735,639,0.721,640,0.735,641,0.735,642,0.735,643,0.735,644,0.721,645,0.735,646,0.721,647,0.735,648,0.735,649,0.721,650,0.735,651,0.735]],["title/interfaces/Ogranization.html",[232,0.161,381,1.115]],["body/interfaces/Ogranization.html",[0,0.136,3,0.026,4,0.04,5,0.026,7,0.036,8,0.376,12,0.877,25,0.295,29,0.007,30,0.582,31,0.236,33,0.297,45,0.395,67,0.113,81,0.666,84,0.679,89,0.691,109,0.909,133,0.998,161,1.818,184,0.332,191,0.002,192,0.004,193,0.002,220,0.731,232,0.325,234,0.45,239,0.387,253,0.691,273,0.564,315,1.115,316,0.607,317,0.731,318,0.679,319,2.259,320,0.654,321,1.115,322,1.513,323,0.731,324,1.115,325,0.731,326,1.352,327,0.731,328,1.352,329,0.731,330,0.731,331,0.731,332,1.075,333,1.115,334,0.731,335,0.731,336,0.731,337,0.731,338,0.731,339,1.458,340,1.115,341,0.731,342,0.731,343,0.718,344,0.731,345,0.731,346,1.115,347,1.095,348,1.095,349,0.745,350,1.541,351,1.115,352,0.731,353,0.731,354,0.745,355,1.115,356,0.718,357,0.731,358,1.352,359,0.731,360,1.095,361,1.352,362,0.731,363,0.704,364,0.731,365,0.731,366,0.745,367,0.731,368,1.327,369,0.718,370,0.731,371,0.731,372,0.718,373,0.731,374,1.753,375,1.352,376,0.731,377,0.731,378,0.731,379,0.731,380,0.718,381,1.352,382,1.017,383,0.731,384,1.485,385,0.731,386,0.745,387,0.745,388,1.377,389,0.745,390,0.745,391,0.731,392,1.115,393,0.731,394,0.745,395,0.745,396,0.718,397,1.485,398,0.745,399,0.745,400,0.745,401,0.745,402,0.745,403,1.095,404,0.731,405,0.731,406,0.731,407,0.731,408,0.731,409,0.731,410,1.115,411,0.731,412,1.095,413,0.731,414,0.731,415,0.731,416,0.731,417,0.731,418,0.731,419,0.731,420,0.731,421,0.731,422,0.731,423,0.731,424,0.731,425,0.731,426,0.731,427,0.731,428,0.731,429,1.115,430,0.731,431,0.731,432,0.731,433,0.731,434,0.731,435,0.731,436,0.731,437,1.327,438,0.731,439,0.731,440,1.115,441,0.731,442,0.731,443,0.731,444,0.731,445,1.485,446,0.731,447,0.745,448,0.731,449,0.731,450,0.731,451,1.485,452,0.731,453,1.115,454,0.731,455,1.352,456,0.731,457,1.115,458,0.731,459,1.513,460,0.731,461,1.095,462,0.731,463,1.115,464,0.731,465,0.731,466,0.731,467,1.115,468,0.731,469,1.095,470,0.745,471,0.745,472,0.731,473,0.731,474,1.095,475,1.075,476,1.036,477,0.691,478,1.541,479,1.793,480,0.731,481,0.731,482,0.731,483,0.731,484,0.731,485,0.731,486,0.731,487,0.731,488,0.731,489,0.731,490,0.731,491,0.731,492,0.731,493,0.731,494,0.731,495,0.731,496,1.352,497,1.352,498,1.749,499,0.731,500,0.731,501,1.115,502,0.731,503,0.745,504,1.352,505,1.352,506,0.731,507,0.745,508,0.731,509,0.745,510,1.115,511,0.731,512,1.023,513,0.745,514,0.745,515,0.731,516,0.745,517,0.731,518,0.731,519,1.115,520,0.745,521,1.115,522,1.115,523,1.115,524,1.541,525,0.731,526,0.745,527,0.745,528,1.115,529,0.731,530,0.745,531,0.745,532,0.596,533,0.731,534,1.327,535,1.327,536,1.115,537,0.718,538,0.718,539,0.718,540,1.115,541,0.731,542,0.731,543,0.731,544,1.036,545,1.352,546,0.718,547,0.718,548,0.731,549,0.745,550,0.745,551,0.731,552,0.731,553,0.745,554,0.745,555,0.745,556,0.745,557,1.115,558,0.718,559,0.718,560,1.327,561,1.115,562,0.718,563,0.731,564,0.731,565,1.115,566,0.745,567,0.387,568,0.731,569,0.642,570,1.64,571,1.657,572,1.617,573,1.807,574,1.055,575,0.745,576,0.731,577,0.619,578,0.731,579,0.731,580,1.352,581,0.745,582,0.745,583,1.115,584,0.745,585,0.745,586,0.731,587,0.745,588,1.617,589,0.745,590,1.749,591,0.745,592,0.745,593,0.745,594,0.745,595,0.745,596,1.352,597,0.745,598,0.745,599,0.745,600,0.745,601,0.745,602,0.731,603,0.745,604,0.745,605,0.745,606,0.745,607,0.745,608,0.745,609,0.745,610,0.745,611,0.745,612,0.745,613,0.745,614,0.731,615,0.745,616,1.329,617,0.745,618,0.745,619,0.745,620,0.745,621,0.745,622,1.115,623,0.745,624,0.731,625,0.745,626,0.745,627,0.745,628,0.745,629,0.745,630,0.731,631,0.731,632,0.745,633,0.745,634,0.745,635,0.731,636,0.731,637,0.745,638,0.745,639,0.731,640,0.745,641,0.745,642,0.745,643,0.745,644,0.731,645,0.745,646,0.731,647,0.745,648,0.745,649,0.731,650,0.745,651,0.745]],["title/interfaces/Order.html",[232,0.161,403,1.094]],["body/interfaces/Order.html",[0,0.136,3,0.026,4,0.04,5,0.026,7,0.036,8,0.376,12,0.877,25,0.295,29,0.007,30,0.564,31,0.236,33,0.296,45,0.395,67,0.113,81,0.666,84,0.678,89,0.691,109,0.908,133,0.997,161,1.817,184,0.332,191,0.002,192,0.004,193,0.002,220,0.73,232,0.325,234,0.45,239,0.387,253,0.691,273,0.563,315,1.114,316,0.607,317,0.73,318,0.678,319,2.259,320,0.654,321,1.114,322,1.512,323,0.73,324,1.114,325,0.73,326,1.351,327,0.73,328,1.351,329,0.73,330,0.73,331,0.73,332,1.074,333,1.114,334,0.73,335,0.73,336,0.73,337,0.73,338,0.73,339,1.457,340,1.114,341,0.73,342,0.73,343,0.717,344,0.73,345,0.73,346,1.114,347,1.094,348,1.094,349,0.744,350,1.54,351,1.114,352,0.73,353,0.73,354,0.744,355,1.114,356,0.717,357,0.73,358,1.351,359,0.73,360,1.094,361,1.351,362,0.73,363,0.704,364,0.73,365,0.73,366,0.744,367,0.73,368,1.326,369,0.717,370,0.73,371,0.73,372,0.717,373,0.73,374,1.752,375,1.351,376,0.73,377,0.73,378,0.73,379,0.73,380,0.717,381,1.114,382,1.016,383,0.73,384,1.484,385,0.73,386,0.744,387,0.744,388,1.377,389,0.744,390,0.744,391,0.73,392,1.114,393,0.73,394,0.744,395,0.744,396,0.717,397,1.484,398,0.744,399,0.744,400,0.744,401,0.744,402,0.744,403,1.326,404,1.512,405,0.73,406,0.73,407,0.73,408,0.73,409,0.73,410,1.114,411,0.73,412,1.094,413,0.73,414,0.73,415,0.73,416,0.73,417,0.73,418,0.73,419,0.73,420,0.73,421,0.73,422,0.73,423,0.73,424,0.73,425,0.73,426,0.73,427,0.73,428,0.73,429,1.114,430,0.73,431,0.73,432,0.73,433,0.73,434,0.73,435,0.73,436,0.73,437,1.326,438,0.73,439,0.73,440,1.114,441,0.73,442,0.73,443,0.73,444,0.73,445,1.484,446,0.73,447,0.744,448,0.73,449,0.73,450,0.73,451,1.484,452,0.73,453,1.114,454,0.73,455,1.351,456,0.73,457,1.114,458,0.73,459,1.512,460,0.73,461,1.094,462,0.73,463,1.114,464,0.73,465,0.73,466,0.73,467,1.114,468,0.73,469,1.094,470,0.744,471,0.744,472,0.73,473,0.73,474,1.094,475,1.074,476,1.035,477,0.691,478,1.541,479,1.793,480,0.73,481,0.73,482,0.73,483,0.73,484,0.73,485,0.73,486,0.73,487,0.73,488,0.73,489,0.73,490,0.73,491,0.73,492,0.73,493,0.73,494,0.73,495,0.73,496,1.351,497,1.351,498,1.748,499,0.73,500,0.73,501,1.114,502,0.73,503,0.744,504,1.351,505,1.351,506,0.73,507,0.744,508,0.73,509,0.744,510,1.114,511,0.73,512,1.022,513,0.744,514,0.744,515,0.73,516,0.744,517,0.73,518,0.73,519,1.114,520,0.744,521,1.114,522,1.114,523,1.114,524,1.54,525,0.73,526,0.744,527,0.744,528,1.114,529,0.73,530,0.744,531,0.744,532,0.596,533,0.73,534,1.326,535,1.326,536,1.114,537,0.717,538,0.717,539,0.717,540,1.114,541,0.73,542,0.73,543,0.73,544,1.035,545,1.351,546,0.717,547,0.717,548,0.73,549,0.744,550,0.744,551,0.73,552,0.73,553,0.744,554,0.744,555,0.744,556,0.744,557,1.114,558,0.717,559,0.717,560,1.326,561,1.114,562,0.717,563,0.73,564,0.73,565,1.114,566,0.744,567,0.387,568,0.73,569,0.642,570,1.64,571,1.657,572,1.617,573,1.806,574,1.054,575,0.744,576,0.73,577,0.618,578,0.73,579,0.73,580,1.351,581,0.744,582,0.744,583,1.114,584,0.744,585,0.744,586,0.73,587,0.744,588,1.617,589,0.744,590,1.748,591,0.744,592,0.744,593,0.744,594,0.744,595,0.744,596,1.351,597,0.744,598,0.744,599,0.744,600,0.744,601,0.744,602,0.73,603,0.744,604,0.744,605,0.744,606,0.744,607,0.744,608,0.744,609,0.744,610,0.744,611,0.744,612,0.744,613,0.744,614,0.73,615,0.744,616,1.328,617,0.744,618,0.744,619,0.744,620,0.744,621,0.744,622,1.114,623,0.744,624,0.73,625,0.744,626,0.744,627,0.744,628,0.744,629,0.744,630,0.73,631,0.73,632,0.744,633,0.744,634,0.744,635,0.73,636,0.73,637,0.744,638,0.744,639,0.73,640,0.744,641,0.744,642,0.744,643,0.744,644,0.73,645,0.744,646,0.73,647,0.744,648,0.744,649,0.73,650,0.744,651,0.744,1222,3.103]],["title/interfaces/OrderState.html",[232,0.161,396,1.094]],["body/interfaces/OrderState.html",[0,0.135,3,0.026,4,0.04,5,0.026,7,0.036,8,0.374,12,0.873,25,0.293,29,0.007,30,0.563,31,0.236,32,0.814,33,0.296,45,0.392,67,0.113,81,0.661,84,0.673,89,0.686,109,0.906,133,1.452,161,1.813,184,0.329,191,0.002,192,0.004,193,0.002,220,0.725,232,0.325,234,0.447,239,0.384,253,0.686,273,0.559,315,1.108,316,0.602,317,0.725,318,0.673,319,2.258,320,0.649,321,1.108,322,1.507,323,0.725,324,1.108,325,0.725,326,1.345,327,0.725,328,1.345,329,0.725,330,0.725,331,0.725,332,1.068,333,1.108,334,0.725,335,0.725,336,0.725,337,0.725,338,0.725,339,1.451,340,1.108,341,0.725,342,0.725,343,0.712,344,0.725,345,0.725,346,1.108,347,1.088,348,1.088,349,0.739,350,1.743,351,1.108,352,0.725,353,0.725,354,0.739,355,1.108,356,0.712,357,0.725,358,1.345,359,0.725,360,1.088,361,1.345,362,0.725,363,0.699,364,0.725,365,0.725,366,0.739,367,0.725,368,1.32,369,0.712,370,0.725,371,0.725,372,0.712,373,0.725,374,1.748,375,1.345,376,0.725,377,0.725,378,0.725,379,0.725,380,0.712,381,1.108,382,1.01,383,0.725,384,1.479,385,0.725,386,0.739,387,0.739,388,1.37,389,0.739,390,0.739,391,0.725,392,1.506,393,0.725,394,0.739,395,0.739,396,1.088,397,1.68,398,1.534,399,0.739,400,0.739,401,0.739,402,1.534,403,1.088,404,0.725,405,0.725,406,0.725,407,0.725,408,0.725,409,0.725,410,1.108,411,0.725,412,1.088,413,0.725,414,0.725,415,0.725,416,0.725,417,0.725,418,0.725,419,0.725,420,0.725,421,0.725,422,0.725,423,0.725,424,0.725,425,0.725,426,0.725,427,0.725,428,0.725,429,1.108,430,0.725,431,0.725,432,0.725,433,0.725,434,0.725,435,0.725,436,0.725,437,1.32,438,0.725,439,0.725,440,1.108,441,0.725,442,0.725,443,0.725,444,0.725,445,1.479,446,0.725,447,0.739,448,0.725,449,0.725,450,0.725,451,1.479,452,0.725,453,1.108,454,0.725,455,1.345,456,0.725,457,1.108,458,0.725,459,1.506,460,0.725,461,1.088,462,0.725,463,1.108,464,0.725,465,0.725,466,0.725,467,1.108,468,0.725,469,1.088,470,0.739,471,0.739,472,0.725,473,0.725,474,1.088,475,1.068,476,1.029,477,0.686,478,1.54,479,1.791,480,0.725,481,0.725,482,0.725,483,0.725,484,0.725,485,0.725,486,0.725,487,0.725,488,0.725,489,0.725,490,0.725,491,0.725,492,0.725,493,0.725,494,0.725,495,0.725,496,1.345,497,1.345,498,1.743,499,0.725,500,0.725,501,1.108,502,0.725,503,0.739,504,1.345,505,1.345,506,0.725,507,0.739,508,0.725,509,0.739,510,1.108,511,0.725,512,1.018,513,0.739,514,0.739,515,0.725,516,0.739,517,0.725,518,0.725,519,1.108,520,0.739,521,1.108,522,1.108,523,1.108,524,1.534,525,0.725,526,0.739,527,0.739,528,1.108,529,0.725,530,0.739,531,0.739,532,0.591,533,0.725,534,1.32,535,1.32,536,1.108,537,0.712,538,0.712,539,0.712,540,1.108,541,0.725,542,0.725,543,0.725,544,1.029,545,1.345,546,0.712,547,0.712,548,0.725,549,0.739,550,0.739,551,0.725,552,0.725,553,0.739,554,0.739,555,0.739,556,0.739,557,1.108,558,0.712,559,0.712,560,1.32,561,1.108,562,0.712,563,0.725,564,0.725,565,1.108,566,0.739,567,0.384,568,0.725,569,0.637,570,1.639,571,1.653,572,1.613,573,1.802,574,1.048,575,0.739,576,0.725,577,0.614,578,0.725,579,0.725,580,1.345,581,0.739,582,0.739,583,1.108,584,0.739,585,0.739,586,0.725,587,0.739,588,1.613,589,0.739,590,1.743,591,0.739,592,0.739,593,0.739,594,0.739,595,0.739,596,1.345,597,0.739,598,0.739,599,0.739,600,0.739,601,0.739,602,0.725,603,0.739,604,0.739,605,0.739,606,0.739,607,0.739,608,0.739,609,0.739,610,0.739,611,0.739,612,0.739,613,0.739,614,0.725,615,0.739,616,1.323,617,0.739,618,0.739,619,0.739,620,0.739,621,0.739,622,1.108,623,0.739,624,0.725,625,0.739,626,0.739,627,0.739,628,0.739,629,0.739,630,0.725,631,0.725,632,0.739,633,0.739,634,0.739,635,0.725,636,0.725,637,0.739,638,0.739,639,0.725,640,0.739,641,0.739,642,0.739,643,0.739,644,0.725,645,0.739,646,0.725,647,0.739,648,0.739,649,0.725,650,0.739,651,0.739]],["title/classes/ParameterFactory.html",[0,0.208,1422,2.282]],["body/classes/ParameterFactory.html",[0,0.275,2,1.204,3,0.053,4,0.053,5,0.053,7,0.072,14,1.154,18,0.867,26,0.832,29,0.007,30,0.616,31,0.189,33,0.262,41,0.939,51,0.998,61,1.076,67,0.072,76,1.725,79,1.289,90,2.723,91,2.723,92,2.129,93,2.723,94,2.594,95,2.723,96,2.723,133,1.623,190,1.25,191,0.005,192,0.006,193,0.005,234,0.596,316,1.507,320,1.322,347,1.45,351,1.477,368,1.45,369,1.45,380,1.927,383,1.477,384,1.927,385,1.814,391,1.477,478,1.076,479,1.693,512,1.117,518,1.477,519,1.814,570,1.43,571,1.297,572,1.297,588,1.297,616,1.594,622,1.814,624,1.477,630,1.477,631,1.477,717,2.663,746,3.3,825,3.684,1422,3.713,1423,6.337,1424,6.337,1425,5.919,1426,4.112,1427,6.337,1428,6.337,1429,6.337,1430,5.631,1431,7.784,1432,5.631,1433,6.337,1434,5.631,1435,6.337,1436,5.631,1437,6.337,1438,5.631,1439,6.337,1440,4.818,1441,5.631,1442,6.337,1443,6.337,1444,3.939]],["title/classes/ParameterFactory-1.html",[0,0.174,194,2.158,1422,1.915]],["body/classes/ParameterFactory-1.html",[0,0.283,2,1.239,3,0.054,4,0.054,5,0.054,7,0.074,14,1.174,18,0.892,26,0.856,29,0.007,30,0.565,41,0.966,51,0.982,61,1.106,67,0.074,76,1.816,79,1.275,90,3.402,91,3.402,92,2.661,93,3.402,94,3.242,95,3.402,96,3.402,190,1.286,191,0.005,192,0.006,193,0.005,234,0.613,316,1.533,332,1.778,461,1.812,462,1.845,468,1.519,469,1.491,472,1.845,473,1.845,478,1.106,479,1.714,510,1.519,511,1.519,512,1.396,570,1.448,571,1.334,572,1.334,588,1.334,717,2.697,746,3.394,825,3.72,1422,3.777,1426,4.23,1444,4.052,1445,6.518,1446,6.518,1447,6.518,1448,6.518,1449,6.518,1450,6.518,1451,6.518,1452,5.792,1453,6.518,1454,5.792,1455,6.518,1456,5.792,1457,6.518,1458,5.792,1459,6.518,1460,5.792,1461,6.518,1462,6.518,1463,6.518]],["title/classes/ParameterFactory-2.html",[0,0.174,1422,1.915,1464,3.272]],["body/classes/ParameterFactory-2.html",[0,0.279,2,1.221,3,0.053,4,0.053,5,0.053,7,0.073,14,1.164,18,0.879,26,0.844,29,0.007,30,0.6,31,0.191,33,0.244,41,0.953,51,1.002,61,1.091,67,0.073,76,1.735,79,1.272,81,1.668,84,1.699,90,3.373,91,3.373,92,2.638,93,3.373,94,3.214,95,3.373,96,3.373,190,1.268,191,0.005,192,0.006,193,0.005,234,0.605,316,1.52,320,1.34,347,1.47,348,1.796,353,1.498,476,1.391,478,1.091,479,1.704,521,1.498,525,1.498,570,1.564,571,1.316,572,1.316,588,1.316,616,1.607,635,1.498,636,1.498,639,1.498,717,2.68,746,3.347,825,3.702,1422,3.745,1425,5.97,1426,4.17,1440,4.886,1444,3.995,1465,6.426,1466,6.426,1467,6.426,1468,6.426,1469,6.426,1470,6.426,1471,5.71,1472,6.426,1473,5.71,1474,6.426,1475,5.71,1476,6.426,1477,5.71,1478,6.426,1479,5.71,1480,6.976,1481,6.426,1482,6.426,1483,6.426,1484,6.426]],["title/classes/ParameterFactory-3.html",[0,0.174,1422,1.915,1485,3.272]],["body/classes/ParameterFactory-3.html",[0,0.27,2,1.18,3,0.052,4,0.052,5,0.052,7,0.071,14,1.14,18,0.85,26,0.816,29,0.007,30,0.605,33,0.271,41,0.921,51,0.924,61,1.054,67,0.071,76,1.836,79,1.254,90,2.668,91,2.668,92,2.087,93,2.668,94,2.542,95,2.668,96,2.668,141,5.846,161,1.875,165,5.022,190,1.225,191,0.005,192,0.006,193,0.005,234,0.584,316,1.489,320,1.295,374,2.051,449,1.447,450,2.158,451,1.759,452,1.791,454,1.791,456,1.791,458,1.791,459,2.198,476,1.344,478,1.417,479,1.678,506,1.447,508,1.447,570,1.417,571,1.271,572,1.271,588,1.271,602,1.447,717,2.64,825,3.658,1422,3.667,1426,4.03,1444,3.861,1486,6.21,1487,6.21,1488,6.21,1489,6.21,1490,6.21,1491,6.21,1492,7.688,1493,5.518,1494,6.21,1495,6.21,1496,5.518,1497,6.21,1498,5.518,1499,6.21,1500,6.21,1501,5.518,1502,6.21,1503,6.21,1504,6.21,1505,6.21,1506,6.21]],["title/classes/ParameterFactory-4.html",[0,0.174,1422,1.915,1507,3.272]],["body/classes/ParameterFactory-4.html",[0,0.281,2,1.231,3,0.054,4,0.054,5,0.054,7,0.074,14,1.169,18,0.886,26,0.85,29,0.007,30,0.629,31,0.192,33,0.245,41,0.96,51,0.98,61,1.099,67,0.074,76,1.741,79,1.273,90,3.389,91,3.389,92,2.65,93,3.389,94,3.229,95,3.389,96,3.389,190,1.277,191,0.005,192,0.006,193,0.005,234,0.609,316,1.527,320,1.35,339,1.771,360,1.804,365,1.509,367,1.509,478,1.099,479,1.709,528,1.509,529,1.509,570,1.444,571,1.326,572,1.326,588,1.326,644,1.509,646,1.509,649,1.509,717,2.689,746,3.372,825,3.712,1422,3.762,1426,4.202,1444,4.025,1508,6.475,1509,6.475,1510,6.475,1511,6.475,1512,6.475,1513,6.475,1514,5.753,1515,6.475,1516,5.753,1517,7.008,1518,6.475,1519,5.753,1520,6.475,1521,5.753,1522,6.475,1523,5.753,1524,6.475,1525,6.475,1526,6.475]],["title/classes/ParameterFactory-5.html",[0,0.174,1422,1.915,1527,3.272]],["body/classes/ParameterFactory-5.html",[0,0.285,2,1.248,3,0.055,4,0.055,5,0.055,7,0.075,14,1.179,18,0.899,26,0.863,29,0.007,30,0.589,33,0.204,41,0.974,51,1.008,61,1.115,67,0.075,76,1.752,79,1.267,90,2.822,91,2.822,92,2.207,93,2.822,94,2.689,95,2.822,96,2.822,133,1.659,190,1.296,191,0.005,192,0.006,193,0.005,234,0.618,316,1.54,320,1.37,393,1.531,396,1.502,397,1.502,403,1.82,404,1.531,405,1.531,478,1.115,479,1.72,512,1.158,515,1.531,517,1.531,570,1.453,571,1.345,572,1.345,588,1.345,614,1.531,616,1.821,717,2.706,746,3.42,825,3.73,1422,3.795,1425,6.049,1426,4.262,1440,6.049,1444,4.083,1528,6.568,1529,6.568,1530,6.568,1531,6.568,1532,6.568,1533,5.836,1534,6.568,1535,5.836,1536,6.568,1537,5.836,1538,6.568,1539,5.836,1540,6.568,1541,6.568]],["title/classes/ParameterFactory-6.html",[0,0.174,1422,1.915,1542,3.272]],["body/classes/ParameterFactory-6.html",[0,0.295,2,1.293,3,0.057,4,0.072,5,0.057,7,0.078,14,1.204,18,0.931,26,0.893,29,0.007,30,0.451,31,0.197,33,0.211,41,1.008,51,0.996,61,1.155,67,0.078,76,1.664,79,1.252,90,2.923,91,2.923,92,2.286,93,2.923,94,2.785,95,2.923,96,2.923,190,1.342,191,0.005,192,0.006,193,0.005,234,0.64,316,1.573,445,1.988,446,1.585,478,1.155,479,1.746,502,1.585,570,1.475,571,1.393,572,1.393,588,1.393,717,2.747,746,3.543,825,3.774,1422,3.876,1426,4.415,1444,4.229,1543,6.803,1544,6.803,1545,6.803,1546,6.803,1547,6.803,1548,6.045,1549,6.803,1550,6.045,1551,6.803,1552,6.803]],["title/classes/ParameterFactory-7.html",[0,0.174,1422,1.915,1553,3.272]],["body/classes/ParameterFactory-7.html",[0,0.288,2,1.26,3,0.055,4,0.055,5,0.055,7,0.076,14,1.186,18,0.907,26,0.871,29,0.007,30,0.439,41,0.983,51,0.951,61,1.126,67,0.076,76,1.358,79,1.27,90,2.849,91,2.849,92,2.228,93,2.849,94,2.715,95,2.849,96,2.849,141,5.043,190,1.308,191,0.005,192,0.006,193,0.005,234,0.624,316,1.549,320,1.383,412,1.831,437,1.517,438,1.865,439,1.865,476,1.435,478,1.126,479,1.727,499,1.545,500,2.003,501,1.545,570,1.594,571,1.358,572,1.358,573,1.517,583,1.865,586,1.545,588,1.358,717,2.717,825,3.742,1422,3.817,1444,4.123,1554,6.632,1555,6.632,1556,6.632,1557,6.632,1558,5.893,1559,8.002,1560,5.893,1561,8.594,1562,5.893,1563,6.632,1564,6.632,1565,5.893,1566,6.632,1567,6.632]],["title/interfaces/ParcelDelivery.html",[232,0.161,392,1.115]],["body/interfaces/ParcelDelivery.html",[0,0.136,3,0.026,4,0.04,5,0.026,7,0.036,8,0.376,12,0.877,25,0.295,29,0.007,30,0.564,31,0.236,33,0.296,45,0.395,67,0.113,81,0.666,84,0.679,89,0.691,109,0.909,133,0.998,161,1.818,184,0.332,191,0.002,192,0.004,193,0.002,220,0.731,232,0.325,234,0.45,239,0.387,253,0.691,273,0.564,315,1.115,316,0.607,317,0.731,318,0.679,319,2.259,320,0.654,321,1.115,322,1.513,323,0.731,324,1.115,325,0.731,326,1.352,327,0.731,328,1.352,329,0.731,330,0.731,331,0.731,332,1.075,333,1.115,334,0.731,335,0.731,336,0.731,337,0.731,338,0.731,339,1.458,340,1.115,341,0.731,342,0.731,343,0.718,344,0.731,345,0.731,346,1.115,347,1.095,348,1.095,349,0.745,350,1.749,351,1.115,352,0.731,353,0.731,354,0.745,355,1.115,356,0.718,357,0.731,358,1.352,359,0.731,360,1.095,361,1.352,362,0.731,363,0.704,364,0.731,365,0.731,366,0.745,367,0.731,368,1.327,369,0.718,370,0.731,371,0.731,372,0.718,373,0.731,374,1.753,375,1.352,376,0.731,377,0.731,378,0.731,379,0.731,380,0.718,381,1.115,382,1.017,383,0.731,384,1.485,385,0.731,386,0.745,387,0.745,388,1.377,389,0.745,390,0.745,391,0.731,392,1.352,393,1.513,394,0.745,395,0.745,396,0.718,397,1.485,398,0.745,399,0.745,400,0.745,401,0.745,402,0.745,403,1.095,404,0.731,405,0.731,406,0.731,407,0.731,408,0.731,409,0.731,410,1.115,411,0.731,412,1.095,413,0.731,414,0.731,415,0.731,416,0.731,417,0.731,418,0.731,419,0.731,420,0.731,421,0.731,422,0.731,423,0.731,424,0.731,425,0.731,426,0.731,427,0.731,428,0.731,429,1.115,430,0.731,431,0.731,432,0.731,433,0.731,434,0.731,435,0.731,436,0.731,437,1.327,438,0.731,439,0.731,440,1.115,441,0.731,442,0.731,443,0.731,444,0.731,445,1.485,446,0.731,447,0.745,448,0.731,449,0.731,450,0.731,451,1.485,452,0.731,453,1.115,454,0.731,455,1.352,456,0.731,457,1.115,458,0.731,459,1.513,460,0.731,461,1.095,462,0.731,463,1.115,464,0.731,465,0.731,466,0.731,467,1.115,468,0.731,469,1.095,470,0.745,471,0.745,472,0.731,473,0.731,474,1.095,475,1.075,476,1.036,477,0.691,478,1.541,479,1.793,480,0.731,481,0.731,482,0.731,483,0.731,484,0.731,485,0.731,486,0.731,487,0.731,488,0.731,489,0.731,490,0.731,491,0.731,492,0.731,493,0.731,494,0.731,495,0.731,496,1.352,497,1.352,498,1.749,499,0.731,500,0.731,501,1.115,502,0.731,503,0.745,504,1.352,505,1.352,506,0.731,507,0.745,508,0.731,509,0.745,510,1.115,511,0.731,512,1.023,513,0.745,514,0.745,515,0.731,516,0.745,517,0.731,518,0.731,519,1.115,520,0.745,521,1.115,522,1.115,523,1.115,524,1.541,525,0.731,526,0.745,527,0.745,528,1.115,529,0.731,530,0.745,531,0.745,532,0.596,533,0.731,534,1.327,535,1.327,536,1.115,537,0.718,538,0.718,539,0.718,540,1.115,541,0.731,542,0.731,543,0.731,544,1.036,545,1.352,546,0.718,547,0.718,548,0.731,549,0.745,550,0.745,551,0.731,552,0.731,553,0.745,554,0.745,555,0.745,556,0.745,557,1.115,558,0.718,559,0.718,560,1.327,561,1.115,562,0.718,563,0.731,564,0.731,565,1.115,566,0.745,567,0.387,568,0.731,569,0.642,570,1.64,571,1.657,572,1.617,573,1.807,574,1.055,575,0.745,576,0.731,577,0.619,578,0.731,579,0.731,580,1.352,581,0.745,582,0.745,583,1.115,584,0.745,585,0.745,586,0.731,587,0.745,588,1.617,589,0.745,590,1.749,591,0.745,592,0.745,593,0.745,594,0.745,595,0.745,596,1.352,597,0.745,598,0.745,599,0.745,600,0.745,601,0.745,602,0.731,603,0.745,604,0.745,605,0.745,606,0.745,607,0.745,608,0.745,609,0.745,610,0.745,611,0.745,612,0.745,613,0.745,614,0.731,615,0.745,616,1.329,617,0.745,618,0.745,619,0.745,620,0.745,621,0.745,622,1.115,623,0.745,624,0.731,625,0.745,626,0.745,627,0.745,628,0.745,629,0.745,630,0.731,631,0.731,632,0.745,633,0.745,634,0.745,635,0.731,636,0.731,637,0.745,638,0.745,639,0.731,640,0.745,641,0.745,642,0.745,643,0.745,644,0.731,645,0.745,646,0.731,647,0.745,648,0.745,649,0.731,650,0.745,651,0.745]],["title/interfaces/Payload.html",[232,0.161,478,0.812]],["body/interfaces/Payload.html",[0,0.136,3,0.026,4,0.04,5,0.026,7,0.036,8,0.376,12,0.877,25,0.295,29,0.007,30,0.564,31,0.236,33,0.296,45,0.395,67,0.113,81,0.666,84,0.679,89,0.691,109,0.909,133,0.998,161,1.818,184,0.332,191,0.002,192,0.004,193,0.002,220,0.731,232,0.325,234,0.45,239,0.387,253,0.691,273,0.564,315,1.115,316,0.607,317,0.731,318,0.679,319,2.259,320,0.654,321,1.115,322,1.513,323,0.731,324,1.115,325,0.731,326,1.352,327,0.731,328,1.352,329,0.731,330,0.731,331,0.731,332,1.075,333,1.115,334,0.731,335,0.731,336,0.731,337,0.731,338,0.731,339,1.458,340,1.115,341,0.731,342,0.731,343,0.718,344,0.731,345,0.731,346,1.115,347,1.095,348,1.095,349,0.745,350,1.541,351,1.115,352,0.731,353,0.731,354,0.745,355,1.115,356,0.718,357,0.731,358,1.352,359,0.731,360,1.095,361,1.352,362,0.731,363,0.704,364,0.731,365,0.731,366,0.745,367,0.731,368,1.327,369,0.718,370,0.731,371,0.731,372,0.718,373,0.731,374,1.753,375,1.352,376,0.731,377,0.731,378,0.731,379,0.731,380,0.718,381,1.115,382,1.017,383,0.731,384,1.485,385,0.731,386,0.745,387,0.745,388,1.377,389,0.745,390,0.745,391,0.731,392,1.115,393,0.731,394,0.745,395,0.745,396,0.718,397,1.485,398,0.745,399,0.745,400,0.745,401,0.745,402,0.745,403,1.095,404,0.731,405,0.731,406,0.731,407,0.731,408,0.731,409,0.731,410,1.115,411,0.731,412,1.095,413,0.731,414,0.731,415,0.731,416,0.731,417,0.731,418,0.731,419,0.731,420,0.731,421,0.731,422,0.731,423,0.731,424,0.731,425,0.731,426,0.731,427,0.731,428,0.731,429,1.115,430,0.731,431,0.731,432,0.731,433,0.731,434,0.731,435,0.731,436,0.731,437,1.327,438,0.731,439,0.731,440,1.115,441,0.731,442,0.731,443,0.731,444,0.731,445,1.485,446,0.731,447,0.745,448,0.731,449,0.731,450,0.731,451,1.485,452,0.731,453,1.115,454,0.731,455,1.352,456,0.731,457,1.115,458,0.731,459,1.513,460,0.731,461,1.095,462,0.731,463,1.115,464,0.731,465,0.731,466,0.731,467,1.115,468,0.731,469,1.095,470,0.745,471,0.745,472,0.731,473,0.731,474,1.095,475,1.075,476,1.036,477,0.691,478,1.549,479,1.793,480,0.731,481,0.731,482,0.731,483,0.731,484,0.731,485,0.731,486,0.731,487,0.731,488,0.731,489,0.731,490,0.731,491,0.731,492,0.731,493,0.731,494,0.731,495,0.731,496,1.352,497,1.352,498,1.749,499,0.731,500,1.513,501,1.513,502,0.731,503,0.745,504,1.352,505,1.352,506,0.731,507,0.745,508,0.731,509,0.745,510,1.115,511,0.731,512,1.023,513,0.745,514,0.745,515,0.731,516,0.745,517,0.731,518,0.731,519,1.115,520,0.745,521,1.115,522,1.115,523,1.115,524,1.541,525,0.731,526,0.745,527,0.745,528,1.115,529,0.731,530,0.745,531,0.745,532,0.596,533,0.731,534,1.327,535,1.327,536,1.115,537,0.718,538,0.718,539,0.718,540,1.115,541,0.731,542,0.731,543,0.731,544,1.036,545,1.352,546,0.718,547,0.718,548,0.731,549,0.745,550,0.745,551,0.731,552,0.731,553,0.745,554,0.745,555,0.745,556,0.745,557,1.115,558,0.718,559,0.718,560,1.327,561,1.115,562,0.718,563,0.731,564,0.731,565,1.115,566,0.745,567,0.387,568,0.731,569,0.642,570,1.64,571,1.657,572,1.617,573,1.807,574,1.055,575,0.745,576,0.731,577,0.619,578,0.731,579,0.731,580,1.352,581,0.745,582,0.745,583,1.115,584,0.745,585,0.745,586,0.731,587,0.745,588,1.617,589,0.745,590,1.749,591,0.745,592,0.745,593,0.745,594,0.745,595,0.745,596,1.352,597,0.745,598,0.745,599,0.745,600,0.745,601,0.745,602,0.731,603,0.745,604,0.745,605,0.745,606,0.745,607,0.745,608,0.745,609,0.745,610,0.745,611,0.745,612,0.745,613,0.745,614,0.731,615,0.745,616,1.329,617,0.745,618,0.745,619,0.745,620,0.745,621,0.745,622,1.115,623,0.745,624,0.731,625,0.745,626,0.745,627,0.745,628,0.745,629,0.745,630,0.731,631,0.731,632,0.745,633,0.745,634,0.745,635,0.731,636,0.731,637,0.745,638,0.745,639,0.731,640,0.745,641,0.745,642,0.745,643,0.745,644,0.731,645,0.745,646,0.731,647,0.745,648,0.745,649,0.731,650,0.745,651,0.745]],["title/interfaces/Payload-1.html",[194,2.158,232,0.135,478,0.681]],["body/interfaces/Payload-1.html",[0,0.136,3,0.026,4,0.04,5,0.026,7,0.036,8,0.376,12,0.877,25,0.295,29,0.007,30,0.564,31,0.236,33,0.296,45,0.395,67,0.113,81,0.666,84,0.679,89,0.691,109,0.909,133,0.998,161,1.818,184,0.332,191,0.002,192,0.004,193,0.002,220,0.731,232,0.325,234,0.45,239,0.387,253,0.691,273,0.564,315,1.115,316,0.607,317,0.731,318,0.679,319,2.259,320,0.654,321,1.115,322,1.513,323,0.731,324,1.115,325,0.731,326,1.352,327,0.731,328,1.352,329,0.731,330,0.731,331,0.731,332,1.075,333,1.115,334,0.731,335,0.731,336,0.731,337,0.731,338,0.731,339,1.458,340,1.115,341,0.731,342,0.731,343,0.718,344,0.731,345,0.731,346,1.115,347,1.095,348,1.095,349,0.745,350,1.541,351,1.115,352,0.731,353,0.731,354,0.745,355,1.115,356,0.718,357,0.731,358,1.352,359,0.731,360,1.095,361,1.352,362,0.731,363,0.704,364,0.731,365,0.731,366,0.745,367,0.731,368,1.327,369,0.718,370,0.731,371,0.731,372,0.718,373,0.731,374,1.753,375,1.352,376,0.731,377,0.731,378,0.731,379,0.731,380,0.718,381,1.115,382,1.017,383,0.731,384,1.485,385,0.731,386,0.745,387,0.745,388,1.377,389,0.745,390,0.745,391,0.731,392,1.115,393,0.731,394,0.745,395,0.745,396,0.718,397,1.485,398,0.745,399,0.745,400,0.745,401,0.745,402,0.745,403,1.095,404,0.731,405,0.731,406,0.731,407,0.731,408,0.731,409,0.731,410,1.115,411,0.731,412,1.095,413,0.731,414,0.731,415,0.731,416,0.731,417,0.731,418,0.731,419,0.731,420,0.731,421,0.731,422,0.731,423,0.731,424,0.731,425,0.731,426,0.731,427,0.731,428,0.731,429,1.115,430,0.731,431,0.731,432,0.731,433,0.731,434,0.731,435,0.731,436,0.731,437,1.327,438,0.731,439,0.731,440,1.115,441,0.731,442,0.731,443,0.731,444,0.731,445,1.753,446,0.731,447,0.745,448,0.731,449,0.731,450,0.731,451,1.485,452,0.731,453,1.115,454,0.731,455,1.352,456,0.731,457,1.115,458,0.731,459,1.513,460,0.731,461,1.095,462,0.731,463,1.115,464,0.731,465,0.731,466,0.731,467,1.115,468,0.731,469,1.095,470,0.745,471,0.745,472,0.731,473,0.731,474,1.095,475,1.075,476,1.036,477,0.691,478,1.549,479,1.793,480,0.731,481,0.731,482,0.731,483,0.731,484,0.731,485,0.731,486,0.731,487,0.731,488,0.731,489,0.731,490,0.731,491,0.731,492,0.731,493,0.731,494,0.731,495,0.731,496,1.352,497,1.352,498,1.749,499,0.731,500,0.731,501,1.115,502,0.731,503,1.377,504,1.352,505,1.352,506,0.731,507,0.745,508,0.731,509,0.745,510,1.115,511,0.731,512,1.023,513,0.745,514,0.745,515,0.731,516,0.745,517,0.731,518,0.731,519,1.115,520,0.745,521,1.115,522,1.115,523,1.115,524,1.541,525,0.731,526,0.745,527,0.745,528,1.115,529,0.731,530,0.745,531,0.745,532,0.596,533,0.731,534,1.327,535,1.327,536,1.115,537,0.718,538,0.718,539,0.718,540,1.115,541,0.731,542,0.731,543,0.731,544,1.036,545,1.352,546,0.718,547,0.718,548,0.731,549,0.745,550,0.745,551,0.731,552,0.731,553,0.745,554,0.745,555,0.745,556,0.745,557,1.115,558,0.718,559,0.718,560,1.327,561,1.115,562,0.718,563,0.731,564,0.731,565,1.115,566,0.745,567,0.387,568,0.731,569,0.642,570,1.64,571,1.657,572,1.617,573,1.807,574,1.055,575,0.745,576,0.731,577,0.619,578,0.731,579,0.731,580,1.352,581,0.745,582,0.745,583,1.115,584,0.745,585,0.745,586,0.731,587,0.745,588,1.617,589,0.745,590,1.749,591,0.745,592,0.745,593,0.745,594,0.745,595,0.745,596,1.352,597,0.745,598,0.745,599,0.745,600,0.745,601,0.745,602,0.731,603,0.745,604,0.745,605,0.745,606,0.745,607,0.745,608,0.745,609,0.745,610,0.745,611,0.745,612,0.745,613,0.745,614,0.731,615,0.745,616,1.329,617,0.745,618,0.745,619,0.745,620,0.745,621,0.745,622,1.115,623,0.745,624,0.731,625,0.745,626,0.745,627,0.745,628,0.745,629,0.745,630,0.731,631,0.731,632,0.745,633,0.745,634,0.745,635,0.731,636,0.731,637,0.745,638,0.745,639,0.731,640,0.745,641,0.745,642,0.745,643,0.745,644,0.731,645,0.745,646,0.731,647,0.745,648,0.745,649,0.731,650,0.745,651,0.745]],["title/interfaces/Payload-2.html",[232,0.135,478,0.681,1464,3.272]],["body/interfaces/Payload-2.html",[0,0.136,3,0.026,4,0.04,5,0.026,7,0.036,8,0.375,12,0.875,25,0.294,29,0.007,30,0.563,31,0.236,32,0.601,33,0.296,45,0.394,67,0.113,81,0.664,84,0.676,89,0.689,109,0.907,133,0.995,161,1.816,184,0.33,191,0.002,192,0.004,193,0.002,220,0.728,232,0.325,234,0.449,239,0.385,253,0.689,273,0.561,315,1.112,316,0.605,317,0.728,318,0.676,319,2.259,320,0.651,321,1.112,322,1.51,323,0.728,324,1.112,325,0.728,326,1.349,327,0.728,328,1.349,329,0.728,330,0.728,331,0.728,332,1.071,333,1.112,334,0.728,335,0.728,336,0.728,337,0.728,338,0.728,339,1.455,340,1.112,341,0.728,342,0.728,343,0.715,344,0.728,345,0.728,346,1.112,347,1.091,348,1.091,349,0.742,350,1.538,351,1.112,352,0.728,353,0.728,354,0.742,355,1.112,356,0.715,357,0.728,358,1.349,359,0.728,360,1.091,361,1.349,362,0.728,363,0.702,364,0.728,365,0.728,366,0.742,367,0.728,368,1.324,369,0.715,370,0.728,371,0.728,372,0.715,373,0.728,374,1.75,375,1.349,376,0.728,377,0.728,378,0.728,379,0.728,380,0.715,381,1.112,382,1.013,383,0.728,384,1.482,385,0.728,386,0.742,387,0.742,388,1.374,389,0.742,390,0.742,391,0.728,392,1.112,393,0.728,394,0.742,395,0.742,396,0.715,397,1.482,398,0.742,399,0.742,400,0.742,401,0.742,402,0.742,403,1.091,404,0.728,405,0.728,406,0.728,407,0.728,408,0.728,409,0.728,410,1.112,411,0.728,412,1.091,413,0.728,414,0.728,415,0.728,416,0.728,417,0.728,418,0.728,419,0.728,420,0.728,421,0.728,422,0.728,423,0.728,424,0.728,425,0.728,426,0.728,427,0.728,428,0.728,429,1.112,430,0.728,431,0.728,432,0.728,433,0.728,434,0.728,435,0.728,436,0.728,437,1.324,438,0.728,439,0.728,440,1.112,441,0.728,442,0.728,443,0.728,444,0.728,445,1.482,446,0.728,447,0.742,448,0.728,449,0.728,450,0.728,451,1.75,452,0.728,453,1.112,454,0.728,455,1.349,456,0.728,457,1.112,458,0.728,459,1.509,460,0.728,461,1.091,462,0.728,463,1.112,464,0.728,465,0.728,466,0.728,467,1.112,468,0.728,469,1.091,470,0.742,471,0.742,472,0.728,473,0.728,474,1.091,475,1.071,476,1.032,477,0.689,478,1.548,479,1.792,480,0.728,481,0.728,482,0.728,483,0.728,484,0.728,485,0.728,486,0.728,487,0.728,488,0.728,489,0.728,490,0.728,491,0.728,492,0.728,493,0.728,494,0.728,495,0.728,496,1.349,497,1.349,498,1.746,499,0.728,500,0.728,501,1.112,502,0.728,503,0.742,504,1.349,505,1.349,506,0.728,507,1.538,508,1.349,509,1.374,510,1.112,511,0.728,512,1.02,513,0.742,514,0.742,515,0.728,516,0.742,517,0.728,518,0.728,519,1.112,520,0.742,521,1.112,522,1.112,523,1.112,524,1.538,525,0.728,526,0.742,527,0.742,528,1.112,529,0.728,530,0.742,531,0.742,532,0.594,533,0.728,534,1.324,535,1.324,536,1.112,537,0.715,538,0.715,539,0.715,540,1.112,541,0.728,542,0.728,543,0.728,544,1.032,545,1.349,546,0.715,547,0.715,548,0.728,549,0.742,550,0.742,551,0.728,552,0.728,553,0.742,554,0.742,555,0.742,556,0.742,557,1.112,558,0.715,559,0.715,560,1.324,561,1.112,562,0.715,563,0.728,564,0.728,565,1.112,566,0.742,567,0.385,568,0.728,569,0.64,570,1.639,571,1.655,572,1.615,573,1.805,574,1.052,575,0.742,576,0.728,577,0.616,578,0.728,579,0.728,580,1.349,581,0.742,582,0.742,583,1.112,584,0.742,585,0.742,586,0.728,587,0.742,588,1.615,589,0.742,590,1.746,591,0.742,592,0.742,593,0.742,594,0.742,595,0.742,596,1.349,597,0.742,598,0.742,599,0.742,600,0.742,601,0.742,602,0.728,603,0.742,604,0.742,605,0.742,606,0.742,607,0.742,608,0.742,609,0.742,610,0.742,611,0.742,612,0.742,613,0.742,614,0.728,615,0.742,616,1.326,617,0.742,618,0.742,619,0.742,620,0.742,621,0.742,622,1.112,623,0.742,624,0.728,625,0.742,626,0.742,627,0.742,628,0.742,629,0.742,630,0.728,631,0.728,632,0.742,633,0.742,634,0.742,635,0.728,636,0.728,637,0.742,638,0.742,639,0.728,640,0.742,641,0.742,642,0.742,643,0.742,644,0.728,645,0.742,646,0.728,647,0.742,648,0.742,649,0.728,650,0.742,651,0.742]],["title/interfaces/Payload-3.html",[232,0.135,478,0.681,1485,3.272]],["body/interfaces/Payload-3.html",[0,0.136,3,0.026,4,0.04,5,0.026,7,0.036,8,0.375,12,0.875,25,0.294,29,0.007,30,0.564,31,0.236,33,0.296,45,0.394,67,0.113,81,0.664,84,0.677,89,0.689,109,0.908,133,0.996,161,1.816,184,0.331,191,0.002,192,0.004,193,0.002,220,0.729,232,0.325,234,0.449,239,0.386,253,0.689,273,0.562,315,1.112,316,0.605,317,0.729,318,0.677,319,2.259,320,0.652,321,1.112,322,1.51,323,0.729,324,1.112,325,0.729,326,1.349,327,0.729,328,1.349,329,0.729,330,0.729,331,0.729,332,1.072,333,1.112,334,0.729,335,0.729,336,0.729,337,0.729,338,0.729,339,1.455,340,1.112,341,0.729,342,0.729,343,0.715,344,0.729,345,0.729,346,1.112,347,1.092,348,1.092,349,0.742,350,1.538,351,1.112,352,0.729,353,0.729,354,0.742,355,1.112,356,0.715,357,0.729,358,1.349,359,0.729,360,1.092,361,1.349,362,0.729,363,0.702,364,0.729,365,0.729,366,0.742,367,0.729,368,1.325,369,0.715,370,0.729,371,0.729,372,0.715,373,0.729,374,1.751,375,1.349,376,0.729,377,0.729,378,0.729,379,0.729,380,0.715,381,1.112,382,1.014,383,0.729,384,1.482,385,0.729,386,0.742,387,0.742,388,1.375,389,0.742,390,0.742,391,0.729,392,1.112,393,0.729,394,0.742,395,0.742,396,0.715,397,1.482,398,0.742,399,0.742,400,0.742,401,0.742,402,0.742,403,1.092,404,0.729,405,0.729,406,0.729,407,0.729,408,0.729,409,0.729,410,1.112,411,0.729,412,1.092,413,0.729,414,0.729,415,0.729,416,0.729,417,0.729,418,0.729,419,0.729,420,0.729,421,0.729,422,0.729,423,0.729,424,0.729,425,0.729,426,0.729,427,0.729,428,0.729,429,1.112,430,0.729,431,0.729,432,0.729,433,0.729,434,0.729,435,0.729,436,0.729,437,1.325,438,0.729,439,0.729,440,1.112,441,0.729,442,0.729,443,0.729,444,0.729,445,1.482,446,0.729,447,0.742,448,0.729,449,0.729,450,0.729,451,1.482,452,0.729,453,1.112,454,0.729,455,1.349,456,0.729,457,1.112,458,0.729,459,1.51,460,0.729,461,1.092,462,0.729,463,1.112,464,0.729,465,0.729,466,0.729,467,1.112,468,0.729,469,1.597,470,0.742,471,0.742,472,0.729,473,0.729,474,1.092,475,1.072,476,1.033,477,0.689,478,1.548,479,1.792,480,0.729,481,0.729,482,0.729,483,0.729,484,0.729,485,0.729,486,0.729,487,0.729,488,0.729,489,0.729,490,0.729,491,0.729,492,0.729,493,0.729,494,0.729,495,0.729,496,1.349,497,1.349,498,1.747,499,0.729,500,0.729,501,1.112,502,0.729,503,0.742,504,1.349,505,1.349,506,0.729,507,0.742,508,0.729,509,0.742,510,1.112,511,0.729,512,1.297,513,1.375,514,1.375,515,0.729,516,0.742,517,0.729,518,0.729,519,1.112,520,0.742,521,1.112,522,1.112,523,1.112,524,1.538,525,0.729,526,0.742,527,0.742,528,1.112,529,0.729,530,0.742,531,0.742,532,0.594,533,0.729,534,1.325,535,1.325,536,1.112,537,0.715,538,0.715,539,0.715,540,1.112,541,0.729,542,0.729,543,0.729,544,1.033,545,1.349,546,0.715,547,0.715,548,0.729,549,0.742,550,0.742,551,0.729,552,0.729,553,0.742,554,0.742,555,0.742,556,0.742,557,1.112,558,0.715,559,0.715,560,1.325,561,1.112,562,0.715,563,0.729,564,0.729,565,1.112,566,0.742,567,0.386,568,0.729,569,0.64,570,1.639,571,1.656,572,1.615,573,1.805,574,1.052,575,0.742,576,0.729,577,0.617,578,0.729,579,0.729,580,1.349,581,0.742,582,0.742,583,1.112,584,0.742,585,0.742,586,0.729,587,0.742,588,1.615,589,0.742,590,1.747,591,0.742,592,0.742,593,0.742,594,0.742,595,0.742,596,1.349,597,0.742,598,0.742,599,0.742,600,0.742,601,0.742,602,0.729,603,0.742,604,0.742,605,0.742,606,0.742,607,0.742,608,0.742,609,0.742,610,0.742,611,0.742,612,0.742,613,0.742,614,0.729,615,0.742,616,1.327,617,0.742,618,0.742,619,0.742,620,0.742,621,0.742,622,1.112,623,0.742,624,0.729,625,0.742,626,0.742,627,0.742,628,0.742,629,0.742,630,0.729,631,0.729,632,0.742,633,0.742,634,0.742,635,0.729,636,0.729,637,0.742,638,0.742,639,0.729,640,0.742,641,0.742,642,0.742,643,0.742,644,0.729,645,0.742,646,0.729,647,0.742,648,0.742,649,0.729,650,0.742,651,0.742]],["title/interfaces/Payload-4.html",[232,0.135,478,0.681,1507,3.272]],["body/interfaces/Payload-4.html",[0,0.136,3,0.026,4,0.04,5,0.026,7,0.036,8,0.375,12,0.875,25,0.294,29,0.007,30,0.564,31,0.236,33,0.296,45,0.394,67,0.113,81,0.664,84,0.677,89,0.689,109,0.908,133,0.996,161,1.816,184,0.331,191,0.002,192,0.004,193,0.002,220,0.729,232,0.325,234,0.449,239,0.386,253,0.689,273,0.562,315,1.112,316,0.605,317,0.729,318,0.677,319,2.259,320,0.652,321,1.112,322,1.51,323,0.729,324,1.112,325,0.729,326,1.349,327,0.729,328,1.349,329,0.729,330,0.729,331,0.729,332,1.072,333,1.112,334,0.729,335,0.729,336,0.729,337,0.729,338,0.729,339,1.455,340,1.112,341,0.729,342,0.729,343,0.715,344,0.729,345,0.729,346,1.112,347,1.092,348,1.092,349,0.742,350,1.538,351,1.112,352,0.729,353,0.729,354,0.742,355,1.112,356,0.715,357,0.729,358,1.349,359,0.729,360,1.092,361,1.349,362,0.729,363,0.702,364,0.729,365,0.729,366,0.742,367,0.729,368,1.325,369,0.715,370,0.729,371,0.729,372,0.715,373,0.729,374,1.751,375,1.349,376,0.729,377,0.729,378,0.729,379,0.729,380,0.715,381,1.112,382,1.014,383,0.729,384,1.482,385,0.729,386,0.742,387,0.742,388,1.375,389,0.742,390,0.742,391,0.729,392,1.112,393,0.729,394,0.742,395,0.742,396,0.715,397,1.482,398,0.742,399,0.742,400,0.742,401,0.742,402,0.742,403,1.597,404,0.729,405,0.729,406,0.729,407,0.729,408,0.729,409,0.729,410,1.112,411,0.729,412,1.092,413,0.729,414,0.729,415,0.729,416,0.729,417,0.729,418,0.729,419,0.729,420,0.729,421,0.729,422,0.729,423,0.729,424,0.729,425,0.729,426,0.729,427,0.729,428,0.729,429,1.112,430,0.729,431,0.729,432,0.729,433,0.729,434,0.729,435,0.729,436,0.729,437,1.325,438,0.729,439,0.729,440,1.112,441,0.729,442,0.729,443,0.729,444,0.729,445,1.482,446,0.729,447,0.742,448,0.729,449,0.729,450,0.729,451,1.482,452,0.729,453,1.112,454,0.729,455,1.349,456,0.729,457,1.112,458,0.729,459,1.51,460,0.729,461,1.092,462,0.729,463,1.112,464,0.729,465,0.729,466,0.729,467,1.112,468,0.729,469,1.092,470,0.742,471,0.742,472,0.729,473,0.729,474,1.092,475,1.072,476,1.033,477,0.689,478,1.548,479,1.792,480,0.729,481,0.729,482,0.729,483,0.729,484,0.729,485,0.729,486,0.729,487,0.729,488,0.729,489,0.729,490,0.729,491,0.729,492,0.729,493,0.729,494,0.729,495,0.729,496,1.349,497,1.349,498,1.747,499,0.729,500,0.729,501,1.112,502,0.729,503,0.742,504,1.349,505,1.349,506,0.729,507,0.742,508,0.729,509,0.742,510,1.112,511,0.729,512,1.297,513,0.742,514,0.742,515,0.729,516,1.375,517,1.349,518,0.729,519,1.112,520,0.742,521,1.112,522,1.112,523,1.112,524,1.538,525,0.729,526,0.742,527,0.742,528,1.112,529,0.729,530,0.742,531,0.742,532,0.594,533,0.729,534,1.325,535,1.325,536,1.112,537,0.715,538,0.715,539,0.715,540,1.112,541,0.729,542,0.729,543,0.729,544,1.033,545,1.349,546,0.715,547,0.715,548,0.729,549,0.742,550,0.742,551,0.729,552,0.729,553,0.742,554,0.742,555,0.742,556,0.742,557,1.112,558,0.715,559,0.715,560,1.325,561,1.112,562,0.715,563,0.729,564,0.729,565,1.112,566,0.742,567,0.386,568,0.729,569,0.64,570,1.639,571,1.656,572,1.615,573,1.805,574,1.052,575,0.742,576,0.729,577,0.617,578,0.729,579,0.729,580,1.349,581,0.742,582,0.742,583,1.112,584,0.742,585,0.742,586,0.729,587,0.742,588,1.615,589,0.742,590,1.747,591,0.742,592,0.742,593,0.742,594,0.742,595,0.742,596,1.349,597,0.742,598,0.742,599,0.742,600,0.742,601,0.742,602,0.729,603,0.742,604,0.742,605,0.742,606,0.742,607,0.742,608,0.742,609,0.742,610,0.742,611,0.742,612,0.742,613,0.742,614,0.729,615,0.742,616,1.327,617,0.742,618,0.742,619,0.742,620,0.742,621,0.742,622,1.112,623,0.742,624,0.729,625,0.742,626,0.742,627,0.742,628,0.742,629,0.742,630,0.729,631,0.729,632,0.742,633,0.742,634,0.742,635,0.729,636,0.729,637,0.742,638,0.742,639,0.729,640,0.742,641,0.742,642,0.742,643,0.742,644,0.729,645,0.742,646,0.729,647,0.742,648,0.742,649,0.729,650,0.742,651,0.742]],["title/interfaces/Payload-5.html",[232,0.135,478,0.681,1527,3.272]],["body/interfaces/Payload-5.html",[0,0.136,3,0.026,4,0.04,5,0.026,7,0.036,8,0.375,12,0.875,25,0.294,29,0.007,30,0.564,31,0.236,33,0.296,45,0.394,67,0.113,81,0.664,84,0.677,89,0.689,109,0.908,133,0.996,161,1.816,184,0.331,191,0.002,192,0.004,193,0.002,220,0.729,232,0.325,234,0.449,239,0.386,253,0.689,273,0.562,315,1.112,316,0.605,317,0.729,318,0.677,319,2.259,320,0.652,321,1.112,322,1.51,323,0.729,324,1.112,325,0.729,326,1.349,327,0.729,328,1.349,329,0.729,330,0.729,331,0.729,332,1.072,333,1.112,334,0.729,335,0.729,336,0.729,337,0.729,338,0.729,339,1.455,340,1.112,341,0.729,342,0.729,343,0.715,344,0.729,345,0.729,346,1.112,347,1.092,348,1.092,349,0.742,350,1.538,351,1.112,352,0.729,353,0.729,354,0.742,355,1.112,356,0.715,357,0.729,358,1.349,359,0.729,360,1.092,361,1.349,362,0.729,363,0.702,364,0.729,365,0.729,366,0.742,367,0.729,368,1.325,369,0.715,370,0.729,371,0.729,372,0.715,373,0.729,374,1.751,375,1.349,376,0.729,377,0.729,378,0.729,379,0.729,380,0.715,381,1.112,382,1.014,383,0.729,384,1.751,385,0.729,386,0.742,387,0.742,388,1.375,389,0.742,390,0.742,391,0.729,392,1.112,393,0.729,394,0.742,395,0.742,396,0.715,397,1.482,398,0.742,399,0.742,400,0.742,401,0.742,402,0.742,403,1.092,404,0.729,405,0.729,406,0.729,407,0.729,408,0.729,409,0.729,410,1.112,411,0.729,412,1.092,413,0.729,414,0.729,415,0.729,416,0.729,417,0.729,418,0.729,419,0.729,420,0.729,421,0.729,422,0.729,423,0.729,424,0.729,425,0.729,426,0.729,427,0.729,428,0.729,429,1.112,430,0.729,431,0.729,432,0.729,433,0.729,434,0.729,435,0.729,436,0.729,437,1.325,438,0.729,439,0.729,440,1.112,441,0.729,442,0.729,443,0.729,444,0.729,445,1.482,446,0.729,447,0.742,448,0.729,449,0.729,450,0.729,451,1.482,452,0.729,453,1.112,454,0.729,455,1.349,456,0.729,457,1.112,458,0.729,459,1.51,460,0.729,461,1.092,462,0.729,463,1.112,464,0.729,465,0.729,466,0.729,467,1.112,468,0.729,469,1.092,470,0.742,471,0.742,472,0.729,473,0.729,474,1.092,475,1.072,476,1.033,477,0.689,478,1.548,479,1.792,480,0.729,481,0.729,482,0.729,483,0.729,484,0.729,485,0.729,486,0.729,487,0.729,488,0.729,489,0.729,490,0.729,491,0.729,492,0.729,493,0.729,494,0.729,495,0.729,496,1.349,497,1.349,498,1.747,499,0.729,500,0.729,501,1.112,502,0.729,503,0.742,504,1.349,505,1.349,506,0.729,507,0.742,508,0.729,509,0.742,510,1.112,511,0.729,512,1.297,513,0.742,514,0.742,515,0.729,516,0.742,517,0.729,518,0.729,519,1.51,520,1.375,521,1.112,522,1.112,523,1.112,524,1.538,525,0.729,526,0.742,527,0.742,528,1.112,529,0.729,530,0.742,531,0.742,532,0.594,533,0.729,534,1.325,535,1.325,536,1.112,537,0.715,538,0.715,539,0.715,540,1.112,541,0.729,542,0.729,543,0.729,544,1.033,545,1.349,546,0.715,547,0.715,548,0.729,549,0.742,550,0.742,551,0.729,552,0.729,553,0.742,554,0.742,555,0.742,556,0.742,557,1.112,558,0.715,559,0.715,560,1.325,561,1.112,562,0.715,563,0.729,564,0.729,565,1.112,566,0.742,567,0.386,568,0.729,569,0.64,570,1.639,571,1.656,572,1.615,573,1.805,574,1.052,575,0.742,576,0.729,577,0.617,578,0.729,579,0.729,580,1.349,581,0.742,582,0.742,583,1.112,584,0.742,585,0.742,586,0.729,587,0.742,588,1.615,589,0.742,590,1.747,591,0.742,592,0.742,593,0.742,594,0.742,595,0.742,596,1.349,597,0.742,598,0.742,599,0.742,600,0.742,601,0.742,602,0.729,603,0.742,604,0.742,605,0.742,606,0.742,607,0.742,608,0.742,609,0.742,610,0.742,611,0.742,612,0.742,613,0.742,614,0.729,615,0.742,616,1.327,617,0.742,618,0.742,619,0.742,620,0.742,621,0.742,622,1.112,623,0.742,624,0.729,625,0.742,626,0.742,627,0.742,628,0.742,629,0.742,630,0.729,631,0.729,632,0.742,633,0.742,634,0.742,635,0.729,636,0.729,637,0.742,638,0.742,639,0.729,640,0.742,641,0.742,642,0.742,643,0.742,644,0.729,645,0.742,646,0.729,647,0.742,648,0.742,649,0.729,650,0.742,651,0.742]],["title/interfaces/Payload-6.html",[232,0.135,478,0.681,1542,3.272]],["body/interfaces/Payload-6.html",[0,0.136,3,0.026,4,0.04,5,0.026,7,0.036,8,0.375,12,0.875,25,0.294,29,0.007,30,0.564,31,0.236,33,0.296,45,0.394,67,0.113,81,0.664,84,1.402,89,0.689,109,0.908,133,0.996,161,1.816,184,0.331,191,0.002,192,0.004,193,0.002,220,0.729,232,0.325,234,0.449,239,0.386,253,0.689,273,0.562,315,1.112,316,0.605,317,0.729,318,0.677,319,2.259,320,0.652,321,1.112,322,1.51,323,0.729,324,1.112,325,0.729,326,1.349,327,0.729,328,1.349,329,0.729,330,0.729,331,0.729,332,1.072,333,1.112,334,0.729,335,0.729,336,0.729,337,0.729,338,0.729,339,1.455,340,1.112,341,0.729,342,0.729,343,0.715,344,0.729,345,0.729,346,1.112,347,1.092,348,1.597,349,0.742,350,1.538,351,1.112,352,0.729,353,0.729,354,0.742,355,1.112,356,0.715,357,0.729,358,1.349,359,0.729,360,1.092,361,1.349,362,0.729,363,0.702,364,0.729,365,0.729,366,0.742,367,0.729,368,1.325,369,0.715,370,0.729,371,0.729,372,0.715,373,0.729,374,1.751,375,1.349,376,0.729,377,0.729,378,0.729,379,0.729,380,0.715,381,1.112,382,1.014,383,0.729,384,1.482,385,0.729,386,0.742,387,0.742,388,1.375,389,0.742,390,0.742,391,0.729,392,1.112,393,0.729,394,0.742,395,0.742,396,0.715,397,1.482,398,0.742,399,0.742,400,0.742,401,0.742,402,0.742,403,1.092,404,0.729,405,0.729,406,0.729,407,0.729,408,0.729,409,0.729,410,1.112,411,0.729,412,1.092,413,0.729,414,0.729,415,0.729,416,0.729,417,0.729,418,0.729,419,0.729,420,0.729,421,0.729,422,0.729,423,0.729,424,0.729,425,0.729,426,0.729,427,0.729,428,0.729,429,1.112,430,0.729,431,0.729,432,0.729,433,0.729,434,0.729,435,0.729,436,0.729,437,1.325,438,0.729,439,0.729,440,1.112,441,0.729,442,0.729,443,0.729,444,0.729,445,1.482,446,0.729,447,0.742,448,0.729,449,0.729,450,0.729,451,1.482,452,0.729,453,1.112,454,0.729,455,1.349,456,0.729,457,1.112,458,0.729,459,1.51,460,0.729,461,1.092,462,0.729,463,1.112,464,0.729,465,0.729,466,0.729,467,1.112,468,0.729,469,1.092,470,0.742,471,0.742,472,0.729,473,0.729,474,1.092,475,1.072,476,1.033,477,0.689,478,1.548,479,1.792,480,0.729,481,0.729,482,0.729,483,0.729,484,0.729,485,0.729,486,0.729,487,0.729,488,0.729,489,0.729,490,0.729,491,0.729,492,0.729,493,0.729,494,0.729,495,0.729,496,1.349,497,1.349,498,1.747,499,0.729,500,0.729,501,1.112,502,0.729,503,0.742,504,1.349,505,1.349,506,0.729,507,0.742,508,0.729,509,0.742,510,1.112,511,0.729,512,1.021,513,0.742,514,0.742,515,0.729,516,0.742,517,0.729,518,0.729,519,1.112,520,0.742,521,1.112,522,1.112,523,1.112,524,1.538,525,0.729,526,1.375,527,1.375,528,1.112,529,0.729,530,0.742,531,0.742,532,0.594,533,0.729,534,1.325,535,1.325,536,1.112,537,0.715,538,0.715,539,0.715,540,1.112,541,0.729,542,0.729,543,0.729,544,1.033,545,1.349,546,0.715,547,0.715,548,0.729,549,0.742,550,0.742,551,0.729,552,0.729,553,0.742,554,0.742,555,0.742,556,0.742,557,1.112,558,0.715,559,0.715,560,1.325,561,1.112,562,0.715,563,0.729,564,0.729,565,1.112,566,0.742,567,0.386,568,0.729,569,0.64,570,1.639,571,1.656,572,1.615,573,1.805,574,1.052,575,0.742,576,0.729,577,0.617,578,0.729,579,0.729,580,1.349,581,0.742,582,0.742,583,1.112,584,0.742,585,0.742,586,0.729,587,0.742,588,1.615,589,0.742,590,1.747,591,0.742,592,0.742,593,0.742,594,0.742,595,0.742,596,1.349,597,0.742,598,0.742,599,0.742,600,0.742,601,0.742,602,0.729,603,0.742,604,0.742,605,0.742,606,0.742,607,0.742,608,0.742,609,0.742,610,0.742,611,0.742,612,0.742,613,0.742,614,0.729,615,0.742,616,1.327,617,0.742,618,0.742,619,0.742,620,0.742,621,0.742,622,1.112,623,0.742,624,0.729,625,0.742,626,0.742,627,0.742,628,0.742,629,0.742,630,0.729,631,0.729,632,0.742,633,0.742,634,0.742,635,0.729,636,0.729,637,0.742,638,0.742,639,0.729,640,0.742,641,0.742,642,0.742,643,0.742,644,0.729,645,0.742,646,0.729,647,0.742,648,0.742,649,0.729,650,0.742,651,0.742]],["title/interfaces/Payload-7.html",[232,0.135,478,0.681,1553,3.272]],["body/interfaces/Payload-7.html",[0,0.136,3,0.026,4,0.04,5,0.026,7,0.036,8,0.375,12,0.875,25,0.294,29,0.007,30,0.564,31,0.236,33,0.296,45,0.394,67,0.113,81,0.664,84,0.677,89,0.689,109,0.908,133,0.996,161,1.816,184,0.331,191,0.002,192,0.004,193,0.002,220,0.729,232,0.325,234,0.449,239,0.386,253,0.689,273,0.562,315,1.112,316,0.605,317,0.729,318,0.677,319,2.259,320,0.652,321,1.112,322,1.51,323,0.729,324,1.112,325,0.729,326,1.349,327,0.729,328,1.349,329,0.729,330,0.729,331,0.729,332,1.072,333,1.112,334,0.729,335,0.729,336,0.729,337,0.729,338,0.729,339,1.719,340,1.112,341,0.729,342,0.729,343,0.715,344,0.729,345,0.729,346,1.112,347,1.092,348,1.092,349,0.742,350,1.538,351,1.112,352,0.729,353,0.729,354,0.742,355,1.112,356,0.715,357,0.729,358,1.349,359,0.729,360,1.597,361,1.349,362,0.729,363,0.702,364,0.729,365,0.729,366,0.742,367,0.729,368,1.325,369,0.715,370,0.729,371,0.729,372,0.715,373,0.729,374,1.751,375,1.349,376,0.729,377,0.729,378,0.729,379,0.729,380,0.715,381,1.112,382,1.014,383,0.729,384,1.482,385,0.729,386,0.742,387,0.742,388,1.375,389,0.742,390,0.742,391,0.729,392,1.112,393,0.729,394,0.742,395,0.742,396,0.715,397,1.482,398,0.742,399,0.742,400,0.742,401,0.742,402,0.742,403,1.092,404,0.729,405,0.729,406,0.729,407,0.729,408,0.729,409,0.729,410,1.112,411,0.729,412,1.092,413,0.729,414,0.729,415,0.729,416,0.729,417,0.729,418,0.729,419,0.729,420,0.729,421,0.729,422,0.729,423,0.729,424,0.729,425,0.729,426,0.729,427,0.729,428,0.729,429,1.112,430,0.729,431,0.729,432,0.729,433,0.729,434,0.729,435,0.729,436,0.729,437,1.325,438,0.729,439,0.729,440,1.112,441,0.729,442,0.729,443,0.729,444,0.729,445,1.482,446,0.729,447,0.742,448,0.729,449,0.729,450,0.729,451,1.482,452,0.729,453,1.112,454,0.729,455,1.349,456,0.729,457,1.112,458,0.729,459,1.51,460,0.729,461,1.092,462,0.729,463,1.112,464,0.729,465,0.729,466,0.729,467,1.112,468,0.729,469,1.092,470,0.742,471,0.742,472,0.729,473,0.729,474,1.092,475,1.072,476,1.033,477,0.689,478,1.548,479,1.792,480,0.729,481,0.729,482,0.729,483,0.729,484,0.729,485,0.729,486,0.729,487,0.729,488,0.729,489,0.729,490,0.729,491,0.729,492,0.729,493,0.729,494,0.729,495,0.729,496,1.349,497,1.349,498,1.747,499,0.729,500,0.729,501,1.112,502,0.729,503,0.742,504,1.349,505,1.349,506,0.729,507,0.742,508,0.729,509,0.742,510,1.112,511,0.729,512,1.021,513,0.742,514,0.742,515,0.729,516,0.742,517,0.729,518,0.729,519,1.112,520,0.742,521,1.112,522,1.112,523,1.112,524,1.538,525,0.729,526,0.742,527,0.742,528,1.112,529,0.729,530,1.375,531,1.375,532,0.594,533,0.729,534,1.325,535,1.325,536,1.112,537,0.715,538,0.715,539,0.715,540,1.112,541,0.729,542,0.729,543,0.729,544,1.033,545,1.349,546,0.715,547,0.715,548,0.729,549,0.742,550,0.742,551,0.729,552,0.729,553,0.742,554,0.742,555,0.742,556,0.742,557,1.112,558,0.715,559,0.715,560,1.325,561,1.112,562,0.715,563,0.729,564,0.729,565,1.112,566,0.742,567,0.386,568,0.729,569,0.64,570,1.639,571,1.656,572,1.615,573,1.805,574,1.052,575,0.742,576,0.729,577,0.617,578,0.729,579,0.729,580,1.349,581,0.742,582,0.742,583,1.112,584,0.742,585,0.742,586,0.729,587,0.742,588,1.615,589,0.742,590,1.747,591,0.742,592,0.742,593,0.742,594,0.742,595,0.742,596,1.349,597,0.742,598,0.742,599,0.742,600,0.742,601,0.742,602,0.729,603,0.742,604,0.742,605,0.742,606,0.742,607,0.742,608,0.742,609,0.742,610,0.742,611,0.742,612,0.742,613,0.742,614,0.729,615,0.742,616,1.327,617,0.742,618,0.742,619,0.742,620,0.742,621,0.742,622,1.112,623,0.742,624,0.729,625,0.742,626,0.742,627,0.742,628,0.742,629,0.742,630,0.729,631,0.729,632,0.742,633,0.742,634,0.742,635,0.729,636,0.729,637,0.742,638,0.742,639,0.729,640,0.742,641,0.742,642,0.742,643,0.742,644,0.729,645,0.742,646,0.729,647,0.742,648,0.742,649,0.729,650,0.742,651,0.742]],["title/interfaces/PayloadBuilder.html",[232,0.161,570,0.812]],["body/interfaces/PayloadBuilder.html",[0,0.135,3,0.026,4,0.04,5,0.026,7,0.036,12,0.874,14,0.707,25,0.294,26,0.626,29,0.007,30,0.563,31,0.236,33,0.296,41,0.707,45,0.393,67,0.113,81,0.663,84,0.675,89,0.688,109,0.907,133,0.994,161,1.815,184,0.33,191,0.002,192,0.004,193,0.002,220,0.727,232,0.325,234,0.448,239,0.385,253,0.688,273,0.561,315,1.111,316,1.12,317,0.727,318,0.675,319,2.258,320,0.651,321,1.111,322,1.509,323,0.727,324,1.111,325,0.727,326,1.348,327,0.727,328,1.348,329,0.727,330,0.727,331,0.727,332,1.071,333,1.111,334,0.727,335,0.727,336,0.727,337,0.727,338,0.727,339,1.454,340,1.111,341,0.727,342,0.727,343,0.714,344,0.727,345,0.727,346,1.111,347,1.09,348,1.09,349,0.741,350,1.537,351,1.111,352,0.727,353,0.727,354,0.741,355,1.111,356,0.714,357,0.727,358,1.348,359,0.727,360,1.09,361,1.348,362,0.727,363,0.701,364,0.727,365,0.727,366,0.741,367,0.727,368,1.323,369,0.714,370,0.727,371,0.727,372,0.714,373,0.727,374,1.75,375,1.348,376,0.727,377,0.727,378,0.727,379,0.727,380,0.714,381,1.111,382,1.013,383,0.727,384,1.481,385,0.727,386,0.741,387,0.741,388,1.373,389,0.741,390,0.741,391,0.727,392,1.111,393,0.727,394,0.741,395,0.741,396,0.714,397,1.481,398,0.741,399,0.741,400,0.741,401,0.741,402,0.741,403,1.09,404,0.727,405,0.727,406,0.727,407,0.727,408,0.727,409,0.727,410,1.111,411,0.727,412,1.09,413,0.727,414,0.727,415,0.727,416,0.727,417,0.727,418,0.727,419,0.727,420,0.727,421,0.727,422,0.727,423,0.727,424,0.727,425,0.727,426,0.727,427,0.727,428,0.727,429,1.111,430,0.727,431,0.727,432,0.727,433,0.727,434,0.727,435,0.727,436,0.727,437,1.323,438,0.727,439,0.727,440,1.111,441,0.727,442,0.727,443,0.727,444,0.727,445,1.481,446,0.727,447,0.741,448,0.727,449,0.727,450,0.727,451,1.481,452,0.727,453,1.111,454,0.727,455,1.348,456,0.727,457,1.111,458,0.727,459,1.509,460,0.727,461,1.09,462,0.727,463,1.111,464,0.727,465,0.727,466,0.727,467,1.111,468,0.727,469,1.09,470,0.741,471,0.741,472,0.727,473,0.727,474,1.09,475,1.071,476,1.032,477,0.688,478,1.54,479,1.792,480,0.727,481,0.727,482,0.727,483,0.727,484,0.727,485,0.727,486,0.727,487,0.727,488,0.727,489,0.727,490,0.727,491,0.727,492,0.727,493,0.727,494,0.727,495,0.727,496,1.348,497,1.348,498,1.745,499,0.727,500,0.727,501,1.111,502,0.727,503,0.741,504,1.348,505,1.348,506,0.727,507,0.741,508,0.727,509,0.741,510,1.111,511,0.727,512,1.02,513,0.741,514,0.741,515,0.727,516,0.741,517,0.727,518,0.727,519,1.111,520,0.741,521,1.111,522,1.111,523,1.111,524,1.537,525,0.727,526,0.741,527,0.741,528,1.111,529,0.727,530,0.741,531,0.741,532,0.593,533,0.727,534,1.323,535,1.323,536,1.111,537,0.714,538,0.714,539,0.714,540,1.111,541,0.727,542,0.727,543,0.727,544,1.032,545,1.348,546,0.714,547,0.714,548,0.727,549,0.741,550,0.741,551,0.727,552,0.727,553,0.741,554,0.741,555,0.741,556,0.741,557,1.111,558,0.714,559,0.714,560,1.323,561,1.111,562,0.714,563,0.727,564,0.727,565,1.348,566,0.741,567,0.385,568,0.727,569,0.639,570,1.64,571,1.741,572,1.717,573,1.849,574,1.051,575,0.741,576,0.727,577,0.616,578,0.727,579,0.727,580,1.348,581,0.741,582,0.741,583,1.111,584,0.741,585,0.741,586,0.727,587,0.741,588,1.615,589,0.741,590,1.745,591,0.741,592,0.741,593,0.741,594,0.741,595,0.741,596,1.348,597,0.741,598,0.741,599,0.741,600,0.741,601,0.741,602,0.727,603,0.741,604,0.741,605,0.741,606,0.741,607,0.741,608,0.741,609,0.741,610,0.741,611,0.741,612,0.741,613,0.741,614,0.727,615,0.741,616,1.325,617,0.741,618,0.741,619,0.741,620,0.741,621,0.741,622,1.111,623,0.741,624,0.727,625,0.741,626,0.741,627,0.741,628,0.741,629,0.741,630,0.727,631,0.727,632,0.741,633,0.741,634,0.741,635,0.727,636,0.727,637,0.741,638,0.741,639,0.727,640,0.741,641,0.741,642,0.741,643,0.741,644,0.727,645,0.741,646,0.727,647,0.741,648,0.741,649,0.727,650,0.741,651,0.741,1568,3.121,1569,3.121]],["title/interfaces/PayloadBuilder-1.html",[194,2.158,232,0.135,570,0.681]],["body/interfaces/PayloadBuilder-1.html",[0,0.131,3,0.025,4,0.039,5,0.025,7,0.034,12,0.856,14,0.688,25,0.284,26,0.992,28,1.278,29,0.007,30,0.583,31,0.236,32,0.801,33,0.295,41,1.12,45,0.38,67,0.113,81,0.641,84,0.653,89,0.665,109,0.895,133,0.968,161,1.797,184,0.319,191,0.002,192,0.003,193,0.002,220,0.703,232,0.324,234,0.437,239,0.372,253,0.665,273,0.542,315,1.082,316,1.51,317,0.703,318,0.653,319,2.252,320,0.629,321,1.082,322,1.486,323,0.703,324,1.082,325,0.703,326,1.319,327,0.703,328,1.319,329,0.703,330,0.703,331,0.703,332,1.043,333,1.082,334,0.703,335,0.703,336,0.703,337,0.703,338,0.703,339,1.428,340,1.082,341,0.703,342,0.703,343,0.69,344,0.703,345,0.703,346,1.082,347,1.062,348,1.062,349,0.716,350,1.51,351,1.082,352,0.703,353,0.703,354,0.716,355,1.082,356,0.69,357,0.703,358,1.319,359,0.703,360,1.062,361,1.319,362,0.703,363,0.677,364,0.703,365,0.703,366,0.716,367,0.703,368,1.295,369,0.69,370,0.703,371,0.703,372,0.69,373,0.703,374,1.728,375,1.319,376,0.703,377,0.703,378,0.703,379,0.703,380,0.69,381,1.082,382,0.986,383,0.703,384,1.455,385,0.703,386,0.716,387,0.716,388,1.344,389,0.716,390,0.716,391,0.703,392,1.082,393,0.703,394,0.716,395,0.716,396,0.69,397,1.455,398,0.716,399,0.716,400,0.716,401,0.716,402,0.716,403,1.062,404,0.703,405,0.703,406,0.703,407,0.703,408,0.703,409,0.703,410,1.082,411,0.703,412,1.295,413,0.703,414,0.703,415,0.703,416,0.703,417,0.703,418,0.703,419,0.703,420,0.703,421,0.703,422,0.703,423,0.703,424,0.703,425,0.703,426,0.703,427,0.703,428,0.703,429,1.082,430,0.703,431,0.703,432,0.703,433,0.703,434,0.703,435,0.703,436,0.703,437,1.295,438,1.082,439,1.082,440,1.082,441,0.703,442,0.703,443,0.703,444,0.703,445,1.455,446,0.703,447,0.716,448,0.703,449,0.703,450,0.703,451,1.455,452,0.703,453,1.082,454,0.703,455,1.319,456,0.703,457,1.082,458,0.703,459,1.482,460,0.703,461,1.062,462,0.703,463,1.082,464,0.703,465,0.703,466,0.703,467,1.082,468,0.703,469,1.062,470,0.716,471,0.716,472,0.703,473,0.703,474,1.062,475,1.043,476,1.005,477,0.665,478,1.533,479,1.781,480,0.703,481,0.703,482,0.703,483,0.703,484,0.703,485,0.703,486,0.703,487,0.703,488,0.703,489,0.703,490,0.703,491,0.703,492,0.703,493,0.703,494,0.703,495,0.703,496,1.319,497,1.319,498,1.722,499,0.703,500,1.082,501,1.482,502,0.703,503,0.716,504,1.319,505,1.319,506,0.703,507,0.716,508,0.703,509,0.716,510,1.082,511,0.703,512,0.998,513,0.716,514,0.716,515,0.703,516,0.716,517,0.703,518,0.703,519,1.082,520,0.716,521,1.082,522,1.082,523,1.082,524,1.51,525,0.703,526,0.716,527,0.716,528,1.082,529,0.703,530,0.716,531,0.716,532,0.573,533,0.703,534,1.295,535,1.295,536,1.082,537,0.69,538,0.69,539,0.69,540,1.082,541,0.703,542,0.703,543,0.703,544,1.005,545,1.319,546,0.69,547,0.69,548,0.703,549,0.716,550,0.716,551,0.703,552,0.703,553,0.716,554,0.716,555,0.716,556,0.716,557,1.082,558,0.69,559,0.69,560,1.295,561,1.082,562,0.69,563,0.703,564,0.703,565,1.082,566,0.716,567,0.372,568,0.703,569,0.617,570,1.642,571,1.727,572,1.702,573,1.83,574,1.023,575,0.716,576,0.703,577,0.595,578,0.703,579,0.703,580,1.319,581,1.102,582,1.102,583,1.69,584,1.102,585,1.102,586,1.319,587,1.102,588,1.702,589,1.102,590,1.722,591,0.716,592,0.716,593,0.716,594,0.716,595,0.716,596,1.319,597,0.716,598,0.716,599,0.716,600,0.716,601,0.716,602,0.703,603,0.716,604,0.716,605,0.716,606,0.716,607,0.716,608,0.716,609,0.716,610,0.716,611,0.716,612,0.716,613,0.716,614,0.703,615,0.716,616,1.302,617,0.716,618,0.716,619,0.716,620,0.716,621,0.716,622,1.082,623,0.716,624,0.703,625,0.716,626,0.716,627,0.716,628,0.716,629,0.716,630,0.703,631,0.703,632,0.716,633,0.716,634,0.716,635,0.703,636,0.703,637,0.716,638,0.716,639,0.703,640,0.716,641,0.716,642,0.716,643,0.716,644,0.703,645,0.716,646,0.703,647,0.716,648,0.716,649,0.703,650,0.716,651,0.716,1558,4.125,1560,4.125,1562,4.125,1565,4.125,1570,3.015,1571,3.015,1572,3.015,1573,3.015,1574,3.015,1575,3.015,1576,3.015]],["title/interfaces/PayloadBuilder-2.html",[232,0.135,570,0.681,1464,3.272]],["body/interfaces/PayloadBuilder-2.html",[0,0.133,3,0.025,4,0.048,5,0.025,7,0.035,12,0.864,14,0.696,25,0.288,26,0.908,28,0.944,29,0.007,30,0.574,31,0.236,32,0.592,33,0.296,40,1.42,41,1.025,45,0.385,67,0.113,81,0.65,84,0.662,89,0.674,109,0.9,133,0.979,161,1.805,184,0.324,191,0.002,192,0.003,193,0.002,220,0.713,232,0.325,234,0.442,239,0.377,253,0.674,273,0.55,315,1.094,316,1.412,317,0.713,318,0.662,319,2.255,320,0.638,321,1.094,322,1.496,323,0.713,324,1.094,325,0.713,326,1.331,327,0.713,328,1.331,329,0.713,330,0.713,331,0.713,332,1.054,333,1.094,334,0.713,335,0.713,336,0.713,337,0.713,338,0.713,339,1.439,340,1.094,341,0.713,342,0.713,343,0.7,344,0.713,345,0.713,346,1.094,347,1.074,348,1.074,349,0.726,350,1.521,351,1.094,352,0.713,353,0.713,354,0.726,355,1.094,356,0.7,357,0.713,358,1.331,359,0.713,360,1.074,361,1.331,362,0.713,363,0.687,364,0.713,365,0.713,366,0.726,367,0.713,368,1.307,369,0.7,370,0.713,371,0.713,372,0.7,373,0.713,374,1.737,375,1.331,376,0.713,377,0.713,378,0.713,379,0.713,380,0.7,381,1.094,382,0.997,383,0.713,384,1.466,385,0.713,386,0.726,387,0.726,388,1.356,389,0.726,390,0.726,391,0.713,392,1.094,393,0.713,394,0.726,395,0.726,396,0.7,397,1.466,398,0.726,399,0.726,400,0.726,401,0.726,402,0.726,403,1.074,404,0.713,405,0.713,406,0.713,407,0.713,408,0.713,409,0.713,410,1.094,411,0.713,412,1.074,413,0.713,414,0.713,415,0.713,416,0.713,417,0.713,418,0.713,419,0.713,420,0.713,421,0.713,422,0.713,423,0.713,424,0.713,425,0.713,426,0.713,427,0.713,428,0.713,429,1.094,430,0.713,431,0.713,432,0.713,433,0.713,434,0.713,435,0.713,436,0.713,437,1.307,438,0.713,439,0.713,440,1.094,441,0.713,442,0.713,443,0.713,444,0.713,445,1.466,446,0.713,447,0.726,448,0.713,449,0.713,450,0.713,451,1.466,452,0.713,453,1.094,454,0.713,455,1.331,456,0.713,457,1.094,458,0.713,459,1.493,460,0.713,461,1.074,462,0.713,463,1.094,464,0.713,465,0.713,466,0.713,467,1.094,468,0.713,469,1.074,470,0.726,471,0.726,472,0.713,473,0.713,474,1.074,475,1.054,476,1.016,477,0.674,478,1.536,479,1.786,480,0.713,481,0.713,482,0.713,483,0.713,484,0.713,485,0.713,486,0.713,487,0.713,488,0.713,489,0.713,490,0.713,491,0.713,492,0.713,493,0.713,494,0.713,495,0.713,496,1.331,497,1.331,498,1.732,499,0.713,500,0.713,501,1.094,502,0.713,503,0.726,504,1.331,505,1.331,506,0.713,507,0.726,508,0.713,509,0.726,510,1.094,511,0.713,512,1.007,513,0.726,514,0.726,515,0.713,516,0.726,517,0.713,518,0.713,519,1.094,520,0.726,521,1.094,522,1.094,523,1.094,524,1.521,525,0.713,526,0.726,527,0.726,528,1.094,529,0.713,530,0.726,531,0.726,532,0.581,533,0.713,534,1.307,535,1.307,536,1.094,537,0.7,538,0.7,539,0.7,540,1.094,541,0.713,542,0.713,543,0.713,544,1.016,545,1.331,546,0.7,547,0.7,548,0.713,549,0.726,550,0.726,551,0.713,552,0.713,553,0.726,554,0.726,555,0.726,556,0.726,557,1.094,558,0.7,559,0.7,560,1.307,561,1.094,562,0.7,563,0.713,564,0.713,565,1.094,566,0.726,567,0.377,568,0.713,569,0.626,570,1.641,571,1.733,572,1.708,573,1.838,574,1.035,575,0.726,576,0.713,577,0.604,578,0.713,579,0.713,580,1.331,581,0.726,582,0.726,583,1.094,584,0.726,585,0.726,586,0.713,587,0.726,588,1.708,589,0.726,590,1.732,591,1.115,592,1.115,593,1.356,594,1.115,595,1.115,596,1.331,597,0.726,598,0.726,599,0.726,600,0.726,601,0.726,602,0.713,603,0.726,604,0.726,605,0.726,606,0.726,607,0.726,608,0.726,609,0.726,610,0.726,611,0.726,612,0.726,613,0.726,614,0.713,615,0.726,616,1.312,617,0.726,618,0.726,619,0.726,620,0.726,621,0.726,622,1.094,623,0.726,624,0.713,625,0.726,626,0.726,627,0.726,628,0.726,629,0.726,630,0.713,631,0.713,632,0.726,633,0.726,634,0.726,635,0.713,636,0.713,637,0.726,638,0.726,639,0.713,640,0.726,641,0.726,642,0.726,643,0.726,644,0.713,645,0.726,646,0.713,647,0.726,648,0.726,649,0.713,650,0.726,651,0.726,1548,4.172,1550,4.172,1577,3.06,1578,3.06,1579,3.06,1580,3.06,1581,3.06]],["title/interfaces/PayloadBuilder-3.html",[232,0.135,570,0.681,1485,3.272]],["body/interfaces/PayloadBuilder-3.html",[0,0.13,3,0.025,4,0.038,5,0.025,7,0.034,12,0.853,14,0.685,25,0.282,26,0.99,28,1.274,29,0.007,30,0.587,31,0.236,32,0.799,33,0.298,41,1.118,45,0.378,67,0.113,81,0.637,84,0.649,89,0.661,109,0.893,133,0.964,161,1.957,184,0.317,191,0.002,192,0.003,193,0.002,220,0.699,232,0.324,234,0.435,239,0.37,253,0.661,273,0.539,315,1.077,316,1.508,317,0.699,318,0.649,319,2.251,320,0.625,321,1.077,322,1.482,323,0.699,324,1.077,325,0.699,326,1.315,327,0.699,328,1.315,329,0.699,330,0.699,331,0.699,332,1.038,333,1.077,334,0.699,335,0.699,336,0.699,337,0.699,338,0.699,339,1.424,340,1.077,341,0.699,342,0.699,343,0.686,344,0.699,345,0.699,346,1.077,347,1.058,348,1.058,349,0.712,350,1.505,351,1.077,352,0.699,353,0.699,354,0.712,355,1.077,356,0.686,357,0.699,358,1.315,359,0.699,360,1.058,361,1.315,362,0.699,363,0.674,364,0.699,365,0.699,366,0.712,367,0.699,368,1.291,369,0.686,370,0.699,371,0.699,372,0.686,373,0.699,374,1.725,375,1.315,376,0.699,377,0.699,378,0.699,379,0.699,380,0.686,381,1.077,382,0.982,383,0.699,384,1.451,385,0.699,386,0.712,387,0.712,388,1.339,389,0.712,390,0.712,391,0.699,392,1.077,393,0.699,394,0.712,395,0.712,396,0.686,397,1.451,398,0.712,399,0.712,400,0.712,401,0.712,402,0.712,403,1.058,404,0.699,405,0.699,406,0.699,407,0.699,408,0.699,409,0.699,410,1.077,411,0.699,412,1.058,413,0.699,414,0.699,415,0.699,416,0.699,417,0.699,418,0.699,419,0.699,420,0.699,421,0.699,422,0.699,423,0.699,424,0.699,425,0.699,426,0.699,427,0.699,428,0.699,429,1.077,430,0.699,431,0.699,432,0.699,433,0.699,434,0.699,435,0.699,436,0.699,437,1.291,438,0.699,439,0.699,440,1.077,441,0.699,442,0.699,443,0.699,444,0.699,445,1.451,446,0.699,447,0.712,448,0.699,449,0.699,450,1.478,451,1.451,452,0.699,453,1.077,454,0.699,455,1.315,456,0.699,457,1.077,458,0.699,459,1.901,460,0.699,461,1.058,462,0.699,463,1.077,464,0.699,465,0.699,466,0.699,467,1.077,468,0.699,469,1.058,470,0.712,471,0.712,472,0.699,473,0.699,474,1.058,475,1.038,476,1.001,477,0.661,478,1.531,479,1.78,480,0.699,481,0.699,482,0.699,483,0.699,484,0.699,485,0.699,486,0.699,487,0.699,488,0.699,489,0.699,490,0.699,491,0.699,492,0.699,493,0.699,494,0.699,495,0.699,496,1.315,497,1.315,498,1.718,499,0.699,500,0.699,501,1.077,502,0.699,503,0.712,504,1.315,505,1.315,506,0.699,507,0.712,508,0.699,509,0.712,510,1.077,511,0.699,512,0.995,513,0.712,514,0.712,515,0.699,516,0.712,517,0.699,518,0.699,519,1.077,520,0.712,521,1.077,522,1.077,523,1.077,524,1.505,525,0.699,526,0.712,527,0.712,528,1.077,529,0.699,530,0.712,531,0.712,532,0.57,533,0.699,534,1.291,535,1.291,536,1.077,537,0.686,538,0.686,539,0.686,540,1.077,541,0.699,542,0.699,543,0.699,544,1.001,545,1.315,546,0.686,547,0.686,548,0.699,549,0.712,550,0.712,551,0.699,552,0.699,553,0.712,554,0.712,555,0.712,556,0.712,557,1.077,558,0.686,559,0.686,560,1.291,561,1.077,562,0.686,563,0.699,564,0.699,565,1.077,566,0.712,567,0.37,568,0.699,569,0.614,570,1.642,571,1.725,572,1.7,573,1.828,574,1.019,575,0.712,576,0.699,577,0.592,578,0.699,579,0.699,580,1.315,581,0.712,582,0.712,583,1.077,584,0.712,585,0.712,586,0.699,587,0.712,588,1.7,589,0.712,590,1.718,591,0.712,592,0.712,593,0.712,594,0.712,595,0.712,596,1.315,597,1.098,598,1.098,599,1.098,600,1.098,601,1.098,602,1.077,603,0.712,604,0.712,605,0.712,606,0.712,607,0.712,608,0.712,609,0.712,610,0.712,611,0.712,612,0.712,613,0.712,614,0.699,615,0.712,616,1.298,617,0.712,618,0.712,619,0.712,620,0.712,621,0.712,622,1.077,623,0.712,624,0.699,625,0.712,626,0.712,627,0.712,628,0.712,629,0.712,630,0.699,631,0.699,632,0.712,633,0.712,634,0.712,635,0.699,636,0.699,637,0.712,638,0.712,639,0.699,640,0.712,641,0.712,642,0.712,643,0.712,644,0.699,645,0.712,646,0.699,647,0.712,648,0.712,649,0.699,650,0.712,651,0.712,1493,4.109,1496,4.109,1498,4.109,1501,4.109,1582,2.999,1583,2.999,1584,2.999,1585,2.999,1586,2.999,1587,2.999,1588,2.999]],["title/interfaces/PayloadBuilder-4.html",[232,0.135,570,0.681,1507,3.272]],["body/interfaces/PayloadBuilder-4.html",[0,0.13,3,0.025,4,0.038,5,0.025,7,0.034,12,0.852,14,0.684,25,0.281,26,1.022,28,1.375,29,0.007,30,0.59,31,0.236,32,0.862,33,0.296,40,1.389,41,1.153,45,0.377,67,0.113,81,0.636,84,0.647,89,0.659,109,0.892,133,0.962,161,1.863,184,0.316,191,0.002,192,0.003,193,0.002,220,0.697,232,0.324,234,0.434,239,0.369,253,0.659,273,0.537,315,1.075,316,1.546,317,0.697,318,0.647,319,2.25,320,0.624,321,1.075,322,1.481,323,0.697,324,1.075,325,0.697,326,1.313,327,0.697,328,1.313,329,0.697,330,0.697,331,0.697,332,1.036,333,1.075,334,0.697,335,0.697,336,0.697,337,0.697,338,0.697,339,1.422,340,1.075,341,0.697,342,0.697,343,0.684,344,0.697,345,0.697,346,1.075,347,1.056,348,1.056,349,0.71,350,1.503,351,1.075,352,0.697,353,0.697,354,0.71,355,1.075,356,0.684,357,0.697,358,1.313,359,0.697,360,1.056,361,1.313,362,0.697,363,0.672,364,0.697,365,0.697,366,0.71,367,0.697,368,1.289,369,0.684,370,0.697,371,0.697,372,0.684,373,0.697,374,1.723,375,1.313,376,0.697,377,0.697,378,0.697,379,0.697,380,0.684,381,1.075,382,0.98,383,0.697,384,1.449,385,0.697,386,0.71,387,0.71,388,1.337,389,0.71,390,0.71,391,0.697,392,1.075,393,0.697,394,0.71,395,0.71,396,0.684,397,1.449,398,0.71,399,0.71,400,0.71,401,0.71,402,0.71,403,1.056,404,0.697,405,0.697,406,0.697,407,0.697,408,0.697,409,0.697,410,1.075,411,0.697,412,1.056,413,0.697,414,0.697,415,0.697,416,0.697,417,0.697,418,0.697,419,0.697,420,0.697,421,0.697,422,0.697,423,0.697,424,0.697,425,0.697,426,0.697,427,0.697,428,0.697,429,1.075,430,0.697,431,0.697,432,0.697,433,0.697,434,0.697,435,0.697,436,0.697,437,1.289,438,0.697,439,0.697,440,1.075,441,0.697,442,0.697,443,0.697,444,0.697,445,1.449,446,0.697,447,0.71,448,0.697,449,0.697,450,0.697,451,1.449,452,0.697,453,1.075,454,0.697,455,1.313,456,0.697,457,1.075,458,0.697,459,1.476,460,0.697,461,1.289,462,1.075,463,1.075,464,0.697,465,0.697,466,0.697,467,1.075,468,0.697,469,1.056,470,0.71,471,0.71,472,1.075,473,1.075,474,1.056,475,1.036,476,0.999,477,0.659,478,1.531,479,1.779,480,0.697,481,0.697,482,0.697,483,0.697,484,0.697,485,0.697,486,0.697,487,0.697,488,0.697,489,0.697,490,0.697,491,0.697,492,0.697,493,0.697,494,0.697,495,0.697,496,1.313,497,1.313,498,1.716,499,0.697,500,0.697,501,1.075,502,0.697,503,0.71,504,1.313,505,1.313,506,0.697,507,0.71,508,0.697,509,0.71,510,1.075,511,0.697,512,0.993,513,0.71,514,0.71,515,0.697,516,0.71,517,0.697,518,0.697,519,1.075,520,0.71,521,1.075,522,1.075,523,1.075,524,1.503,525,0.697,526,0.71,527,0.71,528,1.075,529,0.697,530,0.71,531,0.71,532,0.569,533,0.697,534,1.289,535,1.289,536,1.075,537,0.684,538,0.684,539,0.684,540,1.075,541,0.697,542,0.697,543,0.697,544,0.999,545,1.313,546,0.684,547,0.684,548,0.697,549,0.71,550,0.71,551,0.697,552,0.697,553,0.71,554,0.71,555,0.71,556,0.71,557,1.075,558,0.684,559,0.684,560,1.289,561,1.075,562,0.684,563,0.697,564,0.697,565,1.075,566,0.71,567,0.369,568,0.697,569,0.612,570,1.643,571,1.724,572,1.699,573,1.826,574,1.017,575,0.71,576,0.697,577,0.59,578,0.697,579,0.697,580,1.313,581,0.71,582,0.71,583,1.075,584,0.71,585,0.71,586,0.697,587,0.71,588,1.699,589,0.71,590,1.716,591,0.71,592,0.71,593,0.71,594,0.71,595,0.71,596,1.313,597,0.71,598,0.71,599,0.71,600,0.71,601,0.71,602,0.697,603,1.095,604,1.095,605,1.095,606,1.337,607,1.095,608,1.337,609,1.095,610,1.337,611,1.095,612,1.095,613,0.71,614,0.697,615,0.71,616,1.296,617,0.71,618,0.71,619,0.71,620,0.71,621,0.71,622,1.075,623,0.71,624,0.697,625,0.71,626,0.71,627,0.71,628,0.71,629,0.71,630,0.697,631,0.697,632,0.71,633,0.71,634,0.71,635,0.697,636,0.697,637,0.71,638,0.71,639,0.697,640,0.71,641,0.71,642,0.71,643,0.71,644,0.697,645,0.71,646,0.697,647,0.71,648,0.71,649,0.697,650,0.71,651,0.71,1452,4.1,1454,4.1,1456,4.1,1458,4.1,1460,4.1,1589,2.991,1590,2.991,1591,2.991,1592,2.991,1593,2.991,1594,2.991,1595,2.991,1596,2.991]],["title/interfaces/PayloadBuilder-5.html",[232,0.135,570,0.681,1527,3.272]],["body/interfaces/PayloadBuilder-5.html",[0,0.131,3,0.025,4,0.039,5,0.025,7,0.034,12,0.856,14,0.688,25,0.284,26,0.992,28,1.278,29,0.007,30,0.587,31,0.236,32,0.801,33,0.296,41,1.12,45,0.38,67,0.113,81,0.641,84,0.653,89,0.665,109,0.895,133,1.181,161,1.797,184,0.319,191,0.002,192,0.003,193,0.002,220,0.703,232,0.324,234,0.437,239,0.372,253,0.665,273,0.542,315,1.082,316,1.51,317,0.703,318,0.653,319,2.252,320,0.629,321,1.082,322,1.486,323,0.703,324,1.082,325,0.703,326,1.319,327,0.703,328,1.319,329,0.703,330,0.703,331,0.703,332,1.043,333,1.082,334,0.703,335,0.703,336,0.703,337,0.703,338,0.703,339,1.428,340,1.082,341,0.703,342,0.703,343,0.69,344,0.703,345,0.703,346,1.082,347,1.062,348,1.062,349,0.716,350,1.51,351,1.082,352,0.703,353,0.703,354,0.716,355,1.082,356,0.69,357,0.703,358,1.319,359,0.703,360,1.062,361,1.319,362,0.703,363,0.677,364,0.703,365,0.703,366,0.716,367,0.703,368,1.295,369,0.69,370,0.703,371,0.703,372,0.69,373,0.703,374,1.728,375,1.319,376,0.703,377,0.703,378,0.703,379,0.703,380,0.69,381,1.082,382,0.986,383,0.703,384,1.455,385,0.703,386,0.716,387,0.716,388,1.344,389,0.716,390,0.716,391,0.703,392,1.082,393,0.703,394,0.716,395,0.716,396,0.69,397,1.455,398,0.716,399,0.716,400,0.716,401,0.716,402,0.716,403,1.062,404,0.703,405,0.703,406,0.703,407,0.703,408,0.703,409,0.703,410,1.082,411,0.703,412,1.062,413,0.703,414,0.703,415,0.703,416,0.703,417,0.703,418,0.703,419,0.703,420,0.703,421,0.703,422,0.703,423,0.703,424,0.703,425,0.703,426,0.703,427,0.703,428,0.703,429,1.082,430,0.703,431,0.703,432,0.703,433,0.703,434,0.703,435,0.703,436,0.703,437,1.295,438,0.703,439,0.703,440,1.082,441,0.703,442,0.703,443,0.703,444,0.703,445,1.455,446,0.703,447,0.716,448,0.703,449,0.703,450,0.703,451,1.455,452,0.703,453,1.082,454,0.703,455,1.319,456,0.703,457,1.082,458,0.703,459,1.482,460,0.703,461,1.062,462,0.703,463,1.082,464,0.703,465,0.703,466,0.703,467,1.082,468,0.703,469,1.062,470,0.716,471,0.716,472,0.703,473,0.703,474,1.062,475,1.043,476,1.005,477,0.665,478,1.533,479,1.781,480,0.703,481,0.703,482,0.703,483,0.703,484,0.703,485,0.703,486,0.703,487,0.703,488,0.703,489,0.703,490,0.703,491,0.703,492,0.703,493,0.703,494,0.703,495,0.703,496,1.319,497,1.319,498,1.722,499,0.703,500,0.703,501,1.082,502,0.703,503,0.716,504,1.319,505,1.319,506,0.703,507,0.716,508,0.703,509,0.716,510,1.082,511,0.703,512,0.998,513,0.716,514,0.716,515,0.703,516,0.716,517,0.703,518,0.703,519,1.082,520,0.716,521,1.082,522,1.082,523,1.082,524,1.51,525,0.703,526,0.716,527,0.716,528,1.082,529,0.703,530,0.716,531,0.716,532,0.573,533,0.703,534,1.295,535,1.295,536,1.082,537,0.69,538,0.69,539,0.69,540,1.082,541,0.703,542,0.703,543,0.703,544,1.005,545,1.319,546,0.69,547,0.69,548,0.703,549,0.716,550,0.716,551,0.703,552,0.703,553,0.716,554,0.716,555,0.716,556,0.716,557,1.082,558,0.69,559,0.69,560,1.295,561,1.082,562,0.69,563,0.703,564,0.703,565,1.082,566,0.716,567,0.372,568,0.703,569,0.617,570,1.642,571,1.727,572,1.702,573,1.83,574,1.023,575,0.716,576,0.703,577,0.595,578,0.703,579,0.703,580,1.319,581,0.716,582,0.716,583,1.082,584,0.716,585,0.716,586,0.703,587,0.716,588,1.702,589,0.716,590,1.722,591,0.716,592,0.716,593,0.716,594,0.716,595,0.716,596,1.319,597,0.716,598,0.716,599,0.716,600,0.716,601,0.716,602,0.703,603,0.716,604,0.716,605,0.716,606,0.716,607,0.716,608,0.716,609,0.716,610,0.716,611,0.716,612,0.716,613,1.102,614,1.319,615,1.102,616,1.673,617,1.102,618,1.102,619,1.102,620,1.102,621,0.716,622,1.082,623,0.716,624,0.703,625,0.716,626,0.716,627,0.716,628,0.716,629,0.716,630,0.703,631,0.703,632,0.716,633,0.716,634,0.716,635,0.703,636,0.703,637,0.716,638,0.716,639,0.703,640,0.716,641,0.716,642,0.716,643,0.716,644,0.703,645,0.716,646,0.703,647,0.716,648,0.716,649,0.703,650,0.716,651,0.716,1533,4.125,1535,4.125,1537,4.125,1539,4.125,1597,3.015,1598,3.015,1599,3.015,1600,3.015,1601,3.015,1602,3.015,1603,3.015]],["title/interfaces/PayloadBuilder-6.html",[232,0.135,570,0.681,1542,3.272]],["body/interfaces/PayloadBuilder-6.html",[0,0.128,3,0.025,4,0.038,5,0.025,7,0.034,12,0.844,14,0.676,25,0.277,26,1.086,28,1.444,29,0.007,30,0.596,31,0.236,32,0.905,33,0.297,41,1.225,45,0.371,67,0.113,81,0.626,84,0.638,89,0.65,109,0.886,133,1.164,161,1.785,184,0.312,191,0.002,192,0.003,193,0.002,220,0.687,232,0.324,234,0.429,239,0.364,253,0.65,273,0.53,315,1.063,316,1.625,317,0.687,318,0.638,319,2.247,320,0.615,321,1.063,322,1.471,323,0.687,324,1.063,325,0.687,326,1.301,327,0.687,328,1.301,329,0.687,330,0.687,331,0.687,332,1.024,333,1.063,334,0.687,335,0.687,336,0.687,337,0.687,338,0.687,339,1.411,340,1.063,341,0.687,342,0.687,343,0.674,344,0.687,345,0.687,346,1.063,347,1.044,348,1.044,349,0.7,350,1.491,351,1.063,352,0.687,353,0.687,354,0.7,355,1.063,356,0.674,357,0.687,358,1.301,359,0.687,360,1.044,361,1.301,362,0.687,363,0.662,364,0.687,365,0.687,366,0.7,367,0.687,368,1.277,369,0.674,370,0.687,371,0.687,372,0.674,373,0.687,374,1.714,375,1.301,376,0.687,377,0.687,378,0.687,379,0.687,380,0.674,381,1.063,382,0.969,383,0.687,384,1.437,385,1.063,386,0.7,387,0.7,388,1.325,389,0.7,390,0.7,391,0.687,392,1.063,393,0.687,394,0.7,395,0.7,396,0.674,397,1.437,398,0.7,399,0.7,400,0.7,401,0.7,402,0.7,403,1.044,404,0.687,405,0.687,406,0.687,407,0.687,408,0.687,409,0.687,410,1.063,411,0.687,412,1.044,413,0.687,414,0.687,415,0.687,416,0.687,417,0.687,418,0.687,419,0.687,420,0.687,421,0.687,422,0.687,423,0.687,424,0.687,425,0.687,426,0.687,427,0.687,428,0.687,429,1.063,430,0.687,431,0.687,432,0.687,433,0.687,434,0.687,435,0.687,436,0.687,437,1.277,438,0.687,439,0.687,440,1.063,441,0.687,442,0.687,443,0.687,444,0.687,445,1.437,446,0.687,447,0.7,448,0.687,449,0.687,450,0.687,451,1.437,452,0.687,453,1.063,454,0.687,455,1.301,456,0.687,457,1.063,458,0.687,459,1.464,460,0.687,461,1.044,462,0.687,463,1.063,464,0.687,465,0.687,466,0.687,467,1.063,468,0.687,469,1.044,470,0.7,471,0.7,472,0.687,473,0.687,474,1.044,475,1.024,476,0.987,477,0.65,478,1.527,479,1.774,480,0.687,481,0.687,482,0.687,483,0.687,484,0.687,485,0.687,486,0.687,487,0.687,488,0.687,489,0.687,490,0.687,491,0.687,492,0.687,493,0.687,494,0.687,495,0.687,496,1.301,497,1.301,498,1.706,499,0.687,500,0.687,501,1.063,502,0.687,503,0.7,504,1.301,505,1.301,506,0.687,507,0.7,508,0.687,509,0.7,510,1.063,511,0.687,512,0.984,513,0.7,514,0.7,515,0.687,516,0.7,517,0.687,518,0.687,519,1.301,520,0.7,521,1.063,522,1.063,523,1.063,524,1.491,525,0.687,526,0.7,527,0.7,528,1.063,529,0.687,530,0.7,531,0.7,532,0.56,533,0.687,534,1.277,535,1.277,536,1.063,537,0.674,538,0.674,539,0.674,540,1.063,541,0.687,542,0.687,543,0.687,544,0.987,545,1.301,546,0.674,547,0.674,548,0.687,549,0.7,550,0.7,551,0.687,552,0.687,553,0.7,554,0.7,555,0.7,556,0.7,557,1.063,558,0.674,559,0.674,560,1.277,561,1.063,562,0.674,563,0.687,564,0.687,565,1.063,566,0.7,567,0.364,568,0.687,569,0.603,570,1.642,571,1.718,572,1.692,573,1.818,574,1.006,575,0.7,576,0.687,577,0.581,578,0.687,579,0.687,580,1.301,581,0.7,582,0.7,583,1.063,584,0.7,585,0.7,586,0.687,587,0.7,588,1.692,589,0.7,590,1.706,591,0.7,592,0.7,593,0.7,594,0.7,595,0.7,596,1.301,597,0.7,598,0.7,599,0.7,600,0.7,601,0.7,602,0.687,603,0.7,604,0.7,605,0.7,606,0.7,607,0.7,608,0.7,609,0.7,610,0.7,611,0.7,612,0.7,613,0.7,614,0.687,615,0.7,616,1.534,617,0.7,618,0.7,619,0.7,620,0.7,621,1.083,622,1.584,623,1.083,624,1.301,625,1.083,626,1.083,627,1.083,628,1.083,629,1.083,630,1.464,631,1.464,632,1.083,633,0.7,634,0.7,635,0.687,636,0.687,637,0.7,638,0.7,639,0.687,640,0.7,641,0.7,642,0.7,643,0.7,644,0.687,645,0.7,646,0.687,647,0.7,648,0.7,649,0.687,650,0.7,651,0.7,1430,4.054,1432,4.054,1434,4.054,1436,4.054,1438,4.054,1441,4.054,1604,2.948,1605,2.948,1606,2.948,1607,2.948,1608,2.948,1609,2.948,1610,2.948,1611,2.948,1612,2.948,1613,2.948,1614,2.948]],["title/interfaces/PayloadBuilder-7.html",[232,0.135,570,0.681,1553,3.272]],["body/interfaces/PayloadBuilder-7.html",[0,0.13,3,0.025,4,0.038,5,0.025,7,0.034,12,0.852,14,0.684,25,0.281,26,1.022,28,1.375,29,0.007,30,0.59,31,0.236,32,0.862,33,0.296,40,1.389,41,1.153,45,0.377,67,0.113,81,0.98,84,0.647,89,0.659,109,0.892,133,0.962,161,1.793,184,0.316,191,0.002,192,0.003,193,0.002,220,0.697,232,0.324,234,0.434,239,0.369,253,0.659,273,0.537,315,1.075,316,1.546,317,0.697,318,0.647,319,2.25,320,0.624,321,1.075,322,1.481,323,0.697,324,1.075,325,0.697,326,1.313,327,0.697,328,1.313,329,0.697,330,0.697,331,0.697,332,1.036,333,1.075,334,0.697,335,0.697,336,0.697,337,0.697,338,0.697,339,1.422,340,1.075,341,0.697,342,0.697,343,0.684,344,0.697,345,0.697,346,1.075,347,1.056,348,1.056,349,0.71,350,1.503,351,1.075,352,0.697,353,0.697,354,0.71,355,1.075,356,0.684,357,0.697,358,1.313,359,0.697,360,1.056,361,1.313,362,0.697,363,0.672,364,0.697,365,0.697,366,0.71,367,0.697,368,1.289,369,0.684,370,0.697,371,0.697,372,0.684,373,0.697,374,1.723,375,1.313,376,0.697,377,0.697,378,0.697,379,0.697,380,0.684,381,1.075,382,0.98,383,0.697,384,1.449,385,0.697,386,0.71,387,0.71,388,1.337,389,0.71,390,0.71,391,0.697,392,1.075,393,0.697,394,0.71,395,0.71,396,0.684,397,1.449,398,0.71,399,0.71,400,0.71,401,0.71,402,0.71,403,1.056,404,0.697,405,0.697,406,0.697,407,0.697,408,0.697,409,0.697,410,1.075,411,0.697,412,1.056,413,0.697,414,0.697,415,0.697,416,0.697,417,0.697,418,0.697,419,0.697,420,0.697,421,0.697,422,0.697,423,0.697,424,0.697,425,0.697,426,0.697,427,0.697,428,0.697,429,1.075,430,0.697,431,0.697,432,0.697,433,0.697,434,0.697,435,0.697,436,0.697,437,1.289,438,0.697,439,0.697,440,1.075,441,0.697,442,0.697,443,0.697,444,0.697,445,1.449,446,0.697,447,0.71,448,0.697,449,0.697,450,0.697,451,1.449,452,0.697,453,1.075,454,0.697,455,1.313,456,0.697,457,1.075,458,0.697,459,1.476,460,0.697,461,1.056,462,0.697,463,1.075,464,0.697,465,0.697,466,0.697,467,1.075,468,0.697,469,1.056,470,0.71,471,0.71,472,0.697,473,0.697,474,1.056,475,1.036,476,0.999,477,0.659,478,1.531,479,1.779,480,0.697,481,0.697,482,0.697,483,0.697,484,0.697,485,0.697,486,0.697,487,0.697,488,0.697,489,0.697,490,0.697,491,0.697,492,0.697,493,0.697,494,0.697,495,0.697,496,1.313,497,1.313,498,1.716,499,0.697,500,0.697,501,1.075,502,0.697,503,0.71,504,1.313,505,1.313,506,0.697,507,0.71,508,0.697,509,0.71,510,1.075,511,0.697,512,0.993,513,0.71,514,0.71,515,0.697,516,0.71,517,0.697,518,0.697,519,1.075,520,0.71,521,1.075,522,1.075,523,1.075,524,1.503,525,0.697,526,0.71,527,0.71,528,1.075,529,0.697,530,0.71,531,0.71,532,0.569,533,0.697,534,1.289,535,1.289,536,1.075,537,0.684,538,0.684,539,0.684,540,1.075,541,0.697,542,0.697,543,0.697,544,0.999,545,1.313,546,0.684,547,0.684,548,0.697,549,0.71,550,0.71,551,0.697,552,0.697,553,0.71,554,0.71,555,0.71,556,0.71,557,1.075,558,0.684,559,0.684,560,1.289,561,1.075,562,0.684,563,0.697,564,0.697,565,1.075,566,0.71,567,0.369,568,0.697,569,0.612,570,1.643,571,1.724,572,1.699,573,1.826,574,1.017,575,0.71,576,0.697,577,0.59,578,0.697,579,0.697,580,1.313,581,0.71,582,0.71,583,1.075,584,0.71,585,0.71,586,0.697,587,0.71,588,1.699,589,0.71,590,1.716,591,0.71,592,0.71,593,0.71,594,0.71,595,0.71,596,1.313,597,0.71,598,0.71,599,0.71,600,0.71,601,0.71,602,0.697,603,0.71,604,0.71,605,0.71,606,0.71,607,0.71,608,0.71,609,0.71,610,0.71,611,0.71,612,0.71,613,0.71,614,0.697,615,0.71,616,1.542,617,0.71,618,0.71,619,0.71,620,0.71,621,0.71,622,1.075,623,0.71,624,0.697,625,0.71,626,0.71,627,0.71,628,0.71,629,0.71,630,0.697,631,0.697,632,0.71,633,1.095,634,1.095,635,1.313,636,1.075,637,1.095,638,1.095,639,1.313,640,1.095,641,1.095,642,0.71,643,0.71,644,0.697,645,0.71,646,0.697,647,0.71,648,0.71,649,0.697,650,0.71,651,0.71,1471,4.1,1473,4.1,1475,4.1,1477,4.1,1479,4.1,1480,2.658,1615,2.991,1616,2.991,1617,2.991,1618,2.991,1619,2.991,1620,2.991,1621,2.991,1622,2.991]],["title/interfaces/PayloadBuilder-8.html",[232,0.135,570,0.681,1623,4.014]],["body/interfaces/PayloadBuilder-8.html",[0,0.13,3,0.025,4,0.039,5,0.025,7,0.034,12,0.854,14,0.686,25,0.283,26,0.991,28,1.378,29,0.007,30,0.598,31,0.236,32,0.864,33,0.296,41,1.119,45,0.379,67,0.113,81,0.638,84,0.65,89,0.662,109,0.893,133,0.966,161,1.795,184,0.318,191,0.002,192,0.003,193,0.002,220,0.7,232,0.324,234,0.436,239,0.371,253,0.662,273,0.54,315,1.079,316,1.509,317,0.7,318,0.65,319,2.251,320,0.627,321,1.079,322,1.484,323,0.7,324,1.079,325,0.7,326,1.316,327,0.7,328,1.316,329,0.7,330,0.7,331,0.7,332,1.04,333,1.079,334,0.7,335,0.7,336,0.7,337,0.7,338,0.7,339,1.425,340,1.079,341,0.7,342,0.7,343,0.687,344,0.7,345,0.7,346,1.079,347,1.059,348,1.059,349,0.713,350,1.507,351,1.079,352,0.7,353,0.7,354,0.713,355,1.079,356,0.687,357,0.7,358,1.316,359,0.7,360,1.059,361,1.316,362,0.7,363,0.675,364,0.7,365,0.7,366,0.713,367,0.7,368,1.292,369,0.687,370,0.7,371,0.7,372,0.687,373,0.7,374,1.726,375,1.316,376,0.7,377,0.7,378,0.7,379,0.7,380,0.687,381,1.079,382,0.984,383,0.7,384,1.452,385,0.7,386,0.713,387,0.713,388,1.341,389,0.713,390,0.713,391,0.7,392,1.079,393,0.7,394,0.713,395,0.713,396,0.687,397,1.452,398,0.713,399,0.713,400,0.713,401,0.713,402,0.713,403,1.059,404,0.7,405,0.7,406,0.7,407,0.7,408,0.7,409,0.7,410,1.079,411,0.7,412,1.059,413,0.7,414,0.7,415,0.7,416,0.7,417,0.7,418,0.7,419,0.7,420,0.7,421,0.7,422,0.7,423,0.7,424,0.7,425,0.7,426,0.7,427,0.7,428,0.7,429,1.079,430,0.7,431,0.7,432,0.7,433,0.7,434,0.7,435,0.7,436,0.7,437,1.292,438,0.7,439,0.7,440,1.079,441,0.7,442,0.7,443,0.7,444,0.7,445,1.452,446,0.7,447,0.713,448,0.7,449,0.7,450,0.7,451,1.452,452,0.7,453,1.079,454,0.7,455,1.316,456,0.7,457,1.079,458,0.7,459,1.479,460,0.7,461,1.059,462,0.7,463,1.079,464,0.7,465,0.7,466,0.7,467,1.079,468,0.7,469,1.059,470,0.713,471,0.713,472,0.7,473,0.7,474,1.059,475,1.04,476,1.002,477,0.662,478,1.532,479,1.78,480,0.7,481,0.7,482,0.7,483,0.7,484,0.7,485,0.7,486,0.7,487,0.7,488,0.7,489,0.7,490,0.7,491,0.7,492,0.7,493,0.7,494,0.7,495,0.7,496,1.316,497,1.316,498,1.719,499,0.7,500,0.7,501,1.079,502,0.7,503,0.713,504,1.316,505,1.316,506,0.7,507,0.713,508,0.7,509,0.713,510,1.079,511,0.7,512,0.996,513,0.713,514,0.713,515,0.7,516,0.713,517,0.7,518,0.7,519,1.079,520,0.713,521,1.079,522,1.079,523,1.079,524,1.507,525,0.7,526,0.713,527,0.713,528,1.079,529,0.7,530,0.713,531,0.713,532,0.571,533,0.7,534,1.292,535,1.292,536,1.079,537,0.687,538,0.687,539,0.687,540,1.079,541,0.7,542,0.7,543,0.7,544,1.002,545,1.316,546,0.687,547,0.687,548,0.7,549,0.713,550,0.713,551,0.7,552,0.7,553,0.713,554,0.713,555,0.713,556,0.713,557,1.079,558,0.687,559,0.687,560,1.292,561,1.079,562,0.687,563,0.7,564,0.7,565,1.079,566,0.713,567,0.371,568,0.7,569,0.615,570,1.643,571,1.726,572,1.595,573,1.782,574,1.021,575,0.713,576,0.7,577,0.593,578,0.7,579,0.7,580,1.316,581,0.713,582,0.713,583,1.079,584,0.713,585,0.713,586,0.7,587,0.713,588,1.701,589,0.713,590,1.719,591,0.713,592,0.713,593,0.713,594,0.713,595,0.713,596,1.316,597,0.713,598,0.713,599,0.713,600,0.713,601,0.713,602,0.7,603,0.713,604,0.713,605,0.713,606,0.713,607,0.713,608,0.713,609,0.713,610,0.713,611,0.713,612,0.713,613,0.713,614,0.7,615,0.713,616,1.299,617,0.713,618,0.713,619,0.713,620,0.713,621,0.713,622,1.079,623,0.713,624,0.7,625,0.713,626,0.713,627,0.713,628,0.713,629,0.713,630,0.7,631,0.7,632,0.713,633,0.713,634,0.713,635,0.7,636,0.7,637,0.713,638,0.713,639,0.7,640,0.713,641,0.713,642,1.099,643,1.099,644,1.316,645,1.099,646,1.316,647,1.099,648,1.099,649,1.316,650,1.099,651,1.099,1514,4.114,1516,4.114,1517,2.67,1519,4.114,1521,4.114,1523,4.114,1624,3.005,1625,3.005,1626,3.005,1627,3.005,1628,3.005,1629,3.005,1630,3.005]],["title/interfaces/Person.html",[232,0.161,332,1.074]],["body/interfaces/Person.html",[0,0.136,3,0.026,4,0.04,5,0.026,7,0.036,8,0.376,12,0.877,25,0.295,29,0.007,30,0.582,31,0.236,33,0.297,45,0.395,67,0.113,81,0.666,84,0.679,89,0.691,109,0.909,133,0.998,161,1.818,184,0.332,191,0.002,192,0.004,193,0.002,220,0.731,232,0.325,234,0.45,239,0.387,253,0.691,273,0.564,315,1.115,316,0.607,317,0.731,318,0.679,319,2.259,320,0.654,321,1.115,322,1.513,323,0.731,324,1.115,325,0.731,326,1.352,327,0.731,328,1.352,329,0.731,330,0.731,331,0.731,332,1.303,333,1.115,334,0.731,335,0.731,336,0.731,337,0.731,338,0.731,339,1.458,340,1.115,341,0.731,342,0.731,343,0.718,344,0.731,345,0.731,346,1.115,347,1.095,348,1.095,349,0.745,350,1.541,351,1.115,352,0.731,353,0.731,354,0.745,355,1.115,356,0.718,357,0.731,358,1.352,359,0.731,360,1.095,361,1.352,362,0.731,363,0.704,364,0.731,365,0.731,366,0.745,367,0.731,368,1.327,369,0.718,370,0.731,371,0.731,372,0.718,373,0.731,374,1.753,375,1.352,376,0.731,377,0.731,378,0.731,379,0.731,380,0.718,381,1.115,382,1.017,383,0.731,384,1.485,385,0.731,386,0.745,387,0.745,388,1.377,389,0.745,390,0.745,391,0.731,392,1.115,393,0.731,394,0.745,395,0.745,396,0.718,397,1.485,398,0.745,399,0.745,400,0.745,401,0.745,402,0.745,403,1.095,404,0.731,405,0.731,406,0.731,407,0.731,408,0.731,409,0.731,410,1.115,411,0.731,412,1.095,413,0.731,414,0.731,415,0.731,416,0.731,417,0.731,418,0.731,419,0.731,420,0.731,421,0.731,422,0.731,423,0.731,424,0.731,425,0.731,426,0.731,427,0.731,428,0.731,429,1.115,430,0.731,431,0.731,432,0.731,433,0.731,434,0.731,435,0.731,436,0.731,437,1.327,438,0.731,439,0.731,440,1.115,441,0.731,442,0.731,443,0.731,444,0.731,445,1.485,446,0.731,447,0.745,448,0.731,449,0.731,450,0.731,451,1.485,452,0.731,453,1.115,454,0.731,455,1.352,456,0.731,457,1.115,458,0.731,459,1.513,460,0.731,461,1.095,462,0.731,463,1.115,464,0.731,465,0.731,466,0.731,467,1.115,468,0.731,469,1.095,470,0.745,471,0.745,472,0.731,473,0.731,474,1.095,475,1.075,476,1.036,477,0.691,478,1.541,479,1.793,480,0.731,481,0.731,482,0.731,483,0.731,484,0.731,485,0.731,486,0.731,487,0.731,488,0.731,489,0.731,490,0.731,491,0.731,492,0.731,493,0.731,494,0.731,495,0.731,496,1.352,497,1.352,498,1.749,499,0.731,500,0.731,501,1.115,502,0.731,503,0.745,504,1.352,505,1.352,506,0.731,507,0.745,508,0.731,509,0.745,510,1.115,511,0.731,512,1.023,513,0.745,514,0.745,515,0.731,516,0.745,517,0.731,518,0.731,519,1.115,520,0.745,521,1.115,522,1.115,523,1.115,524,1.541,525,0.731,526,0.745,527,0.745,528,1.115,529,0.731,530,0.745,531,0.745,532,0.596,533,0.731,534,1.327,535,1.327,536,1.115,537,0.718,538,0.718,539,0.718,540,1.115,541,0.731,542,0.731,543,0.731,544,1.036,545,1.352,546,0.718,547,0.718,548,0.731,549,0.745,550,0.745,551,0.731,552,0.731,553,0.745,554,0.745,555,0.745,556,0.745,557,1.115,558,0.718,559,0.718,560,1.327,561,1.115,562,0.718,563,0.731,564,0.731,565,1.115,566,0.745,567,0.387,568,0.731,569,0.642,570,1.64,571,1.657,572,1.617,573,1.807,574,1.055,575,0.745,576,0.731,577,0.619,578,0.731,579,0.731,580,1.352,581,0.745,582,0.745,583,1.115,584,0.745,585,0.745,586,0.731,587,0.745,588,1.617,589,0.745,590,1.749,591,0.745,592,0.745,593,0.745,594,0.745,595,0.745,596,1.352,597,0.745,598,0.745,599,0.745,600,0.745,601,0.745,602,0.731,603,0.745,604,0.745,605,0.745,606,0.745,607,0.745,608,0.745,609,0.745,610,0.745,611,0.745,612,0.745,613,0.745,614,0.731,615,0.745,616,1.329,617,0.745,618,0.745,619,0.745,620,0.745,621,0.745,622,1.115,623,0.745,624,0.731,625,0.745,626,0.745,627,0.745,628,0.745,629,0.745,630,0.731,631,0.731,632,0.745,633,0.745,634,0.745,635,0.731,636,0.731,637,0.745,638,0.745,639,0.731,640,0.745,641,0.745,642,0.745,643,0.745,644,0.731,645,0.745,646,0.731,647,0.745,648,0.745,649,0.731,650,0.745,651,0.745]],["title/classes/ProactiveClient.html",[0,0.208,1631,4.251]],["body/classes/ProactiveClient.html",[0,0.187,2,0.818,3,0.036,4,0.036,5,0.036,7,0.049,8,0.474,9,2.603,13,2.926,14,0.894,16,2.666,17,3.825,18,1.339,22,2.357,26,1.237,28,1.806,29,0.007,30,0.61,31,0.232,32,1.132,33,0.279,40,1.997,41,1.178,42,5.296,45,0.951,51,0.835,52,5.296,61,0.73,67,0.086,68,1.72,76,1.82,77,5.135,79,1.281,81,1.281,83,4.586,84,1.305,85,3.271,88,3.271,89,0.948,90,2.591,91,2.591,92,2.026,93,2.591,94,2.469,95,2.591,96,2.591,97,2.312,103,4.586,104,3.871,105,3.271,135,2.57,152,4.579,183,3.413,184,0.638,190,1.374,191,0.003,192,0.004,193,0.003,198,4.917,203,1.333,216,6.189,239,0.531,308,3.047,316,1.83,475,1.564,476,1.72,477,1.33,478,1.436,532,0.818,533,1.759,534,1.593,535,1.593,537,0.984,538,0.984,539,0.984,544,1.507,546,0.984,547,0.984,552,1.002,558,0.984,559,0.984,560,1.593,562,0.984,563,1.002,564,1.623,565,1.623,567,0.744,568,1.406,569,1.235,573,1.593,616,1.82,778,3.083,808,2.57,817,3.75,939,5.74,1222,3.914,1425,4.586,1440,4.586,1631,5.359,1632,4.302,1633,7.549,1634,7.549,1635,6.965,1636,7.549,1637,6.965,1638,6.965,1639,6.965,1640,6.965,1641,6.965,1642,6.965,1643,6.965,1644,6.965,1645,6.965,1646,4.302,1647,7.949,1648,6.031,1649,7.549,1650,4.302,1651,6.031,1652,4.302,1653,6.031,1654,4.302,1655,4.302,1656,4.302,1657,6.031,1658,4.302,1659,4.302,1660,4.302,1661,6.189,1662,4.302,1663,4.302,1664,4.302,1665,4.302,1666,4.302,1667,4.302,1668,4.302,1669,4.302,1670,4.302,1671,4.302,1672,4.302,1673,4.302,1674,4.302,1675,4.302,1676,6.965,1677,6.965,1678,4.302,1679,4.302,1680,4.302,1681,4.302,1682,4.302,1683,4.102,1684,4.302,1685,6.031,1686,4.302,1687,4.302,1688,6.965,1689,4.302,1690,4.302,1691,4.302,1692,4.302,1693,4.302,1694,4.302,1695,6.965,1696,4.302,1697,4.302,1698,4.302,1699,4.302,1700,4.302,1701,4.302,1702,4.302,1703,4.302,1704,4.302,1705,6.031,1706,4.302,1707,6.031,1708,4.302,1709,4.302,1710,4.302,1711,4.302,1712,4.302,1713,6.965,1714,4.302,1715,4.302,1716,4.302,1717,4.302,1718,4.302,1719,4.302,1720,4.302,1721,4.302,1722,4.302,1723,4.302,1724,4.302,1725,3.823,1726,4.302,1727,4.302,1728,4.302,1729,4.302,1730,4.302,1731,4.302,1732,4.302,1733,4.302,1734,4.302,1735,4.302,1736,6.031,1737,4.302,1738,4.302,1739,4.302,1740,4.302,1741,4.302,1742,4.302,1743,4.302,1744,4.302,1745,6.031,1746,4.302,1747,4.302,1748,4.302,1749,4.302,1750,6.031,1751,4.302,1752,6.031,1753,4.302,1754,6.031,1755,4.302]],["title/classes/ProductDetailResponseContentBuilder.html",[0,0.208,1756,4.251]],["body/classes/ProductDetailResponseContentBuilder.html",[0,0.268,2,1.172,3,0.051,4,0.051,5,0.051,7,0.07,8,0.602,9,3.11,12,1.157,14,1.134,16,2.839,18,1.316,25,0.58,26,1.252,28,1.749,29,0.007,30,0.576,31,0.225,32,1.096,33,0.278,41,1.234,51,0.682,67,0.07,76,1.262,79,1.116,101,4.972,109,0.944,190,1.216,191,0.005,192,0.006,193,0.005,203,1.911,246,4.521,567,0.761,577,1.51,679,4.989,680,4.253,681,4.334,683,4.204,684,4.625,685,4.572,686,4.572,687,4.572,688,4.572,689,4.532,690,4.906,691,4.001,692,4.001,693,4.001,696,4.001,697,4.001,698,3.833,699,4.001,700,3.833,701,4.001,702,3.683,703,3.833,704,4.001,705,3.833,706,4.001,708,3.427,758,4.967,803,5.026,804,5.026,805,5.026,806,3.833,807,4.114,808,4.572,809,4.114,812,3.549,1756,6.801,1757,6.166,1758,8.703,1759,8.703,1760,6.166,1761,6.166,1762,6.801,1763,6.166]],["title/classes/ProductListResponseContentBuilder.html",[0,0.208,1764,4.251]],["body/classes/ProductListResponseContentBuilder.html",[0,0.241,2,1.054,3,0.046,4,0.046,5,0.046,7,0.063,8,0.563,9,3.455,12,1.082,14,1.061,16,2.78,18,1.313,21,6.46,25,0.522,26,1.252,28,1.742,29,0.007,30,0.574,31,0.225,32,1.092,33,0.28,41,1.241,51,0.877,57,0.906,58,0.889,60,2.721,61,0.941,64,5.938,65,3.772,67,0.063,76,1.465,79,1.24,109,0.883,113,3.772,126,4.819,160,6.46,174,5.129,190,1.412,191,0.004,192,0.005,193,0.004,194,4.26,203,2.218,246,4.379,567,0.684,577,1.412,679,4.918,680,3.978,681,4.127,683,4.003,684,4.404,685,4.276,686,4.276,687,4.276,688,4.276,689,4.361,690,4.815,691,3.599,692,3.599,693,3.599,696,3.599,697,3.599,698,3.448,699,3.599,700,3.448,701,3.599,702,3.313,703,3.448,704,3.599,705,3.448,706,3.599,708,3.082,758,5.434,806,4.449,807,4.501,808,5.178,809,4.501,812,3.192,1762,6.36,1764,6.36,1765,5.546,1766,8.373,1767,8.373,1768,8.373,1769,7.924,1770,5.546,1771,5.546,1772,5.546,1773,5.546,1774,5.546,1775,5.546,1776,7.157,1777,5.546,1778,5.546,1779,7.924,1780,5.546,1781,5.546,1782,7.157,1783,5.546,1784,5.546,1785,5.546]],["title/interfaces/ProgressiveResponse.html",[232,0.161,245,3.637]],["body/interfaces/ProgressiveResponse.html",[3,0.058,4,0.058,5,0.058,7,0.079,8,0.646,29,0.007,31,0.22,33,0.287,51,0.969,56,4.423,57,1.342,58,1.316,60,3.399,61,1.176,67,0.106,124,4.866,165,3.987,191,0.005,192,0.006,193,0.005,232,0.295,233,6.245,234,0.652,235,5.267,236,5.267,237,5.682,238,5.647,239,1.013,240,5.647,241,2.904,242,6.658,243,7.535,244,5.647,245,6.885,246,4.574,247,7.137,248,5.267,249,4.964,250,4.712,251,5.267,252,5.267,253,1.527,254,6.696]],["title/interfaces/Props.html",[232,0.161,253,1.055]],["body/interfaces/Props.html",[0,0.136,3,0.026,4,0.04,5,0.026,7,0.036,8,0.375,12,0.875,25,0.294,29,0.007,30,0.582,31,0.236,33,0.296,45,0.394,67,0.113,81,0.664,84,0.677,89,0.689,109,0.908,133,0.996,161,1.816,184,0.331,191,0.002,192,0.004,193,0.002,220,1.349,232,0.325,234,0.449,239,0.386,253,1.052,273,0.562,315,1.112,316,0.605,317,0.729,318,0.677,319,2.259,320,0.652,321,1.112,322,1.51,323,0.729,324,1.112,325,0.729,326,1.349,327,0.729,328,1.349,329,0.729,330,0.729,331,0.729,332,1.072,333,1.112,334,0.729,335,0.729,336,0.729,337,0.729,338,0.729,339,1.455,340,1.112,341,0.729,342,0.729,343,0.715,344,0.729,345,0.729,346,1.112,347,1.092,348,1.092,349,0.742,350,1.538,351,1.112,352,0.729,353,0.729,354,0.742,355,1.112,356,0.715,357,0.729,358,1.349,359,0.729,360,1.092,361,1.349,362,0.729,363,0.702,364,0.729,365,0.729,366,0.742,367,0.729,368,1.325,369,0.715,370,0.729,371,0.729,372,0.715,373,0.729,374,1.751,375,1.349,376,0.729,377,0.729,378,0.729,379,0.729,380,0.715,381,1.112,382,1.014,383,0.729,384,1.482,385,0.729,386,0.742,387,0.742,388,1.375,389,0.742,390,0.742,391,0.729,392,1.112,393,0.729,394,0.742,395,0.742,396,0.715,397,1.482,398,0.742,399,0.742,400,0.742,401,0.742,402,0.742,403,1.092,404,0.729,405,0.729,406,0.729,407,0.729,408,0.729,409,0.729,410,1.112,411,0.729,412,1.092,413,0.729,414,0.729,415,0.729,416,0.729,417,0.729,418,0.729,419,0.729,420,0.729,421,0.729,422,0.729,423,0.729,424,0.729,425,0.729,426,0.729,427,0.729,428,0.729,429,1.112,430,0.729,431,0.729,432,0.729,433,0.729,434,0.729,435,0.729,436,0.729,437,1.325,438,0.729,439,0.729,440,1.112,441,0.729,442,0.729,443,0.729,444,0.729,445,1.482,446,0.729,447,0.742,448,0.729,449,0.729,450,0.729,451,1.482,452,0.729,453,1.112,454,0.729,455,1.349,456,0.729,457,1.112,458,0.729,459,1.51,460,0.729,461,1.092,462,0.729,463,1.112,464,0.729,465,0.729,466,0.729,467,1.112,468,0.729,469,1.092,470,0.742,471,0.742,472,0.729,473,0.729,474,1.092,475,1.072,476,1.033,477,1.276,478,1.561,479,1.792,480,0.729,481,0.729,482,0.729,483,0.729,484,0.729,485,0.729,486,0.729,487,0.729,488,0.729,489,0.729,490,0.729,491,0.729,492,0.729,493,0.729,494,0.729,495,0.729,496,1.349,497,1.349,498,1.747,499,0.729,500,0.729,501,1.112,502,0.729,503,0.742,504,1.349,505,1.349,506,0.729,507,0.742,508,0.729,509,0.742,510,1.112,511,0.729,512,1.021,513,0.742,514,0.742,515,0.729,516,0.742,517,0.729,518,0.729,519,1.112,520,0.742,521,1.112,522,1.112,523,1.112,524,1.538,525,0.729,526,0.742,527,0.742,528,1.112,529,0.729,530,0.742,531,0.742,532,0.594,533,0.729,534,1.325,535,1.325,536,1.112,537,0.715,538,0.715,539,0.715,540,1.112,541,0.729,542,0.729,543,0.729,544,1.033,545,1.349,546,0.715,547,0.715,548,0.729,549,0.742,550,0.742,551,0.729,552,0.729,553,0.742,554,0.742,555,0.742,556,0.742,557,1.112,558,0.715,559,0.715,560,1.325,561,1.112,562,0.715,563,0.729,564,0.729,565,1.112,566,0.742,567,0.386,568,0.729,569,0.64,570,1.639,571,1.656,572,1.615,573,1.805,574,1.052,575,0.742,576,0.729,577,0.617,578,0.729,579,0.729,580,1.349,581,0.742,582,0.742,583,1.112,584,0.742,585,0.742,586,0.729,587,0.742,588,1.615,589,0.742,590,1.747,591,0.742,592,0.742,593,0.742,594,0.742,595,0.742,596,1.349,597,0.742,598,0.742,599,0.742,600,0.742,601,0.742,602,0.729,603,0.742,604,0.742,605,0.742,606,0.742,607,0.742,608,0.742,609,0.742,610,0.742,611,0.742,612,0.742,613,0.742,614,0.729,615,0.742,616,1.327,617,0.742,618,0.742,619,0.742,620,0.742,621,0.742,622,1.112,623,0.742,624,0.729,625,0.742,626,0.742,627,0.742,628,0.742,629,0.742,630,0.729,631,0.729,632,0.742,633,0.742,634,0.742,635,0.729,636,0.729,637,0.742,638,0.742,639,0.729,640,0.742,641,0.742,642,0.742,643,0.742,644,0.729,645,0.742,646,0.729,647,0.742,648,0.742,649,0.729,650,0.742,651,0.742]],["title/classes/RefundContentBuilder.html",[0,0.208,1786,4.251]],["body/classes/RefundContentBuilder.html",[0,0.259,2,1.136,3,0.05,4,0.05,5,0.05,7,0.086,8,0.59,12,1.135,14,1.113,16,2.822,18,1.332,25,0.562,26,1.253,28,1.782,29,0.007,30,0.587,31,0.226,32,1.117,33,0.288,39,5.708,41,1.216,51,0.831,67,0.068,76,1.224,79,1.154,92,2.522,101,4.903,109,0.926,174,5.379,190,1.179,191,0.004,192,0.006,193,0.004,203,1.852,246,4.48,567,0.737,577,1.481,679,4.968,680,4.172,681,4.274,683,4.146,684,4.561,685,4.484,686,4.484,687,4.484,688,4.484,689,4.483,690,4.88,691,3.879,692,3.879,693,3.879,696,3.879,697,3.879,698,3.716,699,3.879,700,3.716,701,3.879,702,3.571,703,3.716,704,3.879,705,3.716,706,3.879,708,3.322,709,5.311,805,4.873,806,3.716,807,4.035,808,4.484,809,4.035,812,3.44,815,5.881,875,4.545,1786,6.67,1787,5.977,1788,8.607,1789,8.206,1790,8.607,1791,5.977,1792,5.977,1793,5.977,1794,5.977,1795,5.977,1796,5.311,1797,5.977,1798,5.977]],["title/classes/RefundResponseContentBuilder.html",[0,0.208,1799,4.251]],["body/classes/RefundResponseContentBuilder.html",[0,0.242,2,1.059,3,0.046,4,0.046,5,0.046,7,0.064,8,0.565,9,3.458,12,1.085,14,1.064,16,2.783,18,1.324,25,0.524,26,1.257,28,1.686,29,0.007,30,0.556,31,0.22,32,1.057,33,0.269,41,1.287,51,0.617,67,0.064,79,1.241,92,2.818,109,0.886,135,3.33,190,1.099,191,0.004,192,0.005,193,0.004,203,1.727,239,0.687,246,4.385,363,1.252,567,0.687,577,1.416,679,4.921,680,3.99,681,4.136,683,4.013,684,4.414,685,4.289,686,4.289,687,4.289,688,4.289,689,4.77,690,4.819,691,3.617,692,3.617,693,3.617,696,3.617,697,3.617,698,3.465,699,3.617,700,3.465,701,3.617,702,3.33,703,3.465,704,3.617,705,3.465,706,3.617,708,3.097,775,3.465,803,5.853,804,4.543,806,4.938,807,4.777,808,5.309,809,4.509,810,4.952,812,4.572,814,4.952,817,3.465,818,4.952,820,3.617,821,4.952,1796,4.952,1799,6.38,1800,5.573,1801,8.388,1802,8.388,1803,8.388,1804,8.388,1805,8.388,1806,8.388,1807,5.573,1808,5.573,1809,5.573,1810,5.573,1811,5.573,1812,5.573,1813,5.573,1814,5.573,1815,5.573,1816,5.573,1817,5.573,1818,5.573]],["title/interfaces/RelevantAudience.html",[232,0.161,560,1.094]],["body/interfaces/RelevantAudience.html",[0,0.136,3,0.026,4,0.04,5,0.026,7,0.036,8,0.375,12,0.875,25,0.294,29,0.007,30,0.563,31,0.237,32,0.601,33,0.296,45,0.394,67,0.113,81,0.664,84,0.676,89,0.689,109,0.907,133,0.995,161,1.816,184,0.33,191,0.002,192,0.004,193,0.002,220,0.728,232,0.325,234,0.449,239,0.385,253,0.689,273,0.561,315,1.509,316,0.605,317,0.728,318,0.676,319,2.259,320,0.651,321,1.112,322,1.51,323,0.728,324,1.112,325,0.728,326,1.349,327,0.728,328,1.349,329,0.728,330,0.728,331,0.728,332,1.071,333,1.112,334,0.728,335,0.728,336,0.728,337,0.728,338,0.728,339,1.455,340,1.112,341,0.728,342,0.728,343,0.715,344,0.728,345,0.728,346,1.112,347,1.091,348,1.091,349,0.742,350,1.538,351,1.112,352,0.728,353,0.728,354,0.742,355,1.112,356,0.715,357,0.728,358,1.349,359,0.728,360,1.091,361,1.349,362,0.728,363,0.702,364,0.728,365,0.728,366,0.742,367,0.728,368,1.324,369,0.715,370,0.728,371,0.728,372,0.715,373,0.728,374,1.75,375,1.349,376,0.728,377,0.728,378,0.728,379,0.728,380,0.715,381,1.112,382,1.013,383,0.728,384,1.482,385,0.728,386,0.742,387,0.742,388,1.374,389,0.742,390,0.742,391,0.728,392,1.112,393,0.728,394,0.742,395,0.742,396,0.715,397,1.482,398,0.742,399,0.742,400,0.742,401,0.742,402,0.742,403,1.091,404,0.728,405,0.728,406,0.728,407,0.728,408,0.728,409,0.728,410,1.112,411,0.728,412,1.091,413,0.728,414,0.728,415,0.728,416,0.728,417,0.728,418,0.728,419,0.728,420,0.728,421,0.728,422,0.728,423,0.728,424,0.728,425,0.728,426,0.728,427,0.728,428,0.728,429,1.112,430,0.728,431,0.728,432,0.728,433,0.728,434,0.728,435,0.728,436,0.728,437,1.324,438,0.728,439,0.728,440,1.112,441,0.728,442,0.728,443,0.728,444,0.728,445,1.482,446,0.728,447,0.742,448,0.728,449,0.728,450,0.728,451,1.482,452,0.728,453,1.112,454,0.728,455,1.349,456,0.728,457,1.112,458,0.728,459,1.509,460,0.728,461,1.091,462,0.728,463,1.112,464,0.728,465,0.728,466,0.728,467,1.112,468,0.728,469,1.091,470,0.742,471,0.742,472,0.728,473,0.728,474,1.091,475,1.071,476,1.032,477,0.689,478,1.561,479,1.792,480,0.728,481,0.728,482,0.728,483,0.728,484,0.728,485,0.728,486,0.728,487,0.728,488,0.728,489,0.728,490,0.728,491,0.728,492,0.728,493,0.728,494,0.728,495,0.728,496,1.349,497,1.349,498,1.746,499,0.728,500,0.728,501,1.112,502,0.728,503,0.742,504,1.349,505,1.349,506,0.728,507,0.742,508,0.728,509,0.742,510,1.112,511,0.728,512,1.02,513,0.742,514,0.742,515,0.728,516,0.742,517,0.728,518,0.728,519,1.112,520,0.742,521,1.112,522,1.112,523,1.112,524,1.538,525,0.728,526,0.742,527,0.742,528,1.112,529,0.728,530,0.742,531,0.742,532,0.594,533,0.728,534,1.324,535,1.324,536,1.112,537,0.715,538,0.715,539,0.715,540,1.112,541,0.728,542,0.728,543,0.728,544,1.032,545,1.349,546,0.715,547,0.715,548,0.728,549,0.742,550,0.742,551,0.728,552,0.728,553,0.742,554,0.742,555,0.742,556,0.742,557,1.509,558,0.715,559,0.715,560,1.482,561,1.112,562,0.715,563,0.728,564,0.728,565,1.112,566,0.742,567,0.385,568,0.728,569,0.64,570,1.639,571,1.655,572,1.615,573,1.805,574,1.052,575,0.742,576,0.728,577,0.616,578,0.728,579,0.728,580,1.349,581,0.742,582,0.742,583,1.112,584,0.742,585,0.742,586,0.728,587,0.742,588,1.615,589,0.742,590,1.746,591,0.742,592,0.742,593,0.742,594,0.742,595,0.742,596,1.349,597,0.742,598,0.742,599,0.742,600,0.742,601,0.742,602,0.728,603,0.742,604,0.742,605,0.742,606,0.742,607,0.742,608,0.742,609,0.742,610,0.742,611,0.742,612,0.742,613,0.742,614,0.728,615,0.742,616,1.326,617,0.742,618,0.742,619,0.742,620,0.742,621,0.742,622,1.112,623,0.742,624,0.728,625,0.742,626,0.742,627,0.742,628,0.742,629,0.742,630,0.728,631,0.728,632,0.742,633,0.742,634,0.742,635,0.728,636,0.728,637,0.742,638,0.742,639,0.728,640,0.742,641,0.742,642,0.742,643,0.742,644,0.728,645,0.742,646,0.728,647,0.742,648,0.742,649,0.728,650,0.742,651,0.742]],["title/classes/ReminderAPIClient.html",[0,0.208,1819,4.251]],["body/classes/ReminderAPIClient.html",[0,0.266,2,1.167,3,0.051,4,0.051,5,0.051,7,0.07,8,0.6,14,1.131,16,2.524,17,4.49,18,1.323,26,1.196,28,1.746,29,0.007,30,0.576,31,0.217,32,1.095,33,0.297,41,1.325,45,1.194,51,0.919,57,1.003,58,0.984,60,3.012,61,1.042,67,0.07,79,1.198,97,4.671,106,4.667,109,0.941,190,1.211,191,0.005,192,0.006,193,0.005,196,5.649,203,1.902,532,1.651,1819,6.782,1820,6.138,1821,8.306,1822,8.306,1823,8.306,1824,8.689,1825,8.306,1826,7.632,1827,6.138,1828,6.138,1829,9.336,1830,6.138,1831,9.238,1832,6.138,1833,6.138,1834,9.414,1835,6.138,1836,6.138,1837,6.138,1838,6.138,1839,6.138,1840,6.138,1841,6.138,1842,6.138,1843,6.138,1844,6.138,1845,6.138]],["title/classes/RequestEnvelopeFactory.html",[0,0.208,1140,3.9]],["body/classes/RequestEnvelopeFactory.html",[0,0.227,2,0.994,3,0.044,4,0.044,5,0.044,7,0.06,8,0.542,9,2.879,13,4.687,14,1.021,18,1.35,22,2.693,24,3.576,26,1.248,28,1.052,29,0.007,30,0.347,31,0.229,32,0.659,33,0.292,41,0.776,51,0.986,57,1.126,58,1.364,61,1.17,67,0.06,76,1.577,79,0.924,124,5.082,184,0.924,190,1.783,191,0.004,192,0.005,193,0.004,203,2.801,237,5.934,239,1.115,241,3.567,255,4.265,257,6.165,259,4.649,261,4.284,262,5.868,267,2.365,284,3.75,285,3.75,318,1.979,544,1.772,616,1.676,896,7.261,908,4.649,1033,5.314,1140,5.617,1173,7.276,1276,3.559,1277,6.226,1281,5.868,1683,6.278,1846,5.232,1847,7.704,1848,7.122,1849,7.276,1850,8.188,1851,5.232,1852,6.772,1853,7.261,1854,6.891,1855,5.232,1856,6.123,1857,5.232,1858,6.675,1859,6.123,1860,5.232,1861,5.232,1862,5.232,1863,5.232,1864,6.123,1865,5.232,1866,5.232,1867,5.232,1868,5.232,1869,6.123,1870,5.232,1871,6.891,1872,5.232,1873,5.232,1874,3.75,1875,4.649,1876,5.232,1877,5.232,1878,5.232,1879,5.232,1880,5.232,1881,5.232,1882,5.232,1883,5.239,1884,5.232,1885,4.649,1886,5.232,1887,5.232,1888,5.232,1889,5.232,1890,5.232]],["title/classes/RequestFactory.html",[0,0.208,1276,3.254]],["body/classes/RequestFactory.html",[0,0.222,2,0.973,3,0.043,4,0.043,5,0.043,7,0.058,8,0.534,9,3.487,12,1.401,14,1.007,16,2.929,18,1.316,22,2.654,26,1.257,28,1.78,29,0.007,30,0.587,31,0.232,32,1.147,33,0.3,40,2.376,41,1.287,51,0.752,53,5.268,57,1.245,58,1.301,61,1.294,67,0.058,71,4.553,76,1.048,79,1.251,97,4.097,126,2.946,152,4.236,175,4.867,183,2.314,184,0.806,185,3.482,190,1.34,191,0.004,192,0.005,193,0.004,203,2.516,239,1.158,241,3.195,267,2.314,284,6.054,303,4.867,322,1.108,562,1.554,616,1.922,729,4.407,732,4.695,1119,3.774,1135,5.635,1144,5.795,1276,4.619,1277,6.172,1280,6.172,1281,5.817,1282,6.617,1283,6.617,1284,6.617,1285,6.213,1286,6.213,1287,6.213,1288,6.213,1289,6.213,1307,4.173,1309,4.173,1311,4.173,1313,4.173,1315,4.173,1317,4.173,1320,5.164,1325,3.892,1683,5.184,1858,4.173,1864,4.549,1874,3.668,1891,5.119,1892,5.119,1893,6.791,1894,5.119,1895,5.119,1896,5.119,1897,5.119,1898,5.119,1899,5.119,1900,5.119,1901,5.119,1902,5.119,1903,5.119,1904,5.119,1905,5.119,1906,5.119,1907,5.119,1908,5.119,1909,5.119,1910,6.791,1911,7.621,1912,7.621,1913,5.119,1914,5.119,1915,5.119,1916,5.119,1917,5.119,1918,5.119,1919,5.119,1920,5.119,1921,5.119,1922,5.119]],["title/interfaces/RequestHandlerBuilder.html",[232,0.161,920,2.858]],["body/interfaces/RequestHandlerBuilder.html",[0,0.376,3,0.051,4,0.051,5,0.051,7,0.069,14,1.125,18,0.832,24,3.84,25,0.714,26,0.799,28,1.223,29,0.007,30,0.403,31,0.217,32,0.766,33,0.189,41,0.902,45,1.091,51,0.959,55,2.91,57,1.352,58,1.216,59,1.962,61,1.033,67,0.108,68,3.035,76,1.554,79,1.26,109,1.02,166,4.368,184,0.875,190,1.2,191,0.005,192,0.006,193,0.005,232,0.3,234,0.714,239,0.936,280,4.218,567,0.75,661,2.966,714,3.632,716,3.962,717,1.923,718,3.168,734,3.721,870,4.218,909,3.634,910,3.634,911,4.534,912,5.143,913,3.634,914,3.381,915,5.615,916,4.573,917,4.718,918,5.325,919,3.782,920,5.175,921,3.782,922,4.718,923,3.782,924,4.718,925,3.782,926,3.634,927,4.534,928,3.952,929,4.218,930,4.534,931,4.534,932,3.782,933,4.718,934,3.634,1923,6.083]],["title/classes/RequestHandlerFactory.html",[0,0.208,929,2.659]],["body/classes/RequestHandlerFactory.html",[0,0.375,2,1.15,3,0.05,4,0.05,5,0.05,7,0.069,14,1.121,18,0.828,24,3.831,25,0.712,26,0.795,28,1.216,29,0.007,30,0.401,31,0.221,32,0.762,33,0.188,41,0.897,45,1.089,51,0.957,55,2.905,57,1.348,58,1.212,59,1.952,61,1.027,67,0.108,68,3.025,76,1.549,79,1.259,109,1.018,166,4.354,184,0.873,190,1.194,191,0.004,192,0.006,193,0.004,232,0.3,234,0.569,239,0.933,280,4.204,567,0.746,661,2.956,714,3.625,716,3.824,717,2.609,718,4.298,734,3.77,870,4.204,909,3.615,910,3.615,911,4.519,912,5.13,913,3.615,914,3.363,915,5.61,916,4.568,917,4.703,918,5.317,919,3.762,920,4.93,921,3.762,922,3.762,923,3.762,924,4.703,925,3.762,926,3.615,927,5.165,928,3.939,929,4.586,930,4.519,931,4.519,932,3.762,933,4.703,934,3.615,1924,6.051,1925,6.051]],["title/classes/RequestHandlerFactory-1.html",[0,0.174,194,2.158,929,2.231]],["body/classes/RequestHandlerFactory-1.html",[0,0.255,2,1.116,3,0.049,4,0.049,5,0.049,7,0.067,8,0.584,9,3.041,14,1.1,17,2.725,18,1.252,26,1.123,28,1.635,29,0.007,30,0.492,31,0.208,32,0.935,41,1.1,45,0.935,51,0.976,55,1.972,57,1.397,58,1.37,61,1.381,67,0.067,76,1.927,79,1.252,92,2.493,104,3.262,184,0.785,190,1.158,191,0.006,192,0.006,193,0.004,203,1.819,241,2.461,267,2.653,512,1.308,567,0.915,661,3.52,714,2.461,716,2.522,717,2.573,718,4.238,916,2.88,929,4.124,1126,4.375,1127,3.992,1128,6.227,1130,6.296,1133,5.059,1152,7.837,1229,5.832,1926,5.87,1927,8.138,1928,8.551,1929,5.87,1930,5.87,1931,5.87,1932,8.138,1933,5.87,1934,5.87,1935,9.008,1936,5.87,1937,4.785,1938,6.594,1939,5.87,1940,5.87,1941,7.421,1942,7.421,1943,7.421,1944,5.87,1945,5.87,1946,8.551,1947,5.87,1948,5.87,1949,5.87,1950,5.87,1951,5.216,1952,5.87,1953,5.87,1954,5.87,1955,5.87,1956,5.87,1957,5.87]],["title/interfaces/RequstBody.html",[232,0.161,561,1.115]],["body/interfaces/RequstBody.html",[0,0.135,3,0.026,4,0.04,5,0.026,7,0.036,8,0.374,12,0.873,25,0.293,29,0.007,30,0.563,31,0.237,33,0.297,45,0.392,67,0.113,81,0.662,84,0.674,89,0.686,109,0.906,133,0.992,161,1.814,184,0.329,191,0.002,192,0.004,193,0.002,220,0.726,232,0.325,234,0.448,239,0.384,253,0.686,273,0.559,315,1.109,316,0.603,317,0.726,318,0.674,319,2.258,320,0.649,321,1.109,322,1.508,323,0.726,324,1.109,325,0.726,326,1.346,327,0.726,328,1.346,329,0.726,330,0.726,331,0.726,332,1.069,333,1.109,334,0.726,335,0.726,336,0.726,337,0.726,338,0.726,339,1.452,340,1.109,341,0.726,342,0.726,343,0.712,344,0.726,345,0.726,346,1.109,347,1.089,348,1.089,349,0.739,350,1.535,351,1.109,352,0.726,353,0.726,354,0.739,355,1.109,356,0.712,357,0.726,358,1.346,359,0.726,360,1.089,361,1.346,362,0.726,363,0.699,364,0.726,365,0.726,366,0.739,367,0.726,368,1.321,369,0.712,370,0.726,371,0.726,372,0.712,373,0.726,374,1.748,375,1.346,376,0.726,377,0.726,378,0.726,379,0.726,380,0.712,381,1.109,382,1.011,383,0.726,384,1.479,385,0.726,386,0.739,387,0.739,388,1.371,389,0.739,390,0.739,391,0.726,392,1.109,393,0.726,394,0.739,395,0.739,396,0.712,397,1.479,398,0.739,399,0.739,400,0.739,401,0.739,402,0.739,403,1.089,404,0.726,405,0.726,406,0.726,407,0.726,408,0.726,409,0.726,410,1.109,411,0.726,412,1.089,413,0.726,414,0.726,415,0.726,416,0.726,417,0.726,418,0.726,419,0.726,420,0.726,421,0.726,422,0.726,423,0.726,424,0.726,425,0.726,426,0.726,427,0.726,428,0.726,429,1.109,430,0.726,431,0.726,432,0.726,433,0.726,434,0.726,435,0.726,436,0.726,437,1.321,438,0.726,439,0.726,440,1.109,441,0.726,442,0.726,443,0.726,444,0.726,445,1.479,446,0.726,447,0.739,448,0.726,449,0.726,450,0.726,451,1.479,452,0.726,453,1.109,454,0.726,455,1.346,456,0.726,457,1.109,458,0.726,459,1.507,460,0.726,461,1.089,462,0.726,463,1.109,464,0.726,465,0.726,466,0.726,467,1.109,468,0.726,469,1.089,470,0.739,471,0.739,472,0.726,473,0.726,474,1.089,475,1.069,476,1.508,477,0.686,478,1.54,479,1.791,480,0.726,481,0.726,482,0.726,483,0.726,484,0.726,485,0.726,486,0.726,487,0.726,488,0.726,489,0.726,490,0.726,491,0.726,492,0.726,493,0.726,494,0.726,495,0.726,496,1.346,497,1.346,498,1.744,499,0.726,500,0.726,501,1.109,502,0.726,503,0.739,504,1.346,505,1.346,506,0.726,507,0.739,508,0.726,509,0.739,510,1.109,511,0.726,512,1.018,513,0.739,514,0.739,515,0.726,516,0.739,517,0.726,518,0.726,519,1.109,520,0.739,521,1.109,522,1.109,523,1.109,524,1.535,525,0.726,526,0.739,527,0.739,528,1.109,529,0.726,530,0.739,531,0.739,532,0.592,533,0.726,534,1.321,535,1.321,536,1.109,537,0.712,538,0.712,539,0.712,540,1.109,541,0.726,542,0.726,543,0.726,544,1.03,545,1.346,546,0.712,547,0.712,548,0.726,549,0.739,550,0.739,551,0.726,552,0.726,553,0.739,554,0.739,555,0.739,556,0.739,557,1.109,558,0.712,559,0.712,560,1.321,561,1.346,562,1.479,563,1.507,564,0.726,565,1.109,566,0.739,567,0.384,568,0.726,569,0.637,570,1.639,571,1.654,572,1.613,573,1.803,574,1.049,575,0.739,576,0.726,577,0.614,578,0.726,579,0.726,580,1.346,581,0.739,582,0.739,583,1.109,584,0.739,585,0.739,586,0.726,587,0.739,588,1.613,589,0.739,590,1.744,591,0.739,592,0.739,593,0.739,594,0.739,595,0.739,596,1.346,597,0.739,598,0.739,599,0.739,600,0.739,601,0.739,602,0.726,603,0.739,604,0.739,605,0.739,606,0.739,607,0.739,608,0.739,609,0.739,610,0.739,611,0.739,612,0.739,613,0.739,614,0.726,615,0.739,616,1.324,617,0.739,618,0.739,619,0.739,620,0.739,621,0.739,622,1.109,623,0.739,624,0.726,625,0.739,626,0.739,627,0.739,628,0.739,629,0.739,630,0.726,631,0.726,632,0.739,633,0.739,634,0.739,635,0.726,636,0.726,637,0.739,638,0.739,639,0.726,640,0.739,641,0.739,642,0.739,643,0.739,644,0.726,645,0.739,646,0.726,647,0.739,648,0.739,649,0.726,650,0.739,651,0.739,1222,3.088]],["title/interfaces/Response.html",[232,0.161,567,0.59]],["body/interfaces/Response.html",[0,0.135,3,0.026,4,0.04,5,0.026,7,0.036,8,0.374,12,0.874,25,0.293,29,0.007,30,0.563,31,0.236,33,0.297,45,0.393,67,0.113,81,0.662,84,0.674,89,0.687,109,0.906,133,0.993,161,1.882,184,0.33,191,0.002,192,0.004,193,0.002,220,0.726,232,0.325,234,0.448,239,0.798,253,0.687,273,0.56,315,1.11,316,0.603,317,0.726,318,0.674,319,2.258,320,0.65,321,1.11,322,1.508,323,0.726,324,1.11,325,0.726,326,1.347,327,0.726,328,1.347,329,0.726,330,0.726,331,0.726,332,1.069,333,1.11,334,0.726,335,0.726,336,0.726,337,0.726,338,0.726,339,1.453,340,1.11,341,0.726,342,0.726,343,0.713,344,0.726,345,0.726,346,1.11,347,1.089,348,1.089,349,0.74,350,1.536,351,1.11,352,0.726,353,0.726,354,0.74,355,1.11,356,0.713,357,0.726,358,1.347,359,0.726,360,1.089,361,1.347,362,0.726,363,0.7,364,0.726,365,0.726,366,0.74,367,0.726,368,1.322,369,0.713,370,0.726,371,0.726,372,0.713,373,0.726,374,1.749,375,1.347,376,0.726,377,0.726,378,0.726,379,0.726,380,0.713,381,1.11,382,1.012,383,0.726,384,1.48,385,0.726,386,0.74,387,0.74,388,1.372,389,0.74,390,0.74,391,0.726,392,1.11,393,0.726,394,0.74,395,0.74,396,0.713,397,1.48,398,0.74,399,0.74,400,0.74,401,0.74,402,0.74,403,1.089,404,0.726,405,0.726,406,0.726,407,0.726,408,0.726,409,0.726,410,1.11,411,0.726,412,1.089,413,0.726,414,0.726,415,0.726,416,0.726,417,0.726,418,0.726,419,0.726,420,0.726,421,0.726,422,0.726,423,0.726,424,0.726,425,0.726,426,0.726,427,0.726,428,0.726,429,1.11,430,0.726,431,0.726,432,0.726,433,0.726,434,0.726,435,0.726,436,0.726,437,1.322,438,0.726,439,0.726,440,1.11,441,0.726,442,0.726,443,0.726,444,0.726,445,1.48,446,0.726,447,0.74,448,0.726,449,0.726,450,0.726,451,1.48,452,0.726,453,1.11,454,0.726,455,1.347,456,0.726,457,1.11,458,0.726,459,1.508,460,0.726,461,1.089,462,0.726,463,1.11,464,0.726,465,0.726,466,0.726,467,1.11,468,0.726,469,1.089,470,0.74,471,0.74,472,0.726,473,0.726,474,1.089,475,1.069,476,1.031,477,0.687,478,1.54,479,1.791,480,0.726,481,0.726,482,0.726,483,0.726,484,0.726,485,0.726,486,0.726,487,0.726,488,0.726,489,0.726,490,0.726,491,0.726,492,0.726,493,0.726,494,0.726,495,0.726,496,1.347,497,1.347,498,1.744,499,0.726,500,0.726,501,1.11,502,0.726,503,0.74,504,1.347,505,1.347,506,0.726,507,0.74,508,0.726,509,0.74,510,1.11,511,0.726,512,1.019,513,0.74,514,0.74,515,0.726,516,0.74,517,0.726,518,0.726,519,1.11,520,0.74,521,1.11,522,1.11,523,1.11,524,1.536,525,0.726,526,0.74,527,0.74,528,1.11,529,0.726,530,0.74,531,0.74,532,0.592,533,0.726,534,1.322,535,1.322,536,1.11,537,0.713,538,0.713,539,0.713,540,1.11,541,0.726,542,0.726,543,0.726,544,1.031,545,1.347,546,0.713,547,0.713,548,0.726,549,0.74,550,0.74,551,0.726,552,0.726,553,0.74,554,0.74,555,0.74,556,0.74,557,1.11,558,0.713,559,0.713,560,1.322,561,1.508,562,0.713,563,0.726,564,0.726,565,1.11,566,0.74,567,0.587,568,1.508,569,1.325,570,1.639,571,1.654,572,1.614,573,1.803,574,1.05,575,0.74,576,0.726,577,0.615,578,0.726,579,0.726,580,1.347,581,0.74,582,0.74,583,1.11,584,0.74,585,0.74,586,0.726,587,0.74,588,1.614,589,0.74,590,1.744,591,0.74,592,0.74,593,0.74,594,0.74,595,0.74,596,1.347,597,0.74,598,0.74,599,0.74,600,0.74,601,0.74,602,0.726,603,0.74,604,0.74,605,0.74,606,0.74,607,0.74,608,0.74,609,0.74,610,0.74,611,0.74,612,0.74,613,0.74,614,0.726,615,0.74,616,1.325,617,0.74,618,0.74,619,0.74,620,0.74,621,0.74,622,1.11,623,0.74,624,0.726,625,0.74,626,0.74,627,0.74,628,0.74,629,0.74,630,0.726,631,0.726,632,0.74,633,0.74,634,0.74,635,0.726,636,0.726,637,0.74,638,0.74,639,0.726,640,0.74,641,0.74,642,0.74,643,0.74,644,0.726,645,0.74,646,0.726,647,0.74,648,0.74,649,0.726,650,0.74,651,0.74]],["title/interfaces/ResponseContent.html",[232,0.161,689,2.491]],["body/interfaces/ResponseContent.html",[0,0.278,3,0.053,4,0.053,5,0.053,7,0.073,8,0.616,12,1.28,16,2.68,18,1.26,22,2.504,25,0.603,29,0.007,31,0.206,32,1.16,33,0.296,51,0.867,57,1.28,58,1.256,59,2.067,61,1.088,67,0.097,71,3.828,76,1.312,79,1.262,190,1.264,191,0.005,192,0.006,193,0.005,232,0.216,234,0.603,246,4.755,567,0.967,577,1.74,679,4.081,680,3.561,681,4.855,683,3.237,684,3.561,685,3.828,686,3.828,687,3.828,688,3.828,689,4.409,702,5.623,807,4.949,809,4.949,812,3.688,832,5.694,843,4.592,844,4.592,845,5.694,846,5.694,847,8.04,848,5.694,849,5.694,850,4.592,851,4.592,852,5.694,853,4.592,854,4.592]],["title/interfaces/ResponseContent-1.html",[194,2.158,232,0.135,689,2.09]],["body/interfaces/ResponseContent-1.html",[0,0.29,3,0.042,4,0.042,5,0.042,7,0.057,8,0.525,9,3.003,12,1.215,16,2.718,18,1.263,19,3.395,22,2.61,25,0.47,29,0.007,30,0.532,31,0.183,32,1.086,33,0.29,51,0.833,57,1.091,58,1.07,59,1.61,60,2.449,61,0.847,64,5.436,65,3.395,67,0.092,71,2.982,76,1.541,79,1.292,92,2.896,100,3.395,101,5.665,109,0.616,113,4.543,126,3.844,131,3.395,135,4.496,159,3.577,172,6.559,183,3.019,184,0.707,185,4.543,190,0.985,191,0.004,192,0.005,193,0.004,232,0.168,234,0.47,246,4.624,258,3.395,261,3.103,382,1.061,477,1.1,567,0.991,679,3.478,680,2.774,681,4.718,683,2.522,684,2.774,689,4.659,758,3.24,773,3.796,774,3.796,775,4.152,777,3.796,778,4.786,806,5.208,807,5.097,808,5.15,809,5.097,812,4.962,815,3.577,819,3.796,820,4.334,843,3.577,844,3.577,850,3.577,851,3.577,853,3.577,854,3.577,855,4.069,861,5.078,862,4.069,863,6.551,864,5.444,865,4.069,866,4.069,867,4.069,868,5.723,869,4.069,870,2.774,871,4.069,872,4.069,873,4.069,874,3.577,875,6.37,876,5.444,877,4.069,878,4.069,879,6.136,880,4.069,881,4.069,882,4.069,883,5.444,884,4.069,885,4.069,886,4.069,887,4.069,888,4.069,889,4.069,890,4.069,891,5.444,892,4.069,893,4.069,894,4.069,895,4.069]],["title/classes/RouteMatcher.html",[0,0.208,1937,3.9]],["body/classes/RouteMatcher.html",[0,0.245,2,1.072,3,0.047,4,0.047,5,0.047,7,0.064,8,0.569,9,3.611,14,1.073,17,4.139,18,1.256,22,2.828,25,0.793,26,1.218,28,1.134,29,0.007,30,0.479,31,0.22,32,0.711,41,1.184,45,1.062,51,0.987,55,2.996,57,1.424,58,1.351,59,1.82,61,1.356,67,0.064,68,2.256,76,1.481,79,1.13,104,4.022,131,4.922,154,3.508,184,0.597,190,1.113,191,0.004,192,0.005,193,0.004,203,1.749,239,1.168,241,2.366,257,6.143,267,2.551,284,4.043,308,4.257,356,1.928,372,1.291,512,1.409,714,3.35,743,4.599,746,2.938,916,4.375,996,4.696,1020,4.599,1085,6.78,1115,5.434,1126,4.793,1127,3.838,1128,5.786,1281,4.043,1320,4.29,1937,5.899,1938,5.014,1951,5.014,1958,5.642,1959,9.35,1960,8.427,1961,8.427,1962,5.642,1963,7.237,1964,5.642,1965,5.642,1966,5.642,1967,5.642,1968,5.642,1969,5.642,1970,5.642,1971,5.642,1972,5.642,1973,5.642,1974,5.642,1975,5.642,1976,5.642,1977,5.642,1978,7.237,1979,5.642,1980,5.642,1981,5.642,1982,5.642,1983,5.642,1984,5.642,1985,5.642,1986,5.642,1987,5.642,1988,7.237,1989,5.642,1990,5.642,1991,5.642,1992,5.642]],["title/interfaces/Router.html",[232,0.161,1128,3.104]],["body/interfaces/Router.html",[3,0.056,4,0.056,5,0.056,7,0.077,8,0.636,25,0.76,29,0.007,31,0.218,32,1.131,33,0.285,45,1.018,51,0.958,55,3.015,57,1.499,58,1.471,61,1.372,67,0.102,92,2.265,191,0.005,192,0.006,193,0.005,232,0.303,234,0.634,239,0.832,267,3.048,512,1.425,567,0.997,734,3.674,746,3.511,916,3.308,996,4.376,1112,5.579,1124,5.792,1125,4.832,1126,4.653,1127,4.586,1128,5.617,1129,5.127,1130,6.46,1131,5.792,1132,5.127,1133,4.192,1134,6.431,1135,5.824,1136,5.127]],["title/interfaces/S3SkillConfig.html",[232,0.161,666,3.254]],["body/interfaces/S3SkillConfig.html",[3,0.057,4,0.057,5,0.057,7,0.079,8,0.644,25,0.649,29,0.007,31,0.22,33,0.294,51,0.907,57,1.339,58,1.106,67,0.103,109,1.078,191,0.005,192,0.006,193,0.005,232,0.305,234,0.649,241,2.893,652,6.48,653,4.477,654,4.944,655,4.693,656,5.246,657,6.834,658,4.716,659,5.573,660,5.094,661,3.202,662,4.477,663,4.944,664,5.094,665,5.872,666,5.945,667,6.876,668,6.876,669,5.573,670,4.477,671,4.944,672,4.477,673,4.693,674,4.693,675,4.693,676,4.693]],["title/classes/SentryErrorHandlerFactory.html",[0,0.208,1008,3.9]],["body/classes/SentryErrorHandlerFactory.html",[0,0.23,2,1.005,3,0.044,4,0.044,5,0.044,7,0.06,14,1.029,18,0.724,24,2.455,26,0.695,29,0.007,31,0.129,33,0.277,41,0.784,45,0.666,51,0.945,55,2.944,57,1.343,58,1.241,59,1.706,61,0.898,67,0.1,68,2.115,76,1.92,79,1.228,94,3.587,191,0.004,192,0.005,193,0.004,232,0.178,239,0.652,249,4.973,250,5.593,273,0.95,567,0.856,569,1.083,574,1.53,658,3.994,660,5.862,683,4.154,714,2.218,716,3.328,717,2.448,719,5.235,721,3.16,734,3.495,735,3.288,775,4.815,787,6.703,807,2.843,809,3.73,817,5.308,820,5.026,825,3.447,829,4.022,874,3.79,898,4.022,979,6.96,980,5.657,981,4.312,982,4.7,984,4.7,986,6.703,988,6.882,989,4.7,990,4.7,991,4.7,992,4.7,993,6.96,994,6.166,995,6.882,996,5.336,997,7.306,998,6.166,999,7.306,1000,6.166,1001,6.882,1002,6.882,1003,6.882,1004,7.786,1005,6.882,1006,6.882,1007,6.882,1008,5.657,1009,6.314,1010,4.7,1011,4.7,1012,4.7,1013,4.7,1014,4.7,1015,4.7,1016,4.7,1017,4.7,1018,4.7,1019,6.166,1020,4.312,1021,4.7,1022,4.7,1023,4.7,1024,6.166,1025,4.312,1026,3.79,1027,4.7,1028,4.7,1029,4.7,1030,4.7,1031,4.7,1032,4.7,1033,3.432,1034,4.7,1035,4.7,1036,4.7,1037,4.7,1038,4.7,1039,4.7,1040,4.7,1041,4.7,1042,4.7,1043,4.7,1044,4.7,1052,3.598,1993,5.289]],["title/interfaces/SessionAttribute.html",[232,0.161,1994,3.9]],["body/interfaces/SessionAttribute.html",[0,0.291,3,0.056,4,0.056,5,0.056,16,2.035,18,1.287,25,0.63,26,0.879,29,0.007,33,0.268,51,0.891,57,1.315,58,1.383,61,1.366,67,0.092,68,2.678,79,1.261,124,5.228,125,4.066,133,1.679,184,0.708,191,0.005,192,0.006,193,0.005,232,0.226,234,0.63,241,2.808,258,5.475,261,5.365,262,4.799,267,3.027,272,4.799,273,1.446,285,5.768,318,1.982,1033,4.346,1683,5.87,1848,7.299,1852,5.092,1874,4.799,1994,6.562,1995,5.95,1996,6.696,1997,5.459,1998,5.95,1999,5.95,2000,5.95,2001,5.092,2002,5.95,2003,5.95,2004,5.95,2005,5.95,2006,5.95,2007,5.95,2008,5.95]],["title/classes/SessionFactory.html",[0,0.208,1852,3.637]],["body/classes/SessionFactory.html",[0,0.257,2,1.125,3,0.049,4,0.049,5,0.049,7,0.068,8,0.587,14,1.106,16,2.482,18,1.335,25,0.769,26,1.218,28,1.842,29,0.007,30,0.598,31,0.225,32,1.137,33,0.266,41,0.878,51,0.826,57,1.219,58,1.309,61,1.267,67,0.085,68,2.984,79,1.229,124,5.337,125,4.128,133,1.704,184,0.789,190,1.168,191,0.004,192,0.006,193,0.004,203,1.835,232,0.2,241,3.596,258,5.557,261,5.612,262,5.347,267,2.676,273,1.064,285,5.347,318,2.025,1033,4.842,1683,5.834,1848,7.472,1852,5.674,1874,4.243,1883,4.502,1994,4.826,1995,5.261,1997,6.66,1998,5.261,1999,7.26,2000,5.261,2001,6.213,2002,5.261,2003,7.26,2004,5.261,2005,7.26,2006,5.261,2007,7.26,2008,7.622,2009,5.92,2010,5.92,2011,5.92,2012,5.92,2013,5.92,2014,5.92,2015,5.92,2016,5.92,2017,5.92,2018,5.92,2019,5.92,2020,5.92,2021,5.92]],["title/classes/SettingAPIClient.html",[0,0.208,2022,4.251]],["body/classes/SettingAPIClient.html",[0,0.29,2,1.269,3,0.056,4,0.056,5,0.056,7,0.076,8,0.632,14,1.191,16,2.619,17,4.431,18,1.306,26,1.175,28,1.732,29,0.007,30,0.571,31,0.217,32,1.086,33,0.298,41,1.278,45,1.171,51,0.889,57,1.091,58,1.07,60,3.276,61,1.133,67,0.076,79,1.156,109,0.991,190,1.317,191,0.005,192,0.006,193,0.005,196,5.863,203,2.069,532,1.7,974,8.26,2022,7.14,2023,6.677,2024,8.62,2025,8.62,2026,8.62,2027,8.035,2028,6.677,2029,6.677,2030,6.677,2031,6.677,2032,6.677,2033,6.677,2034,6.677,2035,6.677,2036,6.677,2037,6.677]],["title/interfaces/Situation.html",[232,0.161,1130,3.254]],["body/interfaces/Situation.html",[3,0.056,4,0.056,5,0.056,7,0.077,8,0.634,25,0.843,29,0.007,31,0.218,32,1.173,33,0.268,45,1.016,51,0.956,55,3.011,57,1.521,58,1.492,61,1.369,67,0.102,92,2.256,154,5.013,191,0.005,192,0.006,193,0.005,232,0.302,234,0.632,239,0.828,267,3.036,512,1.616,567,0.995,734,2.749,746,3.498,916,3.295,996,5.816,1052,4.568,1112,4.175,1124,5.778,1125,4.813,1126,4.645,1127,4.568,1128,5.608,1129,6.131,1130,6.096,1131,6.423,1132,6.815,1133,4.175,1134,5.778,1135,4.359,1136,5.107]],["title/interfaces/SituationState.html",[232,0.161,1131,3.428]],["body/interfaces/SituationState.html",[3,0.057,4,0.057,5,0.057,7,0.078,8,0.639,25,0.765,29,0.007,31,0.211,32,1.134,33,0.293,45,1.024,51,0.962,55,3.025,57,1.503,58,1.475,61,1.38,67,0.103,92,3.025,191,0.005,192,0.006,193,0.005,232,0.304,234,0.641,239,0.84,267,3.078,512,1.433,567,1.003,734,2.788,746,3.546,916,3.341,996,4.419,1112,4.233,1124,5.826,1125,4.88,1126,4.673,1127,4.632,1128,5.276,1129,5.178,1130,5.913,1131,6.229,1132,5.178,1133,5.597,1134,5.826,1135,4.419,1136,5.178]],["title/interfaces/Skill.html",[232,0.161,382,1.016]],["body/interfaces/Skill.html",[0,0.136,3,0.026,4,0.04,5,0.026,7,0.036,8,0.376,12,0.877,25,0.295,29,0.007,30,0.582,31,0.236,33,0.297,45,0.395,67,0.113,81,0.666,84,0.679,89,0.691,109,0.909,133,0.998,161,1.818,184,0.332,191,0.002,192,0.004,193,0.002,220,0.731,232,0.325,234,0.45,239,0.387,253,0.691,273,0.564,315,1.115,316,0.607,317,0.731,318,0.679,319,2.259,320,0.654,321,1.115,322,1.513,323,0.731,324,1.115,325,0.731,326,1.352,327,0.731,328,1.352,329,0.731,330,0.731,331,0.731,332,1.075,333,1.115,334,0.731,335,0.731,336,0.731,337,0.731,338,0.731,339,1.458,340,1.115,341,0.731,342,0.731,343,0.718,344,0.731,345,0.731,346,1.115,347,1.095,348,1.095,349,0.745,350,1.541,351,1.115,352,0.731,353,0.731,354,0.745,355,1.115,356,0.718,357,0.731,358,1.352,359,0.731,360,1.095,361,1.352,362,0.731,363,0.704,364,0.731,365,0.731,366,0.745,367,0.731,368,1.327,369,0.718,370,0.731,371,0.731,372,0.718,373,0.731,374,1.753,375,1.352,376,0.731,377,0.731,378,0.731,379,0.731,380,0.718,381,1.115,382,1.233,383,0.731,384,1.485,385,0.731,386,0.745,387,0.745,388,1.377,389,0.745,390,0.745,391,0.731,392,1.115,393,0.731,394,0.745,395,0.745,396,0.718,397,1.485,398,0.745,399,0.745,400,0.745,401,0.745,402,0.745,403,1.095,404,0.731,405,0.731,406,0.731,407,0.731,408,0.731,409,0.731,410,1.115,411,0.731,412,1.095,413,0.731,414,0.731,415,0.731,416,0.731,417,0.731,418,0.731,419,0.731,420,0.731,421,0.731,422,0.731,423,0.731,424,0.731,425,0.731,426,0.731,427,0.731,428,0.731,429,1.115,430,0.731,431,0.731,432,0.731,433,0.731,434,0.731,435,0.731,436,0.731,437,1.327,438,0.731,439,0.731,440,1.115,441,0.731,442,0.731,443,0.731,444,0.731,445,1.485,446,0.731,447,0.745,448,0.731,449,0.731,450,0.731,451,1.485,452,0.731,453,1.115,454,0.731,455,1.352,456,0.731,457,1.115,458,0.731,459,1.513,460,0.731,461,1.095,462,0.731,463,1.115,464,0.731,465,0.731,466,0.731,467,1.115,468,0.731,469,1.095,470,0.745,471,0.745,472,0.731,473,0.731,474,1.095,475,1.075,476,1.036,477,0.691,478,1.541,479,1.793,480,0.731,481,0.731,482,0.731,483,0.731,484,0.731,485,0.731,486,0.731,487,0.731,488,0.731,489,0.731,490,0.731,491,0.731,492,0.731,493,0.731,494,0.731,495,0.731,496,1.352,497,1.352,498,1.749,499,0.731,500,0.731,501,1.115,502,0.731,503,0.745,504,1.352,505,1.352,506,0.731,507,0.745,508,0.731,509,0.745,510,1.115,511,0.731,512,1.023,513,0.745,514,0.745,515,0.731,516,0.745,517,0.731,518,0.731,519,1.115,520,0.745,521,1.115,522,1.115,523,1.115,524,1.541,525,0.731,526,0.745,527,0.745,528,1.115,529,0.731,530,0.745,531,0.745,532,0.596,533,0.731,534,1.327,535,1.327,536,1.115,537,0.718,538,0.718,539,0.718,540,1.115,541,0.731,542,0.731,543,0.731,544,1.036,545,1.352,546,0.718,547,0.718,548,0.731,549,0.745,550,0.745,551,0.731,552,0.731,553,0.745,554,0.745,555,0.745,556,0.745,557,1.115,558,0.718,559,0.718,560,1.327,561,1.115,562,0.718,563,0.731,564,0.731,565,1.115,566,0.745,567,0.387,568,0.731,569,0.642,570,1.64,571,1.657,572,1.617,573,1.807,574,1.055,575,0.745,576,0.731,577,0.619,578,0.731,579,0.731,580,1.352,581,0.745,582,0.745,583,1.115,584,0.745,585,0.745,586,0.731,587,0.745,588,1.617,589,0.745,590,1.749,591,0.745,592,0.745,593,0.745,594,0.745,595,0.745,596,1.352,597,0.745,598,0.745,599,0.745,600,0.745,601,0.745,602,0.731,603,0.745,604,0.745,605,0.745,606,0.745,607,0.745,608,0.745,609,0.745,610,0.745,611,0.745,612,0.745,613,0.745,614,0.731,615,0.745,616,1.329,617,0.745,618,0.745,619,0.745,620,0.745,621,0.745,622,1.115,623,0.745,624,0.731,625,0.745,626,0.745,627,0.745,628,0.745,629,0.745,630,0.731,631,0.731,632,0.745,633,0.745,634,0.745,635,0.731,636,0.731,637,0.745,638,0.745,639,0.731,640,0.745,641,0.745,642,0.745,643,0.745,644,0.731,645,0.745,646,0.731,647,0.745,648,0.745,649,0.731,650,0.745,651,0.745]],["title/interfaces/SkillConstants.html",[232,0.161,662,3.104]],["body/interfaces/SkillConstants.html",[0,0.311,3,0.06,4,0.06,5,0.06,17,3.323,18,0.979,26,0.94,29,0.007,33,0.26,51,0.927,55,2.814,56,3.616,57,1.368,58,1.342,59,2.309,67,0.101,76,1.466,79,0.96,145,6.001,190,1.412,191,0.005,192,0.006,193,0.005,232,0.241,234,0.673,241,3.001,272,5.13,273,1.505,655,6.038,658,4.82,662,5.435,717,2.263,823,6.827,824,6.361,825,3.001,828,6.361,829,5.443,830,6.361,831,6.361,2038,7.159]],["title/interfaces/SkillHandlers.html",[232,0.161,672,3.104]],["body/interfaces/SkillHandlers.html",[3,0.057,4,0.057,5,0.057,7,0.078,8,0.639,25,0.639,29,0.007,31,0.227,32,1.176,33,0.27,51,0.899,57,1.327,58,1.089,67,0.103,109,1.002,191,0.005,192,0.006,193,0.005,232,0.303,234,0.639,241,2.849,652,6.224,653,4.411,654,4.87,655,4.623,656,5.168,657,6.59,658,5.179,659,6.12,660,5.594,661,3.516,662,4.411,663,4.87,664,5.049,665,5.82,666,5.524,667,5.168,668,5.168,669,5.524,670,4.411,671,4.87,672,5.27,673,6.12,674,6.12,675,6.12,676,6.12]],["title/interfaces/SkillHandlersBuilder.html",[232,0.161,2039,3.9]],["body/interfaces/SkillHandlersBuilder.html",[0,0.271,3,0.052,4,0.052,5,0.052,7,0.071,14,1.145,18,0.856,26,1.18,28,1.758,29,0.007,30,0.579,31,0.213,32,1.102,41,1.332,51,0.855,57,1.022,58,1.003,67,0.088,76,1.281,79,1.227,191,0.005,192,0.006,193,0.005,232,0.211,234,0.588,653,5.94,658,5.172,659,6.112,660,5.587,661,3.512,672,5.677,673,5.698,674,5.698,675,5.698,676,5.698,717,1.978,718,3.258,1026,5.534,1119,3.477,2039,7.9,2040,5.559,2041,7.444,2042,7.444,2043,7.444,2044,7.444,2045,7.985,2046,6.862,2047,6.256,2048,6.862,2049,6.256,2050,6.862,2051,6.256,2052,6.256,2053,6.256,2054,6.256,2055,5.559,2056,5.559,2057,5.1,2058,5.559,2059,5.559,2060,6.862,2061,5.559,2062,5.559,2063,6.862,2064,5.559,2065,5.559,2066,6.862,2067,5.559]],["title/classes/SkillHandlersFactory.html",[0,0.208,2057,3.9]],["body/classes/SkillHandlersFactory.html",[0,0.289,2,1.265,3,0.055,4,0.055,5,0.055,7,0.076,14,1.189,18,0.911,26,0.874,29,0.007,41,0.987,51,0.888,57,1.088,58,1.067,67,0.092,76,1.363,79,1.245,191,0.005,192,0.006,193,0.005,232,0.224,653,5.205,658,4.955,659,5.855,660,5.352,661,3.364,672,5.587,673,5.456,674,5.456,675,5.456,676,5.456,717,2.722,718,4.654,1026,5.748,1119,3.7,2039,7.855,2040,5.916,2041,5.916,2042,5.916,2043,5.916,2044,5.916,2045,7.127,2046,5.916,2048,5.916,2050,5.916,2055,5.916,2056,5.916,2057,6.539,2058,5.916,2059,5.916,2060,7.127,2061,5.916,2062,5.916,2063,7.127,2064,5.916,2065,5.916,2066,7.127,2067,5.916,2068,6.657]],["title/interfaces/SkillState.html",[232,0.161,1231,3.637]],["body/interfaces/SkillState.html",[0,0.25,3,0.048,4,0.048,5,0.048,7,0.066,8,0.577,9,3.173,18,1.292,22,2.251,25,0.799,29,0.007,31,0.206,32,1.07,33,0.228,51,0.638,56,4.076,57,0.941,58,0.923,59,1.858,67,0.097,76,1.921,79,1.278,90,2.475,91,2.475,92,3.128,93,2.475,94,2.358,95,2.475,96,2.475,110,5.965,118,4.128,125,3.705,191,0.004,192,0.005,193,0.004,232,0.247,234,0.542,241,4.076,257,3.739,308,2.91,512,1.681,1126,3.097,1133,5.733,1229,6.285,1230,4.38,1231,6.668,1232,7.308,1233,6.923,1234,4.696,1235,5.978,1236,5.978,1237,5.978,1238,4.696,1239,5.978,1240,4.696,1241,6.134,1242,4.696,1243,4.696,1244,5.978,1245,4.38,1246,7.149,1247,4.696,1248,4.696,1249,4.696,1250,4.696,1251,4.696,1252,6.923,1253,4.38,1254,4.696,1255,4.696,1256,4.696,1257,4.696,1258,4.696,1259,4.696,1260,4.696,1261,4.696,1262,4.696,1263,4.696,1264,4.696]],["title/interfaces/Soccer.html",[232,0.161,453,1.115]],["body/interfaces/Soccer.html",[0,0.136,3,0.026,4,0.04,5,0.026,7,0.036,8,0.376,12,0.877,25,0.295,29,0.007,30,0.582,31,0.236,33,0.297,45,0.395,67,0.113,81,0.666,84,0.679,89,0.691,109,0.909,133,0.998,161,1.818,184,0.332,191,0.002,192,0.004,193,0.002,220,0.731,232,0.325,234,0.45,239,0.387,253,0.691,273,0.564,315,1.115,316,0.607,317,0.731,318,0.679,319,2.259,320,0.654,321,1.115,322,1.513,323,0.731,324,1.115,325,0.731,326,1.352,327,0.731,328,1.352,329,0.731,330,0.731,331,0.731,332,1.075,333,1.115,334,0.731,335,0.731,336,0.731,337,0.731,338,0.731,339,1.458,340,1.115,341,0.731,342,0.731,343,0.718,344,0.731,345,0.731,346,1.115,347,1.095,348,1.095,349,0.745,350,1.541,351,1.115,352,0.731,353,0.731,354,0.745,355,1.115,356,0.718,357,0.731,358,1.352,359,0.731,360,1.095,361,1.352,362,0.731,363,0.704,364,0.731,365,0.731,366,0.745,367,0.731,368,1.327,369,0.718,370,0.731,371,0.731,372,0.718,373,0.731,374,1.753,375,1.352,376,0.731,377,0.731,378,0.731,379,0.731,380,0.718,381,1.115,382,1.017,383,0.731,384,1.485,385,0.731,386,0.745,387,0.745,388,1.377,389,0.745,390,0.745,391,0.731,392,1.115,393,0.731,394,0.745,395,0.745,396,0.718,397,1.485,398,0.745,399,0.745,400,0.745,401,0.745,402,0.745,403,1.095,404,0.731,405,0.731,406,0.731,407,0.731,408,0.731,409,0.731,410,1.115,411,0.731,412,1.095,413,0.731,414,0.731,415,0.731,416,0.731,417,0.731,418,0.731,419,0.731,420,0.731,421,0.731,422,0.731,423,0.731,424,0.731,425,0.731,426,0.731,427,0.731,428,0.731,429,1.115,430,0.731,431,0.731,432,0.731,433,0.731,434,0.731,435,0.731,436,0.731,437,1.327,438,0.731,439,0.731,440,1.115,441,0.731,442,0.731,443,0.731,444,0.731,445,1.485,446,0.731,447,0.745,448,0.731,449,0.731,450,0.731,451,1.485,452,0.731,453,1.352,454,0.731,455,1.352,456,0.731,457,1.115,458,0.731,459,1.513,460,0.731,461,1.095,462,0.731,463,1.115,464,0.731,465,0.731,466,0.731,467,1.115,468,0.731,469,1.095,470,0.745,471,0.745,472,0.731,473,0.731,474,1.095,475,1.075,476,1.036,477,0.691,478,1.541,479,1.793,480,0.731,481,0.731,482,0.731,483,0.731,484,0.731,485,0.731,486,0.731,487,0.731,488,0.731,489,0.731,490,0.731,491,0.731,492,0.731,493,0.731,494,0.731,495,0.731,496,1.352,497,1.352,498,1.749,499,0.731,500,0.731,501,1.115,502,0.731,503,0.745,504,1.352,505,1.352,506,0.731,507,0.745,508,0.731,509,0.745,510,1.115,511,0.731,512,1.023,513,0.745,514,0.745,515,0.731,516,0.745,517,0.731,518,0.731,519,1.115,520,0.745,521,1.115,522,1.115,523,1.115,524,1.541,525,0.731,526,0.745,527,0.745,528,1.115,529,0.731,530,0.745,531,0.745,532,0.596,533,0.731,534,1.327,535,1.327,536,1.115,537,0.718,538,0.718,539,0.718,540,1.115,541,0.731,542,0.731,543,0.731,544,1.036,545,1.352,546,0.718,547,0.718,548,0.731,549,0.745,550,0.745,551,0.731,552,0.731,553,0.745,554,0.745,555,0.745,556,0.745,557,1.115,558,0.718,559,0.718,560,1.327,561,1.115,562,0.718,563,0.731,564,0.731,565,1.115,566,0.745,567,0.387,568,0.731,569,0.642,570,1.64,571,1.657,572,1.617,573,1.807,574,1.055,575,0.745,576,0.731,577,0.619,578,0.731,579,0.731,580,1.352,581,0.745,582,0.745,583,1.115,584,0.745,585,0.745,586,0.731,587,0.745,588,1.617,589,0.745,590,1.749,591,0.745,592,0.745,593,0.745,594,0.745,595,0.745,596,1.352,597,0.745,598,0.745,599,0.745,600,0.745,601,0.745,602,0.731,603,0.745,604,0.745,605,0.745,606,0.745,607,0.745,608,0.745,609,0.745,610,0.745,611,0.745,612,0.745,613,0.745,614,0.731,615,0.745,616,1.329,617,0.745,618,0.745,619,0.745,620,0.745,621,0.745,622,1.115,623,0.745,624,0.731,625,0.745,626,0.745,627,0.745,628,0.745,629,0.745,630,0.731,631,0.731,632,0.745,633,0.745,634,0.745,635,0.731,636,0.731,637,0.745,638,0.745,639,0.731,640,0.745,641,0.745,642,0.745,643,0.745,644,0.731,645,0.745,646,0.731,647,0.745,648,0.745,649,0.731,650,0.745,651,0.745]],["title/interfaces/SpeechScriptResponse.html",[232,0.161,248,3.637]],["body/interfaces/SpeechScriptResponse.html",[3,0.057,4,0.057,5,0.057,7,0.078,8,0.641,29,0.007,31,0.224,32,1.178,33,0.293,51,0.964,56,4.399,57,1.332,58,1.306,60,3.354,61,1.161,67,0.105,124,4.839,165,3.935,191,0.005,192,0.006,193,0.005,232,0.294,233,6.197,234,0.643,235,5.199,236,5.199,237,5.651,238,5.573,239,1.005,240,5.573,241,2.867,242,6.621,243,6.644,244,5.573,245,7.24,246,3.454,247,5.573,248,6.197,249,6.461,250,6.132,251,5.199,252,5.199,253,1.507,254,6.644]],["title/interfaces/SportsEvent.html",[232,0.161,451,1.094]],["body/interfaces/SportsEvent.html",[0,0.135,3,0.026,4,0.04,5,0.026,7,0.036,8,0.374,12,0.874,25,0.293,29,0.007,30,0.563,31,0.236,33,0.296,45,0.393,67,0.113,81,0.662,84,0.674,89,0.687,109,0.906,133,0.993,161,1.814,184,0.33,191,0.002,192,0.004,193,0.002,220,0.726,232,0.325,234,0.448,239,0.384,253,0.687,273,0.56,315,1.11,316,0.603,317,0.726,318,0.674,319,2.258,320,0.65,321,1.11,322,1.508,323,0.726,324,1.11,325,0.726,326,1.347,327,0.726,328,1.347,329,0.726,330,0.726,331,0.726,332,1.069,333,1.11,334,0.726,335,0.726,336,0.726,337,0.726,338,0.726,339,1.453,340,1.11,341,0.726,342,0.726,343,0.713,344,0.726,345,0.726,346,1.11,347,1.089,348,1.089,349,0.74,350,1.536,351,1.11,352,0.726,353,0.726,354,0.74,355,1.11,356,0.713,357,0.726,358,1.347,359,0.726,360,1.089,361,1.347,362,0.726,363,0.7,364,0.726,365,0.726,366,0.74,367,0.726,368,1.322,369,0.713,370,0.726,371,0.726,372,0.713,373,0.726,374,1.749,375,1.347,376,0.726,377,0.726,378,0.726,379,0.726,380,0.713,381,1.11,382,1.012,383,0.726,384,1.48,385,0.726,386,0.74,387,0.74,388,1.372,389,0.74,390,0.74,391,0.726,392,1.11,393,0.726,394,0.74,395,0.74,396,0.713,397,1.48,398,0.74,399,0.74,400,0.74,401,0.74,402,0.74,403,1.089,404,0.726,405,0.726,406,0.726,407,0.726,408,0.726,409,0.726,410,1.11,411,0.726,412,1.089,413,0.726,414,0.726,415,0.726,416,0.726,417,0.726,418,0.726,419,0.726,420,0.726,421,0.726,422,0.726,423,0.726,424,0.726,425,0.726,426,0.726,427,0.726,428,0.726,429,1.11,430,0.726,431,0.726,432,0.726,433,0.726,434,0.726,435,0.726,436,0.726,437,1.322,438,0.726,439,0.726,440,1.11,441,0.726,442,0.726,443,0.726,444,0.726,445,1.48,446,0.726,447,0.74,448,0.726,449,0.726,450,0.726,451,1.594,452,1.508,453,1.508,454,1.508,455,1.781,456,1.508,457,1.11,458,0.726,459,1.508,460,0.726,461,1.089,462,0.726,463,1.11,464,0.726,465,0.726,466,0.726,467,1.11,468,0.726,469,1.089,470,0.74,471,0.74,472,0.726,473,0.726,474,1.089,475,1.069,476,1.031,477,0.687,478,1.54,479,1.791,480,0.726,481,0.726,482,0.726,483,0.726,484,0.726,485,0.726,486,0.726,487,0.726,488,0.726,489,0.726,490,0.726,491,0.726,492,0.726,493,0.726,494,0.726,495,0.726,496,1.347,497,1.347,498,1.744,499,0.726,500,0.726,501,1.11,502,0.726,503,0.74,504,1.347,505,1.347,506,0.726,507,0.74,508,0.726,509,0.74,510,1.11,511,0.726,512,1.019,513,0.74,514,0.74,515,0.726,516,0.74,517,0.726,518,0.726,519,1.11,520,0.74,521,1.11,522,1.11,523,1.11,524,1.536,525,0.726,526,0.74,527,0.74,528,1.11,529,0.726,530,0.74,531,0.74,532,0.592,533,0.726,534,1.322,535,1.322,536,1.11,537,0.713,538,0.713,539,0.713,540,1.11,541,0.726,542,0.726,543,0.726,544,1.031,545,1.347,546,0.713,547,0.713,548,0.726,549,0.74,550,0.74,551,0.726,552,0.726,553,0.74,554,0.74,555,0.74,556,0.74,557,1.11,558,0.713,559,0.713,560,1.322,561,1.11,562,0.713,563,0.726,564,0.726,565,1.11,566,0.74,567,0.384,568,0.726,569,0.638,570,1.639,571,1.654,572,1.614,573,1.803,574,1.05,575,0.74,576,0.726,577,0.615,578,0.726,579,0.726,580,1.347,581,0.74,582,0.74,583,1.11,584,0.74,585,0.74,586,0.726,587,0.74,588,1.614,589,0.74,590,1.744,591,0.74,592,0.74,593,0.74,594,0.74,595,0.74,596,1.347,597,0.74,598,0.74,599,0.74,600,0.74,601,0.74,602,0.726,603,0.74,604,0.74,605,0.74,606,0.74,607,0.74,608,0.74,609,0.74,610,0.74,611,0.74,612,0.74,613,0.74,614,0.726,615,0.74,616,1.325,617,0.74,618,0.74,619,0.74,620,0.74,621,0.74,622,1.11,623,0.74,624,0.726,625,0.74,626,0.74,627,0.74,628,0.74,629,0.74,630,0.726,631,0.726,632,0.74,633,0.74,634,0.74,635,0.726,636,0.726,637,0.74,638,0.74,639,0.726,640,0.74,641,0.74,642,0.74,643,0.74,644,0.726,645,0.74,646,0.726,647,0.74,648,0.74,649,0.726,650,0.74,651,0.74]],["title/interfaces/SportsTeam.html",[232,0.161,457,1.115]],["body/interfaces/SportsTeam.html",[0,0.136,3,0.026,4,0.04,5,0.026,7,0.036,8,0.376,12,0.877,25,0.295,29,0.007,30,0.582,31,0.236,33,0.297,45,0.395,67,0.113,81,0.666,84,0.679,89,0.691,109,0.909,133,0.998,161,1.818,184,0.332,191,0.002,192,0.004,193,0.002,220,0.731,232,0.325,234,0.45,239,0.387,253,0.691,273,0.564,315,1.115,316,0.607,317,0.731,318,0.679,319,2.259,320,0.654,321,1.115,322,1.513,323,0.731,324,1.115,325,0.731,326,1.352,327,0.731,328,1.352,329,0.731,330,0.731,331,0.731,332,1.075,333,1.115,334,0.731,335,0.731,336,0.731,337,0.731,338,0.731,339,1.458,340,1.115,341,0.731,342,0.731,343,0.718,344,0.731,345,0.731,346,1.115,347,1.095,348,1.095,349,0.745,350,1.541,351,1.115,352,0.731,353,0.731,354,0.745,355,1.115,356,0.718,357,0.731,358,1.352,359,0.731,360,1.095,361,1.352,362,0.731,363,0.704,364,0.731,365,0.731,366,0.745,367,0.731,368,1.327,369,0.718,370,0.731,371,0.731,372,0.718,373,0.731,374,1.753,375,1.352,376,0.731,377,0.731,378,0.731,379,0.731,380,0.718,381,1.115,382,1.017,383,0.731,384,1.485,385,0.731,386,0.745,387,0.745,388,1.377,389,0.745,390,0.745,391,0.731,392,1.115,393,0.731,394,0.745,395,0.745,396,0.718,397,1.485,398,0.745,399,0.745,400,0.745,401,0.745,402,0.745,403,1.095,404,0.731,405,0.731,406,0.731,407,0.731,408,0.731,409,0.731,410,1.115,411,0.731,412,1.095,413,0.731,414,0.731,415,0.731,416,0.731,417,0.731,418,0.731,419,0.731,420,0.731,421,0.731,422,0.731,423,0.731,424,0.731,425,0.731,426,0.731,427,0.731,428,0.731,429,1.115,430,0.731,431,0.731,432,0.731,433,0.731,434,0.731,435,0.731,436,0.731,437,1.327,438,0.731,439,0.731,440,1.115,441,0.731,442,0.731,443,0.731,444,0.731,445,1.485,446,0.731,447,0.745,448,0.731,449,0.731,450,0.731,451,1.485,452,0.731,453,1.115,454,0.731,455,1.352,456,0.731,457,1.352,458,0.731,459,1.513,460,0.731,461,1.095,462,0.731,463,1.115,464,0.731,465,0.731,466,0.731,467,1.115,468,0.731,469,1.095,470,0.745,471,0.745,472,0.731,473,0.731,474,1.095,475,1.075,476,1.036,477,0.691,478,1.541,479,1.793,480,0.731,481,0.731,482,0.731,483,0.731,484,0.731,485,0.731,486,0.731,487,0.731,488,0.731,489,0.731,490,0.731,491,0.731,492,0.731,493,0.731,494,0.731,495,0.731,496,1.352,497,1.352,498,1.749,499,0.731,500,0.731,501,1.115,502,0.731,503,0.745,504,1.352,505,1.352,506,0.731,507,0.745,508,0.731,509,0.745,510,1.115,511,0.731,512,1.023,513,0.745,514,0.745,515,0.731,516,0.745,517,0.731,518,0.731,519,1.115,520,0.745,521,1.115,522,1.115,523,1.115,524,1.541,525,0.731,526,0.745,527,0.745,528,1.115,529,0.731,530,0.745,531,0.745,532,0.596,533,0.731,534,1.327,535,1.327,536,1.115,537,0.718,538,0.718,539,0.718,540,1.115,541,0.731,542,0.731,543,0.731,544,1.036,545,1.352,546,0.718,547,0.718,548,0.731,549,0.745,550,0.745,551,0.731,552,0.731,553,0.745,554,0.745,555,0.745,556,0.745,557,1.115,558,0.718,559,0.718,560,1.327,561,1.115,562,0.718,563,0.731,564,0.731,565,1.115,566,0.745,567,0.387,568,0.731,569,0.642,570,1.64,571,1.657,572,1.617,573,1.807,574,1.055,575,0.745,576,0.731,577,0.619,578,0.731,579,0.731,580,1.352,581,0.745,582,0.745,583,1.115,584,0.745,585,0.745,586,0.731,587,0.745,588,1.617,589,0.745,590,1.749,591,0.745,592,0.745,593,0.745,594,0.745,595,0.745,596,1.352,597,0.745,598,0.745,599,0.745,600,0.745,601,0.745,602,0.731,603,0.745,604,0.745,605,0.745,606,0.745,607,0.745,608,0.745,609,0.745,610,0.745,611,0.745,612,0.745,613,0.745,614,0.731,615,0.745,616,1.329,617,0.745,618,0.745,619,0.745,620,0.745,621,0.745,622,1.115,623,0.745,624,0.731,625,0.745,626,0.745,627,0.745,628,0.745,629,0.745,630,0.731,631,0.731,632,0.745,633,0.745,634,0.745,635,0.731,636,0.731,637,0.745,638,0.745,639,0.731,640,0.745,641,0.745,642,0.745,643,0.745,644,0.731,645,0.745,646,0.731,647,0.745,648,0.745,649,0.731,650,0.745,651,0.745]],["title/classes/StateManager.html",[0,0.208,1126,2.572]],["body/classes/StateManager.html",[0,0.343,2,1.051,3,0.046,4,0.046,5,0.046,7,0.063,14,1.059,18,1.144,25,0.787,26,1.098,28,1.813,29,0.007,30,0.554,31,0.226,32,1.054,33,0.172,41,1.24,51,0.612,56,4.884,57,0.903,58,0.886,59,1.783,67,0.104,76,1.921,79,1.226,110,6.479,191,0.004,192,0.005,193,0.004,241,3.934,308,3.608,512,1.68,661,2.791,717,2.984,729,5.755,928,3.719,993,5.822,1052,3.76,1126,3.839,1241,5.431,1245,5.431,1253,6.016,2069,4.912,2070,7.142,2071,8.363,2072,7.142,2073,8.868,2074,8.659,2075,7.142,2076,7.142,2077,7.142,2078,7.142,2079,7.142,2080,7.142,2081,7.142,2082,7.142,2083,7.142,2084,7.912,2085,7.912,2086,5.528,2087,5.528,2088,5.528,2089,5.528,2090,5.528,2091,5.528,2092,5.528,2093,5.528,2094,4.912,2095,5.528,2096,5.528,2097,5.528,2098,5.528,2099,5.528]],["title/classes/StateManager-1.html",[0,0.174,194,2.158,1126,2.158]],["body/classes/StateManager-1.html",[0,0.217,2,0.952,3,0.042,4,0.042,5,0.042,7,0.057,8,0.527,9,3.476,14,0.992,18,1.338,22,2.616,25,0.842,26,1.241,28,1.734,29,0.007,30,0.572,31,0.223,32,1.087,33,0.234,40,3.5,41,1.344,51,0.554,56,4.36,57,0.819,58,0.803,59,1.616,67,0.092,76,1.875,79,1.255,90,2.153,91,2.153,92,3.008,93,2.153,94,2.051,95,2.153,96,2.153,110,6.09,118,3.59,125,3.382,190,0.988,191,0.004,192,0.005,193,0.004,203,1.553,232,0.226,241,4.086,257,4.893,308,2.531,512,1.688,1126,3.599,1133,5.365,1229,6.497,1230,3.81,1231,6.7,1232,6.837,1233,7.035,1234,5.458,1235,5.458,1236,5.458,1237,5.458,1238,6.147,1239,5.458,1240,6.561,1241,5.733,1242,4.084,1243,6.147,1244,5.458,1245,6.12,1246,6.837,1247,4.084,1248,4.084,1249,4.084,1250,4.084,1251,6.561,1252,6.561,1253,6.12,1254,4.084,1255,6.561,1256,4.084,1257,6.561,1258,4.084,1259,6.147,1260,4.084,1261,6.147,1262,4.084,1263,6.147,1264,4.084,2100,5.01,2101,6.695,2102,5.01,2103,5.01,2104,5.01,2105,5.01,2106,5.01,2107,5.01,2108,5.01,2109,5.01,2110,5.01,2111,5.01,2112,5.01,2113,5.01,2114,5.01,2115,5.01,2116,5.01,2117,5.01,2118,5.01,2119,5.01]],["title/classes/SystemFactory.html",[0,0.208,903,3.9]],["body/classes/SystemFactory.html",[0,0.221,2,0.969,3,0.042,4,0.042,5,0.042,7,0.058,8,0.533,9,2.842,10,6.594,13,5.898,14,1.004,18,1.33,22,2.646,26,1.207,28,1.806,29,0.007,30,0.595,31,0.221,32,1.132,33,0.299,40,3.53,41,0.755,51,0.842,57,1.417,58,1.299,61,1.149,67,0.058,77,4.606,79,1.205,97,4.979,125,4.54,142,6.833,152,5.213,190,1.336,191,0.004,192,0.005,193,0.004,199,6.412,234,0.479,237,4.394,239,0.835,261,5.798,262,5.807,267,2.304,318,1.915,332,1.521,382,1.721,544,1.103,574,1.493,732,4.226,868,6.917,898,6.986,903,5.52,1033,5.474,1052,3.466,1323,5.52,1661,7.495,1683,5.512,1725,6.017,1856,4.528,1858,4.154,1859,4.528,1869,4.528,1874,3.652,1883,3.875,1885,4.528,1997,6.199,2001,5.782,2120,5.096,2121,8.103,2122,7.604,2123,7.604,2124,7.604,2125,7.604,2126,7.604,2127,5.096,2128,6.771,2129,5.096,2130,5.096,2131,5.096,2132,5.096,2133,5.096,2134,6.771,2135,5.096,2136,5.096,2137,5.096,2138,5.096,2139,5.096,2140,8.103,2141,5.096,2142,5.096,2143,5.096,2144,5.096,2145,6.771,2146,5.096,2147,5.096,2148,5.096,2149,5.096,2150,5.096,2151,5.096,2152,5.096,2153,6.771,2154,5.096,2155,5.096,2156,5.096,2157,5.096]],["title/interfaces/TMergeTargetHandler.html",[232,0.161,915,2.858]],["body/interfaces/TMergeTargetHandler.html",[0,0.376,3,0.051,4,0.051,5,0.051,7,0.069,8,0.596,18,0.831,24,3.837,25,0.713,29,0.007,31,0.221,32,1.091,33,0.188,45,1.091,51,0.958,55,2.908,57,1.35,58,1.215,59,1.959,61,1.031,67,0.108,68,3.032,76,1.552,79,1.26,109,1.02,154,5.381,166,4.364,184,0.874,190,1.198,191,0.005,192,0.006,193,0.005,232,0.3,234,0.713,239,0.935,280,4.213,567,0.749,661,2.963,714,3.864,716,4.003,717,1.92,718,3.162,734,3.647,870,4.213,909,3.628,910,3.628,911,4.529,912,5.139,913,3.628,914,3.375,915,5.566,916,4.571,917,4.713,918,5.171,919,3.775,920,4.938,921,3.775,922,3.775,923,3.775,924,4.713,925,3.775,926,3.628,927,4.529,928,3.948,929,4.213,930,4.529,931,4.529,932,3.775,933,4.713,934,3.628]],["title/interfaces/TRequestHandler.html",[232,0.161,918,2.858]],["body/interfaces/TRequestHandler.html",[0,0.376,3,0.051,4,0.051,5,0.051,7,0.07,8,0.598,18,0.834,24,3.843,25,0.715,29,0.007,31,0.221,33,0.189,45,1.092,51,0.959,55,2.912,57,1.353,58,1.218,59,1.966,61,1.035,67,0.108,68,3.038,76,1.555,79,1.261,109,1.021,154,5.388,166,4.373,184,0.876,190,1.202,191,0.005,192,0.006,193,0.005,232,0.301,234,0.715,239,0.937,280,4.223,567,0.752,661,2.969,714,3.867,716,4.006,717,1.927,718,3.174,734,3.651,870,4.223,909,3.641,910,3.641,911,4.539,912,5.147,913,3.641,914,3.387,915,5.51,916,4.574,917,4.724,918,5.328,919,3.789,920,4.946,921,3.789,922,3.789,923,3.789,924,4.724,925,3.789,926,3.641,927,4.539,928,3.957,929,4.223,930,4.539,931,4.539,932,3.789,933,4.724,934,3.641]],["title/interfaces/Thing.html",[232,0.161,346,1.115]],["body/interfaces/Thing.html",[0,0.136,3,0.026,4,0.04,5,0.026,7,0.036,8,0.377,12,0.878,25,0.296,29,0.007,30,0.582,31,0.236,33,0.296,45,0.396,67,0.113,81,0.668,84,0.68,89,0.693,109,0.909,133,0.999,161,1.819,184,0.332,191,0.002,192,0.004,193,0.002,220,0.732,232,0.325,234,0.451,239,0.388,253,0.693,273,0.565,315,1.117,316,0.608,317,0.732,318,0.68,319,2.26,320,0.655,321,1.117,322,1.514,323,0.732,324,1.117,325,0.732,326,1.354,327,0.732,328,1.354,329,0.732,330,0.732,331,0.732,332,1.076,333,1.117,334,0.732,335,0.732,336,0.732,337,0.732,338,0.732,339,1.459,340,1.117,341,0.732,342,0.732,343,0.719,344,0.732,345,0.732,346,1.354,347,1.096,348,1.096,349,0.746,350,1.542,351,1.117,352,0.732,353,0.732,354,0.746,355,1.117,356,0.719,357,0.732,358,1.354,359,0.732,360,1.096,361,1.354,362,0.732,363,0.706,364,0.732,365,0.732,366,0.746,367,0.732,368,1.329,369,0.719,370,0.732,371,0.732,372,0.719,373,0.732,374,1.754,375,1.354,376,0.732,377,0.732,378,0.732,379,0.732,380,0.719,381,1.117,382,1.018,383,0.732,384,1.486,385,0.732,386,0.746,387,0.746,388,1.379,389,0.746,390,0.746,391,0.732,392,1.117,393,0.732,394,0.746,395,0.746,396,0.719,397,1.486,398,0.746,399,0.746,400,0.746,401,0.746,402,0.746,403,1.096,404,0.732,405,0.732,406,0.732,407,0.732,408,0.732,409,0.732,410,1.117,411,0.732,412,1.096,413,0.732,414,0.732,415,0.732,416,0.732,417,0.732,418,0.732,419,0.732,420,0.732,421,0.732,422,0.732,423,0.732,424,0.732,425,0.732,426,0.732,427,0.732,428,0.732,429,1.117,430,0.732,431,0.732,432,0.732,433,0.732,434,0.732,435,0.732,436,0.732,437,1.329,438,0.732,439,0.732,440,1.117,441,0.732,442,0.732,443,0.732,444,0.732,445,1.486,446,0.732,447,0.746,448,0.732,449,0.732,450,0.732,451,1.486,452,0.732,453,1.117,454,0.732,455,1.354,456,0.732,457,1.117,458,0.732,459,1.514,460,0.732,461,1.096,462,0.732,463,1.117,464,0.732,465,0.732,466,0.732,467,1.117,468,0.732,469,1.096,470,0.746,471,0.746,472,0.732,473,0.732,474,1.096,475,1.076,476,1.037,477,0.693,478,1.542,479,1.794,480,0.732,481,0.732,482,0.732,483,0.732,484,0.732,485,0.732,486,0.732,487,0.732,488,0.732,489,0.732,490,0.732,491,0.732,492,0.732,493,0.732,494,0.732,495,0.732,496,1.354,497,1.354,498,1.75,499,0.732,500,0.732,501,1.117,502,0.732,503,0.746,504,1.354,505,1.354,506,0.732,507,0.746,508,0.732,509,0.746,510,1.117,511,0.732,512,1.024,513,0.746,514,0.746,515,0.732,516,0.746,517,0.732,518,0.732,519,1.117,520,0.746,521,1.117,522,1.117,523,1.117,524,1.542,525,0.732,526,0.746,527,0.746,528,1.117,529,0.732,530,0.746,531,0.746,532,0.597,533,0.732,534,1.329,535,1.329,536,1.117,537,0.719,538,0.719,539,0.719,540,1.117,541,0.732,542,0.732,543,0.732,544,1.037,545,1.354,546,0.719,547,0.719,548,0.732,549,0.746,550,0.746,551,0.732,552,0.732,553,0.746,554,0.746,555,0.746,556,0.746,557,1.117,558,0.719,559,0.719,560,1.329,561,1.117,562,0.719,563,0.732,564,0.732,565,1.117,566,0.746,567,0.388,568,0.732,569,0.643,570,1.64,571,1.658,572,1.618,573,1.808,574,1.056,575,0.746,576,0.732,577,0.62,578,0.732,579,0.732,580,1.354,581,0.746,582,0.746,583,1.117,584,0.746,585,0.746,586,0.732,587,0.746,588,1.618,589,0.746,590,1.75,591,0.746,592,0.746,593,0.746,594,0.746,595,0.746,596,1.354,597,0.746,598,0.746,599,0.746,600,0.746,601,0.746,602,0.732,603,0.746,604,0.746,605,0.746,606,0.746,607,0.746,608,0.746,609,0.746,610,0.746,611,0.746,612,0.746,613,0.746,614,0.732,615,0.746,616,1.33,617,0.746,618,0.746,619,0.746,620,0.746,621,0.746,622,1.117,623,0.746,624,0.732,625,0.746,626,0.746,627,0.746,628,0.746,629,0.746,630,0.732,631,0.732,632,0.746,633,0.746,634,0.746,635,0.732,636,0.732,637,0.746,638,0.746,639,0.732,640,0.746,641,0.746,642,0.746,643,0.746,644,0.732,645,0.746,646,0.732,647,0.746,648,0.746,649,0.732,650,0.746,651,0.746]],["title/interfaces/TranslationBuilder.html",[232,0.161,2158,3.637]],["body/interfaces/TranslationBuilder.html",[0,0.28,3,0.054,4,0.054,5,0.054,7,0.074,12,1.394,14,1.166,18,0.882,26,1.161,28,1.706,29,0.007,30,0.562,31,0.215,32,1.069,33,0.306,41,1.31,67,0.097,76,1.61,79,1.138,165,4.527,183,2.913,184,0.682,191,0.005,192,0.006,193,0.005,232,0.265,234,0.606,273,1.588,569,1.738,717,2.037,825,2.702,1119,3.581,1222,4.182,2158,7.295,2159,5.253,2160,6.919,2161,7.864,2162,7.205,2163,6.919,2164,6.411,2165,6.444,2166,6.411,2167,6.444,2168,6.444,2169,7.164,2170,6.411,2171,7.388,2172,6.444,2173,5.253,2174,5.253,2175,4.9,2176,5.253,2177,5.253,2178,6.411,2179,5.253,2180,5.253]],["title/classes/TranslationFactory.html",[0,0.208,2175,3.637]],["body/classes/TranslationFactory.html",[0,0.297,2,1.299,3,0.057,4,0.057,5,0.057,7,0.078,12,1.316,14,1.208,18,0.935,26,0.898,29,0.007,33,0.301,41,1.013,67,0.099,76,1.668,79,1.167,165,4.691,183,3.091,184,0.723,191,0.005,192,0.006,193,0.005,232,0.275,273,1.464,569,1.4,717,2.753,825,3.78,1119,3.8,2158,7.24,2159,5.573,2160,5.573,2162,5.573,2163,5.573,2164,5.573,2166,5.573,2169,7.182,2170,5.573,2171,7.098,2173,5.573,2174,5.573,2175,6.197,2176,5.573,2177,5.573,2178,6.644,2179,5.573,2180,5.573,2181,6.837]],["title/interfaces/TranslationObject.html",[232,0.161,2169,3.637]],["body/interfaces/TranslationObject.html",[0,0.297,3,0.057,4,0.057,5,0.057,7,0.078,8,0.641,12,1.317,18,0.936,29,0.007,31,0.212,33,0.301,67,0.099,76,1.669,79,1.168,165,4.694,183,3.094,184,0.724,191,0.005,192,0.006,193,0.005,232,0.275,234,0.644,273,1.465,569,1.401,717,2.164,825,2.869,1119,3.803,1222,5.292,2158,7.184,2159,5.579,2160,5.579,2162,5.579,2163,5.579,2164,5.579,2166,5.579,2169,7.241,2170,5.579,2171,7.101,2173,7.352,2174,5.579,2175,5.204,2176,5.579,2177,5.579,2178,6.648,2179,5.579,2180,5.579]],["title/interfaces/TrashCollectionAlert.html",[232,0.161,437,1.094]],["body/interfaces/TrashCollectionAlert.html",[0,0.136,3,0.026,4,0.04,5,0.026,7,0.036,8,0.375,12,0.875,25,0.294,29,0.007,30,0.564,31,0.236,33,0.296,45,0.394,67,0.113,81,0.664,84,0.677,89,0.689,109,0.908,133,0.996,161,1.816,184,0.331,191,0.002,192,0.004,193,0.002,220,0.729,232,0.325,234,0.449,239,0.386,253,0.689,273,0.562,315,1.112,316,0.605,317,0.729,318,0.677,319,2.259,320,0.652,321,1.112,322,1.51,323,0.729,324,1.112,325,0.729,326,1.349,327,0.729,328,1.349,329,0.729,330,0.729,331,0.729,332,1.072,333,1.112,334,0.729,335,0.729,336,0.729,337,0.729,338,0.729,339,1.455,340,1.112,341,0.729,342,0.729,343,0.715,344,0.729,345,0.729,346,1.112,347,1.092,348,1.092,349,0.742,350,1.538,351,1.112,352,0.729,353,0.729,354,0.742,355,1.112,356,0.715,357,0.729,358,1.349,359,0.729,360,1.092,361,1.349,362,0.729,363,0.702,364,0.729,365,0.729,366,0.742,367,0.729,368,1.325,369,0.715,370,0.729,371,0.729,372,0.715,373,0.729,374,1.751,375,1.349,376,0.729,377,0.729,378,0.729,379,0.729,380,0.715,381,1.112,382,1.014,383,0.729,384,1.482,385,0.729,386,0.742,387,0.742,388,1.375,389,0.742,390,0.742,391,0.729,392,1.112,393,0.729,394,0.742,395,0.742,396,0.715,397,1.482,398,0.742,399,0.742,400,0.742,401,0.742,402,0.742,403,1.092,404,0.729,405,0.729,406,0.729,407,0.729,408,0.729,409,0.729,410,1.112,411,0.729,412,1.482,413,0.729,414,0.729,415,0.729,416,0.729,417,0.729,418,0.729,419,0.729,420,0.729,421,0.729,422,0.729,423,0.729,424,0.729,425,0.729,426,0.729,427,0.729,428,0.729,429,1.51,430,0.729,431,0.729,432,0.729,433,0.729,434,0.729,435,0.729,436,0.729,437,1.482,438,1.51,439,1.51,440,1.112,441,0.729,442,0.729,443,0.729,444,0.729,445,1.482,446,0.729,447,0.742,448,0.729,449,0.729,450,0.729,451,1.482,452,0.729,453,1.112,454,0.729,455,1.349,456,0.729,457,1.112,458,0.729,459,1.51,460,0.729,461,1.092,462,0.729,463,1.112,464,0.729,465,0.729,466,0.729,467,1.112,468,0.729,469,1.092,470,0.742,471,0.742,472,0.729,473,0.729,474,1.092,475,1.072,476,1.033,477,0.689,478,1.541,479,1.792,480,0.729,481,0.729,482,0.729,483,0.729,484,0.729,485,0.729,486,0.729,487,0.729,488,0.729,489,0.729,490,0.729,491,0.729,492,0.729,493,0.729,494,0.729,495,0.729,496,1.349,497,1.349,498,1.747,499,0.729,500,0.729,501,1.112,502,0.729,503,0.742,504,1.349,505,1.349,506,0.729,507,0.742,508,0.729,509,0.742,510,1.112,511,0.729,512,1.021,513,0.742,514,0.742,515,0.729,516,0.742,517,0.729,518,0.729,519,1.112,520,0.742,521,1.112,522,1.112,523,1.112,524,1.538,525,0.729,526,0.742,527,0.742,528,1.112,529,0.729,530,0.742,531,0.742,532,0.594,533,0.729,534,1.325,535,1.325,536,1.112,537,0.715,538,0.715,539,0.715,540,1.112,541,0.729,542,0.729,543,0.729,544,1.033,545,1.349,546,0.715,547,0.715,548,0.729,549,0.742,550,0.742,551,0.729,552,0.729,553,0.742,554,0.742,555,0.742,556,0.742,557,1.112,558,0.715,559,0.715,560,1.325,561,1.112,562,0.715,563,0.729,564,0.729,565,1.112,566,0.742,567,0.386,568,0.729,569,0.64,570,1.639,571,1.656,572,1.615,573,1.805,574,1.052,575,0.742,576,0.729,577,0.617,578,0.729,579,0.729,580,1.349,581,0.742,582,0.742,583,1.112,584,0.742,585,0.742,586,0.729,587,0.742,588,1.615,589,0.742,590,1.747,591,0.742,592,0.742,593,0.742,594,0.742,595,0.742,596,1.349,597,0.742,598,0.742,599,0.742,600,0.742,601,0.742,602,0.729,603,0.742,604,0.742,605,0.742,606,0.742,607,0.742,608,0.742,609,0.742,610,0.742,611,0.742,612,0.742,613,0.742,614,0.729,615,0.742,616,1.327,617,0.742,618,0.742,619,0.742,620,0.742,621,0.742,622,1.112,623,0.742,624,0.729,625,0.742,626,0.742,627,0.742,628,0.742,629,0.742,630,0.729,631,0.729,632,0.742,633,0.742,634,0.742,635,0.729,636,0.729,637,0.742,638,0.742,639,0.729,640,0.742,641,0.742,642,0.742,643,0.742,644,0.729,645,0.742,646,0.729,647,0.742,648,0.742,649,0.729,650,0.742,651,0.742]],["title/classes/UserFactory.html",[0,0.208,1853,3.9]],["body/classes/UserFactory.html",[0,0.294,2,1.289,3,0.056,4,0.056,5,0.056,7,0.077,8,0.638,9,3.243,14,1.202,18,1.309,26,1.181,28,1.63,29,0.007,30,0.537,31,0.211,32,1.022,33,0.269,41,1.005,51,0.751,57,1.325,58,1.391,61,1.377,67,0.077,79,1.163,190,1.338,191,0.005,192,0.006,193,0.005,203,2.102,267,3.066,318,2.11,1033,5.965,1853,6.612,1875,7.208,1883,5.157,2001,6.598,2182,6.783,2183,8.992,2184,8.678,2185,6.783,2186,6.783,2187,6.783,2188,6.783,2189,6.783,2190,6.783]],["title/classes/UserProfileAPIClient.html",[0,0.208,2191,4.251]],["body/classes/UserProfileAPIClient.html",[0,0.291,2,1.276,3,0.056,4,0.056,5,0.056,7,0.077,8,0.634,14,1.195,16,2.626,17,4.494,18,1.325,26,1.204,29,0.007,31,0.163,33,0.208,41,1.329,45,1.196,51,0.892,57,1.097,58,1.076,60,3.295,61,1.14,67,0.077,79,1.202,109,0.995,190,1.325,191,0.005,192,0.006,193,0.005,196,5.878,203,2.081,532,1.703,1351,7.964,1385,5.968,2191,7.165,2192,6.716,2193,8.962,2194,8.962,2195,8.962,2196,8.063,2197,6.716,2198,6.716,2199,6.716,2200,6.716,2201,6.716,2202,6.716,2203,6.716,2204,6.716]],["title/interfaces/WeatherAlert.html",[232,0.161,445,1.094]],["body/interfaces/WeatherAlert.html",[0,0.136,3,0.026,4,0.058,5,0.026,7,0.036,8,0.375,12,0.875,25,0.294,29,0.007,30,0.563,31,0.236,32,0.601,33,0.297,45,0.394,67,0.113,81,0.664,84,0.676,89,0.689,109,0.907,133,0.995,161,1.816,184,0.33,191,0.002,192,0.004,193,0.002,220,0.728,232,0.325,234,0.449,239,0.385,253,0.689,273,0.561,315,1.112,316,0.605,317,0.728,318,0.676,319,2.259,320,0.651,321,1.112,322,1.51,323,0.728,324,1.112,325,0.728,326,1.349,327,0.728,328,1.349,329,0.728,330,0.728,331,0.728,332,1.071,333,1.112,334,0.728,335,0.728,336,0.728,337,0.728,338,0.728,339,1.455,340,1.112,341,0.728,342,0.728,343,0.715,344,0.728,345,0.728,346,1.112,347,1.091,348,1.091,349,0.742,350,1.538,351,1.112,352,0.728,353,0.728,354,0.742,355,1.112,356,0.715,357,0.728,358,1.349,359,0.728,360,1.091,361,1.349,362,0.728,363,0.702,364,0.728,365,0.728,366,0.742,367,0.728,368,1.324,369,0.715,370,0.728,371,0.728,372,0.715,373,0.728,374,1.75,375,1.349,376,0.728,377,0.728,378,0.728,379,0.728,380,0.715,381,1.112,382,1.013,383,0.728,384,1.482,385,0.728,386,0.742,387,0.742,388,1.374,389,0.742,390,0.742,391,0.728,392,1.112,393,0.728,394,0.742,395,0.742,396,0.715,397,1.482,398,0.742,399,0.742,400,0.742,401,0.742,402,0.742,403,1.091,404,0.728,405,0.728,406,0.728,407,0.728,408,0.728,409,0.728,410,1.112,411,0.728,412,1.091,413,0.728,414,0.728,415,0.728,416,0.728,417,0.728,418,0.728,419,0.728,420,0.728,421,0.728,422,0.728,423,0.728,424,0.728,425,0.728,426,0.728,427,0.728,428,0.728,429,1.112,430,0.728,431,0.728,432,0.728,433,0.728,434,0.728,435,0.728,436,0.728,437,1.324,438,0.728,439,0.728,440,1.509,441,0.728,442,0.728,443,0.728,444,0.728,445,1.596,446,0.728,447,1.538,448,0.728,449,0.728,450,0.728,451,1.482,452,0.728,453,1.112,454,0.728,455,1.349,456,0.728,457,1.112,458,0.728,459,1.509,460,0.728,461,1.091,462,0.728,463,1.112,464,0.728,465,0.728,466,0.728,467,1.112,468,0.728,469,1.091,470,0.742,471,0.742,472,0.728,473,0.728,474,1.091,475,1.071,476,1.032,477,0.689,478,1.541,479,1.792,480,0.728,481,0.728,482,0.728,483,0.728,484,0.728,485,0.728,486,0.728,487,0.728,488,0.728,489,0.728,490,0.728,491,0.728,492,0.728,493,0.728,494,0.728,495,0.728,496,1.349,497,1.349,498,1.746,499,0.728,500,0.728,501,1.112,502,0.728,503,0.742,504,1.349,505,1.349,506,0.728,507,0.742,508,0.728,509,0.742,510,1.112,511,0.728,512,1.02,513,0.742,514,0.742,515,0.728,516,0.742,517,0.728,518,0.728,519,1.112,520,0.742,521,1.112,522,1.112,523,1.112,524,1.538,525,0.728,526,0.742,527,0.742,528,1.112,529,0.728,530,0.742,531,0.742,532,0.594,533,0.728,534,1.324,535,1.324,536,1.112,537,0.715,538,0.715,539,0.715,540,1.112,541,0.728,542,0.728,543,0.728,544,1.032,545,1.349,546,0.715,547,0.715,548,0.728,549,0.742,550,0.742,551,0.728,552,0.728,553,0.742,554,0.742,555,0.742,556,0.742,557,1.112,558,0.715,559,0.715,560,1.324,561,1.112,562,0.715,563,0.728,564,0.728,565,1.112,566,0.742,567,0.385,568,0.728,569,0.64,570,1.639,571,1.655,572,1.615,573,1.805,574,1.052,575,0.742,576,0.728,577,0.616,578,0.728,579,0.728,580,1.349,581,0.742,582,0.742,583,1.112,584,0.742,585,0.742,586,0.728,587,0.742,588,1.615,589,0.742,590,1.746,591,0.742,592,0.742,593,0.742,594,0.742,595,0.742,596,1.349,597,0.742,598,0.742,599,0.742,600,0.742,601,0.742,602,0.728,603,0.742,604,0.742,605,0.742,606,0.742,607,0.742,608,0.742,609,0.742,610,0.742,611,0.742,612,0.742,613,0.742,614,0.728,615,0.742,616,1.326,617,0.742,618,0.742,619,0.742,620,0.742,621,0.742,622,1.112,623,0.742,624,0.728,625,0.742,626,0.742,627,0.742,628,0.742,629,0.742,630,0.728,631,0.728,632,0.742,633,0.742,634,0.742,635,0.728,636,0.728,637,0.742,638,0.742,639,0.728,640,0.742,641,0.742,642,0.742,643,0.742,644,0.728,645,0.742,646,0.728,647,0.742,648,0.742,649,0.728,650,0.742,651,0.742]],["title/dependencies.html",[2205,4.014,2206,5.103]],["body/dependencies.html",[29,0.007,57,1.249,58,1.225,61,1.298,191,0.006,192,0.006,193,0.006,2206,6.795,2207,7.646,2208,7.646]],["title/index.html",[7,0.046,2209,3.567,2210,3.567]],["body/index.html",[29,0.007,30,0.536,57,1.571,58,1.084,59,2.181,77,4.6,100,4.6,191,0.005,192,0.006,193,0.005,239,0.834,343,1.547,476,1.944,532,1.647,663,5.802,734,3.315,743,6.601,746,4.217,817,4.204,914,4.5,1025,6.601,1026,6.211,1087,5.513,1849,6.009,2209,6.009,2210,6.009,2211,8.097,2212,6.763,2213,6.763,2214,6.763,2215,9.184,2216,8.097,2217,6.763,2218,6.763,2219,6.763,2220,9.323,2221,9.323,2222,9.323,2223,6.763,2224,6.763,2225,8.097,2226,6.763,2227,6.763,2228,6.763,2229,8.097,2230,6.763,2231,6.763,2232,6.763,2233,6.763,2234,8.097,2235,6.763,2236,6.763,2237,6.763,2238,6.763,2239,6.763,2240,6.763,2241,6.763,2242,6.763,2243,6.763,2244,8.097,2245,6.763,2246,6.763,2247,8.097,2248,8.097,2249,6.763,2250,6.763,2251,6.763,2252,6.763,2253,6.763]],["title/modules.html",[2254,5.767]],["body/modules.html",[29,0.006,191,0.006,192,0.006,193,0.006,2254,6.84]],["title/overview.html",[2255,5.767]],["body/overview.html",[2,1.457,29,0.006,191,0.006,192,0.006,193,0.006,234,0.721,2255,6.81,2256,7.664,2257,7.664]],["title/miscellaneous/typealiases.html",[2258,3.567,2259,5.743]],["body/miscellaneous/typealiases.html",[6,3.811,7,0.053,12,0.966,25,0.44,29,0.007,31,0.155,33,0.254,45,0.805,64,5.077,66,6.7,81,1.357,154,5.478,165,2.691,184,0.495,191,0.003,192,0.005,193,0.003,195,4.154,197,4.154,198,3.811,199,3.18,235,3.555,236,3.555,242,3.555,251,4.858,252,4.858,316,0.905,317,1.089,321,1.823,322,1.956,323,1.489,324,1.696,325,1.489,326,1.909,327,1.089,328,1.909,329,1.489,330,1.489,331,1.489,333,1.489,334,1.089,335,1.089,336,1.089,337,1.089,338,1.089,339,1.435,340,1.489,341,1.089,342,1.089,343,1.069,344,1.089,345,1.089,355,1.489,356,1.069,357,1.089,358,1.489,359,1.089,360,1.069,361,1.489,362,1.089,363,1.05,368,1.462,369,1.069,370,1.089,371,1.089,372,1.069,373,1.089,374,1.069,375,1.489,376,1.089,377,1.089,378,1.089,379,1.089,397,1.462,406,1.089,407,1.089,408,1.089,409,1.089,410,1.489,411,1.089,412,1.462,413,1.089,414,1.089,415,1.089,416,1.089,417,1.089,418,1.089,419,1.089,420,1.089,421,1.089,422,1.089,423,1.089,424,1.089,425,1.089,426,1.089,427,1.089,428,1.089,429,1.489,430,1.089,431,1.089,432,1.089,433,1.089,434,1.089,435,1.089,436,1.089,440,1.489,441,1.089,442,1.089,443,1.089,444,1.089,461,1.462,463,1.489,464,1.089,465,1.089,466,1.089,467,1.489,474,1.069,475,1.435,478,1.609,479,1.96,480,1.089,481,1.089,482,1.089,483,1.089,484,1.089,485,1.089,486,1.089,487,1.089,488,1.089,489,1.089,490,1.089,491,1.089,492,1.089,493,1.089,494,1.089,495,1.089,496,1.696,497,1.696,504,1.696,505,1.696,512,1.126,522,1.489,523,1.489,534,1.462,535,1.462,536,1.696,537,1.069,538,1.069,539,1.069,540,1.696,541,1.089,542,1.089,543,1.089,544,1.383,545,1.489,546,1.069,547,1.069,557,1.489,558,1.069,559,1.069,567,0.577,570,1.562,580,1.696,596,1.696,653,3.034,654,3.35,657,4.578,664,2.906,665,3.35,666,3.18,669,3.18,671,4.578,714,3.28,716,3.361,758,3.034,910,2.793,927,3.817,980,3.811,981,3.811,986,5.208,1050,3.811,1051,4.154,1065,5.677,1066,3.811,1099,4.578,1100,5.208,1103,4.154,1125,3.35,1134,4.578,1222,3.034,1230,3.555,1343,4.154,1369,5.677,1383,4.154,1384,4.154,2069,4.154,2094,5.677,2258,4.154,2260,4.675,2261,9.905,2262,6.389,2263,6.389,2264,4.675,2265,4.675,2266,6.389,2267,4.675,2268,4.675,2269,4.675,2270,6.389,2271,4.675,2272,4.675,2273,6.389,2274,6.389,2275,4.675,2276,6.389,2277,4.675,2278,6.389,2279,4.675,2280,4.675,2281,4.675,2282,4.675,2283,4.675,2284,4.675,2285,4.675,2286,4.675,2287,4.675,2288,4.675,2289,4.675]]],"invertedIndex":[["",{"_index":29,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"interfaces/AlexaSpeechComponentProps.html":{},"classes/ApplicationFactory.html":{},"interfaces/AttributeType.html":{},"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/BaseSkillConfig.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ContextFactory.html":{},"interfaces/CreativeWork.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/DeviceAPIClient.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/ErrorHandlerBuilder.html":{},"interfaces/Factory.html":{},"classes/FallbackIntentFactory.html":{},"interfaces/FlashBriefingContent.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"classes/HandlerFactory-1.html":{},"interfaces/HandlerHelpers.html":{},"classes/HandlerInputFactory.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"interfaces/InitialState.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentHandlerFactory.html":{},"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestFactory-1.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/ListManagementAPIClient.html":{},"interfaces/LocalizedAttribute.html":{},"classes/LocalizedAttributesFactory.html":{},"interfaces/MergeObjectType.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"classes/MockAttributeManager.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"interfaces/ProgressiveResponse.html":{},"interfaces/Props.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/RelevantAudience.html":{},"classes/ReminderAPIClient.html":{},"classes/RequestEnvelopeFactory.html":{},"classes/RequestFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"classes/RequestHandlerFactory-1.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"classes/RouteMatcher.html":{},"interfaces/Router.html":{},"interfaces/S3SkillConfig.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{},"classes/SettingAPIClient.html":{},"interfaces/Situation.html":{},"interfaces/SituationState.html":{},"interfaces/Skill.html":{},"interfaces/SkillConstants.html":{},"interfaces/SkillHandlers.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{},"interfaces/SkillState.html":{},"interfaces/Soccer.html":{},"interfaces/SpeechScriptResponse.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"classes/StateManager.html":{},"classes/StateManager-1.html":{},"classes/SystemFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"interfaces/Thing.html":{},"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{},"interfaces/TrashCollectionAlert.html":{},"classes/UserFactory.html":{},"classes/UserProfileAPIClient.html":{},"interfaces/WeatherAlert.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":141,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-7.html":{}}}],["09",{"_index":400,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["1",{"_index":194,"title":{"classes/APIClient-1.html":{},"classes/ContentBuilder-1.html":{},"classes/HandlerBuilder-1.html":{},"classes/HandlerFactory-1.html":{},"classes/LaunchRequestFactory-1.html":{},"classes/ParameterFactory-1.html":{},"interfaces/Payload-1.html":{},"interfaces/PayloadBuilder-1.html":{},"classes/RequestHandlerFactory-1.html":{},"interfaces/ResponseContent-1.html":{},"classes/StateManager-1.html":{}},"body":{"classes/ProductListResponseContentBuilder.html":{}}}],["1.0",{"_index":1871,"title":{},"body":{"classes/RequestEnvelopeFactory.html":{}}}],["1.9.0",{"_index":2208,"title":{},"body":{"dependencies.html":{}}}],["11",{"_index":389,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["12",{"_index":394,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["14t23:32:00.463z",{"_index":395,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["16t03:00:00.463z",{"_index":401,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["19",{"_index":1916,"title":{},"body":{"classes/RequestFactory.html":{}}}],["2",{"_index":1464,"title":{"classes/ParameterFactory-2.html":{},"interfaces/Payload-2.html":{},"interfaces/PayloadBuilder-2.html":{}},"body":{}}],["2018",{"_index":388,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["20180916t030000z",{"_index":399,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["20t19:16:31z",{"_index":390,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["3",{"_index":1485,"title":{"classes/ParameterFactory-3.html":{},"interfaces/Payload-3.html":{},"interfaces/PayloadBuilder-3.html":{}},"body":{}}],["4",{"_index":1507,"title":{"classes/ParameterFactory-4.html":{},"interfaces/Payload-4.html":{},"interfaces/PayloadBuilder-4.html":{}},"body":{}}],["5",{"_index":1527,"title":{"classes/ParameterFactory-5.html":{},"interfaces/Payload-5.html":{},"interfaces/PayloadBuilder-5.html":{}},"body":{}}],["500",{"_index":1746,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["6",{"_index":1542,"title":{"classes/ParameterFactory-6.html":{},"interfaces/Payload-6.html":{},"interfaces/PayloadBuilder-6.html":{}},"body":{}}],["60",{"_index":2256,"title":{},"body":{"overview.html":{}}}],["7",{"_index":1553,"title":{"classes/ParameterFactory-7.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder-7.html":{}},"body":{}}],["8",{"_index":1623,"title":{"interfaces/PayloadBuilder-8.html":{}},"body":{}}],["81",{"_index":2257,"title":{},"body":{"overview.html":{}}}],["__state",{"_index":1234,"title":{},"body":{"interfaces/InitialState.html":{},"interfaces/SkillState.html":{},"classes/StateManager-1.html":{}}}],["abstract",{"_index":219,"title":{},"body":{"classes/APIClient-1.html":{}}}],["acccesstoken",{"_index":2148,"title":{},"body":{"classes/SystemFactory.html":{}}}],["accept",{"_index":86,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ISPProductClient.html":{}}}],["accepted",{"_index":814,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{}}}],["access",{"_index":1725,"title":{},"body":{"classes/ProactiveClient.html":{},"classes/SystemFactory.html":{}}}],["access_token",{"_index":552,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["accessibility",{"_index":116,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["accesstoken",{"_index":1661,"title":{},"body":{"classes/ProactiveClient.html":{},"classes/SystemFactory.html":{}}}],["account",{"_index":869,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["activated",{"_index":498,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["activated.eventname",{"_index":496,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["activated.payload",{"_index":497,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["activated.payloadbuilder",{"_index":580,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["active",{"_index":1383,"title":{},"body":{"classes/ListManagementAPIClient.html":{},"miscellaneous/typealiases.html":{}}}],["adapter",{"_index":1157,"title":{},"body":{"classes/HandlerInputFactory.html":{}}}],["add",{"_index":306,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["adddirective(getbuyproductdirective(product.productid",{"_index":788,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["adderrorhandlers",{"_index":2041,"title":{},"body":{"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{}}}],["adderrorhandlers(...errorhandlers",{"_index":2046,"title":{},"body":{"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{}}}],["adderrorhandlers(sentrydefaulterrorhandler",{"_index":1028,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["addgarbagetype",{"_index":1562,"title":{},"body":{"classes/ParameterFactory-7.html":{},"interfaces/PayloadBuilder-1.html":{}}}],["addgarbagetype(garbagetype",{"_index":584,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["additional",{"_index":1021,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["addlocale",{"_index":2160,"title":{},"body":{"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{}}}],["addlocale(locale",{"_index":2164,"title":{},"body":{"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{}}}],["addlocalestrings",{"_index":2161,"title":{},"body":{"interfaces/TranslationBuilder.html":{}}}],["addlocalestrings(locale",{"_index":2166,"title":{},"body":{"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{}}}],["addrequesthandlers",{"_index":2042,"title":{},"body":{"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{}}}],["addrequesthandlers(...requesthandlers",{"_index":2048,"title":{},"body":{"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{}}}],["addrequestinterceptors",{"_index":2043,"title":{},"body":{"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{}}}],["addrequestinterceptors(...requestinterceptors",{"_index":2050,"title":{},"body":{"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{}}}],["addrequestinterceptors(seterrortrackerinterceptor",{"_index":1029,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["addresponseinterceptors",{"_index":2044,"title":{},"body":{"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{}}}],["addresponseinterceptors(...responseinterceptors",{"_index":2056,"title":{},"body":{"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{}}}],["addresponseinterceptors(responseinterceptors",{"_index":2052,"title":{},"body":{"interfaces/SkillHandlersBuilder.html":{}}}],["addroutes",{"_index":1927,"title":{},"body":{"classes/RequestHandlerFactory-1.html":{}}}],["addroutes(routers",{"_index":1930,"title":{},"body":{"classes/RequestHandlerFactory-1.html":{}}}],["again",{"_index":775,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"interfaces/ErrorHandlerBuilder.html":{},"classes/ISPContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/ResponseContent-1.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["air",{"_index":342,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["album",{"_index":336,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["alert",{"_index":500,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-7.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["alert.collectiondayofweek",{"_index":1566,"title":{},"body":{"classes/ParameterFactory-7.html":{}}}],["alert.garbagetypes",{"_index":1561,"title":{},"body":{"classes/ParameterFactory-7.html":{}}}],["alert.garbagetypes.length",{"_index":1563,"title":{},"body":{"classes/ParameterFactory-7.html":{}}}],["alert.garbagetypes.push(garbagetype",{"_index":1564,"title":{},"body":{"classes/ParameterFactory-7.html":{}}}],["alertid",{"_index":1834,"title":{},"body":{"classes/ReminderAPIClient.html":{}}}],["alertitem",{"_index":1559,"title":{},"body":{"classes/ParameterFactory-7.html":{}}}],["alerttype",{"_index":447,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["alexa",{"_index":874,"title":{},"body":{"classes/ContentBuilder-1.html":{},"interfaces/ErrorHandlerBuilder.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["alexa.skillbuilders.standard",{"_index":1027,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["alexa::proactive_events",{"_index":555,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["alexaskillevent/.test(requestenvelope.request.type",{"_index":1407,"title":{},"body":{"interfaces/MergeObjectType.html":{}}}],["alexaspeechcomponent",{"_index":251,"title":{},"body":{"interfaces/AlexaSpeechComponentProps.html":{},"interfaces/ProgressiveResponse.html":{},"interfaces/SpeechScriptResponse.html":{},"miscellaneous/typealiases.html":{}}}],["alexaspeechcomponentfunction",{"_index":252,"title":{},"body":{"interfaces/AlexaSpeechComponentProps.html":{},"interfaces/ProgressiveResponse.html":{},"interfaces/SpeechScriptResponse.html":{},"miscellaneous/typealiases.html":{}}}],["alexaspeechcomponentprops",{"_index":233,"title":{"interfaces/AlexaSpeechComponentProps.html":{}},"body":{"interfaces/AlexaSpeechComponentProps.html":{},"interfaces/ProgressiveResponse.html":{},"interfaces/SpeechScriptResponse.html":{}}}],["aliases",{"_index":2260,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":129,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["already",{"_index":891,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["alternative",{"_index":2237,"title":{},"body":{"index.html":{}}}],["always",{"_index":1982,"title":{},"body":{"classes/RouteMatcher.html":{}}}],["amazon.mediacontent.available",{"_index":525,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-2.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["amazon.messagealert.activated",{"_index":511,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-1.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["amazon.occasion.updated",{"_index":518,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["amazon.orderstatus.updated",{"_index":515,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-5.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["amazon.socialgameinvite.available",{"_index":529,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-4.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["amazon.sportsevent.updated",{"_index":506,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-3.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["amazon.trashcollectionalert.activated",{"_index":499,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-7.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["amazon.weatheralert.activated",{"_index":502,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-6.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["ams.app",{"_index":1859,"title":{},"body":{"classes/RequestEnvelopeFactory.html":{},"classes/SystemFactory.html":{}}}],["amzn1.ask.account",{"_index":1869,"title":{},"body":{"classes/RequestEnvelopeFactory.html":{},"classes/SystemFactory.html":{}}}],["amzn1.echo",{"_index":1858,"title":{},"body":{"classes/RequestEnvelopeFactory.html":{},"classes/RequestFactory.html":{},"classes/SystemFactory.html":{}}}],["api",{"_index":142,"title":{},"body":{"classes/APIClient.html":{},"interfaces/FlashBriefingContent.html":{},"classes/ISPProductClient.html":{},"classes/SystemFactory.html":{}}}],["apiaccesstoken",{"_index":1173,"title":{},"body":{"classes/HandlerInputFactory.html":{},"classes/RequestEnvelopeFactory.html":{}}}],["apiclient",{"_index":1,"title":{"classes/APIClient.html":{},"classes/APIClient-1.html":{}},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/HandlerInputFactory.html":{},"classes/ISPProductClient.html":{}}}],["apiclient:10",{"_index":1204,"title":{},"body":{"classes/ISPProductClient.html":{}}}],["apiclient:11",{"_index":1202,"title":{},"body":{"classes/ISPProductClient.html":{}}}],["apiclient:12",{"_index":1203,"title":{},"body":{"classes/ISPProductClient.html":{}}}],["apiclient:19",{"_index":1227,"title":{},"body":{"classes/ISPProductClient.html":{}}}],["apiclient:24",{"_index":1224,"title":{},"body":{"classes/ISPProductClient.html":{}}}],["apiclient:36",{"_index":1225,"title":{},"body":{"classes/ISPProductClient.html":{}}}],["apiclient:43",{"_index":1228,"title":{},"body":{"classes/ISPProductClient.html":{}}}],["apiclient:46",{"_index":1226,"title":{},"body":{"classes/ISPProductClient.html":{}}}],["apiclient:9",{"_index":1205,"title":{},"body":{"classes/ISPProductClient.html":{}}}],["apiendpoint",{"_index":544,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/HandlerInputFactory.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"classes/RequestEnvelopeFactory.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"classes/SystemFactory.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["apiendpont",{"_index":549,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["apiregion",{"_index":545,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["apiurl",{"_index":536,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["app",{"_index":258,"title":{},"body":{"classes/ApplicationFactory.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{},"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{}}}],["application",{"_index":261,"title":{},"body":{"classes/ApplicationFactory.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"classes/RequestEnvelopeFactory.html":{},"interfaces/ResponseContent-1.html":{},"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{},"classes/SystemFactory.html":{}}}],["application/json",{"_index":85,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ISPProductClient.html":{},"classes/ProactiveClient.html":{}}}],["application/x",{"_index":1715,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["applicationfactory",{"_index":255,"title":{"classes/ApplicationFactory.html":{}},"body":{"classes/ApplicationFactory.html":{},"classes/RequestEnvelopeFactory.html":{}}}],["applicationfactory()).putid(applicationid",{"_index":1876,"title":{},"body":{"classes/RequestEnvelopeFactory.html":{}}}],["applicationid",{"_index":262,"title":{},"body":{"classes/ApplicationFactory.html":{},"classes/RequestEnvelopeFactory.html":{},"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{},"classes/SystemFactory.html":{}}}],["appointment",{"_index":379,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["appointment_request",{"_index":378,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["artskydj",{"_index":2252,"title":{},"body":{"index.html":{}}}],["ask",{"_index":57,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"interfaces/AlexaSpeechComponentProps.html":{},"classes/ApplicationFactory.html":{},"interfaces/AttributeType.html":{},"interfaces/BaseSkillConfig.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ContextFactory.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/DeviceAPIClient.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/ErrorHandlerBuilder.html":{},"classes/FallbackIntentFactory.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"interfaces/HandlerHelpers.html":{},"classes/HandlerInputFactory.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"interfaces/InitialState.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/ListManagementAPIClient.html":{},"interfaces/MergeObjectType.html":{},"classes/MockAttributeManager.html":{},"classes/ProductListResponseContentBuilder.html":{},"interfaces/ProgressiveResponse.html":{},"classes/ReminderAPIClient.html":{},"classes/RequestEnvelopeFactory.html":{},"classes/RequestFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"classes/RequestHandlerFactory-1.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"classes/RouteMatcher.html":{},"interfaces/Router.html":{},"interfaces/S3SkillConfig.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{},"classes/SettingAPIClient.html":{},"interfaces/Situation.html":{},"interfaces/SituationState.html":{},"interfaces/SkillConstants.html":{},"interfaces/SkillHandlers.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{},"interfaces/SkillState.html":{},"interfaces/SpeechScriptResponse.html":{},"classes/StateManager.html":{},"classes/StateManager-1.html":{},"classes/SystemFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"classes/UserFactory.html":{},"classes/UserProfileAPIClient.html":{},"dependencies.html":{},"index.html":{}}}],["async",{"_index":17,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/DeviceAPIClient.html":{},"classes/ISPProductClient.html":{},"classes/ListManagementAPIClient.html":{},"classes/ProactiveClient.html":{},"classes/ReminderAPIClient.html":{},"classes/RequestHandlerFactory-1.html":{},"classes/RouteMatcher.html":{},"classes/SettingAPIClient.html":{},"interfaces/SkillConstants.html":{},"classes/UserProfileAPIClient.html":{}}}],["att",{"_index":2096,"title":{},"body":{"classes/StateManager.html":{}}}],["att.state",{"_index":2097,"title":{},"body":{"classes/StateManager.html":{}}}],["attribute",{"_index":289,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["attributemanager",{"_index":110,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{},"interfaces/InitialState.html":{},"interfaces/SkillState.html":{},"classes/StateManager.html":{},"classes/StateManager-1.html":{}}}],["attributemanager.getsessionattributes",{"_index":1241,"title":{},"body":{"interfaces/InitialState.html":{},"interfaces/SkillState.html":{},"classes/StateManager.html":{},"classes/StateManager-1.html":{}}}],["attributemanager.setsessionattributes",{"_index":2095,"title":{},"body":{"classes/StateManager.html":{}}}],["attributemanager.setsessionattributes(attributes",{"_index":1242,"title":{},"body":{"interfaces/InitialState.html":{},"interfaces/SkillState.html":{},"classes/StateManager-1.html":{}}}],["attributes",{"_index":125,"title":{},"body":{"classes/APIClient.html":{},"interfaces/AttributeType.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/ISPProductClient.html":{},"interfaces/InitialState.html":{},"classes/MockAttributeManager.html":{},"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{},"interfaces/SkillState.html":{},"classes/StateManager-1.html":{},"classes/SystemFactory.html":{}}}],["attributes[statekey",{"_index":1247,"title":{},"body":{"interfaces/InitialState.html":{},"interfaces/SkillState.html":{},"classes/StateManager-1.html":{}}}],["attributesmanager",{"_index":56,"title":{},"body":{"classes/APIClient.html":{},"interfaces/AlexaSpeechComponentProps.html":{},"interfaces/AttributeType.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/HandlerInputFactory.html":{},"classes/ISPProductClient.html":{},"interfaces/InitialState.html":{},"classes/MockAttributeManager.html":{},"interfaces/ProgressiveResponse.html":{},"interfaces/SkillConstants.html":{},"interfaces/SkillState.html":{},"interfaces/SpeechScriptResponse.html":{},"classes/StateManager.html":{},"classes/StateManager-1.html":{}}}],["attributesmanager.getrequestattributes",{"_index":830,"title":{},"body":{"classes/ConstantsInterceptorFactory.html":{},"interfaces/SkillConstants.html":{}}}],["attributesmanager.setrequestattributes",{"_index":831,"title":{},"body":{"classes/ConstantsInterceptorFactory.html":{},"interfaces/SkillConstants.html":{}}}],["attributesmanagerfactory",{"_index":1160,"title":{},"body":{"classes/HandlerInputFactory.html":{}}}],["attributesmanagerfactory.init",{"_index":1176,"title":{},"body":{"classes/HandlerInputFactory.html":{}}}],["attributetype",{"_index":270,"title":{"interfaces/AttributeType.html":{}},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["atts",{"_index":145,"title":{},"body":{"classes/APIClient.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/ISPProductClient.html":{},"interfaces/SkillConstants.html":{}}}],["au",{"_index":323,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["audiencepayload",{"_index":315,"title":{"interfaces/AudiencePayload.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["audiencetype",{"_index":557,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["authorization",{"_index":88,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ISPProductClient.html":{},"classes/ProactiveClient.html":{}}}],["authorizationvalue",{"_index":1175,"title":{},"body":{"classes/HandlerInputFactory.html":{}}}],["authresponse",{"_index":551,"title":{"interfaces/AuthResponse.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["authresult",{"_index":1737,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["authresult.access_token",{"_index":1739,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["auto",{"_index":1952,"title":{},"body":{"classes/RequestHandlerFactory-1.html":{}}}],["availability",{"_index":348,"title":{"interfaces/Availability.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-2.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["availability.method",{"_index":1478,"title":{},"body":{"classes/ParameterFactory-2.html":{}}}],["availability.provider",{"_index":1481,"title":{},"body":{"classes/ParameterFactory-2.html":{}}}],["availability.starttime",{"_index":1476,"title":{},"body":{"classes/ParameterFactory-2.html":{}}}],["available",{"_index":524,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["available.eventname",{"_index":522,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["available.payload",{"_index":523,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["avaliable",{"_index":132,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["await",{"_index":104,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/ISPProductClient.html":{},"classes/ListManagementAPIClient.html":{},"classes/ProactiveClient.html":{},"classes/RequestHandlerFactory-1.html":{},"classes/RouteMatcher.html":{}}}],["awayteamstatistic",{"_index":456,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-3.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["awayteamstatistic.score",{"_index":1502,"title":{},"body":{"classes/ParameterFactory-3.html":{}}}],["awayteamstatistic.team.name",{"_index":1503,"title":{},"body":{"classes/ParameterFactory-3.html":{}}}],["aws",{"_index":951,"title":{},"body":{"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{}}}],["axios",{"_index":52,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ISPProductClient.html":{},"classes/ProactiveClient.html":{}}}],["axios(param",{"_index":105,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ISPProductClient.html":{},"classes/ProactiveClient.html":{}}}],["axiosrequestconfig",{"_index":42,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ISPProductClient.html":{},"classes/ProactiveClient.html":{}}}],["base",{"_index":708,"title":{},"body":{"classes/BuyContentBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/HandlerFactory-1.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentHandlerFactory.html":{},"classes/LaunchRequestFactory-1.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{}}}],["baseskillconfig",{"_index":652,"title":{"interfaces/BaseSkillConfig.html":{}},"body":{"interfaces/BaseSkillConfig.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/S3SkillConfig.html":{},"interfaces/SkillHandlers.html":{}}}],["basic",{"_index":994,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["bearer",{"_index":89,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/ISPProductClient.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["before",{"_index":1232,"title":{},"body":{"interfaces/InitialState.html":{},"interfaces/SkillState.html":{},"classes/StateManager-1.html":{}}}],["beforeeach",{"_index":298,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["beta",{"_index":2174,"title":{},"body":{"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{}}}],["body",{"_index":216,"title":{},"body":{"classes/APIClient-1.html":{},"classes/ProactiveClient.html":{}}}],["book",{"_index":334,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["bookingtime",{"_index":387,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["boolean",{"_index":25,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/BaseSkillConfig.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"interfaces/CreativeWork.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/Factory.html":{},"classes/FallbackIntentFactory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/HandlerBuilder.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"interfaces/HandlerHelpers.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"interfaces/InitialState.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MergeObjectType.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"interfaces/Props.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"classes/RouteMatcher.html":{},"interfaces/Router.html":{},"interfaces/S3SkillConfig.html":{},"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{},"interfaces/Situation.html":{},"interfaces/SituationState.html":{},"interfaces/Skill.html":{},"interfaces/SkillHandlers.html":{},"interfaces/SkillState.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"classes/StateManager.html":{},"classes/StateManager-1.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["bootstraptest",{"_index":2245,"title":{},"body":{"index.html":{}}}],["bottles",{"_index":413,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["briefing",{"_index":1057,"title":{},"body":{"interfaces/FlashBriefingContent.html":{}}}],["broker",{"_index":391,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["bucketname",{"_index":667,"title":{},"body":{"interfaces/BaseSkillConfig.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/S3SkillConfig.html":{},"interfaces/SkillHandlers.html":{}}}],["bucketpathprefix",{"_index":668,"title":{},"body":{"interfaces/BaseSkillConfig.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/S3SkillConfig.html":{},"interfaces/SkillHandlers.html":{}}}],["builder",{"_index":1087,"title":{},"body":{"classes/HandlerBuilder.html":{},"classes/HandlerFactory.html":{},"index.html":{}}}],["bulky",{"_index":414,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["burnable",{"_index":415,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["buy",{"_index":758,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"interfaces/ResponseContent-1.html":{},"miscellaneous/typealiases.html":{}}}],["buycontentbuilder",{"_index":677,"title":{"classes/BuyContentBuilder.html":{}},"body":{"classes/BuyContentBuilder.html":{}}}],["buyintent",{"_index":755,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["buyintenthandler",{"_index":753,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["buyintenthandlerbuilder",{"_index":711,"title":{"classes/BuyIntentHandlerBuilder.html":{}},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["buyresponsecontentbuilder",{"_index":789,"title":{"classes/BuyResponseContentBuilder.html":{}},"body":{"classes/BuyResponseContentBuilder.html":{}}}],["bye",{"_index":2072,"title":{},"body":{"classes/StateManager.html":{}}}],["ca",{"_index":324,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["cache.productid",{"_index":156,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["cachedproducts",{"_index":147,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["cachedproducts.find(cache",{"_index":155,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["cachedproducts.length",{"_index":149,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["cacheusage",{"_index":111,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["can't",{"_index":881,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["cancel",{"_index":2285,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["canceled",{"_index":370,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["canhandle",{"_index":714,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"interfaces/ErrorHandlerBuilder.html":{},"classes/FallbackIntentFactory.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"classes/IntentHandlerBuilder.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"interfaces/MergeObjectType.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"classes/RequestHandlerFactory-1.html":{},"classes/RouteMatcher.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"miscellaneous/typealiases.html":{}}}],["canhandle(handlerinput",{"_index":2080,"title":{},"body":{"classes/StateManager.html":{}}}],["canhandlefilter",{"_index":715,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"classes/HandlerFactory.html":{},"classes/IntentHandlerBuilder.html":{},"classes/LaunchRequestrBuilder.html":{}}}],["canhandleresponse",{"_index":1099,"title":{},"body":{"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/IntentHandlerBuilder.html":{},"classes/LaunchRequestrBuilder.html":{},"miscellaneous/typealiases.html":{}}}],["cans",{"_index":416,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["case",{"_index":1688,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["catch",{"_index":778,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ProactiveClient.html":{},"interfaces/ResponseContent-1.html":{}}}],["cd",{"_index":2243,"title":{},"body":{"index.html":{}}}],["challenge",{"_index":359,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["check",{"_index":131,"title":{},"body":{"classes/APIClient.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"interfaces/ResponseContent-1.html":{},"classes/RouteMatcher.html":{}}}],["class",{"_index":0,"title":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ApplicationFactory.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"interfaces/Class.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ContextFactory.html":{},"classes/DBClient.html":{},"classes/DeviceAPIClient.html":{},"classes/FallbackIntentFactory.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"classes/HandlerFactory.html":{},"classes/HandlerFactory-1.html":{},"classes/HandlerInputFactory.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentHandlerFactory.html":{},"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestFactory-1.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/ListManagementAPIClient.html":{},"classes/LocalizedAttributesFactory.html":{},"classes/MockAttributeManager.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"classes/ProactiveClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"classes/ReminderAPIClient.html":{},"classes/RequestEnvelopeFactory.html":{},"classes/RequestFactory.html":{},"classes/RequestHandlerFactory.html":{},"classes/RequestHandlerFactory-1.html":{},"classes/RouteMatcher.html":{},"classes/SentryErrorHandlerFactory.html":{},"classes/SessionFactory.html":{},"classes/SettingAPIClient.html":{},"classes/SkillHandlersFactory.html":{},"classes/StateManager.html":{},"classes/StateManager-1.html":{},"classes/SystemFactory.html":{},"classes/TranslationFactory.html":{},"classes/UserFactory.html":{},"classes/UserProfileAPIClient.html":{}},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ApplicationFactory.html":{},"interfaces/AttributeType.html":{},"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ContextFactory.html":{},"interfaces/CreativeWork.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/DeviceAPIClient.html":{},"interfaces/ErrorHandlerBuilder.html":{},"interfaces/Factory.html":{},"classes/FallbackIntentFactory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"classes/HandlerFactory.html":{},"classes/HandlerFactory-1.html":{},"classes/HandlerInputFactory.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"interfaces/InitialState.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentHandlerFactory.html":{},"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestFactory-1.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/ListManagementAPIClient.html":{},"interfaces/LocalizedAttribute.html":{},"classes/LocalizedAttributesFactory.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"classes/MockAttributeManager.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"interfaces/Props.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/RelevantAudience.html":{},"classes/ReminderAPIClient.html":{},"classes/RequestEnvelopeFactory.html":{},"classes/RequestFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"classes/RequestHandlerFactory-1.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"classes/RouteMatcher.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{},"classes/SettingAPIClient.html":{},"interfaces/Skill.html":{},"interfaces/SkillConstants.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{},"interfaces/SkillState.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"classes/StateManager.html":{},"classes/StateManager-1.html":{},"classes/SystemFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"interfaces/Thing.html":{},"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{},"interfaces/TrashCollectionAlert.html":{},"classes/UserFactory.html":{},"classes/UserProfileAPIClient.html":{},"interfaces/WeatherAlert.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ApplicationFactory.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ContextFactory.html":{},"classes/DBClient.html":{},"classes/DeviceAPIClient.html":{},"classes/FallbackIntentFactory.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"classes/HandlerFactory.html":{},"classes/HandlerFactory-1.html":{},"classes/HandlerInputFactory.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentHandlerFactory.html":{},"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestFactory-1.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/ListManagementAPIClient.html":{},"classes/LocalizedAttributesFactory.html":{},"classes/MockAttributeManager.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"classes/ProactiveClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"classes/ReminderAPIClient.html":{},"classes/RequestEnvelopeFactory.html":{},"classes/RequestFactory.html":{},"classes/RequestHandlerFactory.html":{},"classes/RequestHandlerFactory-1.html":{},"classes/RouteMatcher.html":{},"classes/SentryErrorHandlerFactory.html":{},"classes/SessionFactory.html":{},"classes/SettingAPIClient.html":{},"classes/SkillHandlersFactory.html":{},"classes/StateManager.html":{},"classes/StateManager-1.html":{},"classes/SystemFactory.html":{},"classes/TranslationFactory.html":{},"classes/UserFactory.html":{},"classes/UserProfileAPIClient.html":{},"overview.html":{}}}],["client",{"_index":532,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"classes/BuyIntentHandlerBuilder.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/DeviceAPIClient.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/HandlerInputFactory.html":{},"classes/ListManagementAPIClient.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"classes/ReminderAPIClient.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"classes/SettingAPIClient.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"classes/UserProfileAPIClient.html":{},"interfaces/WeatherAlert.html":{},"index.html":{}}}],["client.apiendpoint",{"_index":1649,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["client.audiencepayload",{"_index":1677,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["client.audiencetype",{"_index":1676,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["client.authresponse",{"_index":1696,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["client.clientconfig",{"_index":1647,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["client.clientid",{"_index":1651,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["client.clientsecret",{"_index":1653,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["client.devapiurl",{"_index":1693,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["client.listproducts",{"_index":766,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["client.relevantaudience",{"_index":1733,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["client.requstbody",{"_index":1657,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["client_id=${this.clientid",{"_index":1721,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["client_secret=${this.clientsecret",{"_index":1722,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["clientconfig",{"_index":548,"title":{"interfaces/ClientConfig.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["clientid",{"_index":534,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["clientsecret",{"_index":535,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["clone",{"_index":2240,"title":{},"body":{"index.html":{}}}],["clonehandler",{"_index":1402,"title":{},"body":{"interfaces/MergeObjectType.html":{}}}],["clonetarget",{"_index":1403,"title":{},"body":{"interfaces/MergeObjectType.html":{}}}],["clothing",{"_index":417,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["collectiondayofweek",{"_index":439,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-7.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["completed",{"_index":1384,"title":{},"body":{"classes/ListManagementAPIClient.html":{},"miscellaneous/typealiases.html":{}}}],["compostable",{"_index":418,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["condition",{"_index":176,"title":{},"body":{"classes/APIClient.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"classes/ISPProductClient.html":{},"classes/IntentHandlerBuilder.html":{},"classes/LaunchRequestrBuilder.html":{}}}],["condition.productid",{"_index":182,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["condition.productname",{"_index":180,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["condition.userinputno",{"_index":181,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["conditions",{"_index":178,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["conf",{"_index":223,"title":{},"body":{"classes/APIClient-1.html":{}}}],["conf.data",{"_index":225,"title":{},"body":{"classes/APIClient-1.html":{}}}],["config",{"_index":939,"title":{},"body":{"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/ProactiveClient.html":{}}}],["config.apiendpont",{"_index":1685,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["config.apiregion",{"_index":1687,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["config.client",{"_index":954,"title":{},"body":{"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{}}}],["config.clientid",{"_index":1702,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["config.clientsecret",{"_index":1704,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["config.isdebug",{"_index":955,"title":{},"body":{"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{}}}],["config.isproduction",{"_index":1691,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["config.primarykey",{"_index":957,"title":{},"body":{"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{}}}],["confirmationstate",{"_index":380,"title":{"interfaces/ConfirmationState.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["confirmationstate.confirmationstatus",{"_index":1431,"title":{},"body":{"classes/ParameterFactory.html":{}}}],["confirmationstatus",{"_index":368,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["confirmed",{"_index":369,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["connection",{"_index":779,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["console.log('[get",{"_index":99,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["console.log('[request",{"_index":227,"title":{},"body":{"classes/APIClient-1.html":{}}}],["console.log('[response",{"_index":228,"title":{},"body":{"classes/APIClient-1.html":{}}}],["console.log('dbclient.get",{"_index":960,"title":{},"body":{"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{}}}],["console.log('dbclient.put",{"_index":963,"title":{},"body":{"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{}}}],["const",{"_index":76,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"interfaces/AttributeType.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"interfaces/ErrorHandlerBuilder.html":{},"classes/FallbackIntentFactory.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerFactory.html":{},"classes/HandlerInputFactory.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"interfaces/InitialState.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LocalizedAttributesFactory.html":{},"interfaces/MergeObjectType.html":{},"classes/MockAttributeManager.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"classes/ProactiveClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RequestEnvelopeFactory.html":{},"classes/RequestFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"classes/RequestHandlerFactory-1.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"classes/RouteMatcher.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/SkillConstants.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{},"interfaces/SkillState.html":{},"classes/StateManager.html":{},"classes/StateManager-1.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{}}}],["constants",{"_index":655,"title":{},"body":{"interfaces/BaseSkillConfig.html":{},"classes/ConstantsInterceptorFactory.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/S3SkillConfig.html":{},"interfaces/SkillConstants.html":{},"interfaces/SkillHandlers.html":{}}}],["constantsinterceptorfactory",{"_index":823,"title":{"classes/ConstantsInterceptorFactory.html":{}},"body":{"classes/ConstantsInterceptorFactory.html":{},"interfaces/SkillConstants.html":{}}}],["constructor",{"_index":22,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/HandlerInputFactory.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"interfaces/InitialState.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{},"classes/LaunchRequestFactory.html":{},"classes/ProactiveClient.html":{},"classes/RequestEnvelopeFactory.html":{},"classes/RequestFactory.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"classes/RouteMatcher.html":{},"interfaces/SkillState.html":{},"classes/StateManager-1.html":{},"classes/SystemFactory.html":{}}}],["constructor(applicationid",{"_index":2127,"title":{},"body":{"classes/SystemFactory.html":{}}}],["constructor(attributemanager",{"_index":2100,"title":{},"body":{"classes/StateManager-1.html":{}}}],["constructor(config",{"_index":1646,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["constructor(handlerinput",{"_index":1198,"title":{},"body":{"classes/ISPProductClient.html":{}}}],["constructor(input",{"_index":1962,"title":{},"body":{"classes/RouteMatcher.html":{}}}],["constructor(intentname",{"_index":1266,"title":{},"body":{"classes/IntentHandlerBuilder.html":{}}}],["constructor(locale",{"_index":833,"title":{},"body":{"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{}}}],["constructor(request",{"_index":1851,"title":{},"body":{"classes/RequestEnvelopeFactory.html":{}}}],["constructor(requestenvelope",{"_index":23,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{}}}],["constructor(requestenvelopefactory",{"_index":1145,"title":{},"body":{"classes/HandlerInputFactory.html":{}}}],["constructor(requesttype",{"_index":1892,"title":{},"body":{"classes/RequestFactory.html":{}}}],["constructor(tablename",{"_index":938,"title":{},"body":{"classes/DBClient.html":{}}}],["contact",{"_index":363,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"classes/BuyResponseContentBuilder.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["contemts",{"_index":1055,"title":{},"body":{"interfaces/FlashBriefingContent.html":{}}}],["content",{"_index":84,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/ISPProductClient.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-2.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["content.contenttype",{"_index":1474,"title":{},"body":{"classes/ParameterFactory-2.html":{}}}],["content.name",{"_index":1472,"title":{},"body":{"classes/ParameterFactory-2.html":{}}}],["contentbuilder",{"_index":679,"title":{"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{}},"body":{"classes/BuyContentBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{}}}],["contentbuilder:10",{"_index":693,"title":{},"body":{"classes/BuyContentBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ISPContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{}}}],["contentbuilder:11",{"_index":691,"title":{},"body":{"classes/BuyContentBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ISPContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{}}}],["contentbuilder:16",{"_index":697,"title":{},"body":{"classes/BuyContentBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ISPContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{}}}],["contentbuilder:19",{"_index":706,"title":{},"body":{"classes/BuyContentBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ISPContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{}}}],["contentbuilder:23",{"_index":704,"title":{},"body":{"classes/BuyContentBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ISPContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{}}}],["contentbuilder:27",{"_index":701,"title":{},"body":{"classes/BuyContentBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ISPContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{}}}],["contentbuilder:35",{"_index":699,"title":{},"body":{"classes/BuyContentBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ISPContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{}}}],["contentbuilder:43",{"_index":696,"title":{},"body":{"classes/BuyContentBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ISPContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{}}}],["contentbuilder:9",{"_index":692,"title":{},"body":{"classes/BuyContentBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ISPContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{}}}],["contentbuilders/generalresponse",{"_index":749,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["contents",{"_index":680,"title":{},"body":{"classes/BuyContentBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{}}}],["contenttype",{"_index":354,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["context",{"_index":237,"title":{},"body":{"interfaces/AlexaSpeechComponentProps.html":{},"classes/ContextFactory.html":{},"classes/HandlerInputFactory.html":{},"interfaces/ProgressiveResponse.html":{},"classes/RequestEnvelopeFactory.html":{},"interfaces/SpeechScriptResponse.html":{},"classes/SystemFactory.html":{}}}],["contextfactory",{"_index":896,"title":{"classes/ContextFactory.html":{}},"body":{"classes/ContextFactory.html":{},"classes/RequestEnvelopeFactory.html":{}}}],["contributors",{"_index":2251,"title":{},"body":{"index.html":{}}}],["core",{"_index":59,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"interfaces/ErrorHandlerBuilder.html":{},"classes/FallbackIntentFactory.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"classes/HandlerInputFactory.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"interfaces/InitialState.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/MergeObjectType.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"classes/RouteMatcher.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/SkillConstants.html":{},"interfaces/SkillState.html":{},"classes/StateManager.html":{},"classes/StateManager-1.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"index.html":{}}}],["core/node_modules/ask",{"_index":267,"title":{},"body":{"classes/ApplicationFactory.html":{},"classes/ContextFactory.html":{},"interfaces/HandlerHelpers.html":{},"classes/HandlerInputFactory.html":{},"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{},"classes/LaunchRequestFactory.html":{},"classes/RequestEnvelopeFactory.html":{},"classes/RequestFactory.html":{},"classes/RequestHandlerFactory-1.html":{},"classes/RouteMatcher.html":{},"interfaces/Router.html":{},"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{},"interfaces/Situation.html":{},"interfaces/SituationState.html":{},"classes/SystemFactory.html":{},"classes/UserFactory.html":{}}}],["coreservice",{"_index":1162,"title":{},"body":{"classes/HandlerInputFactory.html":{}}}],["coreservice.apiclient",{"_index":1165,"title":{},"body":{"classes/HandlerInputFactory.html":{}}}],["coreservice.serviceclientfactory",{"_index":1163,"title":{},"body":{"classes/HandlerInputFactory.html":{}}}],["count",{"_index":472,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-1.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["create",{"_index":718,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/FallbackIntentFactory.html":{},"classes/HandlerInputFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"classes/RequestHandlerFactory-1.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{}}}],["create(context",{"_index":1149,"title":{},"body":{"classes/HandlerInputFactory.html":{}}}],["create(route",{"_index":1933,"title":{},"body":{"classes/RequestHandlerFactory-1.html":{}}}],["create(type",{"_index":1924,"title":{},"body":{"classes/RequestHandlerFactory.html":{}}}],["createaxiosrequestobject",{"_index":15,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ISPProductClient.html":{}}}],["createaxiosrequestobject(method",{"_index":206,"title":{},"body":{"classes/APIClient-1.html":{}}}],["createaxiosrequestobject(productid",{"_index":37,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["created",{"_index":373,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["createhandlers",{"_index":1928,"title":{},"body":{"classes/RequestHandlerFactory-1.html":{}}}],["createlist",{"_index":1344,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["createlist(request",{"_index":1356,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["createlistitem",{"_index":1345,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["createlistitem(listid",{"_index":1359,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["createreminder",{"_index":1821,"title":{},"body":{"classes/ReminderAPIClient.html":{}}}],["createreminder(reminderrequest",{"_index":1828,"title":{},"body":{"classes/ReminderAPIClient.html":{}}}],["creativework",{"_index":352,"title":{"interfaces/CreativeWork.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["creator",{"_index":470,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["crushable",{"_index":419,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["current",{"_index":1133,"title":{},"body":{"interfaces/HandlerHelpers.html":{},"interfaces/InitialState.html":{},"classes/RequestHandlerFactory-1.html":{},"interfaces/Router.html":{},"interfaces/Situation.html":{},"interfaces/SituationState.html":{},"interfaces/SkillState.html":{},"classes/StateManager-1.html":{}}}],["currentstate",{"_index":1988,"title":{},"body":{"classes/RouteMatcher.html":{}}}],["custom",{"_index":996,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"interfaces/HandlerHelpers.html":{},"classes/RouteMatcher.html":{},"interfaces/Router.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/Situation.html":{},"interfaces/SituationState.html":{}}}],["customerequestenvelope",{"_index":911,"title":{"interfaces/CustomeRequestEnvelope.html":{}},"body":{"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/FallbackIntentFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{}}}],["customhandlerinput",{"_index":909,"title":{"interfaces/CustomHandlerInput.html":{}},"body":{"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/FallbackIntentFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{}}}],["customrequest",{"_index":919,"title":{},"body":{"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/FallbackIntentFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{}}}],["data",{"_index":103,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ISPProductClient.html":{},"classes/ProactiveClient.html":{}}}],["data.inskillproducts",{"_index":150,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["date",{"_index":616,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-5.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"classes/RequestEnvelopeFactory.html":{},"classes/RequestFactory.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["datetime",{"_index":331,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["dayofweek",{"_index":429,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["days').toisostring",{"_index":1710,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["db",{"_index":282,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["dbclient",{"_index":935,"title":{"classes/DBClient.html":{}},"body":{"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{}}}],["dbconfig",{"_index":940,"title":{"interfaces/DBConfig.html":{}},"body":{"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{}}}],["dbitem",{"_index":949,"title":{"interfaces/DBItem.html":{}},"body":{"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{}}}],["de",{"_index":321,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["declined",{"_index":804,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{}}}],["default",{"_index":190,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ApplicationFactory.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ContextFactory.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/DeviceAPIClient.html":{},"classes/FallbackIntentFactory.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"classes/HandlerFactory.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/ListManagementAPIClient.html":{},"classes/LocalizedAttributesFactory.html":{},"classes/MockAttributeManager.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"classes/ProactiveClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"classes/ReminderAPIClient.html":{},"classes/RequestEnvelopeFactory.html":{},"classes/RequestFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"classes/RequestHandlerFactory-1.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"classes/RouteMatcher.html":{},"classes/SessionFactory.html":{},"classes/SettingAPIClient.html":{},"interfaces/SkillConstants.html":{},"classes/StateManager-1.html":{},"classes/SystemFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"classes/UserFactory.html":{},"classes/UserProfileAPIClient.html":{}}}],["defaultstate",{"_index":2094,"title":{},"body":{"classes/StateManager.html":{},"miscellaneous/typealiases.html":{}}}],["defined",{"_index":26,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ApplicationFactory.html":{},"interfaces/AttributeType.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ContextFactory.html":{},"classes/DBClient.html":{},"interfaces/DBItem.html":{},"classes/DeviceAPIClient.html":{},"interfaces/ErrorHandlerBuilder.html":{},"interfaces/Factory.html":{},"classes/FallbackIntentFactory.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"classes/HandlerFactory-1.html":{},"classes/HandlerInputFactory.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentHandlerFactory.html":{},"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestFactory-1.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/ListManagementAPIClient.html":{},"interfaces/LocalizedAttribute.html":{},"classes/LocalizedAttributesFactory.html":{},"classes/MockAttributeManager.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"classes/ProactiveClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"classes/ReminderAPIClient.html":{},"classes/RequestEnvelopeFactory.html":{},"classes/RequestFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"classes/RequestHandlerFactory-1.html":{},"classes/RouteMatcher.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{},"classes/SettingAPIClient.html":{},"interfaces/SkillConstants.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{},"classes/StateManager.html":{},"classes/StateManager-1.html":{},"classes/SystemFactory.html":{},"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"classes/UserFactory.html":{},"classes/UserProfileAPIClient.html":{}}}],["delete",{"_index":197,"title":{},"body":{"classes/APIClient-1.html":{},"miscellaneous/typealiases.html":{}}}],["delete(path",{"_index":208,"title":{},"body":{"classes/APIClient-1.html":{}}}],["deletelist",{"_index":1346,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["deletelist(listid",{"_index":1363,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["deletelistitem",{"_index":1347,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["deletelistitem(listid",{"_index":1365,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["deletereminder",{"_index":1822,"title":{},"body":{"classes/ReminderAPIClient.html":{}}}],["deletereminder(alertid",{"_index":1832,"title":{},"body":{"classes/ReminderAPIClient.html":{}}}],["deliverydetails",{"_index":402,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["dependencies",{"_index":2206,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["describe('attributemanager.ts",{"_index":297,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["describe('getsessionattributes",{"_index":311,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["describe('updatesessionattributes",{"_index":299,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["description",{"_index":1052,"title":{},"body":{"interfaces/FlashBriefingContent.html":{},"classes/ISPProductClient.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/Situation.html":{},"classes/StateManager.html":{},"classes/SystemFactory.html":{}}}],["devapiurl",{"_index":540,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["development",{"_index":2238,"title":{},"body":{"index.html":{}}}],["device",{"_index":868,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{},"classes/SystemFactory.html":{}}}],["deviceapiclient",{"_index":966,"title":{"classes/DeviceAPIClient.html":{}},"body":{"classes/DeviceAPIClient.html":{}}}],["deviceid",{"_index":974,"title":{},"body":{"classes/DeviceAPIClient.html":{},"classes/SettingAPIClient.html":{}}}],["dialogstate",{"_index":1297,"title":{},"body":{"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{}}}],["didn't",{"_index":777,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["directive",{"_index":246,"title":{},"body":{"interfaces/AlexaSpeechComponentProps.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"interfaces/ProgressiveResponse.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"interfaces/SpeechScriptResponse.html":{}}}],["directivebuilders",{"_index":750,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["directives",{"_index":702,"title":{},"body":{"classes/BuyContentBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ContentBuilder.html":{},"classes/ISPContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/ResponseContent.html":{}}}],["directives.foreach((directive",{"_index":852,"title":{},"body":{"classes/ContentBuilder.html":{},"interfaces/ResponseContent.html":{}}}],["disable",{"_index":91,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"interfaces/AttributeType.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/ISPProductClient.html":{},"interfaces/InitialState.html":{},"classes/MockAttributeManager.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"classes/ProactiveClient.html":{},"interfaces/SkillState.html":{},"classes/StateManager-1.html":{}}}],["disabledcache",{"_index":128,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["disallow",{"_index":122,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["distributionmethod",{"_index":340,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["documentclient",{"_index":942,"title":{},"body":{"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{}}}],["documentclient.getiteminput",{"_index":959,"title":{},"body":{"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{}}}],["documentclient.putiteminput",{"_index":962,"title":{},"body":{"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{}}}],["don't",{"_index":773,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["drop",{"_index":345,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["dsn",{"_index":991,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["dynamodb",{"_index":664,"title":{},"body":{"interfaces/BaseSkillConfig.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/S3SkillConfig.html":{},"interfaces/SkillHandlers.html":{},"miscellaneous/typealiases.html":{}}}],["dynamodb.documentclient",{"_index":952,"title":{},"body":{"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{}}}],["dynamodbskillconfig",{"_index":669,"title":{"interfaces/DynamoDBSkillConfig.html":{}},"body":{"interfaces/BaseSkillConfig.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/S3SkillConfig.html":{},"interfaces/SkillHandlers.html":{},"miscellaneous/typealiases.html":{}}}],["e",{"_index":477,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"classes/ContentBuilder-1.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/ISPContentBuilder.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/ResponseContent-1.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["e.response",{"_index":1744,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["e.response.data",{"_index":1749,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["e.response.data.message",{"_index":1750,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["e.response.status",{"_index":1752,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["e.response.statustext",{"_index":1754,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["empty",{"_index":134,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["en",{"_index":322,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{},"classes/LaunchRequestFactory.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"classes/RequestFactory.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["enable",{"_index":112,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["enablecache",{"_index":130,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["enabled",{"_index":143,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["endpoint",{"_index":10,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ISPProductClient.html":{},"classes/SystemFactory.html":{}}}],["enjoy",{"_index":1815,"title":{},"body":{"classes/RefundResponseContentBuilder.html":{}}}],["entertimestamp",{"_index":398,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["entitled",{"_index":893,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["episode",{"_index":335,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["err",{"_index":1745,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["err.errorcode",{"_index":1755,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["err.message",{"_index":1751,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["err.statuscode",{"_index":1753,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["error",{"_index":817,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{},"interfaces/ErrorHandlerBuilder.html":{},"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{},"classes/ProactiveClient.html":{},"classes/RefundResponseContentBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{},"index.html":{}}}],["error('failed",{"_index":1724,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["error('intentname",{"_index":1118,"title":{},"body":{"classes/HandlerFactory-1.html":{},"classes/IntentHandlerFactory.html":{},"classes/LaunchRequestFactory-1.html":{}}}],["error('invalid",{"_index":189,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["error('locale",{"_index":2179,"title":{},"body":{"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{}}}],["error('missing",{"_index":1740,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["error('no",{"_index":185,"title":{},"body":{"classes/APIClient.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/RequestFactory.html":{},"interfaces/ResponseContent-1.html":{}}}],["error(`unsupported",{"_index":1075,"title":{},"body":{"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"classes/HandlerFactory.html":{}}}],["error.message",{"_index":1011,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["error.stack",{"_index":1015,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["errorcode",{"_index":1747,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["errorhandle",{"_index":986,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{},"miscellaneous/typealiases.html":{}}}],["errorhandler",{"_index":660,"title":{},"body":{"interfaces/BaseSkillConfig.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/ErrorHandlerBuilder.html":{},"interfaces/S3SkillConfig.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/SkillHandlers.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{}}}],["errorhandlerbuilder",{"_index":979,"title":{"interfaces/ErrorHandlerBuilder.html":{}},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["errorhandlers",{"_index":676,"title":{},"body":{"interfaces/BaseSkillConfig.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/S3SkillConfig.html":{},"interfaces/SkillHandlers.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{}}}],["es",{"_index":326,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["eslint",{"_index":90,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"interfaces/AttributeType.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/ISPProductClient.html":{},"interfaces/InitialState.html":{},"classes/MockAttributeManager.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"classes/ProactiveClient.html":{},"interfaces/SkillState.html":{},"classes/StateManager-1.html":{}}}],["eslint/explicit",{"_index":114,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["eslint/no",{"_index":95,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"interfaces/AttributeType.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/ISPProductClient.html":{},"interfaces/InitialState.html":{},"classes/MockAttributeManager.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"classes/ProactiveClient.html":{},"interfaces/SkillState.html":{},"classes/StateManager-1.html":{}}}],["eu",{"_index":547,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["event",{"_index":476,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-7.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"index.html":{}}}],["event.eventname",{"_index":565,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["event.mediacontent.available.payload",{"_index":1482,"title":{},"body":{"classes/ParameterFactory-2.html":{}}}],["event.mediacontent.eventname",{"_index":636,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-2.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["event.mediacontent.payload",{"_index":641,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["event.messagealert.activated.eventname",{"_index":611,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["event.messagealert.payload",{"_index":612,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["event.occasion.payload",{"_index":632,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["event.occasion.updated.eventname",{"_index":629,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["event.orderstatus.eventname",{"_index":619,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["event.orderstatus.updated.payload",{"_index":620,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["event.payload",{"_index":564,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["event.props",{"_index":573,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-7.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["event.socialgameinvite.available.eventname",{"_index":650,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["event.socialgameinvite.available.payload",{"_index":651,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["event.sportsevent.updated.eventname",{"_index":601,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["event.sportsevent.updated.payload",{"_index":602,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-3.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["event.trashcollectionalert.activated.eventname",{"_index":587,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["event.trashcollectionalert.activated.payload",{"_index":1567,"title":{},"body":{"classes/ParameterFactory-7.html":{}}}],["event.trashcollectionalert.payload",{"_index":589,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["event.weatheralert.activated.eventname",{"_index":594,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["event.weatheralert.activated.payload",{"_index":595,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["event/libs/clients.ts",{"_index":1632,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["event/libs/clients.ts:103",{"_index":1670,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["event/libs/clients.ts:107",{"_index":1678,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["event/libs/clients.ts:115",{"_index":1656,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["event/libs/clients.ts:118",{"_index":1660,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["event/libs/clients.ts:129",{"_index":1662,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["event/libs/clients.ts:36",{"_index":1652,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["event/libs/clients.ts:37",{"_index":1654,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["event/libs/clients.ts:38",{"_index":1650,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["event/libs/clients.ts:40",{"_index":1648,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["event/libs/clients.ts:55",{"_index":1658,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["event/libs/clients.ts:58",{"_index":1682,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["event/libs/clients.ts:62",{"_index":1655,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["event/libs/clients.ts:79",{"_index":1674,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["event/libs/clients.ts:83",{"_index":1680,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["event/libs/clients.ts:87",{"_index":1668,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["event/libs/clients.ts:91",{"_index":1664,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["event/libs/clients.ts:95",{"_index":1672,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["event/libs/clients.ts:99",{"_index":1666,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["event/libs/localizedattributes/factory.ts",{"_index":1396,"title":{},"body":{"classes/LocalizedAttributesFactory.html":{}}}],["event/libs/localizedattributes/factory.ts:7",{"_index":1397,"title":{},"body":{"classes/LocalizedAttributesFactory.html":{}}}],["event/libs/mediacontent/available/payloadfactory.ts",{"_index":1465,"title":{},"body":{"classes/ParameterFactory-2.html":{}}}],["event/libs/mediacontent/available/payloadfactory.ts:17",{"_index":1466,"title":{},"body":{"classes/ParameterFactory-2.html":{}}}],["event/libs/messagealert/activated/payloadfactory.ts",{"_index":1445,"title":{},"body":{"classes/ParameterFactory-1.html":{}}}],["event/libs/messagealert/activated/payloadfactory.ts:14",{"_index":1446,"title":{},"body":{"classes/ParameterFactory-1.html":{}}}],["event/libs/model.ts",{"_index":317,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["event/libs/model.ts:113",{"_index":1394,"title":{},"body":{"interfaces/LocalizedAttribute.html":{}}}],["event/libs/model.ts:264",{"_index":1568,"title":{},"body":{"interfaces/PayloadBuilder.html":{}}}],["event/libs/model.ts:265",{"_index":1569,"title":{},"body":{"interfaces/PayloadBuilder.html":{}}}],["event/libs/model.ts:269",{"_index":1047,"title":{},"body":{"interfaces/Factory.html":{}}}],["event/libs/model.ts:270",{"_index":1046,"title":{},"body":{"interfaces/Factory.html":{}}}],["event/libs/model.ts:277",{"_index":1574,"title":{},"body":{"interfaces/PayloadBuilder-1.html":{}}}],["event/libs/model.ts:278",{"_index":1575,"title":{},"body":{"interfaces/PayloadBuilder-1.html":{}}}],["event/libs/model.ts:279",{"_index":1570,"title":{},"body":{"interfaces/PayloadBuilder-1.html":{}}}],["event/libs/model.ts:280",{"_index":1576,"title":{},"body":{"interfaces/PayloadBuilder-1.html":{}}}],["event/libs/model.ts:281",{"_index":1571,"title":{},"body":{"interfaces/PayloadBuilder-1.html":{}}}],["event/libs/model.ts:282",{"_index":1573,"title":{},"body":{"interfaces/PayloadBuilder-1.html":{}}}],["event/libs/model.ts:283",{"_index":1572,"title":{},"body":{"interfaces/PayloadBuilder-1.html":{}}}],["event/libs/model.ts:291",{"_index":1580,"title":{},"body":{"interfaces/PayloadBuilder-2.html":{}}}],["event/libs/model.ts:292",{"_index":1581,"title":{},"body":{"interfaces/PayloadBuilder-2.html":{}}}],["event/libs/model.ts:293",{"_index":1577,"title":{},"body":{"interfaces/PayloadBuilder-2.html":{}}}],["event/libs/model.ts:294",{"_index":1578,"title":{},"body":{"interfaces/PayloadBuilder-2.html":{}}}],["event/libs/model.ts:295",{"_index":1579,"title":{},"body":{"interfaces/PayloadBuilder-2.html":{}}}],["event/libs/model.ts:303",{"_index":1588,"title":{},"body":{"interfaces/PayloadBuilder-3.html":{}}}],["event/libs/model.ts:304",{"_index":1586,"title":{},"body":{"interfaces/PayloadBuilder-3.html":{}}}],["event/libs/model.ts:305",{"_index":1587,"title":{},"body":{"interfaces/PayloadBuilder-3.html":{}}}],["event/libs/model.ts:306",{"_index":1585,"title":{},"body":{"interfaces/PayloadBuilder-3.html":{}}}],["event/libs/model.ts:307",{"_index":1582,"title":{},"body":{"interfaces/PayloadBuilder-3.html":{}}}],["event/libs/model.ts:308",{"_index":1583,"title":{},"body":{"interfaces/PayloadBuilder-3.html":{}}}],["event/libs/model.ts:309",{"_index":1584,"title":{},"body":{"interfaces/PayloadBuilder-3.html":{}}}],["event/libs/model.ts:317",{"_index":1593,"title":{},"body":{"interfaces/PayloadBuilder-4.html":{}}}],["event/libs/model.ts:318",{"_index":1592,"title":{},"body":{"interfaces/PayloadBuilder-4.html":{}}}],["event/libs/model.ts:319",{"_index":1596,"title":{},"body":{"interfaces/PayloadBuilder-4.html":{}}}],["event/libs/model.ts:320",{"_index":1594,"title":{},"body":{"interfaces/PayloadBuilder-4.html":{}}}],["event/libs/model.ts:321",{"_index":1595,"title":{},"body":{"interfaces/PayloadBuilder-4.html":{}}}],["event/libs/model.ts:322",{"_index":1589,"title":{},"body":{"interfaces/PayloadBuilder-4.html":{}}}],["event/libs/model.ts:323",{"_index":1590,"title":{},"body":{"interfaces/PayloadBuilder-4.html":{}}}],["event/libs/model.ts:324",{"_index":1591,"title":{},"body":{"interfaces/PayloadBuilder-4.html":{}}}],["event/libs/model.ts:332",{"_index":1602,"title":{},"body":{"interfaces/PayloadBuilder-5.html":{}}}],["event/libs/model.ts:333",{"_index":1600,"title":{},"body":{"interfaces/PayloadBuilder-5.html":{}}}],["event/libs/model.ts:334",{"_index":1601,"title":{},"body":{"interfaces/PayloadBuilder-5.html":{}}}],["event/libs/model.ts:335",{"_index":1603,"title":{},"body":{"interfaces/PayloadBuilder-5.html":{}}}],["event/libs/model.ts:336",{"_index":1597,"title":{},"body":{"interfaces/PayloadBuilder-5.html":{}}}],["event/libs/model.ts:337",{"_index":1599,"title":{},"body":{"interfaces/PayloadBuilder-5.html":{}}}],["event/libs/model.ts:338",{"_index":1598,"title":{},"body":{"interfaces/PayloadBuilder-5.html":{}}}],["event/libs/model.ts:346",{"_index":1614,"title":{},"body":{"interfaces/PayloadBuilder-6.html":{}}}],["event/libs/model.ts:347",{"_index":1611,"title":{},"body":{"interfaces/PayloadBuilder-6.html":{}}}],["event/libs/model.ts:348",{"_index":1613,"title":{},"body":{"interfaces/PayloadBuilder-6.html":{}}}],["event/libs/model.ts:349",{"_index":1612,"title":{},"body":{"interfaces/PayloadBuilder-6.html":{}}}],["event/libs/model.ts:350",{"_index":1609,"title":{},"body":{"interfaces/PayloadBuilder-6.html":{}}}],["event/libs/model.ts:351",{"_index":1610,"title":{},"body":{"interfaces/PayloadBuilder-6.html":{}}}],["event/libs/model.ts:352",{"_index":1606,"title":{},"body":{"interfaces/PayloadBuilder-6.html":{}}}],["event/libs/model.ts:353",{"_index":1604,"title":{},"body":{"interfaces/PayloadBuilder-6.html":{}}}],["event/libs/model.ts:354",{"_index":1605,"title":{},"body":{"interfaces/PayloadBuilder-6.html":{}}}],["event/libs/model.ts:355",{"_index":1608,"title":{},"body":{"interfaces/PayloadBuilder-6.html":{}}}],["event/libs/model.ts:356",{"_index":1607,"title":{},"body":{"interfaces/PayloadBuilder-6.html":{}}}],["event/libs/model.ts:363",{"_index":1618,"title":{},"body":{"interfaces/PayloadBuilder-7.html":{}}}],["event/libs/model.ts:364",{"_index":1620,"title":{},"body":{"interfaces/PayloadBuilder-7.html":{}}}],["event/libs/model.ts:365",{"_index":1615,"title":{},"body":{"interfaces/PayloadBuilder-7.html":{}}}],["event/libs/model.ts:366",{"_index":1622,"title":{},"body":{"interfaces/PayloadBuilder-7.html":{}}}],["event/libs/model.ts:367",{"_index":1619,"title":{},"body":{"interfaces/PayloadBuilder-7.html":{}}}],["event/libs/model.ts:368",{"_index":1621,"title":{},"body":{"interfaces/PayloadBuilder-7.html":{}}}],["event/libs/model.ts:369",{"_index":1617,"title":{},"body":{"interfaces/PayloadBuilder-7.html":{}}}],["event/libs/model.ts:370",{"_index":1616,"title":{},"body":{"interfaces/PayloadBuilder-7.html":{}}}],["event/libs/model.ts:377",{"_index":1628,"title":{},"body":{"interfaces/PayloadBuilder-8.html":{}}}],["event/libs/model.ts:378",{"_index":1630,"title":{},"body":{"interfaces/PayloadBuilder-8.html":{}}}],["event/libs/model.ts:379",{"_index":1629,"title":{},"body":{"interfaces/PayloadBuilder-8.html":{}}}],["event/libs/model.ts:380",{"_index":1626,"title":{},"body":{"interfaces/PayloadBuilder-8.html":{}}}],["event/libs/model.ts:381",{"_index":1627,"title":{},"body":{"interfaces/PayloadBuilder-8.html":{}}}],["event/libs/model.ts:382",{"_index":1624,"title":{},"body":{"interfaces/PayloadBuilder-8.html":{}}}],["event/libs/model.ts:383",{"_index":1625,"title":{},"body":{"interfaces/PayloadBuilder-8.html":{}}}],["event/libs/occasion/updated/payloadfactory.ts",{"_index":1423,"title":{},"body":{"classes/ParameterFactory.html":{}}}],["event/libs/occasion/updated/payloadfactory.ts:15",{"_index":1424,"title":{},"body":{"classes/ParameterFactory.html":{}}}],["event/libs/orderstatus/updated/payloadfactory.ts",{"_index":1528,"title":{},"body":{"classes/ParameterFactory-5.html":{}}}],["event/libs/orderstatus/updated/payloadfactory.ts:15",{"_index":1529,"title":{},"body":{"classes/ParameterFactory-5.html":{}}}],["event/libs/socialgameinvite/available/payloadfactory.ts",{"_index":1508,"title":{},"body":{"classes/ParameterFactory-4.html":{}}}],["event/libs/socialgameinvite/available/payloadfactory.ts:15",{"_index":1509,"title":{},"body":{"classes/ParameterFactory-4.html":{}}}],["event/libs/sportsevent/updated/payloadfactory.ts",{"_index":1486,"title":{},"body":{"classes/ParameterFactory-3.html":{}}}],["event/libs/sportsevent/updated/payloadfactory.ts:12",{"_index":1487,"title":{},"body":{"classes/ParameterFactory-3.html":{}}}],["event/libs/trashcollectionalert/activated/payloadfactory.ts",{"_index":1554,"title":{},"body":{"classes/ParameterFactory-7.html":{}}}],["event/libs/trashcollectionalert/activated/payloadfactory.ts:10",{"_index":1555,"title":{},"body":{"classes/ParameterFactory-7.html":{}}}],["event/libs/weatheralert/activated/payloadfactory.ts",{"_index":1543,"title":{},"body":{"classes/ParameterFactory-6.html":{}}}],["event/libs/weatheralert/activated/payloadfactory.ts:13",{"_index":1544,"title":{},"body":{"classes/ParameterFactory-6.html":{}}}],["eventleague",{"_index":452,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-3.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["eventleague.name",{"_index":1497,"title":{},"body":{"classes/ParameterFactory-3.html":{}}}],["eventname",{"_index":479,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["example",{"_index":993,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{},"classes/StateManager.html":{}}}],["execute",{"_index":1991,"title":{},"body":{"classes/RouteMatcher.html":{}}}],["executecustomsituation",{"_index":1960,"title":{},"body":{"classes/RouteMatcher.html":{}}}],["execution",{"_index":2140,"title":{},"body":{"classes/SystemFactory.html":{}}}],["expect(result).toequal",{"_index":314,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["expect(result).toequal('true",{"_index":305,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["expect(result2).toequal('false",{"_index":310,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["expectedarrival",{"_index":393,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-5.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["expectedstate",{"_index":1946,"title":{},"body":{"classes/RequestHandlerFactory-1.html":{}}}],["expires_in",{"_index":553,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["expirytime",{"_index":563,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["explicit",{"_index":96,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"interfaces/AttributeType.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/ISPProductClient.html":{},"interfaces/InitialState.html":{},"classes/MockAttributeManager.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"classes/ProactiveClient.html":{},"interfaces/SkillState.html":{},"classes/StateManager-1.html":{}}}],["export",{"_index":67,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"interfaces/AlexaSpeechComponentProps.html":{},"classes/ApplicationFactory.html":{},"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/BaseSkillConfig.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ContextFactory.html":{},"interfaces/CreativeWork.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/DeviceAPIClient.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/ErrorHandlerBuilder.html":{},"interfaces/Factory.html":{},"classes/FallbackIntentFactory.html":{},"interfaces/FlashBriefingContent.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"classes/HandlerFactory-1.html":{},"interfaces/HandlerHelpers.html":{},"classes/HandlerInputFactory.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"interfaces/InitialState.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentHandlerFactory.html":{},"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestFactory-1.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/ListManagementAPIClient.html":{},"interfaces/LocalizedAttribute.html":{},"classes/LocalizedAttributesFactory.html":{},"interfaces/MergeObjectType.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"interfaces/ProgressiveResponse.html":{},"interfaces/Props.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/RelevantAudience.html":{},"classes/ReminderAPIClient.html":{},"classes/RequestEnvelopeFactory.html":{},"classes/RequestFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"classes/RequestHandlerFactory-1.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"classes/RouteMatcher.html":{},"interfaces/Router.html":{},"interfaces/S3SkillConfig.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{},"classes/SettingAPIClient.html":{},"interfaces/Situation.html":{},"interfaces/SituationState.html":{},"interfaces/Skill.html":{},"interfaces/SkillConstants.html":{},"interfaces/SkillHandlers.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{},"interfaces/SkillState.html":{},"interfaces/Soccer.html":{},"interfaces/SpeechScriptResponse.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"classes/StateManager.html":{},"classes/StateManager-1.html":{},"classes/SystemFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"interfaces/Thing.html":{},"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{},"interfaces/TrashCollectionAlert.html":{},"classes/UserFactory.html":{},"classes/UserProfileAPIClient.html":{},"interfaces/WeatherAlert.html":{}}}],["extends",{"_index":109,"title":{},"body":{"classes/APIClient.html":{},"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/BaseSkillConfig.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"classes/ContentBuilder-1.html":{},"interfaces/CreativeWork.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/DeviceAPIClient.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/Factory.html":{},"classes/FallbackIntentFactory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/ListManagementAPIClient.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"interfaces/Props.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/RelevantAudience.html":{},"classes/ReminderAPIClient.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/ResponseContent-1.html":{},"interfaces/S3SkillConfig.html":{},"classes/SettingAPIClient.html":{},"interfaces/Skill.html":{},"interfaces/SkillHandlers.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"classes/UserProfileAPIClient.html":{},"interfaces/WeatherAlert.html":{}}}],["external.request",{"_index":1864,"title":{},"body":{"classes/RequestEnvelopeFactory.html":{},"classes/RequestFactory.html":{}}}],["extra",{"_index":1012,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["factory",{"_index":574,"title":{"interfaces/Factory.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/ErrorHandlerBuilder.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"classes/SystemFactory.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["fallbackhandler",{"_index":924,"title":{},"body":{"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/FallbackIntentFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{}}}],["fallbackintentfactory",{"_index":931,"title":{"classes/FallbackIntentFactory.html":{}},"body":{"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/FallbackIntentFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{}}}],["false",{"_index":308,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"interfaces/InitialState.html":{},"classes/IntentHandlerBuilder.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/MockAttributeManager.html":{},"classes/ProactiveClient.html":{},"classes/RouteMatcher.html":{},"interfaces/SkillState.html":{},"classes/StateManager.html":{},"classes/StateManager-1.html":{}}}],["fc",{"_index":242,"title":{},"body":{"interfaces/AlexaSpeechComponentProps.html":{},"interfaces/ProgressiveResponse.html":{},"interfaces/SpeechScriptResponse.html":{},"miscellaneous/typealiases.html":{}}}],["fe",{"_index":546,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["feed",{"_index":1054,"title":{},"body":{"interfaces/FlashBriefingContent.html":{}}}],["fetch",{"_index":136,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["fetchlists",{"_index":144,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"interfaces/AlexaSpeechComponentProps.html":{},"classes/ApplicationFactory.html":{},"interfaces/AttributeType.html":{},"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/BaseSkillConfig.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ContextFactory.html":{},"interfaces/CreativeWork.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/DeviceAPIClient.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/ErrorHandlerBuilder.html":{},"interfaces/Factory.html":{},"classes/FallbackIntentFactory.html":{},"interfaces/FlashBriefingContent.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"classes/HandlerFactory-1.html":{},"interfaces/HandlerHelpers.html":{},"classes/HandlerInputFactory.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"interfaces/InitialState.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentHandlerFactory.html":{},"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestFactory-1.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/ListManagementAPIClient.html":{},"interfaces/LocalizedAttribute.html":{},"classes/LocalizedAttributesFactory.html":{},"interfaces/MergeObjectType.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"classes/MockAttributeManager.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"interfaces/ProgressiveResponse.html":{},"interfaces/Props.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/RelevantAudience.html":{},"classes/ReminderAPIClient.html":{},"classes/RequestEnvelopeFactory.html":{},"classes/RequestFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"classes/RequestHandlerFactory-1.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"classes/RouteMatcher.html":{},"interfaces/Router.html":{},"interfaces/S3SkillConfig.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{},"classes/SettingAPIClient.html":{},"interfaces/Situation.html":{},"interfaces/SituationState.html":{},"interfaces/Skill.html":{},"interfaces/SkillConstants.html":{},"interfaces/SkillHandlers.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{},"interfaces/SkillState.html":{},"interfaces/Soccer.html":{},"interfaces/SpeechScriptResponse.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"classes/StateManager.html":{},"classes/StateManager-1.html":{},"classes/SystemFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"interfaces/Thing.html":{},"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{},"interfaces/TrashCollectionAlert.html":{},"classes/UserFactory.html":{},"classes/UserProfileAPIClient.html":{},"interfaces/WeatherAlert.html":{}}}],["find",{"_index":159,"title":{},"body":{"classes/APIClient.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"interfaces/ResponseContent-1.html":{}}}],["findproductbyid",{"_index":169,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["findproductbyid(productid",{"_index":1209,"title":{},"body":{"classes/ISPProductClient.html":{}}}],["findproductbyname",{"_index":173,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["findproductbyname(productname",{"_index":1211,"title":{},"body":{"classes/ISPProductClient.html":{}}}],["findproductbyno",{"_index":163,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["findproductbyno(userinputno",{"_index":1213,"title":{},"body":{"classes/ISPProductClient.html":{}}}],["first",{"_index":127,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["fixhistory",{"_index":2249,"title":{},"body":{"index.html":{}}}],["fixtures",{"_index":744,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["flagged",{"_index":465,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["flashbrieding",{"_index":1053,"title":{},"body":{"interfaces/FlashBriefingContent.html":{}}}],["flashbriefingcontent",{"_index":1050,"title":{"interfaces/FlashBriefingContent.html":{}},"body":{"interfaces/FlashBriefingContent.html":{},"miscellaneous/typealiases.html":{}}}],["flashbriefings",{"_index":1065,"title":{},"body":{"interfaces/FlashBriefingContent.html":{},"miscellaneous/typealiases.html":{}}}],["fo",{"_index":2134,"title":{},"body":{"classes/SystemFactory.html":{}}}],["form",{"_index":1717,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["found",{"_index":879,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["fr",{"_index":328,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["freshness",{"_index":462,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-1.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["friday",{"_index":434,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["friend",{"_index":362,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["function",{"_index":154,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{},"interfaces/MergeObjectType.html":{},"classes/RouteMatcher.html":{},"interfaces/Situation.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"miscellaneous/typealiases.html":{}}}],["functions",{"_index":2212,"title":{},"body":{"index.html":{}}}],["game",{"_index":339,"title":{"interfaces/Game.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-4.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["game.name",{"_index":1524,"title":{},"body":{"classes/ParameterFactory-4.html":{}}}],["game.offer",{"_index":1522,"title":{},"body":{"classes/ParameterFactory-4.html":{}}}],["gameinvite",{"_index":364,"title":{"interfaces/GameInvite.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["gamestatistic",{"_index":455,"title":{"interfaces/GameStatistic.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["garbagetype",{"_index":412,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-7.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["garbagetypes",{"_index":438,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-7.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["garden_waste",{"_index":420,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["gb",{"_index":325,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["generatehandlerinput",{"_index":296,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["get(id",{"_index":946,"title":{},"body":{"classes/DBClient.html":{}}}],["get(path",{"_index":210,"title":{},"body":{"classes/APIClient-1.html":{}}}],["get(productid",{"_index":43,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["getacceptedpurchaseresult",{"_index":791,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{}}}],["getacceptedrefundresult",{"_index":1801,"title":{},"body":{"classes/RefundResponseContentBuilder.html":{}}}],["getaccesstoken",{"_index":533,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["getapiaccesstoken",{"_index":54,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ISPProductClient.html":{}}}],["getapiaccesstoken(requestenvelope",{"_index":70,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ISPProductClient.html":{}}}],["getapiendpoint",{"_index":1689,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["getapiendpoint(config",{"_index":1706,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["getapiurl",{"_index":1684,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["getapiurl(config",{"_index":1690,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["getapplication",{"_index":259,"title":{},"body":{"classes/ApplicationFactory.html":{},"classes/RequestEnvelopeFactory.html":{}}}],["getavailability",{"_index":1468,"title":{},"body":{"classes/ParameterFactory-2.html":{}}}],["getavailability(availability",{"_index":1483,"title":{},"body":{"classes/ParameterFactory-2.html":{}}}],["getbeforestate",{"_index":1257,"title":{},"body":{"interfaces/InitialState.html":{},"interfaces/SkillState.html":{},"classes/StateManager-1.html":{}}}],["getbody",{"_index":1633,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["getbuyproductdirective",{"_index":707,"title":{},"body":{"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{}}}],["getbuyproductdirective(productid",{"_index":710,"title":{},"body":{"classes/BuyContentBuilder.html":{}}}],["getcachedproducts",{"_index":1197,"title":{},"body":{"classes/ISPProductClient.html":{}}}],["getcachestatus",{"_index":120,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["getcancelproductdirective",{"_index":1795,"title":{},"body":{"classes/RefundContentBuilder.html":{}}}],["getcancelproductdirective(productid",{"_index":1798,"title":{},"body":{"classes/RefundContentBuilder.html":{}}}],["getcannotbuytheproductresponse",{"_index":888,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["getconfirmationstate",{"_index":630,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["getconfirmationstatus",{"_index":631,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["getcontext",{"_index":899,"title":{},"body":{"classes/ContextFactory.html":{}}}],["getcountryandpostalcode",{"_index":968,"title":{},"body":{"classes/DeviceAPIClient.html":{}}}],["getcountryandpostalcode(deviceid",{"_index":972,"title":{},"body":{"classes/DeviceAPIClient.html":{}}}],["getcreativework",{"_index":1467,"title":{},"body":{"classes/ParameterFactory-2.html":{}}}],["getcreativework(content",{"_index":1484,"title":{},"body":{"classes/ParameterFactory-2.html":{}}}],["getcurrentstate",{"_index":1253,"title":{},"body":{"interfaces/InitialState.html":{},"interfaces/SkillState.html":{},"classes/StateManager.html":{},"classes/StateManager-1.html":{}}}],["getcurrentstate(attributemanager",{"_index":2086,"title":{},"body":{"classes/StateManager.html":{}}}],["getdeclinedpurchaseresult",{"_index":792,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{}}}],["getdeclinedrefundresult",{"_index":1802,"title":{},"body":{"classes/RefundResponseContentBuilder.html":{}}}],["getdistanceunits",{"_index":2024,"title":{},"body":{"classes/SettingAPIClient.html":{}}}],["getdistanceunits(deviceid",{"_index":2029,"title":{},"body":{"classes/SettingAPIClient.html":{}}}],["getemail",{"_index":2193,"title":{},"body":{"classes/UserProfileAPIClient.html":{}}}],["getentitledproductresponse",{"_index":892,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["geteventname",{"_index":571,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["getfailedpurchaseresult",{"_index":793,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{}}}],["getfailedrefundresult",{"_index":1803,"title":{},"body":{"classes/RefundResponseContentBuilder.html":{}}}],["getfulladdress",{"_index":969,"title":{},"body":{"classes/DeviceAPIClient.html":{}}}],["getfulladdress(deviceid",{"_index":975,"title":{},"body":{"classes/DeviceAPIClient.html":{}}}],["getgame",{"_index":1510,"title":{},"body":{"classes/ParameterFactory-4.html":{}}}],["getgame(game",{"_index":1526,"title":{},"body":{"classes/ParameterFactory-4.html":{}}}],["getgameinvite",{"_index":1511,"title":{},"body":{"classes/ParameterFactory-4.html":{}}}],["getgameinvite(invite",{"_index":1525,"title":{},"body":{"classes/ParameterFactory-4.html":{}}}],["getgivenname",{"_index":2194,"title":{},"body":{"classes/UserProfileAPIClient.html":{}}}],["gethandler",{"_index":719,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"interfaces/ErrorHandlerBuilder.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"classes/IntentHandlerBuilder.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["gethandlers",{"_index":2045,"title":{},"body":{"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{}}}],["getlanguagestrings",{"_index":2162,"title":{},"body":{"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{}}}],["getlist",{"_index":1348,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["getlist(listid",{"_index":1368,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["getlistitem",{"_index":1349,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["getlistitem(listid",{"_index":1371,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["getlistproducts",{"_index":1766,"title":{},"body":{"classes/ProductListResponseContentBuilder.html":{}}}],["getlistsmetadata",{"_index":1350,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["getlocale",{"_index":53,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/ISPProductClient.html":{},"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/RequestFactory.html":{}}}],["getlocale(requestenvelope",{"_index":72,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/ISPProductClient.html":{}}}],["getlocalizedattributes",{"_index":578,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"classes/LocalizedAttributesFactory.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["getmatchresult",{"_index":1961,"title":{},"body":{"classes/RouteMatcher.html":{}}}],["getmessagegroup",{"_index":1448,"title":{},"body":{"classes/ParameterFactory-1.html":{}}}],["getmessagegroup(group",{"_index":1463,"title":{},"body":{"classes/ParameterFactory-1.html":{}}}],["getmessagestate",{"_index":1447,"title":{},"body":{"classes/ParameterFactory-1.html":{}}}],["getmessagestate(state",{"_index":1462,"title":{},"body":{"classes/ParameterFactory-1.html":{}}}],["getmobilenumber",{"_index":2195,"title":{},"body":{"classes/UserProfileAPIClient.html":{}}}],["getnextstate",{"_index":1255,"title":{},"body":{"interfaces/InitialState.html":{},"interfaces/SkillState.html":{},"classes/StateManager-1.html":{}}}],["getnoentitledproductresponse",{"_index":1788,"title":{},"body":{"classes/RefundContentBuilder.html":{}}}],["getoccasion",{"_index":1427,"title":{},"body":{"classes/ParameterFactory.html":{}}}],["getoccasion(occasion",{"_index":1443,"title":{},"body":{"classes/ParameterFactory.html":{}}}],["getorderstate",{"_index":1530,"title":{},"body":{"classes/ParameterFactory-5.html":{}}}],["getorderstate(orderstate",{"_index":1541,"title":{},"body":{"classes/ParameterFactory-5.html":{}}}],["getparameter",{"_index":572,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["getpayload",{"_index":588,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["getpersistentattributes",{"_index":286,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["getproduct",{"_index":19,"title":{},"body":{"classes/APIClient.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"interfaces/ResponseContent-1.html":{}}}],["getproduct(handlerinput",{"_index":764,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["getproduct(productid",{"_index":46,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["getproductbyid",{"_index":153,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["getproductbyid(productid",{"_index":1217,"title":{},"body":{"classes/ISPProductClient.html":{}}}],["getproductdetail",{"_index":1758,"title":{},"body":{"classes/ProductDetailResponseContentBuilder.html":{}}}],["getproductlists",{"_index":1767,"title":{},"body":{"classes/ProductListResponseContentBuilder.html":{}}}],["getproductname",{"_index":867,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["getproductnotfoundresponse",{"_index":884,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["getproducts",{"_index":157,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["getproductsnotfoundresponse",{"_index":880,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["getprofilename",{"_index":1351,"title":{},"body":{"classes/ListManagementAPIClient.html":{},"classes/UserProfileAPIClient.html":{}}}],["getreferenceid",{"_index":1634,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["getreminder",{"_index":1823,"title":{},"body":{"classes/ReminderAPIClient.html":{}}}],["getreminder(alertid",{"_index":1835,"title":{},"body":{"classes/ReminderAPIClient.html":{}}}],["getreminders",{"_index":1824,"title":{},"body":{"classes/ReminderAPIClient.html":{}}}],["getrequest",{"_index":1281,"title":{},"body":{"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/RequestEnvelopeFactory.html":{},"classes/RequestFactory.html":{},"classes/RouteMatcher.html":{}}}],["getrequest(input",{"_index":1975,"title":{},"body":{"classes/RouteMatcher.html":{}}}],["getrequestattributes",{"_index":283,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["getrequestid",{"_index":1282,"title":{},"body":{"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/RequestFactory.html":{}}}],["getrequestparams",{"_index":1635,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["getrequestparams(accesstoken",{"_index":1659,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["getrequesttype",{"_index":1283,"title":{},"body":{"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/RequestFactory.html":{}}}],["getresponse",{"_index":683,"title":{},"body":{"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"interfaces/ErrorHandlerBuilder.html":{},"classes/ISPContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["getserviceclientfactory",{"_index":1141,"title":{},"body":{"classes/HandlerInputFactory.html":{}}}],["getsession",{"_index":2008,"title":{},"body":{"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{}}}],["getsessionattribute",{"_index":276,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["getsessionattribute(handlerinput",{"_index":304,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["getsessionattributes",{"_index":277,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["getsessionattributes(handlerinput",{"_index":313,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["getsituation",{"_index":1939,"title":{},"body":{"classes/RequestHandlerFactory-1.html":{}}}],["getsituation(route",{"_index":1941,"title":{},"body":{"classes/RequestHandlerFactory-1.html":{}}}],["getstate",{"_index":1245,"title":{},"body":{"interfaces/InitialState.html":{},"interfaces/SkillState.html":{},"classes/StateManager.html":{},"classes/StateManager-1.html":{}}}],["getstate(attributemanager",{"_index":2078,"title":{},"body":{"classes/StateManager.html":{}}}],["getstatefromroute",{"_index":1940,"title":{},"body":{"classes/RequestHandlerFactory-1.html":{}}}],["getstatefromroute(route",{"_index":1947,"title":{},"body":{"classes/RequestHandlerFactory-1.html":{}}}],["getsystem",{"_index":2121,"title":{},"body":{"classes/SystemFactory.html":{}}}],["gettempratureunit",{"_index":2025,"title":{},"body":{"classes/SettingAPIClient.html":{}}}],["gettempratureunit(deviceid",{"_index":2031,"title":{},"body":{"classes/SettingAPIClient.html":{}}}],["gettimestamp",{"_index":1284,"title":{},"body":{"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/RequestFactory.html":{}}}],["gettimezone",{"_index":2026,"title":{},"body":{"classes/SettingAPIClient.html":{}}}],["gettimezone(deviceid",{"_index":2033,"title":{},"body":{"classes/SettingAPIClient.html":{}}}],["getting",{"_index":2209,"title":{"index.html":{}},"body":{"index.html":{}}}],["getunsupportedispresponse",{"_index":871,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["geturl",{"_index":20,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ISPProductClient.html":{}}}],["geturl(path",{"_index":212,"title":{},"body":{"classes/APIClient-1.html":{}}}],["geturl(productid",{"_index":48,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["getuser",{"_index":2183,"title":{},"body":{"classes/UserFactory.html":{}}}],["getweatheralert",{"_index":1545,"title":{},"body":{"classes/ParameterFactory-6.html":{}}}],["getweatheralert(weatheralert",{"_index":1552,"title":{},"body":{"classes/ParameterFactory-6.html":{}}}],["git",{"_index":2239,"title":{},"body":{"index.html":{}}}],["git@github.com:hideokamoto/ask",{"_index":2241,"title":{},"body":{"index.html":{}}}],["glass",{"_index":421,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["goal",{"_index":448,"title":{"interfaces/Goal.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["grant_type=client_credentials",{"_index":1720,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["group",{"_index":1451,"title":{},"body":{"classes/ParameterFactory-1.html":{}}}],["group.count",{"_index":1455,"title":{},"body":{"classes/ParameterFactory-1.html":{}}}],["group.creator",{"_index":1453,"title":{},"body":{"classes/ParameterFactory-1.html":{}}}],["group.urgency",{"_index":1457,"title":{},"body":{"classes/ParameterFactory-1.html":{}}}],["handle",{"_index":716,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"interfaces/ErrorHandlerBuilder.html":{},"classes/FallbackIntentFactory.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"classes/IntentHandlerBuilder.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"interfaces/MergeObjectType.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"classes/RequestHandlerFactory-1.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"miscellaneous/typealiases.html":{}}}],["handle(handler",{"_index":922,"title":{},"body":{"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/FallbackIntentFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{}}}],["handle(handlerinput",{"_index":2083,"title":{},"body":{"classes/StateManager.html":{}}}],["handler",{"_index":734,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"interfaces/ErrorHandlerBuilder.html":{},"classes/FallbackIntentFactory.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"interfaces/HandlerHelpers.html":{},"classes/IntentHandlerBuilder.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/Router.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/Situation.html":{},"interfaces/SituationState.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"index.html":{}}}],["handler.canhandle",{"_index":1081,"title":{},"body":{"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"classes/HandlerFactory.html":{}}}],["handler.handle",{"_index":1083,"title":{},"body":{"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"classes/HandlerFactory.html":{}}}],["handlerbuilder",{"_index":713,"title":{"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{}},"body":{"classes/BuyIntentHandlerBuilder.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"classes/HandlerFactory.html":{},"classes/HandlerFactory-1.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentHandlerFactory.html":{},"classes/LaunchRequestFactory-1.html":{},"classes/LaunchRequestrBuilder.html":{}}}],["handlerbuilder:11",{"_index":727,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"classes/IntentHandlerBuilder.html":{},"classes/LaunchRequestrBuilder.html":{}}}],["handlerbuilder:14",{"_index":738,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"classes/IntentHandlerBuilder.html":{},"classes/LaunchRequestrBuilder.html":{}}}],["handlerbuilder:18",{"_index":736,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"classes/IntentHandlerBuilder.html":{},"classes/LaunchRequestrBuilder.html":{}}}],["handlerbuilder:22",{"_index":740,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"classes/IntentHandlerBuilder.html":{},"classes/LaunchRequestrBuilder.html":{}}}],["handlerbuilder:27",{"_index":733,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"classes/IntentHandlerBuilder.html":{},"classes/LaunchRequestrBuilder.html":{}}}],["handlerbuilder:32",{"_index":730,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"classes/IntentHandlerBuilder.html":{},"classes/LaunchRequestrBuilder.html":{}}}],["handlerbuilder:7",{"_index":726,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"classes/IntentHandlerBuilder.html":{},"classes/LaunchRequestrBuilder.html":{}}}],["handlerbuilder:8",{"_index":725,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"classes/IntentHandlerBuilder.html":{},"classes/LaunchRequestrBuilder.html":{}}}],["handlerbuilderinterface",{"_index":1089,"title":{"interfaces/HandlerBuilderInterface.html":{}},"body":{"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{}}}],["handleresponse",{"_index":1100,"title":{},"body":{"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"miscellaneous/typealiases.html":{}}}],["handlerfactory",{"_index":1086,"title":{"classes/HandlerFactory.html":{},"classes/HandlerFactory-1.html":{}},"body":{"classes/HandlerBuilder.html":{},"classes/HandlerFactory.html":{},"classes/HandlerFactory-1.html":{},"classes/IntentHandlerFactory.html":{},"classes/LaunchRequestFactory-1.html":{}}}],["handlerfilter",{"_index":1009,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["handlerfilter(handlerinput",{"_index":1016,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["handlerhelpers",{"_index":1124,"title":{"interfaces/HandlerHelpers.html":{}},"body":{"interfaces/HandlerHelpers.html":{},"interfaces/Router.html":{},"interfaces/Situation.html":{},"interfaces/SituationState.html":{}}}],["handlerinput",{"_index":55,"title":{},"body":{"classes/APIClient.html":{},"interfaces/AttributeType.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/ConstantsInterceptorFactory.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"interfaces/ErrorHandlerBuilder.html":{},"classes/FallbackIntentFactory.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"interfaces/HandlerHelpers.html":{},"classes/HandlerInputFactory.html":{},"classes/ISPProductClient.html":{},"classes/IntentHandlerBuilder.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"interfaces/MergeObjectType.html":{},"classes/MockAttributeManager.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"classes/RequestHandlerFactory-1.html":{},"classes/RouteMatcher.html":{},"interfaces/Router.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/Situation.html":{},"interfaces/SituationState.html":{},"interfaces/SkillConstants.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{}}}],["handlerinput.attributesmanager",{"_index":119,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["handlerinput.attributesmanager.getpersistentattributes",{"_index":781,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["handlerinput.attributesmanager.getsessionattributes",{"_index":780,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["handlerinput.attributesmanager.savepersistentattributes",{"_index":786,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["handlerinput.attributesmanager.setpersistentattributes(nextattributes",{"_index":785,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["handlerinput.requestenvelope",{"_index":1013,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["handlerinput.requestenvelope.request.type",{"_index":2081,"title":{},"body":{"classes/StateManager.html":{}}}],["handlerinput.responsebuilder",{"_index":787,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["handlerinput.responsebuilder.getresponse",{"_index":925,"title":{},"body":{"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/FallbackIntentFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{}}}],["handlerinputfactory",{"_index":1137,"title":{"classes/HandlerInputFactory.html":{}},"body":{"classes/HandlerInputFactory.html":{}}}],["handlers",{"_index":1026,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{},"index.html":{}}}],["handlers.errorhandlers",{"_index":2066,"title":{},"body":{"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{}}}],["handlers.errorhandlers.concat(errorhandlers",{"_index":2067,"title":{},"body":{"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{}}}],["handlers.requesthandlers.push(handler",{"_index":2059,"title":{},"body":{"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{}}}],["handlers.requestinterceptors",{"_index":2060,"title":{},"body":{"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{}}}],["handlers.requestinterceptors.push(interceptor",{"_index":2062,"title":{},"body":{"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{}}}],["handlers.responseinterceptors",{"_index":2063,"title":{},"body":{"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{}}}],["handlers.responseinterceptors.push(interceptor",{"_index":2065,"title":{},"body":{"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{}}}],["handlers/libs/index.ts",{"_index":981,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{},"miscellaneous/typealiases.html":{}}}],["handlers/libs/index.ts:10",{"_index":985,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{}}}],["handlers/libs/index.ts:38",{"_index":1993,"title":{},"body":{"classes/SentryErrorHandlerFactory.html":{}}}],["handlers/libs/index.ts:8",{"_index":983,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{}}}],["handlers/libs/index.ts:9",{"_index":987,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{}}}],["handling",{"_index":818,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{}}}],["hasproducts",{"_index":138,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["hasstate",{"_index":1251,"title":{},"body":{"interfaces/InitialState.html":{},"interfaces/SkillState.html":{},"classes/StateManager-1.html":{}}}],["hazardous",{"_index":422,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["headers",{"_index":83,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ISPProductClient.html":{},"classes/ProactiveClient.html":{}}}],["hello",{"_index":2073,"title":{},"body":{"classes/StateManager.html":{}}}],["help",{"_index":821,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{}}}],["helper",{"_index":1426,"title":{},"body":{"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{}}}],["helpers",{"_index":746,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"interfaces/HandlerHelpers.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/RouteMatcher.html":{},"interfaces/Router.html":{},"interfaces/Situation.html":{},"interfaces/SituationState.html":{},"index.html":{}}}],["home_appliances",{"_index":423,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["hometeamstatistic",{"_index":454,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-3.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["hometeamstatistic.score",{"_index":1500,"title":{},"body":{"classes/ParameterFactory-3.html":{}}}],["hometeamstatistic.team.name",{"_index":1499,"title":{},"body":{"classes/ParameterFactory-3.html":{}}}],["https://api.amazon.com/auth/o2/token",{"_index":1714,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["https://api.amazonalexa.com",{"_index":1856,"title":{},"body":{"classes/RequestEnvelopeFactory.html":{},"classes/SystemFactory.html":{}}}],["https://api.amazonalexa.com/v1/proactiveevents",{"_index":537,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["https://api.amazonalexa.com/v1/proactiveevents/stages/development",{"_index":541,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["https://api.eu.amazonalexa.com/v1/proactiveevents",{"_index":538,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["https://api.eu.amazonalexa.com/v1/proactiveevents/stages/development",{"_index":542,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["https://api.fe.amazonalexa.com/v1/proactiveevents",{"_index":539,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["https://api.fe.amazonalexa.com/v1/proactiveevents/stages/development",{"_index":543,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["https://ask",{"_index":2213,"title":{},"body":{"index.html":{}}}],["https://developer.amazon.com/docs/flashbriefing/flash",{"_index":1056,"title":{},"body":{"interfaces/FlashBriefingContent.html":{}}}],["https://github.com/ask",{"_index":2221,"title":{},"body":{"index.html":{}}}],["https://www.npmjs.com/package/@ask",{"_index":2220,"title":{},"body":{"index.html":{}}}],["hurricane",{"_index":442,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["id",{"_index":152,"title":{},"body":{"classes/APIClient.html":{},"classes/ApplicationFactory.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/ISPProductClient.html":{},"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/ProactiveClient.html":{},"classes/RequestFactory.html":{},"classes/SystemFactory.html":{}}}],["implements",{"_index":280,"title":{},"body":{"interfaces/AttributeType.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/FallbackIntentFactory.html":{},"classes/HandlerBuilder-1.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/MockAttributeManager.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{}}}],["import",{"_index":51,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"interfaces/AlexaSpeechComponentProps.html":{},"classes/ApplicationFactory.html":{},"interfaces/AttributeType.html":{},"interfaces/BaseSkillConfig.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ContextFactory.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/DeviceAPIClient.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/ErrorHandlerBuilder.html":{},"classes/FallbackIntentFactory.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"classes/HandlerFactory-1.html":{},"interfaces/HandlerHelpers.html":{},"classes/HandlerInputFactory.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"interfaces/InitialState.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentHandlerFactory.html":{},"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestFactory-1.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/ListManagementAPIClient.html":{},"classes/LocalizedAttributesFactory.html":{},"interfaces/MergeObjectType.html":{},"classes/MockAttributeManager.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"classes/ProactiveClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"interfaces/ProgressiveResponse.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"classes/ReminderAPIClient.html":{},"classes/RequestEnvelopeFactory.html":{},"classes/RequestFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"classes/RequestHandlerFactory-1.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"classes/RouteMatcher.html":{},"interfaces/Router.html":{},"interfaces/S3SkillConfig.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{},"classes/SettingAPIClient.html":{},"interfaces/Situation.html":{},"interfaces/SituationState.html":{},"interfaces/SkillConstants.html":{},"interfaces/SkillHandlers.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{},"interfaces/SkillState.html":{},"interfaces/SpeechScriptResponse.html":{},"classes/StateManager.html":{},"classes/StateManager-1.html":{},"classes/SystemFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"classes/UserFactory.html":{},"classes/UserProfileAPIClient.html":{}}}],["includesbeforestate",{"_index":1263,"title":{},"body":{"interfaces/InitialState.html":{},"interfaces/SkillState.html":{},"classes/StateManager-1.html":{}}}],["includesbeforestate(state",{"_index":2109,"title":{},"body":{"classes/StateManager-1.html":{}}}],["includesnextstate",{"_index":1261,"title":{},"body":{"interfaces/InitialState.html":{},"interfaces/SkillState.html":{},"classes/StateManager-1.html":{}}}],["includesnextstate(state",{"_index":2111,"title":{},"body":{"classes/StateManager-1.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"interfaces/AlexaSpeechComponentProps.html":{},"classes/ApplicationFactory.html":{},"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/BaseSkillConfig.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ContextFactory.html":{},"interfaces/CreativeWork.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"classes/DeviceAPIClient.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/ErrorHandlerBuilder.html":{},"interfaces/Factory.html":{},"classes/FallbackIntentFactory.html":{},"interfaces/FlashBriefingContent.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"classes/HandlerFactory-1.html":{},"interfaces/HandlerHelpers.html":{},"classes/HandlerInputFactory.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"interfaces/InitialState.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentHandlerFactory.html":{},"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestFactory-1.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/ListManagementAPIClient.html":{},"interfaces/LocalizedAttribute.html":{},"classes/LocalizedAttributesFactory.html":{},"interfaces/MergeObjectType.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"classes/MockAttributeManager.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"interfaces/ProgressiveResponse.html":{},"interfaces/Props.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/RelevantAudience.html":{},"classes/ReminderAPIClient.html":{},"classes/RequestEnvelopeFactory.html":{},"classes/RequestFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"classes/RequestHandlerFactory-1.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"classes/RouteMatcher.html":{},"interfaces/Router.html":{},"interfaces/S3SkillConfig.html":{},"classes/SentryErrorHandlerFactory.html":{},"classes/SessionFactory.html":{},"classes/SettingAPIClient.html":{},"interfaces/Situation.html":{},"interfaces/SituationState.html":{},"interfaces/Skill.html":{},"interfaces/SkillHandlers.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{},"interfaces/SkillState.html":{},"interfaces/Soccer.html":{},"interfaces/SpeechScriptResponse.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"classes/StateManager.html":{},"classes/StateManager-1.html":{},"classes/SystemFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"interfaces/Thing.html":{},"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{},"interfaces/TrashCollectionAlert.html":{},"classes/UserFactory.html":{},"classes/UserProfileAPIClient.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["indexable",{"_index":272,"title":{},"body":{"interfaces/AttributeType.html":{},"interfaces/DBItem.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/SessionAttribute.html":{},"interfaces/SkillConstants.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"interfaces/AlexaSpeechComponentProps.html":{},"classes/ApplicationFactory.html":{},"interfaces/AttributeType.html":{},"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/BaseSkillConfig.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ContextFactory.html":{},"interfaces/CreativeWork.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/DeviceAPIClient.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/ErrorHandlerBuilder.html":{},"interfaces/Factory.html":{},"classes/FallbackIntentFactory.html":{},"interfaces/FlashBriefingContent.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"classes/HandlerFactory-1.html":{},"interfaces/HandlerHelpers.html":{},"classes/HandlerInputFactory.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"interfaces/InitialState.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentHandlerFactory.html":{},"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestFactory-1.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/ListManagementAPIClient.html":{},"interfaces/LocalizedAttribute.html":{},"classes/LocalizedAttributesFactory.html":{},"interfaces/MergeObjectType.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"classes/MockAttributeManager.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"interfaces/ProgressiveResponse.html":{},"interfaces/Props.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/RelevantAudience.html":{},"classes/ReminderAPIClient.html":{},"classes/RequestEnvelopeFactory.html":{},"classes/RequestFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"classes/RequestHandlerFactory-1.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"classes/RouteMatcher.html":{},"interfaces/Router.html":{},"interfaces/S3SkillConfig.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{},"classes/SettingAPIClient.html":{},"interfaces/Situation.html":{},"interfaces/SituationState.html":{},"interfaces/Skill.html":{},"interfaces/SkillConstants.html":{},"interfaces/SkillHandlers.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{},"interfaces/SkillState.html":{},"interfaces/Soccer.html":{},"interfaces/SpeechScriptResponse.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"classes/StateManager.html":{},"classes/StateManager-1.html":{},"classes/SystemFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"interfaces/Thing.html":{},"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{},"interfaces/TrashCollectionAlert.html":{},"classes/UserFactory.html":{},"classes/UserProfileAPIClient.html":{},"interfaces/WeatherAlert.html":{}}}],["information",{"_index":1023,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["inherited",{"_index":690,"title":{},"body":{"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{}}}],["init",{"_index":825,"title":{},"body":{"classes/ConstantsInterceptorFactory.html":{},"interfaces/ErrorHandlerBuilder.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerFactory.html":{},"classes/HandlerFactory-1.html":{},"classes/IntentHandlerFactory.html":{},"classes/LaunchRequestFactory-1.html":{},"classes/LocalizedAttributesFactory.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/SkillConstants.html":{},"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{}}}],["init(constants",{"_index":826,"title":{},"body":{"classes/ConstantsInterceptorFactory.html":{}}}],["init(intentname",{"_index":1272,"title":{},"body":{"classes/IntentHandlerFactory.html":{}}}],["init(type",{"_index":1111,"title":{},"body":{"classes/HandlerFactory-1.html":{}}}],["initialstate",{"_index":1229,"title":{"interfaces/InitialState.html":{}},"body":{"interfaces/InitialState.html":{},"classes/RequestHandlerFactory-1.html":{},"interfaces/SkillState.html":{},"classes/StateManager-1.html":{}}}],["initialstate.current",{"_index":1236,"title":{},"body":{"interfaces/InitialState.html":{},"interfaces/SkillState.html":{},"classes/StateManager-1.html":{}}}],["initialstate.next",{"_index":1237,"title":{},"body":{"interfaces/InitialState.html":{},"interfaces/SkillState.html":{},"classes/StateManager-1.html":{}}}],["input",{"_index":916,"title":{},"body":{"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/FallbackIntentFactory.html":{},"interfaces/HandlerHelpers.html":{},"classes/HandlerInputFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"classes/RequestHandlerFactory-1.html":{},"classes/RouteMatcher.html":{},"interfaces/Router.html":{},"interfaces/Situation.html":{},"interfaces/SituationState.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{}}}],["input.responsebuilder.withshouldendsession(situation.shouldendsession",{"_index":1956,"title":{},"body":{"classes/RequestHandlerFactory-1.html":{}}}],["inskillproduct",{"_index":64,"title":{},"body":{"classes/APIClient.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/ProductListResponseContentBuilder.html":{},"interfaces/ResponseContent-1.html":{},"miscellaneous/typealiases.html":{}}}],["inskillproducts",{"_index":66,"title":{},"body":{"classes/APIClient.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/ISPProductClient.html":{},"miscellaneous/typealiases.html":{}}}],["inskillproductsresponse",{"_index":62,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["intent",{"_index":1115,"title":{},"body":{"classes/HandlerFactory-1.html":{},"classes/IntentHandlerFactory.html":{},"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{},"classes/LaunchRequestFactory-1.html":{},"classes/RouteMatcher.html":{}}}],["intenthandlerbuilder",{"_index":1114,"title":{"classes/IntentHandlerBuilder.html":{}},"body":{"classes/HandlerFactory-1.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentHandlerFactory.html":{},"classes/LaunchRequestFactory-1.html":{}}}],["intenthandlerbuilder(intentname",{"_index":1120,"title":{},"body":{"classes/HandlerFactory-1.html":{},"classes/IntentHandlerFactory.html":{},"classes/LaunchRequestFactory-1.html":{}}}],["intenthandlerfactory",{"_index":1117,"title":{"classes/IntentHandlerFactory.html":{}},"body":{"classes/HandlerFactory-1.html":{},"classes/IntentHandlerFactory.html":{},"classes/LaunchRequestFactory-1.html":{}}}],["intenthandlerfactory.init(intentname",{"_index":1122,"title":{},"body":{"classes/HandlerFactory-1.html":{},"classes/IntentHandlerFactory.html":{},"classes/LaunchRequestFactory-1.html":{}}}],["intentname",{"_index":1112,"title":{},"body":{"classes/HandlerFactory-1.html":{},"interfaces/HandlerHelpers.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentHandlerFactory.html":{},"classes/LaunchRequestFactory-1.html":{},"interfaces/Router.html":{},"interfaces/Situation.html":{},"interfaces/SituationState.html":{}}}],["intentrequest",{"_index":1121,"title":{},"body":{"classes/HandlerFactory-1.html":{},"classes/IntentHandlerFactory.html":{},"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{},"classes/LaunchRequestFactory-1.html":{}}}],["intentrequestfactory",{"_index":1274,"title":{"classes/IntentRequestFactory.html":{}},"body":{"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{}}}],["interceptors",{"_index":2232,"title":{},"body":{"index.html":{}}}],["interest",{"_index":811,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{}}}],["interface",{"_index":232,"title":{"interfaces/AlexaSpeechComponentProps.html":{},"interfaces/AttributeType.html":{},"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/BaseSkillConfig.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/ErrorHandlerBuilder.html":{},"interfaces/Factory.html":{},"interfaces/FlashBriefingContent.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/HandlerBuilderInterface.html":{},"interfaces/HandlerHelpers.html":{},"interfaces/InitialState.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MergeObjectType.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/ProgressiveResponse.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequestHandlerBuilder.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"interfaces/Router.html":{},"interfaces/S3SkillConfig.html":{},"interfaces/SessionAttribute.html":{},"interfaces/Situation.html":{},"interfaces/SituationState.html":{},"interfaces/Skill.html":{},"interfaces/SkillConstants.html":{},"interfaces/SkillHandlers.html":{},"interfaces/SkillHandlersBuilder.html":{},"interfaces/SkillState.html":{},"interfaces/Soccer.html":{},"interfaces/SpeechScriptResponse.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"interfaces/Thing.html":{},"interfaces/TranslationBuilder.html":{},"interfaces/TranslationObject.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}},"body":{"interfaces/AlexaSpeechComponentProps.html":{},"interfaces/AttributeType.html":{},"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/BaseSkillConfig.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"interfaces/CreativeWork.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/ErrorHandlerBuilder.html":{},"interfaces/Factory.html":{},"classes/FallbackIntentFactory.html":{},"interfaces/FlashBriefingContent.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/HandlerBuilderInterface.html":{},"interfaces/HandlerHelpers.html":{},"classes/ISPContentBuilder.html":{},"interfaces/InitialState.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MergeObjectType.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"classes/MockAttributeManager.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/ProgressiveResponse.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"interfaces/Router.html":{},"interfaces/S3SkillConfig.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{},"interfaces/Situation.html":{},"interfaces/SituationState.html":{},"interfaces/Skill.html":{},"interfaces/SkillConstants.html":{},"interfaces/SkillHandlers.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{},"interfaces/SkillState.html":{},"interfaces/Soccer.html":{},"interfaces/SpeechScriptResponse.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"classes/StateManager-1.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"interfaces/Thing.html":{},"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["interfaces",{"_index":234,"title":{},"body":{"interfaces/AlexaSpeechComponentProps.html":{},"interfaces/AttributeType.html":{},"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/BaseSkillConfig.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/ErrorHandlerBuilder.html":{},"interfaces/Factory.html":{},"classes/FallbackIntentFactory.html":{},"interfaces/FlashBriefingContent.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/HandlerBuilderInterface.html":{},"interfaces/HandlerHelpers.html":{},"interfaces/InitialState.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/LocalizedAttribute.html":{},"classes/LocalizedAttributesFactory.html":{},"interfaces/MergeObjectType.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/ProgressiveResponse.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"interfaces/Router.html":{},"interfaces/S3SkillConfig.html":{},"interfaces/SessionAttribute.html":{},"interfaces/Situation.html":{},"interfaces/SituationState.html":{},"interfaces/Skill.html":{},"interfaces/SkillConstants.html":{},"interfaces/SkillHandlers.html":{},"interfaces/SkillHandlersBuilder.html":{},"interfaces/SkillState.html":{},"interfaces/Soccer.html":{},"interfaces/SpeechScriptResponse.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"classes/SystemFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"interfaces/Thing.html":{},"interfaces/TranslationBuilder.html":{},"interfaces/TranslationObject.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"overview.html":{}}}],["interfaces.localizedattributes.factory",{"_index":1398,"title":{},"body":{"classes/LocalizedAttributesFactory.html":{}}}],["interfaces.mediacontent",{"_index":1469,"title":{},"body":{"classes/ParameterFactory-2.html":{}}}],["interfaces.messagealert",{"_index":1449,"title":{},"body":{"classes/ParameterFactory-1.html":{}}}],["interfaces.occasion",{"_index":1428,"title":{},"body":{"classes/ParameterFactory.html":{}}}],["interfaces.orderstatus",{"_index":1531,"title":{},"body":{"classes/ParameterFactory-5.html":{}}}],["interfaces.payloadbuilder",{"_index":590,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["interfaces.resolvetarget",{"_index":921,"title":{},"body":{"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/FallbackIntentFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{}}}],["interfaces.socialgameinvite",{"_index":1512,"title":{},"body":{"classes/ParameterFactory-4.html":{}}}],["interfaces.sportsevent",{"_index":1488,"title":{},"body":{"classes/ParameterFactory-3.html":{}}}],["interfaces.system.systemstate",{"_index":2144,"title":{},"body":{"classes/SystemFactory.html":{}}}],["interfaces.trashcollectionalert",{"_index":1556,"title":{},"body":{"classes/ParameterFactory-7.html":{}}}],["interfaces.weatheralert",{"_index":1546,"title":{},"body":{"classes/ParameterFactory-6.html":{}}}],["internal",{"_index":1748,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["invalid",{"_index":1322,"title":{},"body":{"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{}}}],["invalidintentrequestexception",{"_index":1321,"title":{"classes/InvalidIntentRequestException.html":{}},"body":{"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{}}}],["invite",{"_index":360,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-4.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["invite.inviter.name",{"_index":1515,"title":{},"body":{"classes/ParameterFactory-4.html":{}}}],["invite.invitetype",{"_index":1520,"title":{},"body":{"classes/ParameterFactory-4.html":{}}}],["invite.relationshiptoinvitee",{"_index":1518,"title":{},"body":{"classes/ParameterFactory-4.html":{}}}],["inviter",{"_index":365,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-4.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["invitetype",{"_index":358,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["isauthresponse",{"_index":1694,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["isauthresponse(response.data",{"_index":1723,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["isdebug",{"_index":11,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/ISPProductClient.html":{}}}],["ishellostate",{"_index":2077,"title":{},"body":{"classes/StateManager.html":{}}}],["ishellostate(handlerinput.attributesmanager",{"_index":2082,"title":{},"body":{"classes/StateManager.html":{}}}],["isintentrequesttype",{"_index":1971,"title":{},"body":{"classes/RouteMatcher.html":{}}}],["isintentrequesttype(this.request",{"_index":1984,"title":{},"body":{"classes/RouteMatcher.html":{}}}],["isisp",{"_index":656,"title":{},"body":{"interfaces/BaseSkillConfig.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/S3SkillConfig.html":{},"interfaces/SkillHandlers.html":{}}}],["isjp",{"_index":684,"title":{},"body":{"classes/BuyContentBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{}}}],["islaunchrequest",{"_index":913,"title":{},"body":{"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/FallbackIntentFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{}}}],["islaunchrequest(handlerinput",{"_index":934,"title":{},"body":{"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/FallbackIntentFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{}}}],["ismatchedintent",{"_index":742,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"classes/IntentHandlerBuilder.html":{}}}],["ismatchedintent(handlerinput",{"_index":754,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"classes/IntentHandlerBuilder.html":{}}}],["ismatchedispstate",{"_index":745,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["ismatchedispstate(handlerinput.attributesmanager",{"_index":757,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["ismatchedstate",{"_index":2084,"title":{},"body":{"classes/StateManager.html":{}}}],["ismatchedstate(attributemanager",{"_index":2088,"title":{},"body":{"classes/StateManager.html":{}}}],["isnewsession",{"_index":2005,"title":{},"body":{"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{}}}],["isnewsession(status",{"_index":2011,"title":{},"body":{"classes/SessionFactory.html":{}}}],["isp",{"_index":100,"title":{},"body":{"classes/APIClient.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"interfaces/ResponseContent-1.html":{},"index.html":{}}}],["ispcontentbuilder",{"_index":861,"title":{"classes/ISPContentBuilder.html":{}},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["isplastsessionattribtes",{"_index":784,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["ispproductclient",{"_index":108,"title":{"classes/ISPProductClient.html":{}},"body":{"classes/APIClient.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/ISPProductClient.html":{}}}],["ispproductclient(handlerinput",{"_index":765,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["isproduction",{"_index":550,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["ispstate",{"_index":2270,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["isskillevent",{"_index":1406,"title":{},"body":{"interfaces/MergeObjectType.html":{}}}],["isstate",{"_index":1238,"title":{},"body":{"interfaces/InitialState.html":{},"interfaces/SkillState.html":{},"classes/StateManager-1.html":{}}}],["isstate(state",{"_index":2113,"title":{},"body":{"classes/StateManager-1.html":{}}}],["isyesintent",{"_index":741,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["isyesintent(handlerinput",{"_index":756,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["it('should",{"_index":300,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["item",{"_index":126,"title":{},"body":{"classes/APIClient.html":{},"classes/ContentBuilder-1.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RequestFactory.html":{},"interfaces/ResponseContent-1.html":{}}}],["itemid",{"_index":1366,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["j",{"_index":102,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/ISPProductClient.html":{}}}],["ja",{"_index":329,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["ja/.test(locale",{"_index":770,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["ja/.test(this.locale",{"_index":844,"title":{},"body":{"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{}}}],["join",{"_index":808,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ProactiveClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["join('next",{"_index":1784,"title":{},"body":{"classes/ProductListResponseContentBuilder.html":{}}}],["jp",{"_index":330,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["json.stringify(handlerinput",{"_index":1076,"title":{},"body":{"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"classes/HandlerFactory.html":{}}}],["jsx.element",{"_index":254,"title":{},"body":{"interfaces/AlexaSpeechComponentProps.html":{},"interfaces/ProgressiveResponse.html":{},"interfaces/SpeechScriptResponse.html":{}}}],["key",{"_index":273,"title":{},"body":{"interfaces/AttributeType.html":{},"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"classes/ConstantsInterceptorFactory.html":{},"interfaces/CreativeWork.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"interfaces/ErrorHandlerBuilder.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"classes/LocalizedAttributesFactory.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"classes/MockAttributeManager.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{},"interfaces/Skill.html":{},"interfaces/SkillConstants.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["kitchen_waste",{"_index":424,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["lambda",{"_index":1030,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["landfill",{"_index":425,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["lang",{"_index":2177,"title":{},"body":{"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{}}}],["language",{"_index":87,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ISPProductClient.html":{}}}],["languagestrings",{"_index":2176,"title":{},"body":{"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{}}}],["languagestrings[locale",{"_index":2178,"title":{},"body":{"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{}}}],["launchrequest",{"_index":928,"title":{},"body":{"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/FallbackIntentFactory.html":{},"classes/HandlerFactory-1.html":{},"classes/IntentHandlerFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestFactory-1.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"classes/StateManager.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{}}}],["launchrequestbuilder",{"_index":1116,"title":{},"body":{"classes/HandlerFactory-1.html":{},"classes/IntentHandlerFactory.html":{},"classes/LaunchRequestFactory-1.html":{}}}],["launchrequestfactory",{"_index":1123,"title":{"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestFactory-1.html":{}},"body":{"classes/HandlerFactory-1.html":{},"classes/IntentHandlerFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestFactory-1.html":{}}}],["launchrequesthandlerfactory",{"_index":930,"title":{"classes/LaunchRequestHandlerFactory.html":{}},"body":{"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/FallbackIntentFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{}}}],["launchrequestrbuilder",{"_index":1339,"title":{"classes/LaunchRequestrBuilder.html":{}},"body":{"classes/LaunchRequestrBuilder.html":{}}}],["libs/attributemanager",{"_index":278,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["line",{"_index":93,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"interfaces/AttributeType.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/ISPProductClient.html":{},"interfaces/InitialState.html":{},"classes/MockAttributeManager.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"classes/ProactiveClient.html":{},"interfaces/SkillState.html":{},"classes/StateManager-1.html":{}}}],["lint",{"_index":2248,"title":{},"body":{"index.html":{}}}],["list",{"_index":160,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{},"classes/ProductListResponseContentBuilder.html":{}}}],["listid",{"_index":1362,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["listid}/items",{"_index":1391,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["listid}/items/${itemid",{"_index":1392,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["listmanagement",{"_index":1381,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["listmanagement.createlistitemrequest",{"_index":1360,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["listmanagement.createlistrequest",{"_index":1357,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["listmanagement.updatelistitemrequest",{"_index":1379,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["listmanagement.updatelistrequest",{"_index":1376,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["listmanagementapiclient",{"_index":1342,"title":{"classes/ListManagementAPIClient.html":{}},"body":{"classes/ListManagementAPIClient.html":{}}}],["listproducts",{"_index":21,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{},"classes/ProductListResponseContentBuilder.html":{}}}],["liststatus",{"_index":1369,"title":{},"body":{"classes/ListManagementAPIClient.html":{},"miscellaneous/typealiases.html":{}}}],["literal",{"_index":1222,"title":{},"body":{"classes/ISPProductClient.html":{},"interfaces/Order.html":{},"classes/ProactiveClient.html":{},"interfaces/RequstBody.html":{},"interfaces/TranslationBuilder.html":{},"interfaces/TranslationObject.html":{},"miscellaneous/typealiases.html":{}}}],["locale",{"_index":12,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{},"classes/LaunchRequestFactory.html":{},"interfaces/LocalizedAttribute.html":{},"classes/LocalizedAttributesFactory.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"interfaces/Props.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/RelevantAudience.html":{},"classes/RequestFactory.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["localizedattribute",{"_index":474,"title":{"interfaces/LocalizedAttribute.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["localizedattribute:brokername",{"_index":383,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["localizedattribute:contentname",{"_index":353,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-2.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["localizedattribute:eventleaguename",{"_index":1491,"title":{},"body":{"classes/ParameterFactory-3.html":{}}}],["localizedattribute:gamename",{"_index":367,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-4.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["localizedattribute:providername",{"_index":347,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-2.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["localizedattribute:sellername",{"_index":405,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-5.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["localizedattribute:source",{"_index":446,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-6.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["localizedattribute:subject",{"_index":386,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["localizedattributes",{"_index":475,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"classes/LocalizedAttributesFactory.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["localizedattributes.push",{"_index":1399,"title":{},"body":{"classes/LocalizedAttributesFactory.html":{}}}],["localizedattributesfactory",{"_index":1395,"title":{"classes/LocalizedAttributesFactory.html":{}},"body":{"classes/LocalizedAttributesFactory.html":{}}}],["maintext",{"_index":1059,"title":{},"body":{"interfaces/FlashBriefingContent.html":{}}}],["manager",{"_index":2070,"title":{},"body":{"classes/StateManager.html":{}}}],["match",{"_index":356,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"classes/RouteMatcher.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["matchedcurrentstate",{"_index":1259,"title":{},"body":{"interfaces/InitialState.html":{},"interfaces/SkillState.html":{},"classes/StateManager-1.html":{}}}],["matchedcurrentstate(state",{"_index":2115,"title":{},"body":{"classes/StateManager-1.html":{}}}],["matcher",{"_index":1938,"title":{},"body":{"classes/RequestHandlerFactory-1.html":{},"classes/RouteMatcher.html":{}}}],["matcher.getmatchresult",{"_index":1950,"title":{},"body":{"classes/RequestHandlerFactory-1.html":{}}}],["matcher.match",{"_index":1949,"title":{},"body":{"classes/RequestHandlerFactory-1.html":{}}}],["matching",{"_index":192,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"interfaces/AlexaSpeechComponentProps.html":{},"classes/ApplicationFactory.html":{},"interfaces/AttributeType.html":{},"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/BaseSkillConfig.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ContextFactory.html":{},"interfaces/CreativeWork.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/DeviceAPIClient.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/ErrorHandlerBuilder.html":{},"interfaces/Factory.html":{},"classes/FallbackIntentFactory.html":{},"interfaces/FlashBriefingContent.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"classes/HandlerFactory-1.html":{},"interfaces/HandlerHelpers.html":{},"classes/HandlerInputFactory.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"interfaces/InitialState.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentHandlerFactory.html":{},"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestFactory-1.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/ListManagementAPIClient.html":{},"interfaces/LocalizedAttribute.html":{},"classes/LocalizedAttributesFactory.html":{},"interfaces/MergeObjectType.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"classes/MockAttributeManager.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"interfaces/ProgressiveResponse.html":{},"interfaces/Props.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/RelevantAudience.html":{},"classes/ReminderAPIClient.html":{},"classes/RequestEnvelopeFactory.html":{},"classes/RequestFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"classes/RequestHandlerFactory-1.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"classes/RouteMatcher.html":{},"interfaces/Router.html":{},"interfaces/S3SkillConfig.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{},"classes/SettingAPIClient.html":{},"interfaces/Situation.html":{},"interfaces/SituationState.html":{},"interfaces/Skill.html":{},"interfaces/SkillConstants.html":{},"interfaces/SkillHandlers.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{},"interfaces/SkillState.html":{},"interfaces/Soccer.html":{},"interfaces/SpeechScriptResponse.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"classes/StateManager.html":{},"classes/StateManager-1.html":{},"classes/SystemFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"interfaces/Thing.html":{},"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{},"interfaces/TrashCollectionAlert.html":{},"classes/UserFactory.html":{},"classes/UserProfileAPIClient.html":{},"interfaces/WeatherAlert.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["meaning",{"_index":1003,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["mediacontent",{"_index":521,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-2.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["mediacontent.available.payloadbuilder",{"_index":1470,"title":{},"body":{"classes/ParameterFactory-2.html":{}}}],["mediacontent.eventname",{"_index":485,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["mediacontent.payload",{"_index":494,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["mediatype",{"_index":333,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["member",{"_index":115,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["merge",{"_index":923,"title":{},"body":{"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/FallbackIntentFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{}}}],["merge(handler",{"_index":933,"title":{},"body":{"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/FallbackIntentFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{}}}],["mergehandler",{"_index":1404,"title":{},"body":{"interfaces/MergeObjectType.html":{}}}],["mergeobject",{"_index":1405,"title":{},"body":{"interfaces/MergeObjectType.html":{}}}],["mergeobjecttype",{"_index":1400,"title":{"interfaces/MergeObjectType.html":{}},"body":{"interfaces/MergeObjectType.html":{}}}],["mergesessionattributes",{"_index":1240,"title":{},"body":{"interfaces/InitialState.html":{},"interfaces/SkillState.html":{},"classes/StateManager-1.html":{}}}],["message",{"_index":569,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/ErrorHandlerBuilder.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["messagealert",{"_index":510,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-1.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["messagealert.activated.payloadbuilder",{"_index":1450,"title":{},"body":{"classes/ParameterFactory-1.html":{}}}],["messagealert.eventname",{"_index":482,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["messagealert.payload",{"_index":491,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["messagefreshness",{"_index":463,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["messagegroup",{"_index":469,"title":{"interfaces/MessageGroup.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-1.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["messages",{"_index":2171,"title":{},"body":{"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{}}}],["messagestate",{"_index":460,"title":{"interfaces/MessageState.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["messagestatus",{"_index":461,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-1.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["messageurgent",{"_index":467,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["method",{"_index":81,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/ISPProductClient.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-2.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["methods",{"_index":14,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ApplicationFactory.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ContextFactory.html":{},"classes/DBClient.html":{},"classes/DeviceAPIClient.html":{},"interfaces/ErrorHandlerBuilder.html":{},"interfaces/Factory.html":{},"classes/FallbackIntentFactory.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"classes/HandlerFactory-1.html":{},"classes/HandlerInputFactory.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentHandlerFactory.html":{},"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestFactory-1.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/ListManagementAPIClient.html":{},"classes/LocalizedAttributesFactory.html":{},"classes/MockAttributeManager.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"classes/ProactiveClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"classes/ReminderAPIClient.html":{},"classes/RequestEnvelopeFactory.html":{},"classes/RequestFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"classes/RequestHandlerFactory-1.html":{},"classes/RouteMatcher.html":{},"classes/SentryErrorHandlerFactory.html":{},"classes/SessionFactory.html":{},"classes/SettingAPIClient.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{},"classes/StateManager.html":{},"classes/StateManager-1.html":{},"classes/SystemFactory.html":{},"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"classes/UserFactory.html":{},"classes/UserProfileAPIClient.html":{}}}],["miscellaneous",{"_index":2258,"title":{"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/typealiases.html":{}}}],["mockattributemanager",{"_index":279,"title":{"classes/MockAttributeManager.html":{}},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["model",{"_index":61,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"interfaces/AlexaSpeechComponentProps.html":{},"classes/ApplicationFactory.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ContextFactory.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/DeviceAPIClient.html":{},"interfaces/ErrorHandlerBuilder.html":{},"classes/FallbackIntentFactory.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"classes/HandlerFactory-1.html":{},"interfaces/HandlerHelpers.html":{},"classes/HandlerInputFactory.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentHandlerFactory.html":{},"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestFactory-1.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/ListManagementAPIClient.html":{},"classes/LocalizedAttributesFactory.html":{},"interfaces/MergeObjectType.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"classes/ProactiveClient.html":{},"classes/ProductListResponseContentBuilder.html":{},"interfaces/ProgressiveResponse.html":{},"classes/ReminderAPIClient.html":{},"classes/RequestEnvelopeFactory.html":{},"classes/RequestFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"classes/RequestHandlerFactory-1.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"classes/RouteMatcher.html":{},"interfaces/Router.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{},"classes/SettingAPIClient.html":{},"interfaces/Situation.html":{},"interfaces/SituationState.html":{},"interfaces/SpeechScriptResponse.html":{},"classes/SystemFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"classes/UserFactory.html":{},"classes/UserProfileAPIClient.html":{},"dependencies.html":{}}}],["models",{"_index":2055,"title":{},"body":{"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{}}}],["modules",{"_index":2254,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["moment",{"_index":1425,"title":{},"body":{"classes/ParameterFactory.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-5.html":{},"classes/ProactiveClient.html":{}}}],["moment().add(1",{"_index":1709,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["moment().toisostring",{"_index":1708,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["moment(date).toisostring",{"_index":1440,"title":{},"body":{"classes/ParameterFactory.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-5.html":{},"classes/ProactiveClient.html":{}}}],["monday",{"_index":430,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["more",{"_index":1007,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["movie",{"_index":338,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["multicast",{"_index":559,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["mx",{"_index":327,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["name",{"_index":30,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ApplicationFactory.html":{},"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ContextFactory.html":{},"interfaces/CreativeWork.html":{},"classes/DBClient.html":{},"classes/DeviceAPIClient.html":{},"interfaces/ErrorHandlerBuilder.html":{},"interfaces/Factory.html":{},"classes/FallbackIntentFactory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory-1.html":{},"classes/HandlerInputFactory.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentHandlerFactory.html":{},"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/ListManagementAPIClient.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"classes/MockAttributeManager.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"interfaces/Props.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/RelevantAudience.html":{},"classes/ReminderAPIClient.html":{},"classes/RequestEnvelopeFactory.html":{},"classes/RequestFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"classes/RequestHandlerFactory-1.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/ResponseContent-1.html":{},"classes/RouteMatcher.html":{},"classes/SessionFactory.html":{},"classes/SettingAPIClient.html":{},"interfaces/Skill.html":{},"interfaces/SkillHandlersBuilder.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"classes/StateManager.html":{},"classes/StateManager-1.html":{},"classes/SystemFactory.html":{},"interfaces/Thing.html":{},"interfaces/TranslationBuilder.html":{},"interfaces/TrashCollectionAlert.html":{},"classes/UserFactory.html":{},"interfaces/WeatherAlert.html":{},"index.html":{}}}],["namespace",{"_index":319,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["new",{"_index":184,"title":{},"body":{"classes/APIClient.html":{},"interfaces/AttributeType.html":{},"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"classes/BuyIntentHandlerBuilder.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"classes/ContentBuilder-1.html":{},"classes/ContextFactory.html":{},"interfaces/CreativeWork.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"interfaces/Factory.html":{},"classes/FallbackIntentFactory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"classes/HandlerFactory.html":{},"classes/HandlerFactory-1.html":{},"classes/HandlerInputFactory.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/IntentHandlerFactory.html":{},"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestFactory-1.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"classes/MockAttributeManager.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"classes/RequestEnvelopeFactory.html":{},"classes/RequestFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"classes/RequestHandlerFactory-1.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/ResponseContent-1.html":{},"classes/RouteMatcher.html":{},"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"interfaces/Thing.html":{},"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["newstate",{"_index":2071,"title":{},"body":{"classes/StateManager.html":{}}}],["next",{"_index":92,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"interfaces/AttributeType.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"interfaces/HandlerHelpers.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"interfaces/InitialState.html":{},"classes/MockAttributeManager.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"classes/ProactiveClient.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"classes/RequestHandlerFactory-1.html":{},"interfaces/ResponseContent-1.html":{},"interfaces/Router.html":{},"interfaces/Situation.html":{},"interfaces/SituationState.html":{},"interfaces/SkillState.html":{},"classes/StateManager-1.html":{}}}],["nextattributes",{"_index":782,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["no.${i",{"_index":1783,"title":{},"body":{"classes/ProductListResponseContentBuilder.html":{}}}],["noispresponse",{"_index":760,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["noproductresponse",{"_index":747,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["noproductresponse(responsebuilder",{"_index":767,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["not_purchasable",{"_index":769,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["note",{"_index":2250,"title":{},"body":{"index.html":{}}}],["npm",{"_index":2215,"title":{},"body":{"index.html":{}}}],["null",{"_index":165,"title":{},"body":{"classes/APIClient.html":{},"interfaces/AlexaSpeechComponentProps.html":{},"classes/ISPProductClient.html":{},"classes/ParameterFactory-3.html":{},"interfaces/ProgressiveResponse.html":{},"interfaces/SpeechScriptResponse.html":{},"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{},"miscellaneous/typealiases.html":{}}}],["number",{"_index":161,"title":{},"body":{"classes/APIClient.html":{},"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/ISPProductClient.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-3.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["object",{"_index":1323,"title":{},"body":{"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{},"classes/SystemFactory.html":{}}}],["object.assign",{"_index":926,"title":{},"body":{"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/FallbackIntentFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/MergeObjectType.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{}}}],["object.assign(atts",{"_index":783,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["object.assign(this.system.user",{"_index":2151,"title":{},"body":{"classes/SystemFactory.html":{}}}],["object.keys(messages).length",{"_index":2180,"title":{},"body":{"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{}}}],["occasion",{"_index":384,"title":{"interfaces/Occasion.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["occasion.bookingtime",{"_index":1439,"title":{},"body":{"classes/ParameterFactory.html":{}}}],["occasion.broker.name",{"_index":1442,"title":{},"body":{"classes/ParameterFactory.html":{}}}],["occasion.eventname",{"_index":484,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["occasion.occasiontype",{"_index":1433,"title":{},"body":{"classes/ParameterFactory.html":{}}}],["occasion.payload",{"_index":493,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["occasion.provider.name",{"_index":1437,"title":{},"body":{"classes/ParameterFactory.html":{}}}],["occasion.subject",{"_index":1435,"title":{},"body":{"classes/ParameterFactory.html":{}}}],["occasion.updated.payloadbuilder",{"_index":1429,"title":{},"body":{"classes/ParameterFactory.html":{}}}],["occasiontype",{"_index":375,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["offer",{"_index":366,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["offertype",{"_index":355,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["ogranization",{"_index":381,"title":{"interfaces/Ogranization.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["ok",{"_index":1813,"title":{},"body":{"classes/RefundResponseContentBuilder.html":{}}}],["once",{"_index":137,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["onece",{"_index":1006,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["optional",{"_index":32,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"interfaces/AlexaSpeechComponentProps.html":{},"classes/ApplicationFactory.html":{},"interfaces/Availability.html":{},"interfaces/BaseSkillConfig.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"interfaces/ClientConfig.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ContextFactory.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"classes/DeviceAPIClient.html":{},"interfaces/ErrorHandlerBuilder.html":{},"interfaces/Factory.html":{},"classes/FallbackIntentFactory.html":{},"interfaces/FlashBriefingContent.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory-1.html":{},"classes/HandlerInputFactory.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"interfaces/InitialState.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentHandlerFactory.html":{},"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/ListManagementAPIClient.html":{},"interfaces/MergeObjectType.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"classes/MockAttributeManager.html":{},"interfaces/Occasion.html":{},"interfaces/OrderState.html":{},"interfaces/Payload-2.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"classes/ProactiveClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/RelevantAudience.html":{},"classes/ReminderAPIClient.html":{},"classes/RequestEnvelopeFactory.html":{},"classes/RequestFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"classes/RequestHandlerFactory-1.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"classes/RouteMatcher.html":{},"interfaces/Router.html":{},"classes/SessionFactory.html":{},"classes/SettingAPIClient.html":{},"interfaces/Situation.html":{},"interfaces/SituationState.html":{},"interfaces/SkillHandlers.html":{},"interfaces/SkillHandlersBuilder.html":{},"interfaces/SkillState.html":{},"interfaces/SpeechScriptResponse.html":{},"classes/StateManager.html":{},"classes/StateManager-1.html":{},"classes/SystemFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TranslationBuilder.html":{},"classes/UserFactory.html":{},"interfaces/WeatherAlert.html":{}}}],["options",{"_index":238,"title":{},"body":{"interfaces/AlexaSpeechComponentProps.html":{},"interfaces/ProgressiveResponse.html":{},"interfaces/SpeechScriptResponse.html":{}}}],["order",{"_index":403,"title":{"interfaces/Order.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-5.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["order.seller.name",{"_index":1540,"title":{},"body":{"classes/ParameterFactory-5.html":{}}}],["order_delivered",{"_index":411,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["order_out_for_delivery",{"_index":410,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["order_preparing",{"_index":408,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["order_received",{"_index":407,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["order_shipped",{"_index":409,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["orderstate",{"_index":396,"title":{"interfaces/OrderState.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-5.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["orderstate.deliverydetails",{"_index":1538,"title":{},"body":{"classes/ParameterFactory-5.html":{}}}],["orderstate.entertimestamp",{"_index":1536,"title":{},"body":{"classes/ParameterFactory-5.html":{}}}],["orderstate.status",{"_index":1534,"title":{},"body":{"classes/ParameterFactory-5.html":{}}}],["orderstatus",{"_index":397,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-5.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["orderstatus.eventname",{"_index":483,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["orderstatus.payload",{"_index":492,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["orderstatus.updated.payloadbuilder",{"_index":1532,"title":{},"body":{"classes/ParameterFactory-5.html":{}}}],["output",{"_index":917,"title":{},"body":{"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/FallbackIntentFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{}}}],["overdue",{"_index":466,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["overview",{"_index":2255,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrite",{"_index":1320,"title":{},"body":{"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/RequestFactory.html":{},"classes/RouteMatcher.html":{}}}],["p",{"_index":220,"title":{},"body":{"classes/APIClient-1.html":{},"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["package",{"_index":2205,"title":{"dependencies.html":{}},"body":{}}],["packages",{"_index":1816,"title":{},"body":{"classes/RefundResponseContentBuilder.html":{}}}],["packages/.../amznpolly.ts",{"_index":2275,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["packages/.../client.ts",{"_index":2266,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["packages/.../fixtures.ts",{"_index":2262,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["packages/.../flashbriefing.ts",{"_index":2265,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["packages/.../generalresponse.ts",{"_index":2269,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["packages/.../handlerfactory.ts",{"_index":2280,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["packages/.../helpers.ts",{"_index":2271,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["packages/.../index.ts",{"_index":2264,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["packages/.../lists.ts",{"_index":2272,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["packages/.../model.ts",{"_index":2261,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["packages/.../models.ts",{"_index":2273,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["packages/.../productfinders.test.ts",{"_index":2268,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["packages/.../productfinders.ts",{"_index":2267,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["packages/.../responsehelpers.ts",{"_index":2277,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["packages/.../slot.ts",{"_index":2279,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["packages/.../statemanager.ts",{"_index":2263,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["packages/ask",{"_index":653,"title":{},"body":{"interfaces/BaseSkillConfig.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/S3SkillConfig.html":{},"interfaces/SkillHandlers.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{},"miscellaneous/typealiases.html":{}}}],["packages/core/__tests__/libs/attributemanager.test.ts",{"_index":271,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["packages/core/__tests__/libs/attributemanager.test.ts:10",{"_index":1408,"title":{},"body":{"classes/MockAttributeManager.html":{}}}],["packages/core/__tests__/libs/attributemanager.test.ts:11",{"_index":1413,"title":{},"body":{"classes/MockAttributeManager.html":{}}}],["packages/core/__tests__/libs/attributemanager.test.ts:14",{"_index":1414,"title":{},"body":{"classes/MockAttributeManager.html":{}}}],["packages/core/__tests__/libs/attributemanager.test.ts:17",{"_index":1412,"title":{},"body":{"classes/MockAttributeManager.html":{}}}],["packages/core/__tests__/libs/attributemanager.test.ts:20",{"_index":1419,"title":{},"body":{"classes/MockAttributeManager.html":{}}}],["packages/core/__tests__/libs/attributemanager.test.ts:23",{"_index":1421,"title":{},"body":{"classes/MockAttributeManager.html":{}}}],["packages/core/__tests__/libs/attributemanager.test.ts:26",{"_index":1417,"title":{},"body":{"classes/MockAttributeManager.html":{}}}],["packages/core/__tests__/libs/attributemanager.test.ts:29",{"_index":1415,"title":{},"body":{"classes/MockAttributeManager.html":{}}}],["packages/core/__tests__/libs/attributemanager.test.ts:5",{"_index":274,"title":{},"body":{"interfaces/AttributeType.html":{}}}],["packages/core/__tests__/libs/attributemanager.test.ts:7",{"_index":1410,"title":{},"body":{"classes/MockAttributeManager.html":{}}}],["packages/core/__tests__/libs/attributemanager.test.ts:8",{"_index":1411,"title":{},"body":{"classes/MockAttributeManager.html":{}}}],["packages/core/__tests__/libs/attributemanager.test.ts:9",{"_index":1409,"title":{},"body":{"classes/MockAttributeManager.html":{}}}],["packages/core/libs/amznpolly.ts",{"_index":2287,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["packages/core/libs/contentbuilder.ts",{"_index":832,"title":{},"body":{"classes/ContentBuilder.html":{},"interfaces/ResponseContent.html":{}}}],["packages/core/libs/contentbuilder.ts:10",{"_index":836,"title":{},"body":{"classes/ContentBuilder.html":{}}}],["packages/core/libs/contentbuilder.ts:11",{"_index":834,"title":{},"body":{"classes/ContentBuilder.html":{}}}],["packages/core/libs/contentbuilder.ts:16",{"_index":838,"title":{},"body":{"classes/ContentBuilder.html":{}}}],["packages/core/libs/contentbuilder.ts:19",{"_index":842,"title":{},"body":{"classes/ContentBuilder.html":{}}}],["packages/core/libs/contentbuilder.ts:23",{"_index":841,"title":{},"body":{"classes/ContentBuilder.html":{}}}],["packages/core/libs/contentbuilder.ts:27",{"_index":840,"title":{},"body":{"classes/ContentBuilder.html":{}}}],["packages/core/libs/contentbuilder.ts:35",{"_index":839,"title":{},"body":{"classes/ContentBuilder.html":{}}}],["packages/core/libs/contentbuilder.ts:43",{"_index":837,"title":{},"body":{"classes/ContentBuilder.html":{}}}],["packages/core/libs/contentbuilder.ts:9",{"_index":835,"title":{},"body":{"classes/ContentBuilder.html":{}}}],["packages/core/libs/db.ts",{"_index":936,"title":{},"body":{"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{}}}],["packages/core/libs/db.ts:14",{"_index":943,"title":{},"body":{"classes/DBClient.html":{}}}],["packages/core/libs/db.ts:15",{"_index":944,"title":{},"body":{"classes/DBClient.html":{}}}],["packages/core/libs/db.ts:16",{"_index":945,"title":{},"body":{"classes/DBClient.html":{}}}],["packages/core/libs/db.ts:17",{"_index":941,"title":{},"body":{"classes/DBClient.html":{}}}],["packages/core/libs/db.ts:24",{"_index":947,"title":{},"body":{"classes/DBClient.html":{}}}],["packages/core/libs/db.ts:37",{"_index":950,"title":{},"body":{"classes/DBClient.html":{}}}],["packages/core/libs/db.ts:4",{"_index":965,"title":{},"body":{"interfaces/DBItem.html":{}}}],["packages/core/libs/requesthandler.ts",{"_index":1401,"title":{},"body":{"interfaces/MergeObjectType.html":{}}}],["packages/core/libs/responsehelpers.ts",{"_index":2288,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["packages/core/libs/slot.ts",{"_index":2289,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["packages/core/libs/statemanager.ts",{"_index":2069,"title":{},"body":{"classes/StateManager.html":{},"miscellaneous/typealiases.html":{}}}],["packages/core/libs/statemanager.ts:29",{"_index":2093,"title":{},"body":{"classes/StateManager.html":{}}}],["packages/core/libs/statemanager.ts:35",{"_index":2087,"title":{},"body":{"classes/StateManager.html":{}}}],["packages/core/libs/statemanager.ts:39",{"_index":2091,"title":{},"body":{"classes/StateManager.html":{}}}],["packages/core/libs/statemanager.ts:42",{"_index":2089,"title":{},"body":{"classes/StateManager.html":{}}}],["packages/core/libs/translator.ts",{"_index":2159,"title":{},"body":{"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{}}}],["packages/core/libs/translator.ts:10",{"_index":2168,"title":{},"body":{"interfaces/TranslationBuilder.html":{}}}],["packages/core/libs/translator.ts:15",{"_index":2181,"title":{},"body":{"classes/TranslationFactory.html":{}}}],["packages/core/libs/translator.ts:7",{"_index":2165,"title":{},"body":{"interfaces/TranslationBuilder.html":{}}}],["packages/core/libs/translator.ts:8",{"_index":2172,"title":{},"body":{"interfaces/TranslationBuilder.html":{}}}],["packages/core/libs/translator.ts:9",{"_index":2167,"title":{},"body":{"interfaces/TranslationBuilder.html":{}}}],["packages/error",{"_index":980,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{},"miscellaneous/typealiases.html":{}}}],["packages/handlers/libs/flashbriefing.ts",{"_index":1051,"title":{},"body":{"interfaces/FlashBriefingContent.html":{},"miscellaneous/typealiases.html":{}}}],["packages/handlers/libs/requesthandlers/factories/base.ts",{"_index":1088,"title":{},"body":{"classes/HandlerBuilder-1.html":{}}}],["packages/handlers/libs/requesthandlers/factories/base.ts:12",{"_index":1092,"title":{},"body":{"classes/HandlerBuilder-1.html":{}}}],["packages/handlers/libs/requesthandlers/factories/base.ts:15",{"_index":1097,"title":{},"body":{"classes/HandlerBuilder-1.html":{}}}],["packages/handlers/libs/requesthandlers/factories/base.ts:19",{"_index":1096,"title":{},"body":{"classes/HandlerBuilder-1.html":{}}}],["packages/handlers/libs/requesthandlers/factories/base.ts:23",{"_index":1098,"title":{},"body":{"classes/HandlerBuilder-1.html":{}}}],["packages/handlers/libs/requesthandlers/factories/base.ts:28",{"_index":1095,"title":{},"body":{"classes/HandlerBuilder-1.html":{}}}],["packages/handlers/libs/requesthandlers/factories/base.ts:33",{"_index":1094,"title":{},"body":{"classes/HandlerBuilder-1.html":{}}}],["packages/handlers/libs/requesthandlers/factories/base.ts:7",{"_index":1091,"title":{},"body":{"classes/HandlerBuilder-1.html":{}}}],["packages/handlers/libs/requesthandlers/factories/base.ts:8",{"_index":1093,"title":{},"body":{"classes/HandlerBuilder-1.html":{}}}],["packages/handlers/libs/requesthandlers/factories/base.ts:9",{"_index":1090,"title":{},"body":{"classes/HandlerBuilder-1.html":{}}}],["packages/handlers/libs/requesthandlers/factories/index.ts",{"_index":1110,"title":{},"body":{"classes/HandlerFactory-1.html":{},"classes/IntentHandlerFactory.html":{},"classes/LaunchRequestFactory-1.html":{}}}],["packages/handlers/libs/requesthandlers/factories/index.ts:16",{"_index":1113,"title":{},"body":{"classes/HandlerFactory-1.html":{}}}],["packages/handlers/libs/requesthandlers/factories/index.ts:25",{"_index":1335,"title":{},"body":{"classes/LaunchRequestFactory-1.html":{}}}],["packages/handlers/libs/requesthandlers/factories/index.ts:9",{"_index":1273,"title":{},"body":{"classes/IntentHandlerFactory.html":{}}}],["packages/handlers/libs/requesthandlers/factories/intent.ts",{"_index":1265,"title":{},"body":{"classes/IntentHandlerBuilder.html":{}}}],["packages/handlers/libs/requesthandlers/factories/intent.ts:12",{"_index":1269,"title":{},"body":{"classes/IntentHandlerBuilder.html":{}}}],["packages/handlers/libs/requesthandlers/factories/intent.ts:13",{"_index":1268,"title":{},"body":{"classes/IntentHandlerBuilder.html":{}}}],["packages/handlers/libs/requesthandlers/factories/intent.ts:7",{"_index":1267,"title":{},"body":{"classes/IntentHandlerBuilder.html":{}}}],["packages/handlers/libs/requesthandlers/factories/launchrequest.ts",{"_index":1340,"title":{},"body":{"classes/LaunchRequestrBuilder.html":{}}}],["packages/handlers/libs/requesthandlers/factories/launchrequest.ts:8",{"_index":1341,"title":{},"body":{"classes/LaunchRequestrBuilder.html":{}}}],["packages/handlers/libs/requesthandlers/factories/model.ts",{"_index":1103,"title":{},"body":{"interfaces/HandlerBuilderInterface.html":{},"miscellaneous/typealiases.html":{}}}],["packages/handlers/libs/requesthandlers/factories/model.ts:11",{"_index":1107,"title":{},"body":{"interfaces/HandlerBuilderInterface.html":{}}}],["packages/handlers/libs/requesthandlers/factories/model.ts:12",{"_index":1106,"title":{},"body":{"interfaces/HandlerBuilderInterface.html":{}}}],["packages/handlers/libs/requesthandlers/factories/model.ts:13",{"_index":1108,"title":{},"body":{"interfaces/HandlerBuilderInterface.html":{}}}],["packages/handlers/libs/requesthandlers/factories/model.ts:14",{"_index":1105,"title":{},"body":{"interfaces/HandlerBuilderInterface.html":{}}}],["packages/handlers/libs/requesthandlers/factories/model.ts:15",{"_index":1104,"title":{},"body":{"interfaces/HandlerBuilderInterface.html":{}}}],["packages/handlers/libs/requesthandlers/handlerfactory.ts",{"_index":910,"title":{},"body":{"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/FallbackIntentFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"miscellaneous/typealiases.html":{}}}],["packages/handlers/libs/requesthandlers/handlerfactory.ts:25",{"_index":1923,"title":{},"body":{"interfaces/RequestHandlerBuilder.html":{}}}],["packages/handlers/libs/requesthandlers/handlerfactory.ts:42",{"_index":1925,"title":{},"body":{"classes/RequestHandlerFactory.html":{}}}],["packages/handlers/libs/requesthandlers/handlerfactory.ts:52",{"_index":1338,"title":{},"body":{"classes/LaunchRequestHandlerFactory.html":{}}}],["packages/handlers/libs/requesthandlers/handlerfactory.ts:55",{"_index":1336,"title":{},"body":{"classes/LaunchRequestHandlerFactory.html":{}}}],["packages/handlers/libs/requesthandlers/handlerfactory.ts:65",{"_index":1049,"title":{},"body":{"classes/FallbackIntentFactory.html":{}}}],["packages/handlers/libs/requesthandlers/handlerfactory.ts:68",{"_index":1048,"title":{},"body":{"classes/FallbackIntentFactory.html":{}}}],["packages/handlers/libs/requestinterceptors/injectconstants.ts",{"_index":824,"title":{},"body":{"classes/ConstantsInterceptorFactory.html":{},"interfaces/SkillConstants.html":{}}}],["packages/handlers/libs/requestinterceptors/injectconstants.ts:4",{"_index":2038,"title":{},"body":{"interfaces/SkillConstants.html":{}}}],["packages/handlers/libs/requestinterceptors/injectconstants.ts:8",{"_index":827,"title":{},"body":{"classes/ConstantsInterceptorFactory.html":{}}}],["packages/isp/__tests__/libs/productfinders.test.ts",{"_index":2282,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["packages/isp/libs/client.ts",{"_index":6,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{},"miscellaneous/typealiases.html":{}}}],["packages/isp/libs/client.ts:10",{"_index":35,"title":{},"body":{"classes/APIClient.html":{}}}],["packages/isp/libs/client.ts:100",{"_index":1208,"title":{},"body":{"classes/ISPProductClient.html":{}}}],["packages/isp/libs/client.ts:11",{"_index":34,"title":{},"body":{"classes/APIClient.html":{}}}],["packages/isp/libs/client.ts:12",{"_index":27,"title":{},"body":{"classes/APIClient.html":{}}}],["packages/isp/libs/client.ts:120",{"_index":1218,"title":{},"body":{"classes/ISPProductClient.html":{}}}],["packages/isp/libs/client.ts:135",{"_index":1219,"title":{},"body":{"classes/ISPProductClient.html":{}}}],["packages/isp/libs/client.ts:143",{"_index":1214,"title":{},"body":{"classes/ISPProductClient.html":{}}}],["packages/isp/libs/client.ts:152",{"_index":1210,"title":{},"body":{"classes/ISPProductClient.html":{}}}],["packages/isp/libs/client.ts:163",{"_index":1212,"title":{},"body":{"classes/ISPProductClient.html":{}}}],["packages/isp/libs/client.ts:174",{"_index":1223,"title":{},"body":{"classes/ISPProductClient.html":{}}}],["packages/isp/libs/client.ts:19",{"_index":49,"title":{},"body":{"classes/APIClient.html":{}}}],["packages/isp/libs/client.ts:24",{"_index":38,"title":{},"body":{"classes/APIClient.html":{}}}],["packages/isp/libs/client.ts:36",{"_index":44,"title":{},"body":{"classes/APIClient.html":{}}}],["packages/isp/libs/client.ts:43",{"_index":50,"title":{},"body":{"classes/APIClient.html":{}}}],["packages/isp/libs/client.ts:46",{"_index":47,"title":{},"body":{"classes/APIClient.html":{}}}],["packages/isp/libs/client.ts:52",{"_index":1200,"title":{},"body":{"classes/ISPProductClient.html":{}}}],["packages/isp/libs/client.ts:53",{"_index":1201,"title":{},"body":{"classes/ISPProductClient.html":{}}}],["packages/isp/libs/client.ts:54",{"_index":1199,"title":{},"body":{"classes/ISPProductClient.html":{}}}],["packages/isp/libs/client.ts:60",{"_index":1216,"title":{},"body":{"classes/ISPProductClient.html":{}}}],["packages/isp/libs/client.ts:66",{"_index":1206,"title":{},"body":{"classes/ISPProductClient.html":{}}}],["packages/isp/libs/client.ts:73",{"_index":1207,"title":{},"body":{"classes/ISPProductClient.html":{}}}],["packages/isp/libs/client.ts:81",{"_index":1220,"title":{},"body":{"classes/ISPProductClient.html":{}}}],["packages/isp/libs/client.ts:89",{"_index":1215,"title":{},"body":{"classes/ISPProductClient.html":{}}}],["packages/isp/libs/client.ts:9",{"_index":36,"title":{},"body":{"classes/APIClient.html":{}}}],["packages/isp/libs/contentbuilders/base.ts",{"_index":855,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["packages/isp/libs/contentbuilders/base.ts:110",{"_index":1195,"title":{},"body":{"classes/ISPContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/base.ts:117",{"_index":1185,"title":{},"body":{"classes/ISPContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/base.ts:13",{"_index":857,"title":{},"body":{"classes/ContentBuilder-1.html":{}}}],["packages/isp/libs/contentbuilders/base.ts:139",{"_index":1194,"title":{},"body":{"classes/ISPContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/base.ts:14",{"_index":858,"title":{},"body":{"classes/ContentBuilder-1.html":{}}}],["packages/isp/libs/contentbuilders/base.ts:146",{"_index":1181,"title":{},"body":{"classes/ISPContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/base.ts:15",{"_index":856,"title":{},"body":{"classes/ContentBuilder-1.html":{}}}],["packages/isp/libs/contentbuilders/base.ts:158",{"_index":1188,"title":{},"body":{"classes/ISPContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/base.ts:165",{"_index":1182,"title":{},"body":{"classes/ISPContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/base.ts:177",{"_index":1189,"title":{},"body":{"classes/ISPContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/base.ts:20",{"_index":860,"title":{},"body":{"classes/ContentBuilder-1.html":{}}}],["packages/isp/libs/contentbuilders/base.ts:23",{"_index":859,"title":{},"body":{"classes/ContentBuilder-1.html":{}}}],["packages/isp/libs/contentbuilders/base.ts:33",{"_index":1180,"title":{},"body":{"classes/ISPContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/base.ts:34",{"_index":1179,"title":{},"body":{"classes/ISPContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/base.ts:40",{"_index":1191,"title":{},"body":{"classes/ISPContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/base.ts:44",{"_index":1183,"title":{},"body":{"classes/ISPContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/base.ts:49",{"_index":1193,"title":{},"body":{"classes/ISPContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/base.ts:53",{"_index":1184,"title":{},"body":{"classes/ISPContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/base.ts:60",{"_index":1187,"title":{},"body":{"classes/ISPContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/base.ts:88",{"_index":1196,"title":{},"body":{"classes/ISPContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/base.ts:95",{"_index":1186,"title":{},"body":{"classes/ISPContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/buy.ts",{"_index":678,"title":{},"body":{"classes/BuyContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/buy.ts:6",{"_index":695,"title":{},"body":{"classes/BuyContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/buyresponse.ts",{"_index":790,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/buyresponse.ts:27",{"_index":801,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/buyresponse.ts:32",{"_index":797,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/buyresponse.ts:51",{"_index":800,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/buyresponse.ts:55",{"_index":799,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/buyresponse.ts:7",{"_index":798,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/buyresponse.ts:71",{"_index":802,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/detail.ts",{"_index":1757,"title":{},"body":{"classes/ProductDetailResponseContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/detail.ts:26",{"_index":1761,"title":{},"body":{"classes/ProductDetailResponseContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/detail.ts:7",{"_index":1760,"title":{},"body":{"classes/ProductDetailResponseContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/generalresponse.ts",{"_index":2283,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["packages/isp/libs/contentbuilders/list.ts",{"_index":1765,"title":{},"body":{"classes/ProductListResponseContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/list.ts:12",{"_index":1772,"title":{},"body":{"classes/ProductListResponseContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/list.ts:15",{"_index":1771,"title":{},"body":{"classes/ProductListResponseContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/list.ts:57",{"_index":1773,"title":{},"body":{"classes/ProductListResponseContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/list.ts:7",{"_index":1770,"title":{},"body":{"classes/ProductListResponseContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/list.ts:8",{"_index":1775,"title":{},"body":{"classes/ProductListResponseContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/refund.ts",{"_index":1787,"title":{},"body":{"classes/RefundContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/refund.ts:11",{"_index":1791,"title":{},"body":{"classes/RefundContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/refund.ts:31",{"_index":1794,"title":{},"body":{"classes/RefundContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/refund.ts:35",{"_index":1793,"title":{},"body":{"classes/RefundContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/refundresponse.ts",{"_index":1800,"title":{},"body":{"classes/RefundResponseContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/refundresponse.ts:25",{"_index":1811,"title":{},"body":{"classes/RefundResponseContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/refundresponse.ts:30",{"_index":1807,"title":{},"body":{"classes/RefundResponseContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/refundresponse.ts:48",{"_index":1810,"title":{},"body":{"classes/RefundResponseContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/refundresponse.ts:52",{"_index":1809,"title":{},"body":{"classes/RefundResponseContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/refundresponse.ts:68",{"_index":1812,"title":{},"body":{"classes/RefundResponseContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/refundresponse.ts:7",{"_index":1808,"title":{},"body":{"classes/RefundResponseContentBuilder.html":{}}}],["packages/isp/libs/handlers/buy.ts",{"_index":712,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["packages/isp/libs/handlers/buy.ts:30",{"_index":724,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["packages/isp/libs/handlers/buy.ts:33",{"_index":728,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["packages/isp/libs/handlers/fixtures.ts",{"_index":1066,"title":{},"body":{"classes/HandlerBuilder.html":{},"classes/HandlerFactory.html":{},"miscellaneous/typealiases.html":{}}}],["packages/isp/libs/handlers/fixtures.ts:11",{"_index":1069,"title":{},"body":{"classes/HandlerBuilder.html":{}}}],["packages/isp/libs/handlers/fixtures.ts:14",{"_index":1073,"title":{},"body":{"classes/HandlerBuilder.html":{}}}],["packages/isp/libs/handlers/fixtures.ts:18",{"_index":1072,"title":{},"body":{"classes/HandlerBuilder.html":{}}}],["packages/isp/libs/handlers/fixtures.ts:22",{"_index":1074,"title":{},"body":{"classes/HandlerBuilder.html":{}}}],["packages/isp/libs/handlers/fixtures.ts:27",{"_index":1071,"title":{},"body":{"classes/HandlerBuilder.html":{}}}],["packages/isp/libs/handlers/fixtures.ts:32",{"_index":1070,"title":{},"body":{"classes/HandlerBuilder.html":{}}}],["packages/isp/libs/handlers/fixtures.ts:40",{"_index":1109,"title":{},"body":{"classes/HandlerFactory.html":{}}}],["packages/isp/libs/handlers/fixtures.ts:7",{"_index":1068,"title":{},"body":{"classes/HandlerBuilder.html":{}}}],["packages/isp/libs/handlers/fixtures.ts:8",{"_index":1067,"title":{},"body":{"classes/HandlerBuilder.html":{}}}],["packages/isp/libs/handlers/helpers.ts",{"_index":2284,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["packages/isp/libs/productfinders.ts",{"_index":2281,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["packages/proactive",{"_index":316,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"classes/LocalizedAttributesFactory.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["packages/router/libs/matcher/routematcher.ts",{"_index":1958,"title":{},"body":{"classes/RouteMatcher.html":{}}}],["packages/router/libs/matcher/routematcher.ts:25",{"_index":1964,"title":{},"body":{"classes/RouteMatcher.html":{}}}],["packages/router/libs/matcher/routematcher.ts:26",{"_index":1966,"title":{},"body":{"classes/RouteMatcher.html":{}}}],["packages/router/libs/matcher/routematcher.ts:27",{"_index":1965,"title":{},"body":{"classes/RouteMatcher.html":{}}}],["packages/router/libs/matcher/routematcher.ts:28",{"_index":1967,"title":{},"body":{"classes/RouteMatcher.html":{}}}],["packages/router/libs/matcher/routematcher.ts:29",{"_index":1963,"title":{},"body":{"classes/RouteMatcher.html":{}}}],["packages/router/libs/matcher/routematcher.ts:36",{"_index":1968,"title":{},"body":{"classes/RouteMatcher.html":{}}}],["packages/router/libs/matcher/routematcher.ts:40",{"_index":1970,"title":{},"body":{"classes/RouteMatcher.html":{}}}],["packages/router/libs/matcher/routematcher.ts:77",{"_index":1969,"title":{},"body":{"classes/RouteMatcher.html":{}}}],["packages/router/libs/model.ts",{"_index":1125,"title":{},"body":{"interfaces/HandlerHelpers.html":{},"interfaces/Router.html":{},"interfaces/Situation.html":{},"interfaces/SituationState.html":{},"miscellaneous/typealiases.html":{}}}],["packages/router/libs/requesthandlers/createrequesthandler.ts",{"_index":1926,"title":{},"body":{"classes/RequestHandlerFactory-1.html":{}}}],["packages/router/libs/requesthandlers/createrequesthandler.ts:26",{"_index":1929,"title":{},"body":{"classes/RequestHandlerFactory-1.html":{}}}],["packages/router/libs/requesthandlers/createrequesthandler.ts:28",{"_index":1931,"title":{},"body":{"classes/RequestHandlerFactory-1.html":{}}}],["packages/router/libs/requesthandlers/createrequesthandler.ts:33",{"_index":1936,"title":{},"body":{"classes/RequestHandlerFactory-1.html":{}}}],["packages/router/libs/requesthandlers/createrequesthandler.ts:39",{"_index":1934,"title":{},"body":{"classes/RequestHandlerFactory-1.html":{}}}],["packages/serviceclients/libs/client.ts",{"_index":195,"title":{},"body":{"classes/APIClient-1.html":{},"miscellaneous/typealiases.html":{}}}],["packages/serviceclients/libs/client.ts:10",{"_index":200,"title":{},"body":{"classes/APIClient-1.html":{}}}],["packages/serviceclients/libs/client.ts:17",{"_index":213,"title":{},"body":{"classes/APIClient-1.html":{}}}],["packages/serviceclients/libs/client.ts:23",{"_index":207,"title":{},"body":{"classes/APIClient-1.html":{}}}],["packages/serviceclients/libs/client.ts:37",{"_index":209,"title":{},"body":{"classes/APIClient-1.html":{}}}],["packages/serviceclients/libs/client.ts:45",{"_index":211,"title":{},"body":{"classes/APIClient-1.html":{}}}],["packages/serviceclients/libs/client.ts:53",{"_index":215,"title":{},"body":{"classes/APIClient-1.html":{}}}],["packages/serviceclients/libs/client.ts:6",{"_index":205,"title":{},"body":{"classes/APIClient-1.html":{}}}],["packages/serviceclients/libs/client.ts:61",{"_index":218,"title":{},"body":{"classes/APIClient-1.html":{}}}],["packages/serviceclients/libs/client.ts:7",{"_index":202,"title":{},"body":{"classes/APIClient-1.html":{}}}],["packages/serviceclients/libs/client.ts:8",{"_index":201,"title":{},"body":{"classes/APIClient-1.html":{}}}],["packages/serviceclients/libs/client.ts:9",{"_index":204,"title":{},"body":{"classes/APIClient-1.html":{}}}],["packages/serviceclients/libs/devices.ts",{"_index":967,"title":{},"body":{"classes/DeviceAPIClient.html":{}}}],["packages/serviceclients/libs/devices.ts:5",{"_index":971,"title":{},"body":{"classes/DeviceAPIClient.html":{}}}],["packages/serviceclients/libs/devices.ts:6",{"_index":973,"title":{},"body":{"classes/DeviceAPIClient.html":{}}}],["packages/serviceclients/libs/devices.ts:9",{"_index":976,"title":{},"body":{"classes/DeviceAPIClient.html":{}}}],["packages/serviceclients/libs/lists.ts",{"_index":1343,"title":{},"body":{"classes/ListManagementAPIClient.html":{},"miscellaneous/typealiases.html":{}}}],["packages/serviceclients/libs/lists.ts:10",{"_index":1373,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["packages/serviceclients/libs/lists.ts:13",{"_index":1370,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["packages/serviceclients/libs/lists.ts:16",{"_index":1358,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["packages/serviceclients/libs/lists.ts:19",{"_index":1377,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["packages/serviceclients/libs/lists.ts:22",{"_index":1364,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["packages/serviceclients/libs/lists.ts:25",{"_index":1372,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["packages/serviceclients/libs/lists.ts:28",{"_index":1361,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["packages/serviceclients/libs/lists.ts:31",{"_index":1380,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["packages/serviceclients/libs/lists.ts:34",{"_index":1367,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["packages/serviceclients/libs/lists.ts:6",{"_index":1355,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["packages/serviceclients/libs/lists.ts:7",{"_index":1374,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["packages/serviceclients/libs/reminders.ts",{"_index":1820,"title":{},"body":{"classes/ReminderAPIClient.html":{}}}],["packages/serviceclients/libs/reminders.ts:15",{"_index":1836,"title":{},"body":{"classes/ReminderAPIClient.html":{}}}],["packages/serviceclients/libs/reminders.ts:23",{"_index":1839,"title":{},"body":{"classes/ReminderAPIClient.html":{}}}],["packages/serviceclients/libs/reminders.ts:29",{"_index":1837,"title":{},"body":{"classes/ReminderAPIClient.html":{}}}],["packages/serviceclients/libs/reminders.ts:36",{"_index":1830,"title":{},"body":{"classes/ReminderAPIClient.html":{}}}],["packages/serviceclients/libs/reminders.ts:7",{"_index":1827,"title":{},"body":{"classes/ReminderAPIClient.html":{}}}],["packages/serviceclients/libs/reminders.ts:8",{"_index":1833,"title":{},"body":{"classes/ReminderAPIClient.html":{}}}],["packages/serviceclients/libs/settings.ts",{"_index":2023,"title":{},"body":{"classes/SettingAPIClient.html":{}}}],["packages/serviceclients/libs/settings.ts:12",{"_index":2030,"title":{},"body":{"classes/SettingAPIClient.html":{}}}],["packages/serviceclients/libs/settings.ts:5",{"_index":2028,"title":{},"body":{"classes/SettingAPIClient.html":{}}}],["packages/serviceclients/libs/settings.ts:6",{"_index":2034,"title":{},"body":{"classes/SettingAPIClient.html":{}}}],["packages/serviceclients/libs/settings.ts:9",{"_index":2032,"title":{},"body":{"classes/SettingAPIClient.html":{}}}],["packages/serviceclients/libs/userprofiles.ts",{"_index":2192,"title":{},"body":{"classes/UserProfileAPIClient.html":{}}}],["packages/serviceclients/libs/userprofiles.ts:12",{"_index":2198,"title":{},"body":{"classes/UserProfileAPIClient.html":{}}}],["packages/serviceclients/libs/userprofiles.ts:15",{"_index":2200,"title":{},"body":{"classes/UserProfileAPIClient.html":{}}}],["packages/serviceclients/libs/userprofiles.ts:5",{"_index":2197,"title":{},"body":{"classes/UserProfileAPIClient.html":{}}}],["packages/serviceclients/libs/userprofiles.ts:6",{"_index":2201,"title":{},"body":{"classes/UserProfileAPIClient.html":{}}}],["packages/serviceclients/libs/userprofiles.ts:9",{"_index":2199,"title":{},"body":{"classes/UserProfileAPIClient.html":{}}}],["packages/situationmanager/libs/statemanager.ts",{"_index":1230,"title":{},"body":{"interfaces/InitialState.html":{},"interfaces/SkillState.html":{},"classes/StateManager-1.html":{},"miscellaneous/typealiases.html":{}}}],["packages/situationmanager/libs/statemanager.ts:16",{"_index":2103,"title":{},"body":{"classes/StateManager-1.html":{}}}],["packages/situationmanager/libs/statemanager.ts:17",{"_index":2102,"title":{},"body":{"classes/StateManager-1.html":{}}}],["packages/situationmanager/libs/statemanager.ts:18",{"_index":2101,"title":{},"body":{"classes/StateManager-1.html":{}}}],["packages/situationmanager/libs/statemanager.ts:27",{"_index":2114,"title":{},"body":{"classes/StateManager-1.html":{}}}],["packages/situationmanager/libs/statemanager.ts:30",{"_index":2117,"title":{},"body":{"classes/StateManager-1.html":{}}}],["packages/situationmanager/libs/statemanager.ts:39",{"_index":2119,"title":{},"body":{"classes/StateManager-1.html":{}}}],["packages/situationmanager/libs/statemanager.ts:49",{"_index":2107,"title":{},"body":{"classes/StateManager-1.html":{}}}],["packages/situationmanager/libs/statemanager.ts:62",{"_index":2108,"title":{},"body":{"classes/StateManager-1.html":{}}}],["packages/situationmanager/libs/statemanager.ts:68",{"_index":2105,"title":{},"body":{"classes/StateManager-1.html":{}}}],["packages/situationmanager/libs/statemanager.ts:73",{"_index":2106,"title":{},"body":{"classes/StateManager-1.html":{}}}],["packages/situationmanager/libs/statemanager.ts:78",{"_index":2104,"title":{},"body":{"classes/StateManager-1.html":{}}}],["packages/situationmanager/libs/statemanager.ts:83",{"_index":2116,"title":{},"body":{"classes/StateManager-1.html":{}}}],["packages/situationmanager/libs/statemanager.ts:86",{"_index":2112,"title":{},"body":{"classes/StateManager-1.html":{}}}],["packages/situationmanager/libs/statemanager.ts:89",{"_index":2110,"title":{},"body":{"classes/StateManager-1.html":{}}}],["packages/speech",{"_index":235,"title":{},"body":{"interfaces/AlexaSpeechComponentProps.html":{},"interfaces/ProgressiveResponse.html":{},"interfaces/SpeechScriptResponse.html":{},"miscellaneous/typealiases.html":{}}}],["packages/test/libs/application/applicationfactory.ts",{"_index":256,"title":{},"body":{"classes/ApplicationFactory.html":{}}}],["packages/test/libs/application/applicationfactory.ts:12",{"_index":264,"title":{},"body":{"classes/ApplicationFactory.html":{}}}],["packages/test/libs/application/applicationfactory.ts:5",{"_index":263,"title":{},"body":{"classes/ApplicationFactory.html":{}}}],["packages/test/libs/application/applicationfactory.ts:8",{"_index":266,"title":{},"body":{"classes/ApplicationFactory.html":{}}}],["packages/test/libs/context/contextfactory.ts",{"_index":897,"title":{},"body":{"classes/ContextFactory.html":{}}}],["packages/test/libs/context/contextfactory.ts:12",{"_index":907,"title":{},"body":{"classes/ContextFactory.html":{}}}],["packages/test/libs/context/contextfactory.ts:17",{"_index":905,"title":{},"body":{"classes/ContextFactory.html":{}}}],["packages/test/libs/context/contextfactory.ts:7",{"_index":904,"title":{},"body":{"classes/ContextFactory.html":{}}}],["packages/test/libs/context/contextfactory.ts:8",{"_index":902,"title":{},"body":{"classes/ContextFactory.html":{}}}],["packages/test/libs/context/systemfactory.ts",{"_index":2120,"title":{},"body":{"classes/SystemFactory.html":{}}}],["packages/test/libs/context/systemfactory.ts:107",{"_index":2129,"title":{},"body":{"classes/SystemFactory.html":{}}}],["packages/test/libs/context/systemfactory.ts:18",{"_index":2128,"title":{},"body":{"classes/SystemFactory.html":{}}}],["packages/test/libs/context/systemfactory.ts:35",{"_index":2137,"title":{},"body":{"classes/SystemFactory.html":{}}}],["packages/test/libs/context/systemfactory.ts:44",{"_index":2135,"title":{},"body":{"classes/SystemFactory.html":{}}}],["packages/test/libs/context/systemfactory.ts:55",{"_index":2143,"title":{},"body":{"classes/SystemFactory.html":{}}}],["packages/test/libs/context/systemfactory.ts:65",{"_index":2139,"title":{},"body":{"classes/SystemFactory.html":{}}}],["packages/test/libs/context/systemfactory.ts:77",{"_index":2133,"title":{},"body":{"classes/SystemFactory.html":{}}}],["packages/test/libs/context/systemfactory.ts:86",{"_index":2131,"title":{},"body":{"classes/SystemFactory.html":{}}}],["packages/test/libs/context/systemfactory.ts:96",{"_index":2142,"title":{},"body":{"classes/SystemFactory.html":{}}}],["packages/test/libs/handlerinput/handlerinputfactory.ts",{"_index":1138,"title":{},"body":{"classes/HandlerInputFactory.html":{}}}],["packages/test/libs/handlerinput/handlerinputfactory.ts:19",{"_index":1148,"title":{},"body":{"classes/HandlerInputFactory.html":{}}}],["packages/test/libs/handlerinput/handlerinputfactory.ts:20",{"_index":1147,"title":{},"body":{"classes/HandlerInputFactory.html":{}}}],["packages/test/libs/handlerinput/handlerinputfactory.ts:21",{"_index":1146,"title":{},"body":{"classes/HandlerInputFactory.html":{}}}],["packages/test/libs/handlerinput/handlerinputfactory.ts:26",{"_index":1156,"title":{},"body":{"classes/HandlerInputFactory.html":{}}}],["packages/test/libs/handlerinput/handlerinputfactory.ts:30",{"_index":1154,"title":{},"body":{"classes/HandlerInputFactory.html":{}}}],["packages/test/libs/handlerinput/handlerinputfactory.ts:34",{"_index":1159,"title":{},"body":{"classes/HandlerInputFactory.html":{}}}],["packages/test/libs/handlerinput/handlerinputfactory.ts:45",{"_index":1151,"title":{},"body":{"classes/HandlerInputFactory.html":{}}}],["packages/test/libs/handlerinput/handlerinputfactory.ts:56",{"_index":1150,"title":{},"body":{"classes/HandlerInputFactory.html":{}}}],["packages/test/libs/request/intentrequestfactory.ts",{"_index":1275,"title":{},"body":{"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{}}}],["packages/test/libs/request/intentrequestfactory.ts:11",{"_index":1327,"title":{},"body":{"classes/InvalidIntentRequestException.html":{}}}],["packages/test/libs/request/intentrequestfactory.ts:14",{"_index":1290,"title":{},"body":{"classes/IntentRequestFactory.html":{}}}],["packages/test/libs/request/intentrequestfactory.ts:19",{"_index":1300,"title":{},"body":{"classes/IntentRequestFactory.html":{}}}],["packages/test/libs/request/intentrequestfactory.ts:26",{"_index":1298,"title":{},"body":{"classes/IntentRequestFactory.html":{}}}],["packages/test/libs/request/intentrequestfactory.ts:33",{"_index":1301,"title":{},"body":{"classes/IntentRequestFactory.html":{}}}],["packages/test/libs/request/launchrequestfactory.ts",{"_index":1328,"title":{},"body":{"classes/LaunchRequestFactory.html":{}}}],["packages/test/libs/request/launchrequestfactory.ts:11",{"_index":1333,"title":{},"body":{"classes/LaunchRequestFactory.html":{}}}],["packages/test/libs/request/launchrequestfactory.ts:6",{"_index":1330,"title":{},"body":{"classes/LaunchRequestFactory.html":{}}}],["packages/test/libs/request/requestfactory.ts",{"_index":1891,"title":{},"body":{"classes/RequestFactory.html":{}}}],["packages/test/libs/request/requestfactory.ts:10",{"_index":1895,"title":{},"body":{"classes/RequestFactory.html":{}}}],["packages/test/libs/request/requestfactory.ts:11",{"_index":1893,"title":{},"body":{"classes/RequestFactory.html":{}}}],["packages/test/libs/request/requestfactory.ts:17",{"_index":1907,"title":{},"body":{"classes/RequestFactory.html":{}}}],["packages/test/libs/request/requestfactory.ts:21",{"_index":1901,"title":{},"body":{"classes/RequestFactory.html":{}}}],["packages/test/libs/request/requestfactory.ts:25",{"_index":1906,"title":{},"body":{"classes/RequestFactory.html":{}}}],["packages/test/libs/request/requestfactory.ts:29",{"_index":1900,"title":{},"body":{"classes/RequestFactory.html":{}}}],["packages/test/libs/request/requestfactory.ts:34",{"_index":1905,"title":{},"body":{"classes/RequestFactory.html":{}}}],["packages/test/libs/request/requestfactory.ts:38",{"_index":1902,"title":{},"body":{"classes/RequestFactory.html":{}}}],["packages/test/libs/request/requestfactory.ts:43",{"_index":1904,"title":{},"body":{"classes/RequestFactory.html":{}}}],["packages/test/libs/request/requestfactory.ts:47",{"_index":1898,"title":{},"body":{"classes/RequestFactory.html":{}}}],["packages/test/libs/request/requestfactory.ts:51",{"_index":1903,"title":{},"body":{"classes/RequestFactory.html":{}}}],["packages/test/libs/request/requestfactory.ts:55",{"_index":1908,"title":{},"body":{"classes/RequestFactory.html":{}}}],["packages/test/libs/request/requestfactory.ts:69",{"_index":1909,"title":{},"body":{"classes/RequestFactory.html":{}}}],["packages/test/libs/request/requestfactory.ts:7",{"_index":1896,"title":{},"body":{"classes/RequestFactory.html":{}}}],["packages/test/libs/request/requestfactory.ts:72",{"_index":1899,"title":{},"body":{"classes/RequestFactory.html":{}}}],["packages/test/libs/request/requestfactory.ts:8",{"_index":1897,"title":{},"body":{"classes/RequestFactory.html":{}}}],["packages/test/libs/request/requestfactory.ts:9",{"_index":1894,"title":{},"body":{"classes/RequestFactory.html":{}}}],["packages/test/libs/requestenvelopefactory.ts",{"_index":1846,"title":{},"body":{"classes/RequestEnvelopeFactory.html":{}}}],["packages/test/libs/requestenvelopefactory.ts:20",{"_index":1860,"title":{},"body":{"classes/RequestEnvelopeFactory.html":{}}}],["packages/test/libs/requestenvelopefactory.ts:21",{"_index":1870,"title":{},"body":{"classes/RequestEnvelopeFactory.html":{}}}],["packages/test/libs/requestenvelopefactory.ts:22",{"_index":1867,"title":{},"body":{"classes/RequestEnvelopeFactory.html":{}}}],["packages/test/libs/requestenvelopefactory.ts:23",{"_index":1865,"title":{},"body":{"classes/RequestEnvelopeFactory.html":{}}}],["packages/test/libs/requestenvelopefactory.ts:24",{"_index":1863,"title":{},"body":{"classes/RequestEnvelopeFactory.html":{}}}],["packages/test/libs/requestenvelopefactory.ts:25",{"_index":1855,"title":{},"body":{"classes/RequestEnvelopeFactory.html":{}}}],["packages/test/libs/requestenvelopefactory.ts:26",{"_index":1857,"title":{},"body":{"classes/RequestEnvelopeFactory.html":{}}}],["packages/test/libs/requestenvelopefactory.ts:28",{"_index":1862,"title":{},"body":{"classes/RequestEnvelopeFactory.html":{}}}],["packages/test/libs/requestenvelopefactory.ts:29",{"_index":1861,"title":{},"body":{"classes/RequestEnvelopeFactory.html":{}}}],["packages/test/libs/requestenvelopefactory.ts:30",{"_index":1866,"title":{},"body":{"classes/RequestEnvelopeFactory.html":{}}}],["packages/test/libs/requestenvelopefactory.ts:31",{"_index":1868,"title":{},"body":{"classes/RequestEnvelopeFactory.html":{}}}],["packages/test/libs/requestenvelopefactory.ts:32",{"_index":1854,"title":{},"body":{"classes/RequestEnvelopeFactory.html":{}}}],["packages/test/libs/requestenvelopefactory.ts:45",{"_index":1873,"title":{},"body":{"classes/RequestEnvelopeFactory.html":{}}}],["packages/test/libs/requestenvelopefactory.ts:73",{"_index":1872,"title":{},"body":{"classes/RequestEnvelopeFactory.html":{}}}],["packages/test/libs/session/sessionfactory.ts",{"_index":1995,"title":{},"body":{"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{}}}],["packages/test/libs/session/sessionfactory.ts:13",{"_index":2009,"title":{},"body":{"classes/SessionFactory.html":{}}}],["packages/test/libs/session/sessionfactory.ts:24",{"_index":2014,"title":{},"body":{"classes/SessionFactory.html":{}}}],["packages/test/libs/session/sessionfactory.ts:29",{"_index":2020,"title":{},"body":{"classes/SessionFactory.html":{}}}],["packages/test/libs/session/sessionfactory.ts:33",{"_index":2021,"title":{},"body":{"classes/SessionFactory.html":{}}}],["packages/test/libs/session/sessionfactory.ts:38",{"_index":2016,"title":{},"body":{"classes/SessionFactory.html":{}}}],["packages/test/libs/session/sessionfactory.ts:43",{"_index":2012,"title":{},"body":{"classes/SessionFactory.html":{}}}],["packages/test/libs/session/sessionfactory.ts:48",{"_index":2018,"title":{},"body":{"classes/SessionFactory.html":{}}}],["packages/test/libs/session/sessionfactory.ts:52",{"_index":2010,"title":{},"body":{"classes/SessionFactory.html":{}}}],["packages/test/libs/session/sessionfactory.ts:8",{"_index":1996,"title":{},"body":{"interfaces/SessionAttribute.html":{}}}],["packages/test/libs/user/userfactory.ts",{"_index":2182,"title":{},"body":{"classes/UserFactory.html":{}}}],["packages/test/libs/user/userfactory.ts:14",{"_index":2187,"title":{},"body":{"classes/UserFactory.html":{}}}],["packages/test/libs/user/userfactory.ts:19",{"_index":2186,"title":{},"body":{"classes/UserFactory.html":{}}}],["packages/test/libs/user/userfactory.ts:6",{"_index":2185,"title":{},"body":{"classes/UserFactory.html":{}}}],["packages/test/libs/user/userfactory.ts:9",{"_index":2189,"title":{},"body":{"classes/UserFactory.html":{}}}],["param",{"_index":97,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/ISPProductClient.html":{},"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/ProactiveClient.html":{},"classes/ReminderAPIClient.html":{},"classes/RequestFactory.html":{},"classes/SystemFactory.html":{}}}],["parameter",{"_index":2228,"title":{},"body":{"index.html":{}}}],["parameterfactory",{"_index":1422,"title":{"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{}},"body":{"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{}}}],["parameters",{"_index":28,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ApplicationFactory.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ContextFactory.html":{},"classes/DBClient.html":{},"classes/DeviceAPIClient.html":{},"interfaces/ErrorHandlerBuilder.html":{},"interfaces/Factory.html":{},"classes/FallbackIntentFactory.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory-1.html":{},"classes/HandlerInputFactory.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentHandlerFactory.html":{},"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/ListManagementAPIClient.html":{},"classes/MockAttributeManager.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"classes/ProactiveClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"classes/ReminderAPIClient.html":{},"classes/RequestEnvelopeFactory.html":{},"classes/RequestFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"classes/RequestHandlerFactory-1.html":{},"classes/RouteMatcher.html":{},"classes/SessionFactory.html":{},"classes/SettingAPIClient.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/StateManager.html":{},"classes/StateManager-1.html":{},"classes/SystemFactory.html":{},"interfaces/TranslationBuilder.html":{},"classes/UserFactory.html":{}}}],["parceldelivery",{"_index":392,"title":{"interfaces/ParcelDelivery.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["partial",{"_index":732,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/RequestFactory.html":{},"classes/SystemFactory.html":{}}}],["path",{"_index":196,"title":{},"body":{"classes/APIClient-1.html":{},"classes/DeviceAPIClient.html":{},"classes/ListManagementAPIClient.html":{},"classes/ReminderAPIClient.html":{},"classes/SettingAPIClient.html":{},"classes/UserProfileAPIClient.html":{}}}],["payload",{"_index":478,"title":{"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["payload.update",{"_index":1506,"title":{},"body":{"classes/ParameterFactory-3.html":{}}}],["payloadbuilder",{"_index":570,"title":{"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["peer",{"_index":2207,"title":{},"body":{"dependencies.html":{}}}],["permissions",{"_index":2149,"title":{},"body":{"classes/SystemFactory.html":{}}}],["persistancetype",{"_index":657,"title":{},"body":{"interfaces/BaseSkillConfig.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/S3SkillConfig.html":{},"interfaces/SkillHandlers.html":{},"miscellaneous/typealiases.html":{}}}],["persistenceadapter",{"_index":1139,"title":{},"body":{"classes/HandlerInputFactory.html":{}}}],["persistent",{"_index":281,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["person",{"_index":332,"title":{"interfaces/Person.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-1.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"classes/SystemFactory.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["personid",{"_index":2157,"title":{},"body":{"classes/SystemFactory.html":{}}}],["pet_bottles",{"_index":426,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["please",{"_index":820,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"interfaces/ErrorHandlerBuilder.html":{},"classes/ISPContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/ResponseContent-1.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["pollylanguage",{"_index":2274,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["post",{"_index":198,"title":{},"body":{"classes/APIClient-1.html":{},"classes/ProactiveClient.html":{},"miscellaneous/typealiases.html":{}}}],["post(body",{"_index":214,"title":{},"body":{"classes/APIClient-1.html":{}}}],["premiere",{"_index":344,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["preorder_received",{"_index":406,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["primarykey",{"_index":937,"title":{},"body":{"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{}}}],["private",{"_index":9,"title":{},"body":{"classes/APIClient.html":{},"classes/ApplicationFactory.html":{},"interfaces/AttributeType.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ContextFactory.html":{},"classes/HandlerInputFactory.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"interfaces/InitialState.html":{},"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/MockAttributeManager.html":{},"classes/ProactiveClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"classes/RequestEnvelopeFactory.html":{},"classes/RequestFactory.html":{},"classes/RequestHandlerFactory-1.html":{},"interfaces/ResponseContent-1.html":{},"classes/RouteMatcher.html":{},"interfaces/SkillState.html":{},"classes/StateManager-1.html":{},"classes/SystemFactory.html":{},"classes/UserFactory.html":{}}}],["proactive",{"_index":2227,"title":{},"body":{"index.html":{}}}],["proactiveclient",{"_index":1631,"title":{"classes/ProactiveClient.html":{}},"body":{"classes/ProactiveClient.html":{}}}],["process",{"_index":829,"title":{},"body":{"classes/ConstantsInterceptorFactory.html":{},"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/SkillConstants.html":{}}}],["process.env.sentry_dns",{"_index":992,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["product",{"_index":101,"title":{},"body":{"classes/APIClient.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["product.name",{"_index":174,"title":{},"body":{"classes/APIClient.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{}}}],["product.productid",{"_index":171,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["product.purchasable",{"_index":768,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["product.summary",{"_index":1762,"title":{},"body":{"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{}}}],["product_detail",{"_index":2286,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["productdetailresponsecontentbuilder",{"_index":1756,"title":{"classes/ProductDetailResponseContentBuilder.html":{}},"body":{"classes/ProductDetailResponseContentBuilder.html":{}}}],["productfinders",{"_index":751,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["productid",{"_index":39,"title":{},"body":{"classes/APIClient.html":{},"classes/BuyContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/RefundContentBuilder.html":{}}}],["productlistresponsecontentbuilder",{"_index":1764,"title":{"classes/ProductListResponseContentBuilder.html":{}},"body":{"classes/ProductListResponseContentBuilder.html":{}}}],["productname",{"_index":172,"title":{},"body":{"classes/APIClient.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"interfaces/ResponseContent-1.html":{}}}],["products",{"_index":113,"title":{},"body":{"classes/APIClient.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/ProductListResponseContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["products.length",{"_index":1778,"title":{},"body":{"classes/ProductListResponseContentBuilder.html":{}}}],["products.map((product",{"_index":1782,"title":{},"body":{"classes/ProductListResponseContentBuilder.html":{}}}],["products[0].name",{"_index":1780,"title":{},"body":{"classes/ProductListResponseContentBuilder.html":{}}}],["products[0].summary",{"_index":1781,"title":{},"body":{"classes/ProductListResponseContentBuilder.html":{}}}],["producttext",{"_index":1779,"title":{},"body":{"classes/ProductListResponseContentBuilder.html":{}}}],["progressiveresponse",{"_index":245,"title":{"interfaces/ProgressiveResponse.html":{}},"body":{"interfaces/AlexaSpeechComponentProps.html":{},"interfaces/ProgressiveResponse.html":{},"interfaces/SpeechScriptResponse.html":{}}}],["progressiveresponseerrorhandler",{"_index":2276,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["promise",{"_index":45,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"classes/BuyIntentHandlerBuilder.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/DeviceAPIClient.html":{},"interfaces/ErrorHandlerBuilder.html":{},"interfaces/Factory.html":{},"classes/FallbackIntentFactory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/HandlerBuilder.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"interfaces/HandlerHelpers.html":{},"classes/ISPProductClient.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/ListManagementAPIClient.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"classes/ReminderAPIClient.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"classes/RequestHandlerFactory-1.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"classes/RouteMatcher.html":{},"interfaces/Router.html":{},"classes/SentryErrorHandlerFactory.html":{},"classes/SettingAPIClient.html":{},"interfaces/Situation.html":{},"interfaces/SituationState.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"classes/UserProfileAPIClient.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["promise.resolve",{"_index":295,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["promise.resolve(this.db",{"_index":287,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["properties",{"_index":8,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"interfaces/AlexaSpeechComponentProps.html":{},"classes/ApplicationFactory.html":{},"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/BaseSkillConfig.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ContextFactory.html":{},"interfaces/CreativeWork.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"classes/DeviceAPIClient.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/FlashBriefingContent.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"interfaces/HandlerHelpers.html":{},"classes/HandlerInputFactory.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"interfaces/InitialState.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/ListManagementAPIClient.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MergeObjectType.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"classes/MockAttributeManager.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"interfaces/ProgressiveResponse.html":{},"interfaces/Props.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/RelevantAudience.html":{},"classes/ReminderAPIClient.html":{},"classes/RequestEnvelopeFactory.html":{},"classes/RequestFactory.html":{},"classes/RequestHandlerFactory-1.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"classes/RouteMatcher.html":{},"interfaces/Router.html":{},"interfaces/S3SkillConfig.html":{},"classes/SessionFactory.html":{},"classes/SettingAPIClient.html":{},"interfaces/Situation.html":{},"interfaces/SituationState.html":{},"interfaces/Skill.html":{},"interfaces/SkillHandlers.html":{},"interfaces/SkillState.html":{},"interfaces/Soccer.html":{},"interfaces/SpeechScriptResponse.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"classes/StateManager-1.html":{},"classes/SystemFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"interfaces/Thing.html":{},"interfaces/TranslationObject.html":{},"interfaces/TrashCollectionAlert.html":{},"classes/UserFactory.html":{},"classes/UserProfileAPIClient.html":{},"interfaces/WeatherAlert.html":{}}}],["props",{"_index":253,"title":{"interfaces/Props.html":{}},"body":{"interfaces/AlexaSpeechComponentProps.html":{},"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/ProgressiveResponse.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SpeechScriptResponse.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["protected",{"_index":16,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/DeviceAPIClient.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"classes/HandlerFactory.html":{},"classes/HandlerInputFactory.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/ListManagementAPIClient.html":{},"classes/ProactiveClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"classes/ReminderAPIClient.html":{},"classes/RequestFactory.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{},"classes/SettingAPIClient.html":{},"classes/UserProfileAPIClient.html":{}}}],["provider",{"_index":351,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["providername",{"_index":1480,"title":{},"body":{"classes/ParameterFactory-2.html":{},"interfaces/PayloadBuilder-7.html":{}}}],["public",{"_index":18,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ApplicationFactory.html":{},"interfaces/AttributeType.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ContextFactory.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/DeviceAPIClient.html":{},"interfaces/ErrorHandlerBuilder.html":{},"classes/FallbackIntentFactory.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"classes/HandlerFactory.html":{},"classes/HandlerFactory-1.html":{},"classes/HandlerInputFactory.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"interfaces/InitialState.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentHandlerFactory.html":{},"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestFactory-1.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/ListManagementAPIClient.html":{},"classes/LocalizedAttributesFactory.html":{},"classes/MockAttributeManager.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"classes/ProactiveClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"classes/ReminderAPIClient.html":{},"classes/RequestEnvelopeFactory.html":{},"classes/RequestFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"classes/RequestHandlerFactory-1.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"classes/RouteMatcher.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{},"classes/SettingAPIClient.html":{},"interfaces/SkillConstants.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{},"interfaces/SkillState.html":{},"classes/StateManager.html":{},"classes/StateManager-1.html":{},"classes/SystemFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{},"classes/UserFactory.html":{},"classes/UserProfileAPIClient.html":{}}}],["purchase",{"_index":819,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["purchased",{"_index":815,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["purchaseresult",{"_index":803,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{}}}],["put",{"_index":199,"title":{},"body":{"classes/APIClient-1.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/SystemFactory.html":{},"miscellaneous/typealiases.html":{}}}],["put(body",{"_index":217,"title":{},"body":{"classes/APIClient-1.html":{}}}],["put(id",{"_index":948,"title":{},"body":{"classes/DBClient.html":{}}}],["putalert",{"_index":1558,"title":{},"body":{"classes/ParameterFactory-7.html":{},"interfaces/PayloadBuilder-1.html":{}}}],["putalert(alert",{"_index":581,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["putapiaccesstoken",{"_index":2122,"title":{},"body":{"classes/SystemFactory.html":{}}}],["putapiaccesstoken(apiaccesstoken",{"_index":1882,"title":{},"body":{"classes/RequestEnvelopeFactory.html":{}}}],["putapiaccesstoken(token",{"_index":2130,"title":{},"body":{"classes/SystemFactory.html":{}}}],["putapiendpoint",{"_index":2123,"title":{},"body":{"classes/SystemFactory.html":{}}}],["putapiendpoint(apiendpoint",{"_index":1881,"title":{},"body":{"classes/RequestEnvelopeFactory.html":{}}}],["putapiendpoint(endpoint",{"_index":2132,"title":{},"body":{"classes/SystemFactory.html":{}}}],["putapplication",{"_index":1997,"title":{},"body":{"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{},"classes/SystemFactory.html":{}}}],["putapplication(app",{"_index":2013,"title":{},"body":{"classes/SessionFactory.html":{}}}],["putapplication(application",{"_index":1885,"title":{},"body":{"classes/RequestEnvelopeFactory.html":{},"classes/SystemFactory.html":{}}}],["putapplicationid",{"_index":2124,"title":{},"body":{"classes/SystemFactory.html":{}}}],["putapplicationid(id",{"_index":2136,"title":{},"body":{"classes/SystemFactory.html":{}}}],["putattributes",{"_index":2003,"title":{},"body":{"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{}}}],["putattributes(attributes",{"_index":2015,"title":{},"body":{"classes/SessionFactory.html":{}}}],["putcontext",{"_index":900,"title":{},"body":{"classes/ContextFactory.html":{}}}],["putcontext(context",{"_index":906,"title":{},"body":{"classes/ContextFactory.html":{}}}],["putdevice",{"_index":2125,"title":{},"body":{"classes/SystemFactory.html":{}}}],["putdevice(device",{"_index":2138,"title":{},"body":{"classes/SystemFactory.html":{}}}],["putdirective",{"_index":685,"title":{},"body":{"classes/BuyContentBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ContentBuilder.html":{},"classes/ISPContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/ResponseContent.html":{}}}],["putdirective(directive",{"_index":698,"title":{},"body":{"classes/BuyContentBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ContentBuilder.html":{},"classes/ISPContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{}}}],["putdirectives",{"_index":686,"title":{},"body":{"classes/BuyContentBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ContentBuilder.html":{},"classes/ISPContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/ResponseContent.html":{}}}],["putdirectives(directives",{"_index":700,"title":{},"body":{"classes/BuyContentBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ContentBuilder.html":{},"classes/ISPContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{}}}],["putgarbagetypes",{"_index":1560,"title":{},"body":{"classes/ParameterFactory-7.html":{},"interfaces/PayloadBuilder-1.html":{}}}],["putgarbagetypes(garbagetypes",{"_index":582,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["putid",{"_index":260,"title":{},"body":{"classes/ApplicationFactory.html":{}}}],["putid(id",{"_index":265,"title":{},"body":{"classes/ApplicationFactory.html":{}}}],["putlocalestrings",{"_index":2163,"title":{},"body":{"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{}}}],["putlocalestrings(locale",{"_index":2170,"title":{},"body":{"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{}}}],["putlocalizedattribute",{"_index":1045,"title":{},"body":{"interfaces/Factory.html":{},"classes/LocalizedAttributesFactory.html":{}}}],["putlocalizedattribute(locale",{"_index":575,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["putperson",{"_index":2126,"title":{},"body":{"classes/SystemFactory.html":{}}}],["putperson(id",{"_index":2141,"title":{},"body":{"classes/SystemFactory.html":{}}}],["putreprompttext",{"_index":687,"title":{},"body":{"classes/BuyContentBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ContentBuilder.html":{},"classes/ISPContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/ResponseContent.html":{}}}],["putreprompttext(text",{"_index":703,"title":{},"body":{"classes/BuyContentBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ContentBuilder.html":{},"classes/ISPContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{}}}],["putrequest",{"_index":1285,"title":{},"body":{"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/RequestFactory.html":{}}}],["putrequest(request",{"_index":1307,"title":{},"body":{"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/RequestFactory.html":{}}}],["putrequestattributes",{"_index":1850,"title":{},"body":{"classes/RequestEnvelopeFactory.html":{}}}],["putsession",{"_index":2007,"title":{},"body":{"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{}}}],["putsession(session",{"_index":2017,"title":{},"body":{"classes/SessionFactory.html":{}}}],["putsessionid",{"_index":1999,"title":{},"body":{"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{}}}],["putsessionid(sessionid",{"_index":2019,"title":{},"body":{"classes/SessionFactory.html":{}}}],["putspeechtext",{"_index":688,"title":{},"body":{"classes/BuyContentBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ContentBuilder.html":{},"classes/ISPContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/ResponseContent.html":{}}}],["putspeechtext(text",{"_index":705,"title":{},"body":{"classes/BuyContentBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ContentBuilder.html":{},"classes/ISPContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{}}}],["putuser",{"_index":2001,"title":{},"body":{"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{},"classes/SystemFactory.html":{},"classes/UserFactory.html":{}}}],["putuser(user",{"_index":1883,"title":{},"body":{"classes/RequestEnvelopeFactory.html":{},"classes/SessionFactory.html":{},"classes/SystemFactory.html":{},"classes/UserFactory.html":{}}}],["putuserid",{"_index":2184,"title":{},"body":{"classes/UserFactory.html":{}}}],["putuserid(userid",{"_index":2188,"title":{},"body":{"classes/UserFactory.html":{}}}],["readonly",{"_index":257,"title":{},"body":{"classes/ApplicationFactory.html":{},"classes/ContextFactory.html":{},"interfaces/InitialState.html":{},"classes/RequestEnvelopeFactory.html":{},"classes/RouteMatcher.html":{},"interfaces/SkillState.html":{},"classes/StateManager-1.html":{}}}],["recyclable_plastics",{"_index":427,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["redirectionurl",{"_index":1060,"title":{},"body":{"interfaces/FlashBriefingContent.html":{}}}],["reference.html#details",{"_index":1058,"title":{},"body":{"interfaces/FlashBriefingContent.html":{}}}],["referenceid",{"_index":1711,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["refereneid",{"_index":566,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["refund",{"_index":1796,"title":{},"body":{"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{}}}],["refundcontentbuilder",{"_index":1786,"title":{"classes/RefundContentBuilder.html":{}},"body":{"classes/RefundContentBuilder.html":{}}}],["refundresponsecontentbuilder",{"_index":1799,"title":{"classes/RefundResponseContentBuilder.html":{}},"body":{"classes/RefundResponseContentBuilder.html":{}}}],["relation",{"_index":1517,"title":{},"body":{"classes/ParameterFactory-4.html":{},"interfaces/PayloadBuilder-8.html":{}}}],["relationshiptoinvitee",{"_index":361,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["release",{"_index":343,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["relevantaudience",{"_index":560,"title":{"interfaces/RelevantAudience.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["relevantaudience.payload",{"_index":1734,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["rematch",{"_index":357,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["reminderapiclient",{"_index":1819,"title":{"classes/ReminderAPIClient.html":{}},"body":{"classes/ReminderAPIClient.html":{}}}],["remindermanagement",{"_index":1840,"title":{},"body":{"classes/ReminderAPIClient.html":{}}}],["remindermanagement.reminderrequest",{"_index":1829,"title":{},"body":{"classes/ReminderAPIClient.html":{}}}],["reminderrequest",{"_index":1831,"title":{},"body":{"classes/ReminderAPIClient.html":{}}}],["replacehandler",{"_index":720,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"classes/IntentHandlerBuilder.html":{},"classes/LaunchRequestrBuilder.html":{}}}],["replacehandler(handler",{"_index":731,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/IntentHandlerBuilder.html":{},"classes/LaunchRequestrBuilder.html":{}}}],["repository",{"_index":2218,"title":{},"body":{"index.html":{}}}],["reprompt",{"_index":250,"title":{},"body":{"interfaces/AlexaSpeechComponentProps.html":{},"classes/BuyIntentHandlerBuilder.html":{},"interfaces/ErrorHandlerBuilder.html":{},"interfaces/ProgressiveResponse.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/SpeechScriptResponse.html":{}}}],["reprompt(\"i",{"_index":776,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["reprompt('could",{"_index":1005,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["reprompt(noispresponse.reprompttext",{"_index":763,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["reprompt(reprompttext",{"_index":1018,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["reprompttext",{"_index":809,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"interfaces/ErrorHandlerBuilder.html":{},"classes/ISPContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["request",{"_index":239,"title":{},"body":{"interfaces/AlexaSpeechComponentProps.html":{},"interfaces/AttributeType.html":{},"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"classes/BuyResponseContentBuilder.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"interfaces/ErrorHandlerBuilder.html":{},"interfaces/Factory.html":{},"classes/FallbackIntentFactory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"classes/HandlerFactory.html":{},"interfaces/HandlerHelpers.html":{},"classes/HandlerInputFactory.html":{},"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/ListManagementAPIClient.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"classes/MockAttributeManager.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/ProgressiveResponse.html":{},"interfaces/Props.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/RelevantAudience.html":{},"classes/RequestEnvelopeFactory.html":{},"classes/RequestFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"classes/RouteMatcher.html":{},"interfaces/Router.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/Situation.html":{},"interfaces/SituationState.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SpeechScriptResponse.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"classes/SystemFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"index.html":{}}}],["request['type",{"_index":1136,"title":{},"body":{"interfaces/HandlerHelpers.html":{},"interfaces/Router.html":{},"interfaces/Situation.html":{},"interfaces/SituationState.html":{}}}],["requestdate",{"_index":1847,"title":{},"body":{"classes/RequestEnvelopeFactory.html":{}}}],["requested",{"_index":372,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"classes/RouteMatcher.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["requestenvelope",{"_index":24,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/BuyIntentHandlerBuilder.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"interfaces/ErrorHandlerBuilder.html":{},"classes/FallbackIntentFactory.html":{},"classes/HandlerInputFactory.html":{},"classes/ISPProductClient.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/MergeObjectType.html":{},"classes/RequestEnvelopeFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{}}}],["requestenvelope.context",{"_index":1031,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["requestenvelope.context.system",{"_index":1174,"title":{},"body":{"classes/HandlerInputFactory.html":{}}}],["requestenvelope.context.system.apiendpoint",{"_index":74,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ISPProductClient.html":{}}}],["requestenvelope.request.requestid",{"_index":1043,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["requestenvelope.session",{"_index":1038,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["requestenvelope.session.sessionid",{"_index":1040,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["requestenvelopefactory",{"_index":1140,"title":{"classes/RequestEnvelopeFactory.html":{}},"body":{"classes/HandlerInputFactory.html":{},"classes/RequestEnvelopeFactory.html":{}}}],["requestevent",{"_index":1636,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["requestfactory",{"_index":1276,"title":{"classes/RequestFactory.html":{}},"body":{"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{},"classes/LaunchRequestFactory.html":{},"classes/RequestEnvelopeFactory.html":{},"classes/RequestFactory.html":{}}}],["requestfactory:10",{"_index":1292,"title":{},"body":{"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{}}}],["requestfactory:11",{"_index":1293,"title":{},"body":{"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{}}}],["requestfactory:17",{"_index":1316,"title":{},"body":{"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{}}}],["requestfactory:21",{"_index":1305,"title":{},"body":{"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{}}}],["requestfactory:25",{"_index":1314,"title":{},"body":{"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{}}}],["requestfactory:29",{"_index":1304,"title":{},"body":{"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{}}}],["requestfactory:34",{"_index":1312,"title":{},"body":{"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{}}}],["requestfactory:38",{"_index":1306,"title":{},"body":{"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{}}}],["requestfactory:43",{"_index":1310,"title":{},"body":{"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{}}}],["requestfactory:47",{"_index":1302,"title":{},"body":{"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{}}}],["requestfactory:51",{"_index":1308,"title":{},"body":{"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{}}}],["requestfactory:55",{"_index":1318,"title":{},"body":{"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{}}}],["requestfactory:69",{"_index":1319,"title":{},"body":{"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{}}}],["requestfactory:7",{"_index":1294,"title":{},"body":{"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{}}}],["requestfactory:72",{"_index":1303,"title":{},"body":{"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{}}}],["requestfactory:8",{"_index":1295,"title":{},"body":{"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{}}}],["requestfactory:9",{"_index":1291,"title":{},"body":{"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{}}}],["requesthandler",{"_index":661,"title":{},"body":{"interfaces/BaseSkillConfig.html":{},"classes/BuyIntentHandlerBuilder.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"interfaces/DynamoDBSkillConfig.html":{},"classes/FallbackIntentFactory.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"classes/IntentHandlerBuilder.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"interfaces/MergeObjectType.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"classes/RequestHandlerFactory-1.html":{},"interfaces/S3SkillConfig.html":{},"interfaces/SkillHandlers.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{},"classes/StateManager.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{}}}],["requesthandlerbuilder",{"_index":920,"title":{"interfaces/RequestHandlerBuilder.html":{}},"body":{"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/FallbackIntentFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{}}}],["requesthandlerfactory",{"_index":929,"title":{"classes/RequestHandlerFactory.html":{},"classes/RequestHandlerFactory-1.html":{}},"body":{"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/FallbackIntentFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"classes/RequestHandlerFactory-1.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{}}}],["requesthandlerfactory.create(route",{"_index":1945,"title":{},"body":{"classes/RequestHandlerFactory-1.html":{}}}],["requesthandlers",{"_index":673,"title":{},"body":{"interfaces/BaseSkillConfig.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/S3SkillConfig.html":{},"interfaces/SkillHandlers.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{}}}],["requesthandlers.foreach(handler",{"_index":2058,"title":{},"body":{"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{}}}],["requestid",{"_index":1277,"title":{},"body":{"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/RequestEnvelopeFactory.html":{},"classes/RequestFactory.html":{}}}],["requestinterceptor",{"_index":658,"title":{},"body":{"interfaces/BaseSkillConfig.html":{},"classes/ConstantsInterceptorFactory.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/ErrorHandlerBuilder.html":{},"interfaces/S3SkillConfig.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/SkillConstants.html":{},"interfaces/SkillHandlers.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{}}}],["requestinterceptors",{"_index":674,"title":{},"body":{"interfaces/BaseSkillConfig.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/S3SkillConfig.html":{},"interfaces/SkillHandlers.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{}}}],["requestinterceptors.foreach(interceptor",{"_index":2061,"title":{},"body":{"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{}}}],["requesttype",{"_index":1135,"title":{},"body":{"interfaces/HandlerHelpers.html":{},"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/RequestFactory.html":{},"interfaces/Router.html":{},"interfaces/Situation.html":{},"interfaces/SituationState.html":{}}}],["required",{"_index":1119,"title":{},"body":{"classes/HandlerFactory-1.html":{},"classes/IntentHandlerFactory.html":{},"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestFactory-1.html":{},"classes/RequestFactory.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{},"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{}}}],["requstbody",{"_index":561,"title":{"interfaces/RequstBody.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["res",{"_index":1695,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["res.access_token",{"_index":1697,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["res.expires_in",{"_index":1698,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["res.scope",{"_index":1699,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["res.token_type",{"_index":1700,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["rescheduled",{"_index":371,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["reservation",{"_index":377,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["reservation_request",{"_index":376,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["resetstate",{"_index":2085,"title":{},"body":{"classes/StateManager.html":{}}}],["resetstate(attributemanager",{"_index":2090,"title":{},"body":{"classes/StateManager.html":{}}}],["resolutionslot",{"_index":2278,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["resolve(type).handle(handler",{"_index":932,"title":{},"body":{"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/FallbackIntentFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{}}}],["resolver",{"_index":912,"title":{},"body":{"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/FallbackIntentFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{}}}],["response",{"_index":567,"title":{"interfaces/Response.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"interfaces/CreativeWork.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"interfaces/ErrorHandlerBuilder.html":{},"interfaces/Factory.html":{},"classes/FallbackIntentFactory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/HandlerBuilder.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"interfaces/HandlerHelpers.html":{},"classes/ISPContentBuilder.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MergeObjectType.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"interfaces/Props.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"classes/RequestHandlerFactory-1.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"interfaces/Router.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/Situation.html":{},"interfaces/SituationState.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["response.data",{"_index":1726,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["response.status",{"_index":1742,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["response.statustext",{"_index":1743,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["responsebuilder",{"_index":681,"title":{},"body":{"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/HandlerInputFactory.html":{},"classes/ISPContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{}}}],["responsebuilder.speak(noispresponse.speechtext",{"_index":762,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["responsecontent",{"_index":689,"title":{"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{}},"body":{"classes/BuyContentBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{}}}],["responsefactory",{"_index":1161,"title":{},"body":{"classes/HandlerInputFactory.html":{}}}],["responsefactory.init",{"_index":1177,"title":{},"body":{"classes/HandlerInputFactory.html":{}}}],["responseinterceptor",{"_index":659,"title":{},"body":{"interfaces/BaseSkillConfig.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/S3SkillConfig.html":{},"interfaces/SkillHandlers.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{}}}],["responseinterceptors",{"_index":675,"title":{},"body":{"interfaces/BaseSkillConfig.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/S3SkillConfig.html":{},"interfaces/SkillHandlers.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{}}}],["responseinterceptors.foreach(interceptor",{"_index":2064,"title":{},"body":{"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{}}}],["result",{"_index":191,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"interfaces/AlexaSpeechComponentProps.html":{},"classes/ApplicationFactory.html":{},"interfaces/AttributeType.html":{},"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/BaseSkillConfig.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ContextFactory.html":{},"interfaces/CreativeWork.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/DeviceAPIClient.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/ErrorHandlerBuilder.html":{},"interfaces/Factory.html":{},"classes/FallbackIntentFactory.html":{},"interfaces/FlashBriefingContent.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"classes/HandlerFactory-1.html":{},"interfaces/HandlerHelpers.html":{},"classes/HandlerInputFactory.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"interfaces/InitialState.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentHandlerFactory.html":{},"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestFactory-1.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/ListManagementAPIClient.html":{},"interfaces/LocalizedAttribute.html":{},"classes/LocalizedAttributesFactory.html":{},"interfaces/MergeObjectType.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"classes/MockAttributeManager.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"interfaces/ProgressiveResponse.html":{},"interfaces/Props.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/RelevantAudience.html":{},"classes/ReminderAPIClient.html":{},"classes/RequestEnvelopeFactory.html":{},"classes/RequestFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"classes/RequestHandlerFactory-1.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"classes/RouteMatcher.html":{},"interfaces/Router.html":{},"interfaces/S3SkillConfig.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{},"classes/SettingAPIClient.html":{},"interfaces/Situation.html":{},"interfaces/SituationState.html":{},"interfaces/Skill.html":{},"interfaces/SkillConstants.html":{},"interfaces/SkillHandlers.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{},"interfaces/SkillState.html":{},"interfaces/Soccer.html":{},"interfaces/SpeechScriptResponse.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"classes/StateManager.html":{},"classes/StateManager-1.html":{},"classes/SystemFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"interfaces/Thing.html":{},"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{},"interfaces/TrashCollectionAlert.html":{},"classes/UserFactory.html":{},"classes/UserProfileAPIClient.html":{},"interfaces/WeatherAlert.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["result2",{"_index":309,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["results",{"_index":193,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"interfaces/AlexaSpeechComponentProps.html":{},"classes/ApplicationFactory.html":{},"interfaces/AttributeType.html":{},"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/BaseSkillConfig.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ContextFactory.html":{},"interfaces/CreativeWork.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/DeviceAPIClient.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/ErrorHandlerBuilder.html":{},"interfaces/Factory.html":{},"classes/FallbackIntentFactory.html":{},"interfaces/FlashBriefingContent.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"classes/HandlerFactory-1.html":{},"interfaces/HandlerHelpers.html":{},"classes/HandlerInputFactory.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"interfaces/InitialState.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentHandlerFactory.html":{},"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestFactory-1.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/ListManagementAPIClient.html":{},"interfaces/LocalizedAttribute.html":{},"classes/LocalizedAttributesFactory.html":{},"interfaces/MergeObjectType.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"classes/MockAttributeManager.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"interfaces/ProgressiveResponse.html":{},"interfaces/Props.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/RelevantAudience.html":{},"classes/ReminderAPIClient.html":{},"classes/RequestEnvelopeFactory.html":{},"classes/RequestFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"classes/RequestHandlerFactory-1.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"classes/RouteMatcher.html":{},"interfaces/Router.html":{},"interfaces/S3SkillConfig.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{},"classes/SettingAPIClient.html":{},"interfaces/Situation.html":{},"interfaces/SituationState.html":{},"interfaces/Skill.html":{},"interfaces/SkillConstants.html":{},"interfaces/SkillHandlers.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{},"interfaces/SkillState.html":{},"interfaces/Soccer.html":{},"interfaces/SpeechScriptResponse.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"classes/StateManager.html":{},"classes/StateManager-1.html":{},"classes/SystemFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"interfaces/Thing.html":{},"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{},"interfaces/TrashCollectionAlert.html":{},"classes/UserFactory.html":{},"classes/UserProfileAPIClient.html":{},"interfaces/WeatherAlert.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["retryatt",{"_index":1249,"title":{},"body":{"interfaces/InitialState.html":{},"interfaces/SkillState.html":{},"classes/StateManager-1.html":{}}}],["retryatt[statekey",{"_index":1250,"title":{},"body":{"interfaces/InitialState.html":{},"interfaces/SkillState.html":{},"classes/StateManager-1.html":{}}}],["return",{"_index":79,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ApplicationFactory.html":{},"interfaces/AttributeType.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ContextFactory.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/DeviceAPIClient.html":{},"interfaces/ErrorHandlerBuilder.html":{},"classes/FallbackIntentFactory.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"classes/HandlerFactory.html":{},"classes/HandlerFactory-1.html":{},"classes/HandlerInputFactory.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"interfaces/InitialState.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentHandlerFactory.html":{},"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestFactory-1.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/ListManagementAPIClient.html":{},"classes/LocalizedAttributesFactory.html":{},"interfaces/MergeObjectType.html":{},"classes/MockAttributeManager.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"classes/ProactiveClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"classes/ReminderAPIClient.html":{},"classes/RequestEnvelopeFactory.html":{},"classes/RequestFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"classes/RequestHandlerFactory-1.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"classes/RouteMatcher.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{},"classes/SettingAPIClient.html":{},"interfaces/SkillConstants.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{},"interfaces/SkillState.html":{},"classes/StateManager.html":{},"classes/StateManager-1.html":{},"classes/SystemFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{},"classes/UserFactory.html":{},"classes/UserProfileAPIClient.html":{}}}],["returns",{"_index":41,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ApplicationFactory.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ContextFactory.html":{},"classes/DBClient.html":{},"classes/DeviceAPIClient.html":{},"interfaces/ErrorHandlerBuilder.html":{},"interfaces/Factory.html":{},"classes/FallbackIntentFactory.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"classes/HandlerFactory-1.html":{},"classes/HandlerInputFactory.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentHandlerFactory.html":{},"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestFactory-1.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/ListManagementAPIClient.html":{},"classes/LocalizedAttributesFactory.html":{},"classes/MockAttributeManager.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"classes/ProactiveClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"classes/ReminderAPIClient.html":{},"classes/RequestEnvelopeFactory.html":{},"classes/RequestFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"classes/RequestHandlerFactory-1.html":{},"classes/RouteMatcher.html":{},"classes/SentryErrorHandlerFactory.html":{},"classes/SessionFactory.html":{},"classes/SettingAPIClient.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{},"classes/StateManager.html":{},"classes/StateManager-1.html":{},"classes/SystemFactory.html":{},"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"classes/UserFactory.html":{},"classes/UserProfileAPIClient.html":{}}}],["route",{"_index":1935,"title":{},"body":{"classes/RequestHandlerFactory-1.html":{}}}],["route.handler(input",{"_index":1957,"title":{},"body":{"classes/RequestHandlerFactory-1.html":{}}}],["routematcher",{"_index":1937,"title":{"classes/RouteMatcher.html":{}},"body":{"classes/RequestHandlerFactory-1.html":{},"classes/RouteMatcher.html":{}}}],["routematcher(handlerinput",{"_index":1948,"title":{},"body":{"classes/RequestHandlerFactory-1.html":{}}}],["router",{"_index":1128,"title":{"interfaces/Router.html":{}},"body":{"interfaces/HandlerHelpers.html":{},"classes/RequestHandlerFactory-1.html":{},"classes/RouteMatcher.html":{},"interfaces/Router.html":{},"interfaces/Situation.html":{},"interfaces/SituationState.html":{}}}],["routerhandler",{"_index":1134,"title":{},"body":{"interfaces/HandlerHelpers.html":{},"interfaces/Router.html":{},"interfaces/Situation.html":{},"interfaces/SituationState.html":{},"miscellaneous/typealiases.html":{}}}],["routers",{"_index":1932,"title":{},"body":{"classes/RequestHandlerFactory-1.html":{}}}],["run",{"_index":2247,"title":{},"body":{"index.html":{}}}],["runtime",{"_index":828,"title":{},"body":{"classes/ConstantsInterceptorFactory.html":{},"interfaces/SkillConstants.html":{}}}],["s",{"_index":2216,"title":{},"body":{"index.html":{}}}],["s3",{"_index":665,"title":{},"body":{"interfaces/BaseSkillConfig.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/S3SkillConfig.html":{},"interfaces/SkillHandlers.html":{},"miscellaneous/typealiases.html":{}}}],["s3skillconfig",{"_index":666,"title":{"interfaces/S3SkillConfig.html":{}},"body":{"interfaces/BaseSkillConfig.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/S3SkillConfig.html":{},"interfaces/SkillHandlers.html":{},"miscellaneous/typealiases.html":{}}}],["saturday",{"_index":435,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["save",{"_index":301,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["saved",{"_index":312,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["savepersistentattributes",{"_index":293,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["scope",{"_index":554,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["scope.settag('request_id",{"_index":1042,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["scope.setuser(userparams",{"_index":1044,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["scope=alexa::proactive_events",{"_index":1719,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["score",{"_index":459,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-3.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["scoreearned",{"_index":449,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-3.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["script/libs/model.ts",{"_index":236,"title":{},"body":{"interfaces/AlexaSpeechComponentProps.html":{},"interfaces/ProgressiveResponse.html":{},"interfaces/SpeechScriptResponse.html":{},"miscellaneous/typealiases.html":{}}}],["sdk",{"_index":58,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"interfaces/AlexaSpeechComponentProps.html":{},"classes/ApplicationFactory.html":{},"interfaces/AttributeType.html":{},"interfaces/BaseSkillConfig.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ContextFactory.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/DeviceAPIClient.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/ErrorHandlerBuilder.html":{},"classes/FallbackIntentFactory.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"interfaces/HandlerHelpers.html":{},"classes/HandlerInputFactory.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"interfaces/InitialState.html":{},"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/ListManagementAPIClient.html":{},"interfaces/MergeObjectType.html":{},"classes/MockAttributeManager.html":{},"classes/ProductListResponseContentBuilder.html":{},"interfaces/ProgressiveResponse.html":{},"classes/ReminderAPIClient.html":{},"classes/RequestEnvelopeFactory.html":{},"classes/RequestFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"classes/RequestHandlerFactory-1.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"classes/RouteMatcher.html":{},"interfaces/Router.html":{},"interfaces/S3SkillConfig.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{},"classes/SettingAPIClient.html":{},"interfaces/Situation.html":{},"interfaces/SituationState.html":{},"interfaces/SkillConstants.html":{},"interfaces/SkillHandlers.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{},"interfaces/SkillState.html":{},"interfaces/SpeechScriptResponse.html":{},"classes/StateManager.html":{},"classes/StateManager-1.html":{},"classes/SystemFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"classes/UserFactory.html":{},"classes/UserProfileAPIClient.html":{},"dependencies.html":{},"index.html":{}}}],["search",{"_index":177,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["searchproduct",{"_index":179,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["searchproduct(condition",{"_index":1221,"title":{},"body":{"classes/ISPProductClient.html":{}}}],["seller",{"_index":404,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-5.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["sentry",{"_index":988,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["sentry.captureevent",{"_index":1010,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["sentry.configurescope(scope",{"_index":1041,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["sentry.init",{"_index":990,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["sentry/node",{"_index":989,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["sentrydefaulterrorhandler",{"_index":1019,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["sentryerrorhandlerfactory",{"_index":1008,"title":{"classes/SentryErrorHandlerFactory.html":{}},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["sentryerrorhandlerfactory.init",{"_index":997,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["sentryerrorhandlerfactory.init().gethandler",{"_index":995,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["serviceclient",{"_index":2236,"title":{},"body":{"index.html":{}}}],["serviceclientfactory",{"_index":759,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"classes/HandlerInputFactory.html":{}}}],["services",{"_index":60,"title":{},"body":{"classes/APIClient.html":{},"interfaces/AlexaSpeechComponentProps.html":{},"classes/ContentBuilder-1.html":{},"classes/DeviceAPIClient.html":{},"classes/HandlerInputFactory.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/ListManagementAPIClient.html":{},"classes/ProductListResponseContentBuilder.html":{},"interfaces/ProgressiveResponse.html":{},"classes/ReminderAPIClient.html":{},"interfaces/ResponseContent-1.html":{},"classes/SettingAPIClient.html":{},"interfaces/SpeechScriptResponse.html":{},"classes/UserProfileAPIClient.html":{}}}],["services.directive.senddirectiverequest",{"_index":247,"title":{},"body":{"interfaces/AlexaSpeechComponentProps.html":{},"interfaces/ProgressiveResponse.html":{},"interfaces/SpeechScriptResponse.html":{}}}],["services.listmanagement",{"_index":1382,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["services.monetization.inskillproduct",{"_index":65,"title":{},"body":{"classes/APIClient.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/ProductListResponseContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["services.monetization.inskillproductsresponse",{"_index":63,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["services.remindermanagement",{"_index":1841,"title":{},"body":{"classes/ReminderAPIClient.html":{}}}],["services.serviceclientfactory",{"_index":1164,"title":{},"body":{"classes/HandlerInputFactory.html":{}}}],["session",{"_index":124,"title":{},"body":{"classes/APIClient.html":{},"interfaces/AlexaSpeechComponentProps.html":{},"interfaces/AttributeType.html":{},"classes/HandlerInputFactory.html":{},"classes/ISPProductClient.html":{},"classes/MockAttributeManager.html":{},"interfaces/ProgressiveResponse.html":{},"classes/RequestEnvelopeFactory.html":{},"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{},"interfaces/SpeechScriptResponse.html":{}}}],["sessionattribute",{"_index":1994,"title":{"interfaces/SessionAttribute.html":{}},"body":{"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{}}}],["sessionfactory",{"_index":1852,"title":{"classes/SessionFactory.html":{}},"body":{"classes/RequestEnvelopeFactory.html":{},"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{}}}],["sessionid",{"_index":1848,"title":{},"body":{"classes/RequestEnvelopeFactory.html":{},"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{}}}],["set",{"_index":1020,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/RouteMatcher.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["setacceptedpurchaseresult",{"_index":794,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{}}}],["setacceptedrefundresult",{"_index":1804,"title":{},"body":{"classes/RefundResponseContentBuilder.html":{}}}],["setalertsource",{"_index":1548,"title":{},"body":{"classes/ParameterFactory-6.html":{},"interfaces/PayloadBuilder-2.html":{}}}],["setalertsource(source",{"_index":591,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["setalerttype",{"_index":1550,"title":{},"body":{"classes/ParameterFactory-6.html":{},"interfaces/PayloadBuilder-2.html":{}}}],["setalerttype(type",{"_index":592,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["setapiclient",{"_index":1142,"title":{},"body":{"classes/HandlerInputFactory.html":{}}}],["setapiclient(client",{"_index":1153,"title":{},"body":{"classes/HandlerInputFactory.html":{}}}],["setawayteamstatistic",{"_index":1501,"title":{},"body":{"classes/ParameterFactory-3.html":{},"interfaces/PayloadBuilder-3.html":{}}}],["setawayteamstatistic(teamname",{"_index":600,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["setbookingtime",{"_index":1438,"title":{},"body":{"classes/ParameterFactory.html":{},"interfaces/PayloadBuilder-6.html":{}}}],["setbookingtime(date",{"_index":627,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["setbrokername",{"_index":1441,"title":{},"body":{"classes/ParameterFactory.html":{},"interfaces/PayloadBuilder-6.html":{}}}],["setbrokername(name",{"_index":628,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["setbuydirective",{"_index":682,"title":{},"body":{"classes/BuyContentBuilder.html":{}}}],["setbuydirective(productid",{"_index":694,"title":{},"body":{"classes/BuyContentBuilder.html":{}}}],["setcanceldirective",{"_index":1789,"title":{},"body":{"classes/RefundContentBuilder.html":{}}}],["setcanceldirective(productid",{"_index":1792,"title":{},"body":{"classes/RefundContentBuilder.html":{}}}],["setcannotbuytheproductresponse",{"_index":889,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["setcollectiondayofweek",{"_index":1565,"title":{},"body":{"classes/ParameterFactory-7.html":{},"interfaces/PayloadBuilder-1.html":{}}}],["setcollectiondayofweek(collectiondayofweek",{"_index":585,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["setcontentname",{"_index":1471,"title":{},"body":{"classes/ParameterFactory-2.html":{},"interfaces/PayloadBuilder-7.html":{}}}],["setcontentname(name",{"_index":633,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["setdeclinedpurchaseresult",{"_index":795,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{}}}],["setdeclinedrefundresult",{"_index":1805,"title":{},"body":{"classes/RefundResponseContentBuilder.html":{}}}],["setdialogstate",{"_index":1278,"title":{},"body":{"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{}}}],["setdialogstate(state",{"_index":1296,"title":{},"body":{"classes/IntentRequestFactory.html":{}}}],["setdistributionmethod",{"_index":1477,"title":{},"body":{"classes/ParameterFactory-2.html":{},"interfaces/PayloadBuilder-7.html":{}}}],["setdistributionmethod(method",{"_index":638,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["setentertimestamp",{"_index":1535,"title":{},"body":{"classes/ParameterFactory-5.html":{},"interfaces/PayloadBuilder-5.html":{}}}],["setentertimestamp(date",{"_index":615,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["setentitledproductresponse",{"_index":894,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["seterrorresponse",{"_index":982,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["seterrorresponse('speech",{"_index":998,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["seterrorresponse(speechtext",{"_index":984,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["seterrortrackerinterceptor",{"_index":1024,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["setevent",{"_index":1637,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["setevent(event",{"_index":1663,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["seteventleaguename",{"_index":1496,"title":{},"body":{"classes/ParameterFactory-3.html":{},"interfaces/PayloadBuilder-3.html":{}}}],["seteventleaguename(name",{"_index":598,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["seteventname",{"_index":1638,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["seteventname(name",{"_index":1665,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["setexpectedarrival",{"_index":1537,"title":{},"body":{"classes/ParameterFactory-5.html":{},"interfaces/PayloadBuilder-5.html":{}}}],["setexpectedarrival(date",{"_index":617,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["setexpirytime",{"_index":1639,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["setexpirytime(date",{"_index":1667,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["setfailedpurchaseresult",{"_index":796,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{}}}],["setfailedrefundresult",{"_index":1806,"title":{},"body":{"classes/RefundResponseContentBuilder.html":{}}}],["setgamename",{"_index":1523,"title":{},"body":{"classes/ParameterFactory-4.html":{},"interfaces/PayloadBuilder-8.html":{}}}],["setgamename(name",{"_index":647,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["setgameoffername",{"_index":1521,"title":{},"body":{"classes/ParameterFactory-4.html":{},"interfaces/PayloadBuilder-8.html":{}}}],["setgameoffername(name",{"_index":648,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["sethandle",{"_index":721,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"interfaces/ErrorHandlerBuilder.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"classes/IntentHandlerBuilder.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["sethandle((handlerinput",{"_index":1000,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["sethandle(handle",{"_index":735,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"interfaces/ErrorHandlerBuilder.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/IntentHandlerBuilder.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["sethandlecondition",{"_index":722,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"classes/IntentHandlerBuilder.html":{},"classes/LaunchRequestrBuilder.html":{}}}],["sethandlecondition(condition",{"_index":737,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/IntentHandlerBuilder.html":{},"classes/LaunchRequestrBuilder.html":{}}}],["sethometeamstatistic",{"_index":1498,"title":{},"body":{"classes/ParameterFactory-3.html":{},"interfaces/PayloadBuilder-3.html":{}}}],["sethometeamstatistic(teamname",{"_index":599,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["setintent",{"_index":1279,"title":{},"body":{"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{}}}],["setintent(intent",{"_index":1299,"title":{},"body":{"classes/IntentRequestFactory.html":{}}}],["setinvitername",{"_index":1514,"title":{},"body":{"classes/ParameterFactory-4.html":{},"interfaces/PayloadBuilder-8.html":{}}}],["setinvitername(name",{"_index":642,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["setinvitetype",{"_index":1519,"title":{},"body":{"classes/ParameterFactory-4.html":{},"interfaces/PayloadBuilder-8.html":{}}}],["setinvitetype(type",{"_index":645,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["setlistproducts",{"_index":1768,"title":{},"body":{"classes/ProductListResponseContentBuilder.html":{}}}],["setlocale",{"_index":1286,"title":{},"body":{"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/RequestFactory.html":{}}}],["setlocale(locale",{"_index":1309,"title":{},"body":{"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/RequestFactory.html":{}}}],["setlocalizedattributes",{"_index":1640,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["setlocalizedattributes(localizedattributes",{"_index":1669,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["setmediatype",{"_index":1473,"title":{},"body":{"classes/ParameterFactory-2.html":{},"interfaces/PayloadBuilder-7.html":{}}}],["setmediatype(type",{"_index":634,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["setmessagecount",{"_index":1454,"title":{},"body":{"classes/ParameterFactory-1.html":{},"interfaces/PayloadBuilder-4.html":{}}}],["setmessagecount(count",{"_index":604,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["setmessagecreator",{"_index":1452,"title":{},"body":{"classes/ParameterFactory-1.html":{},"interfaces/PayloadBuilder-4.html":{}}}],["setmessagecreator(name",{"_index":603,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["setmessagefreshness",{"_index":1458,"title":{},"body":{"classes/ParameterFactory-1.html":{},"interfaces/PayloadBuilder-4.html":{}}}],["setmessagefreshness(freshness",{"_index":607,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["setmessagestatus",{"_index":1460,"title":{},"body":{"classes/ParameterFactory-1.html":{},"interfaces/PayloadBuilder-4.html":{}}}],["setmessagestatus(messagestatus",{"_index":609,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["setmessageurgency",{"_index":1456,"title":{},"body":{"classes/ParameterFactory-1.html":{},"interfaces/PayloadBuilder-4.html":{}}}],["setmessageurgency(urgency",{"_index":605,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["setnoentitledproductresponse",{"_index":1790,"title":{},"body":{"classes/RefundContentBuilder.html":{}}}],["setoccasiontype",{"_index":1432,"title":{},"body":{"classes/ParameterFactory.html":{},"interfaces/PayloadBuilder-6.html":{}}}],["setoccasiontype(type",{"_index":623,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["setorderstatus",{"_index":1533,"title":{},"body":{"classes/ParameterFactory-5.html":{},"interfaces/PayloadBuilder-5.html":{}}}],["setorderstatus(status",{"_index":613,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["setpayload",{"_index":1641,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["setpayload(payload",{"_index":1671,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["setpersistanceadapter",{"_index":1143,"title":{},"body":{"classes/HandlerInputFactory.html":{}}}],["setpersistanceadapter(adapter",{"_index":1155,"title":{},"body":{"classes/HandlerInputFactory.html":{}}}],["setpersistentattributes",{"_index":291,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["setpersistentattributes(attribute",{"_index":1416,"title":{},"body":{"classes/MockAttributeManager.html":{}}}],["setproduct",{"_index":865,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["setproduct(product",{"_index":1190,"title":{},"body":{"classes/ISPContentBuilder.html":{}}}],["setproductdetail",{"_index":1759,"title":{},"body":{"classes/ProductDetailResponseContentBuilder.html":{}}}],["setproductlists",{"_index":1769,"title":{},"body":{"classes/ProductListResponseContentBuilder.html":{}}}],["setproductlists(list",{"_index":1774,"title":{},"body":{"classes/ProductListResponseContentBuilder.html":{}}}],["setproductname",{"_index":866,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["setproductname(name",{"_index":1192,"title":{},"body":{"classes/ISPContentBuilder.html":{}}}],["setproductnotfoundresponse",{"_index":886,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["setproductsnotfoundresponse",{"_index":882,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["setprovider",{"_index":1479,"title":{},"body":{"classes/ParameterFactory-2.html":{},"interfaces/PayloadBuilder-7.html":{}}}],["setprovider(providername",{"_index":640,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["setprovidername",{"_index":1436,"title":{},"body":{"classes/ParameterFactory.html":{},"interfaces/PayloadBuilder-6.html":{}}}],["setprovidername(name",{"_index":626,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["setreferenceid",{"_index":1642,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["setreferenceid(id",{"_index":1673,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["setrelationshiptoinvitee",{"_index":1516,"title":{},"body":{"classes/ParameterFactory-4.html":{},"interfaces/PayloadBuilder-8.html":{}}}],["setrelationshiptoinvitee(relation",{"_index":643,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["setrelevantaudience",{"_index":1643,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["setrelevantaudience(type",{"_index":1675,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["setrequestattributes",{"_index":288,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["setrequestattributes(attribute",{"_index":1418,"title":{},"body":{"classes/MockAttributeManager.html":{}}}],["setrequesteddate",{"_index":1287,"title":{},"body":{"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/RequestFactory.html":{}}}],["setrequesteddate(date",{"_index":1311,"title":{},"body":{"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/RequestFactory.html":{}}}],["setrequesteddate(this.requestdate",{"_index":1879,"title":{},"body":{"classes/RequestEnvelopeFactory.html":{}}}],["setrequestid",{"_index":1288,"title":{},"body":{"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/RequestFactory.html":{}}}],["setrequestid(id",{"_index":1313,"title":{},"body":{"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/RequestFactory.html":{}}}],["setrequesttype",{"_index":1289,"title":{},"body":{"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/RequestFactory.html":{}}}],["setrequesttype(type",{"_index":1315,"title":{},"body":{"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/RequestFactory.html":{}}}],["setsessionattributes",{"_index":290,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["setsessionattributes(attribute",{"_index":1420,"title":{},"body":{"classes/MockAttributeManager.html":{}}}],["setstarttime",{"_index":1475,"title":{},"body":{"classes/ParameterFactory-2.html":{},"interfaces/PayloadBuilder-7.html":{}}}],["setstarttime(date",{"_index":637,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["setstate",{"_index":1243,"title":{},"body":{"interfaces/InitialState.html":{},"interfaces/SkillState.html":{},"classes/StateManager-1.html":{}}}],["setstate(current",{"_index":2118,"title":{},"body":{"classes/StateManager-1.html":{}}}],["setsubject",{"_index":1434,"title":{},"body":{"classes/ParameterFactory.html":{},"interfaces/PayloadBuilder-6.html":{}}}],["setsubject(subject",{"_index":625,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["settask",{"_index":1329,"title":{},"body":{"classes/LaunchRequestFactory.html":{}}}],["settask(task",{"_index":1331,"title":{},"body":{"classes/LaunchRequestFactory.html":{}}}],["settimestamp",{"_index":1644,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["settimestamp(date",{"_index":1679,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["settingapiclient",{"_index":2022,"title":{"classes/SettingAPIClient.html":{}},"body":{"classes/SettingAPIClient.html":{}}}],["settings",{"_index":873,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["setunsupportedispresponse",{"_index":877,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["several",{"_index":175,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{},"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/RequestFactory.html":{}}}],["shouldendsession",{"_index":1132,"title":{},"body":{"interfaces/HandlerHelpers.html":{},"interfaces/Router.html":{},"interfaces/Situation.html":{},"interfaces/SituationState.html":{}}}],["shouldmatchintentrequest",{"_index":1972,"title":{},"body":{"classes/RouteMatcher.html":{}}}],["shouldmatchintentrequest(request",{"_index":1985,"title":{},"body":{"classes/RouteMatcher.html":{}}}],["shouldmatchrequesttype",{"_index":1973,"title":{},"body":{"classes/RouteMatcher.html":{}}}],["shouldmatchrequesttype(request",{"_index":1983,"title":{},"body":{"classes/RouteMatcher.html":{}}}],["single",{"_index":337,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["situation",{"_index":1130,"title":{"interfaces/Situation.html":{}},"body":{"interfaces/HandlerHelpers.html":{},"classes/RequestHandlerFactory-1.html":{},"interfaces/Router.html":{},"interfaces/Situation.html":{},"interfaces/SituationState.html":{}}}],["situation.shouldendsession",{"_index":1955,"title":{},"body":{"classes/RequestHandlerFactory-1.html":{}}}],["situation.state",{"_index":1942,"title":{},"body":{"classes/RequestHandlerFactory-1.html":{}}}],["situationstate",{"_index":1131,"title":{"interfaces/SituationState.html":{}},"body":{"interfaces/HandlerHelpers.html":{},"interfaces/Router.html":{},"interfaces/Situation.html":{},"interfaces/SituationState.html":{}}}],["skill",{"_index":382,"title":{"interfaces/Skill.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"classes/ContentBuilder-1.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/FlashBriefingContent.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/ISPContentBuilder.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/ResponseContent-1.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"classes/SystemFactory.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["skillconfig",{"_index":671,"title":{},"body":{"interfaces/BaseSkillConfig.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/S3SkillConfig.html":{},"interfaces/SkillHandlers.html":{},"miscellaneous/typealiases.html":{}}}],["skillconstants",{"_index":662,"title":{"interfaces/SkillConstants.html":{}},"body":{"interfaces/BaseSkillConfig.html":{},"classes/ConstantsInterceptorFactory.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/S3SkillConfig.html":{},"interfaces/SkillConstants.html":{},"interfaces/SkillHandlers.html":{}}}],["skillhandlers",{"_index":672,"title":{"interfaces/SkillHandlers.html":{}},"body":{"interfaces/BaseSkillConfig.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/S3SkillConfig.html":{},"interfaces/SkillHandlers.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{}}}],["skillhandlersbuilder",{"_index":2039,"title":{"interfaces/SkillHandlersBuilder.html":{}},"body":{"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{}}}],["skillhandlersfactory",{"_index":2057,"title":{"classes/SkillHandlersFactory.html":{}},"body":{"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{}}}],["skillstate",{"_index":1231,"title":{"interfaces/SkillState.html":{}},"body":{"interfaces/InitialState.html":{},"interfaces/SkillState.html":{},"classes/StateManager-1.html":{}}}],["snow_storm",{"_index":443,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["soccer",{"_index":453,"title":{"interfaces/Soccer.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["socialgameinvite",{"_index":528,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-4.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["socialgameinvite.available.payloadbuilder",{"_index":1513,"title":{},"body":{"classes/ParameterFactory-4.html":{}}}],["socialgameinvite.eventname",{"_index":486,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["socialgameinvite.payload",{"_index":495,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["something",{"_index":999,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["sorry",{"_index":872,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"interfaces/AlexaSpeechComponentProps.html":{},"classes/ApplicationFactory.html":{},"interfaces/AttributeType.html":{},"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/BaseSkillConfig.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ContextFactory.html":{},"interfaces/CreativeWork.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/DeviceAPIClient.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/ErrorHandlerBuilder.html":{},"interfaces/Factory.html":{},"classes/FallbackIntentFactory.html":{},"interfaces/FlashBriefingContent.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"classes/HandlerFactory-1.html":{},"interfaces/HandlerHelpers.html":{},"classes/HandlerInputFactory.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"interfaces/InitialState.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentHandlerFactory.html":{},"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestFactory-1.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/ListManagementAPIClient.html":{},"interfaces/LocalizedAttribute.html":{},"classes/LocalizedAttributesFactory.html":{},"interfaces/MergeObjectType.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"classes/MockAttributeManager.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"interfaces/ProgressiveResponse.html":{},"interfaces/Props.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/RelevantAudience.html":{},"classes/ReminderAPIClient.html":{},"classes/RequestEnvelopeFactory.html":{},"classes/RequestFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"classes/RequestHandlerFactory-1.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"classes/RouteMatcher.html":{},"interfaces/Router.html":{},"interfaces/S3SkillConfig.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{},"classes/SettingAPIClient.html":{},"interfaces/Situation.html":{},"interfaces/SituationState.html":{},"interfaces/Skill.html":{},"interfaces/SkillConstants.html":{},"interfaces/SkillHandlers.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{},"interfaces/SkillState.html":{},"interfaces/Soccer.html":{},"interfaces/SpeechScriptResponse.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"classes/StateManager.html":{},"classes/StateManager-1.html":{},"classes/SystemFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"interfaces/Thing.html":{},"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{},"interfaces/TrashCollectionAlert.html":{},"classes/UserFactory.html":{},"classes/UserProfileAPIClient.html":{},"interfaces/WeatherAlert.html":{}}}],["speak",{"_index":771,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["speak(\"i",{"_index":772,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["speak('sorry",{"_index":1001,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["speak(speechtext",{"_index":1017,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["specific",{"_index":168,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["speech",{"_index":249,"title":{},"body":{"interfaces/AlexaSpeechComponentProps.html":{},"interfaces/ErrorHandlerBuilder.html":{},"interfaces/ProgressiveResponse.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/SpeechScriptResponse.html":{}}}],["speechscriptresponse",{"_index":248,"title":{"interfaces/SpeechScriptResponse.html":{}},"body":{"interfaces/AlexaSpeechComponentProps.html":{},"interfaces/ProgressiveResponse.html":{},"interfaces/SpeechScriptResponse.html":{}}}],["speechtext",{"_index":807,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"interfaces/ErrorHandlerBuilder.html":{},"classes/ISPContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["sportsevent",{"_index":451,"title":{"interfaces/SportsEvent.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-3.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["sportsevent.eventname",{"_index":481,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["sportsevent.payload",{"_index":490,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["sportsevent.updated.payloadbuilder",{"_index":1489,"title":{},"body":{"classes/ParameterFactory-3.html":{}}}],["sportsteam",{"_index":457,"title":{"interfaces/SportsTeam.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["ssml",{"_index":243,"title":{},"body":{"interfaces/AlexaSpeechComponentProps.html":{},"interfaces/ProgressiveResponse.html":{},"interfaces/SpeechScriptResponse.html":{}}}],["stack",{"_index":1014,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["started",{"_index":2210,"title":{"index.html":{}},"body":{"index.html":{}}}],["starttime",{"_index":349,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["state",{"_index":512,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/HandlerHelpers.html":{},"interfaces/InitialState.html":{},"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-5.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"classes/RequestHandlerFactory-1.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"classes/RouteMatcher.html":{},"interfaces/Router.html":{},"interfaces/Situation.html":{},"interfaces/SituationState.html":{},"interfaces/Skill.html":{},"interfaces/SkillState.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"classes/StateManager.html":{},"classes/StateManager-1.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["state.current",{"_index":1239,"title":{},"body":{"interfaces/InitialState.html":{},"interfaces/SkillState.html":{},"classes/StateManager-1.html":{}}}],["state.freshness",{"_index":1459,"title":{},"body":{"classes/ParameterFactory-1.html":{}}}],["state.status",{"_index":1461,"title":{},"body":{"classes/ParameterFactory-1.html":{}}}],["statekey",{"_index":1233,"title":{},"body":{"interfaces/InitialState.html":{},"interfaces/SkillState.html":{},"classes/StateManager-1.html":{}}}],["statemanager",{"_index":1126,"title":{"classes/StateManager.html":{},"classes/StateManager-1.html":{}},"body":{"interfaces/HandlerHelpers.html":{},"interfaces/InitialState.html":{},"classes/RequestHandlerFactory-1.html":{},"classes/RouteMatcher.html":{},"interfaces/Router.html":{},"interfaces/Situation.html":{},"interfaces/SituationState.html":{},"interfaces/SkillState.html":{},"classes/StateManager.html":{},"classes/StateManager-1.html":{}}}],["statemanager(input.attributesmanager",{"_index":1951,"title":{},"body":{"classes/RequestHandlerFactory-1.html":{},"classes/RouteMatcher.html":{}}}],["statemanager.getcurrentstate(attributemanager",{"_index":2076,"title":{},"body":{"classes/StateManager.html":{}}}],["statemanager.setstate(next",{"_index":1954,"title":{},"body":{"classes/RequestHandlerFactory-1.html":{}}}],["statemanager.updatestate(attributemanager",{"_index":2075,"title":{},"body":{"classes/StateManager.html":{}}}],["static",{"_index":717,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"classes/ConstantsInterceptorFactory.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"interfaces/ErrorHandlerBuilder.html":{},"classes/FallbackIntentFactory.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerFactory.html":{},"classes/HandlerFactory-1.html":{},"classes/IntentHandlerFactory.html":{},"classes/LaunchRequestFactory-1.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LocalizedAttributesFactory.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"classes/RequestHandlerFactory-1.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/SkillConstants.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{},"classes/StateManager.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{}}}],["status",{"_index":133,"title":{},"body":{"classes/APIClient.html":{},"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/ISPProductClient.html":{},"classes/ListManagementAPIClient.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-5.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["statuscode",{"_index":568,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["stop",{"_index":876,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["stream",{"_index":341,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["streamurl",{"_index":1061,"title":{},"body":{"interfaces/FlashBriefingContent.html":{}}}],["string",{"_index":33,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"interfaces/AlexaSpeechComponentProps.html":{},"classes/ApplicationFactory.html":{},"interfaces/AttributeType.html":{},"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/BaseSkillConfig.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"interfaces/CreativeWork.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/DeviceAPIClient.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/ErrorHandlerBuilder.html":{},"interfaces/Factory.html":{},"classes/FallbackIntentFactory.html":{},"interfaces/FlashBriefingContent.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/HandlerFactory-1.html":{},"interfaces/HandlerHelpers.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"interfaces/InitialState.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentHandlerFactory.html":{},"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestFactory-1.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/ListManagementAPIClient.html":{},"interfaces/LocalizedAttribute.html":{},"classes/LocalizedAttributesFactory.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"classes/MockAttributeManager.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"interfaces/ProgressiveResponse.html":{},"interfaces/Props.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/RelevantAudience.html":{},"classes/ReminderAPIClient.html":{},"classes/RequestEnvelopeFactory.html":{},"classes/RequestFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"interfaces/Router.html":{},"interfaces/S3SkillConfig.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{},"classes/SettingAPIClient.html":{},"interfaces/Situation.html":{},"interfaces/SituationState.html":{},"interfaces/Skill.html":{},"interfaces/SkillConstants.html":{},"interfaces/SkillHandlers.html":{},"interfaces/SkillState.html":{},"interfaces/Soccer.html":{},"interfaces/SpeechScriptResponse.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"classes/StateManager.html":{},"classes/StateManager-1.html":{},"classes/SystemFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"interfaces/Thing.html":{},"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{},"interfaces/TrashCollectionAlert.html":{},"classes/UserFactory.html":{},"classes/UserProfileAPIClient.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["subject",{"_index":385,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["summary",{"_index":2219,"title":{},"body":{"index.html":{}}}],["sunday",{"_index":436,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["super",{"_index":1270,"title":{},"body":{"classes/IntentHandlerBuilder.html":{}}}],["super('intentrequest",{"_index":1324,"title":{},"body":{"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{}}}],["super('launchrequest",{"_index":1334,"title":{},"body":{"classes/LaunchRequestFactory.html":{}}}],["super(handlerinput.requestenvelope",{"_index":117,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["super(locale",{"_index":862,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["supportedhandlertype",{"_index":927,"title":{},"body":{"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/FallbackIntentFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"miscellaneous/typealiases.html":{}}}],["supportedinterfaces",{"_index":2152,"title":{},"body":{"classes/SystemFactory.html":{}}}],["supports",{"_index":870,"title":{},"body":{"classes/ContentBuilder-1.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/FallbackIntentFactory.html":{},"classes/ISPContentBuilder.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/ResponseContent-1.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{}}}],["supports(type",{"_index":1337,"title":{},"body":{"classes/LaunchRequestHandlerFactory.html":{}}}],["switch",{"_index":1686,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["system",{"_index":898,"title":{},"body":{"classes/ContextFactory.html":{},"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{},"classes/SystemFactory.html":{}}}],["system.device",{"_index":1035,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["system.device.deviceid",{"_index":1037,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["system.user.userid",{"_index":1034,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["systemfactory",{"_index":903,"title":{"classes/SystemFactory.html":{}},"body":{"classes/ContextFactory.html":{},"classes/SystemFactory.html":{}}}],["t",{"_index":241,"title":{},"body":{"interfaces/AlexaSpeechComponentProps.html":{},"interfaces/BaseSkillConfig.html":{},"classes/ConstantsInterceptorFactory.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/InitialState.html":{},"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{},"interfaces/ProgressiveResponse.html":{},"classes/RequestEnvelopeFactory.html":{},"classes/RequestFactory.html":{},"classes/RequestHandlerFactory-1.html":{},"classes/RouteMatcher.html":{},"interfaces/S3SkillConfig.html":{},"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{},"interfaces/SkillConstants.html":{},"interfaces/SkillHandlers.html":{},"interfaces/SkillState.html":{},"interfaces/SpeechScriptResponse.html":{},"classes/StateManager.html":{},"classes/StateManager-1.html":{}}}],["t['type",{"_index":1910,"title":{},"body":{"classes/RequestFactory.html":{}}}],["tablename",{"_index":670,"title":{},"body":{"interfaces/BaseSkillConfig.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/S3SkillConfig.html":{},"interfaces/SkillHandlers.html":{}}}],["target",{"_index":166,"title":{},"body":{"classes/APIClient.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/FallbackIntentFactory.html":{},"classes/ISPProductClient.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{}}}],["targetroute",{"_index":1959,"title":{},"body":{"classes/RouteMatcher.html":{}}}],["targetstate",{"_index":1246,"title":{},"body":{"interfaces/InitialState.html":{},"interfaces/SkillState.html":{},"classes/StateManager-1.html":{}}}],["targetstate.before",{"_index":1258,"title":{},"body":{"interfaces/InitialState.html":{},"interfaces/SkillState.html":{},"classes/StateManager-1.html":{}}}],["targetstate.current",{"_index":1254,"title":{},"body":{"interfaces/InitialState.html":{},"interfaces/SkillState.html":{},"classes/StateManager-1.html":{}}}],["targetstate.next",{"_index":1256,"title":{},"body":{"interfaces/InitialState.html":{},"interfaces/SkillState.html":{},"classes/StateManager-1.html":{}}}],["task",{"_index":1332,"title":{},"body":{"classes/LaunchRequestFactory.html":{}}}],["team",{"_index":458,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-3.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["teamname",{"_index":450,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-3.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["tell",{"_index":1004,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["test",{"_index":303,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/MockAttributeManager.html":{},"classes/RequestFactory.html":{}}}],["test1",{"_index":307,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["testhandler",{"_index":2079,"title":{},"body":{"classes/StateManager.html":{}}}],["testlint",{"_index":2246,"title":{},"body":{"index.html":{}}}],["text",{"_index":577,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"classes/ContentBuilder.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/ISPContentBuilder.html":{},"interfaces/LocalizedAttribute.html":{},"classes/LocalizedAttributesFactory.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"interfaces/Props.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/ResponseContent.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["thanks",{"_index":810,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{}}}],["thing",{"_index":346,"title":{"interfaces/Thing.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["think",{"_index":774,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["this.apiclient",{"_index":1168,"title":{},"body":{"classes/HandlerInputFactory.html":{}}}],["this.apiendpoint",{"_index":1705,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["this.app",{"_index":269,"title":{},"body":{"classes/ApplicationFactory.html":{}}}],["this.app.applicationid",{"_index":268,"title":{},"body":{"classes/ApplicationFactory.html":{}}}],["this.attributemanager",{"_index":118,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{},"interfaces/InitialState.html":{},"interfaces/SkillState.html":{},"classes/StateManager-1.html":{}}}],["this.attributemanager.getsessionattributes",{"_index":146,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["this.attributemanager.setsessionattributes",{"_index":151,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["this.body",{"_index":1707,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["this.body.event",{"_index":1729,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["this.body.event.name",{"_index":1731,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["this.body.event.payload",{"_index":1730,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["this.body.expirytime",{"_index":1728,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["this.body.localizedattributes",{"_index":1732,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["this.body.referenceid",{"_index":1713,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["this.body.relevantaudience",{"_index":1735,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["this.body.timestamp",{"_index":1727,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["this.cacheusage",{"_index":121,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["this.canhandle",{"_index":1085,"title":{},"body":{"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"classes/HandlerFactory.html":{},"classes/RouteMatcher.html":{}}}],["this.canhandlefilter",{"_index":1077,"title":{},"body":{"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"classes/HandlerFactory.html":{}}}],["this.canhandlefilter(handlerinput",{"_index":752,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"classes/HandlerFactory.html":{},"classes/IntentHandlerBuilder.html":{},"classes/LaunchRequestrBuilder.html":{}}}],["this.client",{"_index":953,"title":{},"body":{"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{}}}],["this.client.get(param).promise",{"_index":961,"title":{},"body":{"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{}}}],["this.client.put(param).promise",{"_index":964,"title":{},"body":{"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{}}}],["this.clientid",{"_index":1701,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["this.clientsecret",{"_index":1703,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["this.contents",{"_index":812,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{}}}],["this.contents.directive",{"_index":709,"title":{},"body":{"classes/BuyContentBuilder.html":{},"classes/RefundContentBuilder.html":{}}}],["this.contents.directives",{"_index":847,"title":{},"body":{"classes/ContentBuilder.html":{},"interfaces/ResponseContent.html":{}}}],["this.contents.directives.concat(directives",{"_index":848,"title":{},"body":{"classes/ContentBuilder.html":{},"interfaces/ResponseContent.html":{}}}],["this.contents.directives.push(directive",{"_index":849,"title":{},"body":{"classes/ContentBuilder.html":{},"interfaces/ResponseContent.html":{}}}],["this.contents.reprompttext",{"_index":846,"title":{},"body":{"classes/ContentBuilder.html":{},"interfaces/ResponseContent.html":{}}}],["this.contents.speechtext",{"_index":845,"title":{},"body":{"classes/ContentBuilder.html":{},"interfaces/ResponseContent.html":{}}}],["this.context",{"_index":908,"title":{},"body":{"classes/ContextFactory.html":{},"classes/RequestEnvelopeFactory.html":{}}}],["this.context.getcontext",{"_index":1889,"title":{},"body":{"classes/RequestEnvelopeFactory.html":{}}}],["this.context.system.putapplication(application",{"_index":1880,"title":{},"body":{"classes/RequestEnvelopeFactory.html":{}}}],["this.createaxiosrequestobject('delete",{"_index":226,"title":{},"body":{"classes/APIClient-1.html":{}}}],["this.createaxiosrequestobject('get",{"_index":229,"title":{},"body":{"classes/APIClient-1.html":{}}}],["this.createaxiosrequestobject('post",{"_index":230,"title":{},"body":{"classes/APIClient-1.html":{}}}],["this.createaxiosrequestobject('put",{"_index":231,"title":{},"body":{"classes/APIClient-1.html":{}}}],["this.createaxiosrequestobject(productid",{"_index":98,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["this.date",{"_index":1913,"title":{},"body":{"classes/RequestFactory.html":{}}}],["this.date.toisostring",{"_index":1914,"title":{},"body":{"classes/RequestFactory.html":{}}}],["this.db",{"_index":294,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["this.delete(`${listid}/items/${itemid",{"_index":1393,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["this.delete(alertid",{"_index":1842,"title":{},"body":{"classes/ReminderAPIClient.html":{}}}],["this.delete(listid",{"_index":1389,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["this.endpoint",{"_index":73,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ISPProductClient.html":{}}}],["this.endpoint}${p.replace(/\\/\\//g",{"_index":222,"title":{},"body":{"classes/APIClient-1.html":{}}}],["this.endpoint}/v1/users/~current/skills/~current/inskillproducts",{"_index":78,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["this.executecustomsituation",{"_index":1992,"title":{},"body":{"classes/RouteMatcher.html":{}}}],["this.fetchlists",{"_index":158,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["this.findproductbyid(condition.productid",{"_index":188,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["this.findproductbyname(condition.productname",{"_index":187,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["this.findproductbyno(condition.userinputno",{"_index":186,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["this.get",{"_index":106,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{},"classes/ListManagementAPIClient.html":{},"classes/ReminderAPIClient.html":{}}}],["this.get('profile.email",{"_index":2203,"title":{},"body":{"classes/UserProfileAPIClient.html":{}}}],["this.get('profile.givenname",{"_index":2202,"title":{},"body":{"classes/UserProfileAPIClient.html":{}}}],["this.get('profile.mobilenumber",{"_index":2204,"title":{},"body":{"classes/UserProfileAPIClient.html":{}}}],["this.get('profile.name",{"_index":1385,"title":{},"body":{"classes/ListManagementAPIClient.html":{},"classes/UserProfileAPIClient.html":{}}}],["this.get(`${deviceid}/settings/address",{"_index":978,"title":{},"body":{"classes/DeviceAPIClient.html":{}}}],["this.get(`${deviceid}/settings/address/countryandpostalcode",{"_index":977,"title":{},"body":{"classes/DeviceAPIClient.html":{}}}],["this.get(`${deviceid}/settings/system.distanceunits",{"_index":2037,"title":{},"body":{"classes/SettingAPIClient.html":{}}}],["this.get(`${deviceid}/settings/system.temperatureunit",{"_index":2036,"title":{},"body":{"classes/SettingAPIClient.html":{}}}],["this.get(`${deviceid}/settings/system.timezone",{"_index":2035,"title":{},"body":{"classes/SettingAPIClient.html":{}}}],["this.get(`${listid}/${status",{"_index":1386,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["this.get(`${listid}/items/${itemid",{"_index":1390,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["this.get(alertid",{"_index":1843,"title":{},"body":{"classes/ReminderAPIClient.html":{}}}],["this.get(productid",{"_index":107,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["this.getacceptedpurchaseresult",{"_index":816,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{}}}],["this.getacceptedrefundresult",{"_index":1817,"title":{},"body":{"classes/RefundResponseContentBuilder.html":{}}}],["this.getaccesstoken",{"_index":1738,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["this.getbeforestate().includes(state",{"_index":1264,"title":{},"body":{"interfaces/InitialState.html":{},"interfaces/SkillState.html":{},"classes/StateManager-1.html":{}}}],["this.getbody",{"_index":1736,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["this.getcachedproducts",{"_index":148,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["this.getcannotbuytheproductresponse",{"_index":890,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["this.getcurrentstate",{"_index":1260,"title":{},"body":{"interfaces/InitialState.html":{},"interfaces/SkillState.html":{},"classes/StateManager-1.html":{}}}],["this.getcurrentstate(attributemanager",{"_index":2099,"title":{},"body":{"classes/StateManager.html":{}}}],["this.getdeclinedpurchaseresult",{"_index":813,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{}}}],["this.getdeclinedrefundresult",{"_index":1814,"title":{},"body":{"classes/RefundResponseContentBuilder.html":{}}}],["this.getentitledproductresponse",{"_index":895,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["this.getfailedpurchaseresult",{"_index":822,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{}}}],["this.getfailedrefundresult",{"_index":1818,"title":{},"body":{"classes/RefundResponseContentBuilder.html":{}}}],["this.getlistproducts",{"_index":1785,"title":{},"body":{"classes/ProductListResponseContentBuilder.html":{}}}],["this.getlocale",{"_index":1919,"title":{},"body":{"classes/RequestFactory.html":{}}}],["this.getnextstate().includes(state",{"_index":1262,"title":{},"body":{"interfaces/InitialState.html":{},"interfaces/SkillState.html":{},"classes/StateManager-1.html":{}}}],["this.getnoentitledproductresponse",{"_index":1797,"title":{},"body":{"classes/RefundContentBuilder.html":{}}}],["this.getpayload",{"_index":1444,"title":{},"body":{"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{}}}],["this.getproduct",{"_index":805,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{}}}],["this.getproductdetail",{"_index":1763,"title":{},"body":{"classes/ProductDetailResponseContentBuilder.html":{}}}],["this.getproductlists",{"_index":1777,"title":{},"body":{"classes/ProductListResponseContentBuilder.html":{}}}],["this.getproductname",{"_index":885,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["this.getproductnotfoundresponse",{"_index":887,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["this.getproductsnotfoundresponse",{"_index":883,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["this.getrequestid",{"_index":1920,"title":{},"body":{"classes/RequestFactory.html":{}}}],["this.getrequestparams(authresult.access_token",{"_index":1741,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["this.getrequesttype",{"_index":1921,"title":{},"body":{"classes/RequestFactory.html":{}}}],["this.getserviceclientfactory",{"_index":1178,"title":{},"body":{"classes/HandlerInputFactory.html":{}}}],["this.getstate",{"_index":1252,"title":{},"body":{"interfaces/InitialState.html":{},"interfaces/SkillState.html":{},"classes/StateManager-1.html":{}}}],["this.gettimestamp",{"_index":1918,"title":{},"body":{"classes/RequestFactory.html":{}}}],["this.getunsupportedispresponse",{"_index":878,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["this.geturl(path",{"_index":224,"title":{},"body":{"classes/APIClient-1.html":{}}}],["this.geturl(productid",{"_index":82,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["this.handle",{"_index":1078,"title":{},"body":{"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"classes/HandlerFactory.html":{}}}],["this.handlerfilter",{"_index":1102,"title":{},"body":{"classes/HandlerBuilder-1.html":{}}}],["this.handlerfilter(handlerinput",{"_index":1101,"title":{},"body":{"classes/HandlerBuilder-1.html":{}}}],["this.hasproducts",{"_index":164,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["this.input",{"_index":1974,"title":{},"body":{"classes/RouteMatcher.html":{}}}],["this.intentname",{"_index":1271,"title":{},"body":{"classes/IntentHandlerBuilder.html":{}}}],["this.isdebug",{"_index":75,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/ISPProductClient.html":{}}}],["this.isjp",{"_index":806,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["this.isstate(targetstate",{"_index":1248,"title":{},"body":{"interfaces/InitialState.html":{},"interfaces/SkillState.html":{},"classes/StateManager-1.html":{}}}],["this.listproducts",{"_index":1776,"title":{},"body":{"classes/ProductListResponseContentBuilder.html":{}}}],["this.locale",{"_index":71,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/RequestFactory.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{}}}],["this.mergesessionattributes",{"_index":1244,"title":{},"body":{"interfaces/InitialState.html":{},"interfaces/SkillState.html":{},"classes/StateManager-1.html":{}}}],["this.path}${path",{"_index":221,"title":{},"body":{"classes/APIClient-1.html":{}}}],["this.persistenceadapter",{"_index":1167,"title":{},"body":{"classes/HandlerInputFactory.html":{}}}],["this.persistent",{"_index":292,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["this.post(reminderrequest",{"_index":1845,"title":{},"body":{"classes/ReminderAPIClient.html":{}}}],["this.post(request",{"_index":1387,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["this.primarykey",{"_index":956,"title":{},"body":{"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{}}}],["this.product",{"_index":864,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["this.productname",{"_index":863,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["this.products",{"_index":139,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["this.products.find(product",{"_index":170,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["this.products.length",{"_index":140,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["this.products[userinputno",{"_index":167,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["this.put(reminderrequest",{"_index":1844,"title":{},"body":{"classes/ReminderAPIClient.html":{}}}],["this.put(request",{"_index":1388,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["this.putrequestattributes",{"_index":1886,"title":{},"body":{"classes/RequestEnvelopeFactory.html":{}}}],["this.request",{"_index":284,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{},"classes/RequestEnvelopeFactory.html":{},"classes/RequestFactory.html":{},"classes/RouteMatcher.html":{}}}],["this.request.getrequest",{"_index":1887,"title":{},"body":{"classes/RequestEnvelopeFactory.html":{}}}],["this.request.intent",{"_index":1326,"title":{},"body":{"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{}}}],["this.request.setrequestid(requestid",{"_index":1878,"title":{},"body":{"classes/RequestEnvelopeFactory.html":{}}}],["this.requestenvelopefactory",{"_index":1166,"title":{},"body":{"classes/HandlerInputFactory.html":{}}}],["this.requestenvelopefactory.context.putcontext(context",{"_index":1171,"title":{},"body":{"classes/HandlerInputFactory.html":{}}}],["this.requestenvelopefactory.getrequest",{"_index":1172,"title":{},"body":{"classes/HandlerInputFactory.html":{}}}],["this.requestenvelopefactory.request.putrequest(request",{"_index":1169,"title":{},"body":{"classes/HandlerInputFactory.html":{}}}],["this.requestenvelopefactory.session.putsession(session",{"_index":1170,"title":{},"body":{"classes/HandlerInputFactory.html":{}}}],["this.requestid",{"_index":1912,"title":{},"body":{"classes/RequestFactory.html":{}}}],["this.requesttype",{"_index":1911,"title":{},"body":{"classes/RequestFactory.html":{}}}],["this.responsebuilder",{"_index":843,"title":{},"body":{"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{}}}],["this.responsebuilder.adddirective(directive",{"_index":853,"title":{},"body":{"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{}}}],["this.responsebuilder.getresponse",{"_index":854,"title":{},"body":{"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{}}}],["this.responsebuilder.reprompt(reprompttext",{"_index":851,"title":{},"body":{"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{}}}],["this.responsebuilder.speak(speechtext",{"_index":850,"title":{},"body":{"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{}}}],["this.router",{"_index":1943,"title":{},"body":{"classes/RequestHandlerFactory-1.html":{}}}],["this.router.map((route",{"_index":1944,"title":{},"body":{"classes/RequestHandlerFactory-1.html":{}}}],["this.session",{"_index":285,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{},"classes/RequestEnvelopeFactory.html":{},"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{}}}],["this.session.application",{"_index":1998,"title":{},"body":{"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{}}}],["this.session.attributes",{"_index":2004,"title":{},"body":{"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{}}}],["this.session.getsession",{"_index":1888,"title":{},"body":{"classes/RequestEnvelopeFactory.html":{}}}],["this.session.new",{"_index":2006,"title":{},"body":{"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{}}}],["this.session.putsessionid(sessionid",{"_index":1884,"title":{},"body":{"classes/RequestEnvelopeFactory.html":{}}}],["this.session.sessionid",{"_index":2000,"title":{},"body":{"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{}}}],["this.session.user",{"_index":2002,"title":{},"body":{"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{}}}],["this.sethandle(handle",{"_index":1079,"title":{},"body":{"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"classes/HandlerFactory.html":{}}}],["this.sethandle(handler.handle",{"_index":1084,"title":{},"body":{"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"classes/HandlerFactory.html":{}}}],["this.sethandlecondition(condition",{"_index":1080,"title":{},"body":{"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"classes/HandlerFactory.html":{}}}],["this.sethandlecondition(handler.canhandle",{"_index":1082,"title":{},"body":{"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"classes/HandlerFactory.html":{}}}],["this.state",{"_index":1235,"title":{},"body":{"interfaces/InitialState.html":{},"interfaces/SkillState.html":{},"classes/StateManager-1.html":{}}}],["this.statemanager",{"_index":1976,"title":{},"body":{"classes/RouteMatcher.html":{}}}],["this.statemanager.hasstate",{"_index":1987,"title":{},"body":{"classes/RouteMatcher.html":{}}}],["this.statemanager.matchedcurrentstate(currentstate.current",{"_index":1990,"title":{},"body":{"classes/RouteMatcher.html":{}}}],["this.system",{"_index":2145,"title":{},"body":{"classes/SystemFactory.html":{}}}],["this.system.apiaccesstoken",{"_index":2155,"title":{},"body":{"classes/SystemFactory.html":{}}}],["this.system.apiendpoint",{"_index":2154,"title":{},"body":{"classes/SystemFactory.html":{}}}],["this.system.application",{"_index":2147,"title":{},"body":{"classes/SystemFactory.html":{}}}],["this.system.application.applicationid",{"_index":2146,"title":{},"body":{"classes/SystemFactory.html":{}}}],["this.system.device",{"_index":2153,"title":{},"body":{"classes/SystemFactory.html":{}}}],["this.system.getsystem",{"_index":901,"title":{},"body":{"classes/ContextFactory.html":{}}}],["this.system.person",{"_index":2156,"title":{},"body":{"classes/SystemFactory.html":{}}}],["this.system.user",{"_index":2150,"title":{},"body":{"classes/SystemFactory.html":{}}}],["this.tablename",{"_index":958,"title":{},"body":{"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{}}}],["this.targetroute",{"_index":1977,"title":{},"body":{"classes/RouteMatcher.html":{}}}],["this.targetroute.situation",{"_index":1978,"title":{},"body":{"classes/RouteMatcher.html":{}}}],["this.targetroute.situation.custom",{"_index":1979,"title":{},"body":{"classes/RouteMatcher.html":{}}}],["this.targetroute.situation.custom(this.input",{"_index":1980,"title":{},"body":{"classes/RouteMatcher.html":{}}}],["this.targetroute.situation.state",{"_index":1989,"title":{},"body":{"classes/RouteMatcher.html":{}}}],["this.token",{"_index":69,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ISPProductClient.html":{}}}],["this.updaterequest",{"_index":1325,"title":{},"body":{"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{},"classes/LaunchRequestFactory.html":{},"classes/RequestFactory.html":{}}}],["this.updatestate(attributemanager",{"_index":2098,"title":{},"body":{"classes/StateManager.html":{}}}],["this.user",{"_index":1875,"title":{},"body":{"classes/RequestEnvelopeFactory.html":{},"classes/UserFactory.html":{}}}],["this.user.putuserid(userid).getuser",{"_index":1877,"title":{},"body":{"classes/RequestEnvelopeFactory.html":{}}}],["this.user.userid",{"_index":2190,"title":{},"body":{"classes/UserFactory.html":{}}}],["this.validaterequest",{"_index":1922,"title":{},"body":{"classes/RequestFactory.html":{}}}],["this.version",{"_index":1890,"title":{},"body":{"classes/RequestEnvelopeFactory.html":{}}}],["throw",{"_index":183,"title":{},"body":{"classes/APIClient.html":{},"classes/ContentBuilder-1.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"classes/HandlerFactory.html":{},"classes/HandlerFactory-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/IntentHandlerFactory.html":{},"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{},"classes/LaunchRequestFactory-1.html":{},"classes/ProactiveClient.html":{},"classes/RequestFactory.html":{},"interfaces/ResponseContent-1.html":{},"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{}}}],["thunder_storm",{"_index":444,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["thursday",{"_index":433,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["timestamp",{"_index":562,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"classes/RequestFactory.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["timestamp.substring(0",{"_index":1915,"title":{},"body":{"classes/RequestFactory.html":{}}}],["titletext",{"_index":1062,"title":{},"body":{"interfaces/FlashBriefingContent.html":{}}}],["tmergetargethandler",{"_index":915,"title":{"interfaces/TMergeTargetHandler.html":{}},"body":{"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/FallbackIntentFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{}}}],["token",{"_index":13,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ISPProductClient.html":{},"classes/ProactiveClient.html":{},"classes/RequestEnvelopeFactory.html":{},"classes/SystemFactory.html":{}}}],["token_type",{"_index":556,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["tornado",{"_index":441,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["track",{"_index":1022,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["translation",{"_index":2173,"title":{},"body":{"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{}}}],["translationbuilder",{"_index":2158,"title":{"interfaces/TranslationBuilder.html":{}},"body":{"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{}}}],["translationfactory",{"_index":2175,"title":{"classes/TranslationFactory.html":{}},"body":{"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{}}}],["translationobject",{"_index":2169,"title":{"interfaces/TranslationObject.html":{}},"body":{"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{}}}],["trashcollectionalert",{"_index":437,"title":{"interfaces/TrashCollectionAlert.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-7.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["trashcollectionalert.activated.payloadbuilder",{"_index":1557,"title":{},"body":{"classes/ParameterFactory-7.html":{}}}],["trashcollectionalert.eventname",{"_index":487,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["trashcollectionalert.payload",{"_index":488,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["trequesthandler",{"_index":918,"title":{"interfaces/TRequestHandler.html":{}},"body":{"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/FallbackIntentFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{}}}],["true",{"_index":68,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"interfaces/AttributeType.html":{},"classes/BuyIntentHandlerBuilder.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"interfaces/ErrorHandlerBuilder.html":{},"classes/FallbackIntentFactory.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"classes/HandlerFactory.html":{},"classes/ISPProductClient.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/MockAttributeManager.html":{},"classes/ProactiveClient.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"classes/RouteMatcher.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{}}}],["true.(we",{"_index":1986,"title":{},"body":{"classes/RouteMatcher.html":{}}}],["try",{"_index":135,"title":{},"body":{"classes/APIClient.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/ProactiveClient.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["tsx",{"_index":244,"title":{},"body":{"interfaces/AlexaSpeechComponentProps.html":{},"interfaces/ProgressiveResponse.html":{},"interfaces/SpeechScriptResponse.html":{}}}],["tuesday",{"_index":431,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["type",{"_index":31,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"interfaces/AlexaSpeechComponentProps.html":{},"classes/ApplicationFactory.html":{},"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/BaseSkillConfig.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ContextFactory.html":{},"interfaces/CreativeWork.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"classes/DeviceAPIClient.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/ErrorHandlerBuilder.html":{},"interfaces/Factory.html":{},"classes/FallbackIntentFactory.html":{},"interfaces/FlashBriefingContent.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"classes/HandlerFactory-1.html":{},"interfaces/HandlerHelpers.html":{},"classes/HandlerInputFactory.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"interfaces/InitialState.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentHandlerFactory.html":{},"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestFactory-1.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/ListManagementAPIClient.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MergeObjectType.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"classes/MockAttributeManager.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-6.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"interfaces/ProgressiveResponse.html":{},"interfaces/Props.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/RelevantAudience.html":{},"classes/ReminderAPIClient.html":{},"classes/RequestEnvelopeFactory.html":{},"classes/RequestFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"classes/RequestHandlerFactory-1.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"classes/RouteMatcher.html":{},"interfaces/Router.html":{},"interfaces/S3SkillConfig.html":{},"classes/SentryErrorHandlerFactory.html":{},"classes/SessionFactory.html":{},"classes/SettingAPIClient.html":{},"interfaces/Situation.html":{},"interfaces/SituationState.html":{},"interfaces/Skill.html":{},"interfaces/SkillHandlers.html":{},"interfaces/SkillHandlersBuilder.html":{},"interfaces/SkillState.html":{},"interfaces/Soccer.html":{},"interfaces/SpeechScriptResponse.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"classes/StateManager.html":{},"classes/StateManager-1.html":{},"classes/SystemFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"interfaces/Thing.html":{},"interfaces/TranslationBuilder.html":{},"interfaces/TranslationObject.html":{},"interfaces/TrashCollectionAlert.html":{},"classes/UserFactory.html":{},"classes/UserProfileAPIClient.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":2259,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":320,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"classes/LocalizedAttributesFactory.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-7.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.availability",{"_index":526,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.confirmationstate",{"_index":519,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.confirmationstatus",{"_index":622,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.creativework",{"_index":527,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.datetime",{"_index":350,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.dayofweek",{"_index":586,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-7.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.distributionmethod",{"_index":639,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-2.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.game",{"_index":531,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.gameinvite",{"_index":530,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.gamestatistic",{"_index":1492,"title":{},"body":{"classes/ParameterFactory-3.html":{}}}],["types.garbagetype",{"_index":583,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-7.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.goal",{"_index":508,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-3.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.invitetype",{"_index":646,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-4.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.locale",{"_index":576,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"classes/LocalizedAttributesFactory.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.localizedattributes",{"_index":579,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"classes/LocalizedAttributesFactory.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.mediatype",{"_index":635,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-2.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.messagefreshness",{"_index":608,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.messagegroup",{"_index":514,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.messagestate",{"_index":513,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.messagestatus",{"_index":610,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.messageurgent",{"_index":606,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.occasion",{"_index":520,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.occasiontype",{"_index":624,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.offertype",{"_index":649,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-4.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.order",{"_index":517,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-5.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.orderstate",{"_index":516,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.orderstatus",{"_index":614,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-5.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.person",{"_index":471,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.relationshiptoinvitee",{"_index":644,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-4.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.soccer",{"_index":1490,"title":{},"body":{"classes/ParameterFactory-3.html":{}}}],["types.sportsevent",{"_index":509,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.trashcollectionalert",{"_index":501,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-7.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.weatheralert",{"_index":503,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.weatheralerttype",{"_index":593,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["typescript",{"_index":94,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"interfaces/AttributeType.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"interfaces/ErrorHandlerBuilder.html":{},"classes/ISPProductClient.html":{},"interfaces/InitialState.html":{},"classes/MockAttributeManager.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"classes/ProactiveClient.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/SkillState.html":{},"classes/StateManager-1.html":{}}}],["u",{"_index":240,"title":{},"body":{"interfaces/AlexaSpeechComponentProps.html":{},"interfaces/ProgressiveResponse.html":{},"interfaces/SpeechScriptResponse.html":{}}}],["uid",{"_index":1063,"title":{},"body":{"interfaces/FlashBriefingContent.html":{}}}],["undefined",{"_index":1152,"title":{},"body":{"classes/HandlerInputFactory.html":{},"classes/RequestHandlerFactory-1.html":{}}}],["understand",{"_index":1002,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["unicast",{"_index":558,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["unmatch",{"_index":1981,"title":{},"body":{"classes/RouteMatcher.html":{}}}],["unread",{"_index":464,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["unsupportedispresponse",{"_index":748,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["unsupportedispresponse(locale",{"_index":761,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["update",{"_index":507,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["updateconfirmationstatus",{"_index":1430,"title":{},"body":{"classes/ParameterFactory.html":{},"interfaces/PayloadBuilder-6.html":{}}}],["updateconfirmationstatus(status",{"_index":621,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["updated",{"_index":374,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-3.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["updated.eventname",{"_index":504,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["updated.hasownproperty('scoreearned",{"_index":1504,"title":{},"body":{"classes/ParameterFactory-3.html":{}}}],["updated.hasownproperty('teamname",{"_index":1505,"title":{},"body":{"classes/ParameterFactory-3.html":{}}}],["updated.payload",{"_index":505,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["updated.payloadbuilder",{"_index":596,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["updated.scoreearned",{"_index":1494,"title":{},"body":{"classes/ParameterFactory-3.html":{}}}],["updated.teamname",{"_index":1495,"title":{},"body":{"classes/ParameterFactory-3.html":{}}}],["updatedate",{"_index":1064,"title":{},"body":{"interfaces/FlashBriefingContent.html":{}}}],["updategoaldata",{"_index":1493,"title":{},"body":{"classes/ParameterFactory-3.html":{},"interfaces/PayloadBuilder-3.html":{}}}],["updategoaldata(teamname",{"_index":597,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["updatehandler",{"_index":723,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"classes/IntentHandlerBuilder.html":{},"classes/LaunchRequestrBuilder.html":{}}}],["updatehandler(condition",{"_index":739,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/IntentHandlerBuilder.html":{},"classes/LaunchRequestrBuilder.html":{}}}],["updatelist",{"_index":1352,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["updatelist(listid",{"_index":1375,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["updatelistitem",{"_index":1353,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["updatelistitem(listid",{"_index":1378,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["updatereferenceid",{"_index":1645,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["updatereferenceid(id",{"_index":1681,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["updatereminder",{"_index":1825,"title":{},"body":{"classes/ReminderAPIClient.html":{}}}],["updatereminder(alertid",{"_index":1838,"title":{},"body":{"classes/ReminderAPIClient.html":{}}}],["updaterequest",{"_index":1144,"title":{},"body":{"classes/HandlerInputFactory.html":{},"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/RequestFactory.html":{}}}],["updaterequest(param",{"_index":1317,"title":{},"body":{"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/RequestFactory.html":{}}}],["updaterequest(requestenvelope",{"_index":1158,"title":{},"body":{"classes/HandlerInputFactory.html":{}}}],["updatesellername",{"_index":1539,"title":{},"body":{"classes/ParameterFactory-5.html":{},"interfaces/PayloadBuilder-5.html":{}}}],["updatesellername(name",{"_index":618,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["updatesessionattributes",{"_index":275,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["updatesessionattributes(handlerinput",{"_index":302,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["updatestate",{"_index":2074,"title":{},"body":{"classes/StateManager.html":{}}}],["updatestate(attributemanager",{"_index":2092,"title":{},"body":{"classes/StateManager.html":{}}}],["updator",{"_index":1953,"title":{},"body":{"classes/RequestHandlerFactory-1.html":{}}}],["urgency",{"_index":473,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-1.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["urgent",{"_index":468,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-1.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["url",{"_index":77,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ISPProductClient.html":{},"classes/ProactiveClient.html":{},"classes/SystemFactory.html":{},"index.html":{}}}],["urlencoded",{"_index":1718,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["url}/productid",{"_index":80,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["url}stages/development",{"_index":1692,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["use",{"_index":123,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["user",{"_index":318,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"classes/RequestEnvelopeFactory.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"classes/SystemFactory.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"classes/UserFactory.html":{},"interfaces/WeatherAlert.html":{}}}],["userfactory",{"_index":1853,"title":{"classes/UserFactory.html":{}},"body":{"classes/RequestEnvelopeFactory.html":{},"classes/UserFactory.html":{}}}],["userid",{"_index":1033,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/RequestEnvelopeFactory.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{},"classes/SystemFactory.html":{},"classes/UserFactory.html":{}}}],["userinputno",{"_index":162,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["userparams",{"_index":1032,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["userparams.deviceid",{"_index":1036,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["userparams.sessionid",{"_index":1039,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["userprofileapiclient",{"_index":2191,"title":{"classes/UserProfileAPIClient.html":{}},"body":{"classes/UserProfileAPIClient.html":{}}}],["utilities",{"_index":2224,"title":{},"body":{"index.html":{}}}],["utility",{"_index":2211,"title":{},"body":{"index.html":{}}}],["utils",{"_index":914,"title":{},"body":{"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/FallbackIntentFactory.html":{},"classes/IntentHandlerBuilder.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"index.html":{}}}],["utils.dev",{"_index":2214,"title":{},"body":{"index.html":{}}}],["utils.git",{"_index":2242,"title":{},"body":{"index.html":{}}}],["utils/ask",{"_index":2222,"title":{},"body":{"index.html":{}}}],["utils/core",{"_index":743,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"classes/RouteMatcher.html":{},"index.html":{}}}],["utils/error",{"_index":1025,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{},"index.html":{}}}],["utils/handlers",{"_index":663,"title":{},"body":{"interfaces/BaseSkillConfig.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/S3SkillConfig.html":{},"interfaces/SkillHandlers.html":{},"index.html":{}}}],["utils/isp",{"_index":2229,"title":{},"body":{"index.html":{}}}],["utils/libs/handlerbuilders.ts",{"_index":2040,"title":{},"body":{"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{}}}],["utils/libs/handlerbuilders.ts:12",{"_index":2049,"title":{},"body":{"interfaces/SkillHandlersBuilder.html":{}}}],["utils/libs/handlerbuilders.ts:13",{"_index":2051,"title":{},"body":{"interfaces/SkillHandlersBuilder.html":{}}}],["utils/libs/handlerbuilders.ts:14",{"_index":2053,"title":{},"body":{"interfaces/SkillHandlersBuilder.html":{}}}],["utils/libs/handlerbuilders.ts:15",{"_index":2047,"title":{},"body":{"interfaces/SkillHandlersBuilder.html":{}}}],["utils/libs/handlerbuilders.ts:16",{"_index":2054,"title":{},"body":{"interfaces/SkillHandlersBuilder.html":{}}}],["utils/libs/handlerbuilders.ts:19",{"_index":2068,"title":{},"body":{"classes/SkillHandlersFactory.html":{}}}],["utils/libs/models.ts",{"_index":654,"title":{},"body":{"interfaces/BaseSkillConfig.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/S3SkillConfig.html":{},"interfaces/SkillHandlers.html":{},"miscellaneous/typealiases.html":{}}}],["utils/proactive",{"_index":2225,"title":{},"body":{"index.html":{}}}],["utils/service",{"_index":2234,"title":{},"body":{"index.html":{}}}],["utils/situation",{"_index":1127,"title":{},"body":{"interfaces/HandlerHelpers.html":{},"classes/RequestHandlerFactory-1.html":{},"classes/RouteMatcher.html":{},"interfaces/Router.html":{},"interfaces/Situation.html":{},"interfaces/SituationState.html":{}}}],["utils/tree/master/packages/core",{"_index":2223,"title":{},"body":{"index.html":{}}}],["utils/tree/master/packages/error",{"_index":2233,"title":{},"body":{"index.html":{}}}],["utils/tree/master/packages/handlers",{"_index":2231,"title":{},"body":{"index.html":{}}}],["utils/tree/master/packages/isp",{"_index":2230,"title":{},"body":{"index.html":{}}}],["utils/tree/master/packages/proactive",{"_index":2226,"title":{},"body":{"index.html":{}}}],["utils/tree/master/packages/serviceclient",{"_index":2235,"title":{},"body":{"index.html":{}}}],["utilspackages",{"_index":2217,"title":{},"body":{"index.html":{}}}],["uuid",{"_index":1683,"title":{},"body":{"classes/ProactiveClient.html":{},"classes/RequestEnvelopeFactory.html":{},"classes/RequestFactory.html":{},"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{},"classes/SystemFactory.html":{}}}],["uuid.v4",{"_index":1712,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["v0.13.0",{"_index":2253,"title":{},"body":{"index.html":{}}}],["v1/alerts/reminders",{"_index":1826,"title":{},"body":{"classes/ReminderAPIClient.html":{}}}],["v1/devices",{"_index":970,"title":{},"body":{"classes/DeviceAPIClient.html":{}}}],["v2",{"_index":1129,"title":{},"body":{"interfaces/HandlerHelpers.html":{},"interfaces/Router.html":{},"interfaces/Situation.html":{},"interfaces/SituationState.html":{}}}],["v2/accounts/~current/settings",{"_index":2196,"title":{},"body":{"classes/UserProfileAPIClient.html":{}}}],["v2/devices",{"_index":2027,"title":{},"body":{"classes/SettingAPIClient.html":{}}}],["v2/householdlists",{"_index":1354,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["v4",{"_index":1874,"title":{},"body":{"classes/RequestEnvelopeFactory.html":{},"classes/RequestFactory.html":{},"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{},"classes/SystemFactory.html":{}}}],["validaterequest",{"_index":1280,"title":{},"body":{"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{},"classes/LaunchRequestFactory.html":{},"classes/RequestFactory.html":{}}}],["value",{"_index":203,"title":{},"body":{"classes/APIClient-1.html":{},"classes/ApplicationFactory.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ContextFactory.html":{},"classes/DeviceAPIClient.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/ListManagementAPIClient.html":{},"classes/MockAttributeManager.html":{},"classes/ProactiveClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"classes/ReminderAPIClient.html":{},"classes/RequestEnvelopeFactory.html":{},"classes/RequestFactory.html":{},"classes/RequestHandlerFactory-1.html":{},"classes/RouteMatcher.html":{},"classes/SessionFactory.html":{},"classes/SettingAPIClient.html":{},"classes/StateManager-1.html":{},"classes/UserFactory.html":{},"classes/UserProfileAPIClient.html":{}}}],["version",{"_index":1849,"title":{},"body":{"classes/RequestEnvelopeFactory.html":{},"index.html":{}}}],["void",{"_index":729,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{},"classes/LaunchRequestFactory.html":{},"classes/MockAttributeManager.html":{},"classes/RequestFactory.html":{},"classes/StateManager.html":{}}}],["want",{"_index":875,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["waste_paper",{"_index":428,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["weatheralert",{"_index":445,"title":{"interfaces/WeatherAlert.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-6.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["weatheralert.activated.payloadbuilder",{"_index":1547,"title":{},"body":{"classes/ParameterFactory-6.html":{}}}],["weatheralert.alerttype",{"_index":1551,"title":{},"body":{"classes/ParameterFactory-6.html":{}}}],["weatheralert.eventname",{"_index":480,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["weatheralert.payload",{"_index":489,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["weatheralert.source",{"_index":1549,"title":{},"body":{"classes/ParameterFactory-6.html":{}}}],["weatheralerttype",{"_index":440,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["wednesday",{"_index":432,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["www",{"_index":1716,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["yarn",{"_index":2244,"title":{},"body":{"index.html":{}}}],["yes",{"_index":40,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/DBClient.html":{},"classes/HandlerFactory-1.html":{},"classes/HandlerInputFactory.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/IntentHandlerFactory.html":{},"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-7.html":{},"classes/ProactiveClient.html":{},"classes/RequestFactory.html":{},"classes/StateManager-1.html":{},"classes/SystemFactory.html":{}}}],["z",{"_index":1917,"title":{},"body":{"classes/RequestFactory.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/APIClient.html":{"url":"classes/APIClient.html","title":"class - APIClient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  APIClient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/isp/libs/client.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                endpoint\n                            \n                            \n                                    Private\n                                isDebug\n                            \n                            \n                                    Private\n                                locale\n                            \n                            \n                                    Private\n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createAxiosRequestObject\n                            \n                            \n                                    Protected\n                                    Async\n                                get\n                            \n                            \n                                    Public\n                                getProduct\n                            \n                            \n                                    Private\n                                getURL\n                            \n                            \n                                    Public\n                                listProducts\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(requestEnvelope: RequestEnvelope, isDebug: boolean)\n                    \n                \n                        \n                            \n                                Defined in packages/isp/libs/client.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        requestEnvelope\n                                                  \n                                                        \n                                                                    RequestEnvelope\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        isDebug\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            endpoint\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/isp/libs/client.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isDebug\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/isp/libs/client.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            locale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/isp/libs/client.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/isp/libs/client.ts:9\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createAxiosRequestObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createAxiosRequestObject(productId?: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/client.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productId\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     AxiosRequestConfig\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Async\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(productId?: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/client.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productId\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getProduct\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getProduct(productId: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/client.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getURL\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getURL(productId?: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/client.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productId\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            listProducts\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    listProducts()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/client.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import axios, { AxiosRequestConfig } from 'axios'\nimport { getLocale, getApiAccessToken, HandlerInput, AttributesManager } from 'ask-sdk-core'\nimport { RequestEnvelope, services } from 'ask-sdk-model'\nimport InSkillProductsResponse = services.monetization.InSkillProductsResponse\nimport InSkillProduct = services.monetization.InSkillProduct\ntype InskillProducts = InSkillProduct[]\n\nexport class APIClient {\n    private token: string\n    private locale: string\n    private endpoint: string\n    private isDebug: boolean\n    public constructor (requestEnvelope: RequestEnvelope, isDebug: boolean = true) {\n        this.token = getApiAccessToken(requestEnvelope)\n        this.locale = getLocale(requestEnvelope)\n        this.endpoint = requestEnvelope.context.System.apiEndpoint\n        this.isDebug = isDebug\n    }\n    private getURL (productId?: string): string {\n        const url = `${this.endpoint}/v1/users/~current/skills/~current/inSkillProducts`\n        if (!productId) return url\n        return `${url}/productId`\n    }\n    private createAxiosRequestObject (productId?: string): AxiosRequestConfig {\n        return {\n            method: 'GET',\n            url: this.getURL(productId),\n            headers: {\n                'Content-type': 'application/json',\n                'Accept-Language': this.locale,\n                'Authorization': `Bearer ${this.token}`\n            }\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    protected async get (productId?: string): Promise {\n        const param = this.createAxiosRequestObject(productId)\n        if (this.isDebug) console.log('[Get ISP product] %j', param)\n        const { data } = await axios(param)\n        if (this.isDebug) console.log('[Get ISP product] %j', data)\n        return data\n    }\n    public listProducts (): Promise {\n        return this.get()\n    }\n    public getProduct (productId: string): Promise {\n        return this.get(productId)\n    }\n}\n\nexport class ISPProductClient extends APIClient {\n    private attributeManager: AttributesManager\n    private cacheUsage: 'enable' | 'disable' = 'enable'\n    private products: InskillProducts = []\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    constructor (handlerInput: HandlerInput, isDebug: boolean = true) {\n        super(handlerInput.requestEnvelope, isDebug)\n        this.attributeManager = handlerInput.attributesManager\n    }\n    public getCacheStatus (): 'enable' | 'disable' {\n        return this.cacheUsage\n    }\n    /**\n   * Disallow to use the session attributes item at first\n   **/\n    public disabledCache (): this {\n        this.cacheUsage = 'disable'\n        return this\n    }\n    /**\n   * Allow to use the session attributes item at first\n   **/\n    public enableCache (): this {\n        this.cacheUsage = 'enable'\n        return this\n    }\n    /**\n   * Check product avaliable status\n   * If products is empty, try to fetch at once\n   */\n    private async hasProducts (): Promise {\n        if (!this.products || this.products.length  0) {\n            this.products = products\n        }\n        return this.products\n    }\n    /**\n   * Fetch the ISP API.\n   * If cacheUsage is enabled, it will return from session attributes at first\n   */\n    public async fetchLists (): Promise {\n        const atts = this.attributeManager.getSessionAttributes()\n        if (this.cacheUsage === 'enable') {\n            const cachedProducts = this.getCachedProducts()\n            if (cachedProducts && cachedProducts.length > 0) {\n                return\n            }\n        }\n        const data = await this.get()\n        const products = data.inSkillProducts\n        this.products = products\n        this.attributeManager.setSessionAttributes({\n            ...atts,\n            products\n        })\n    }\n    /**\n   * get product by product id\n   * @param productId {string}\n   */\n    public async getProductById (productId: string): Promise {\n        if (this.cacheUsage === 'enable') {\n            const cachedProducts = this.getCachedProducts()\n            if (cachedProducts && cachedProducts.length > 0) {\n                // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n                const item = cachedProducts.find(cache => cache.productId === productId)\n                if (item) return item\n            }\n        }\n        const product = await this.get(productId)\n        return product\n    }\n    /**\n   * get products\n   */\n    public async getProducts (): Promise {\n        await this.fetchLists()\n        return this.products\n    }\n    /**\n   * Find product by the list number\n   * @param userInputNo {number} list number\n   */\n    public async findProductByNo (userInputNo: number): Promise {\n        if (!await this.hasProducts()) return null\n        const target = this.products[userInputNo]\n        return target\n    }\n    /**\n   * Find product by the specific id\n   * @param productId {string} product id\n   */\n    public async findProductById (productId: string): Promise {\n        if (!await this.hasProducts()) return null\n        // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n        const product = this.products.find(product => product.productId === productId)\n        if (!product) return null\n        return product\n    }\n    /**\n   * Find product by the product name\n   * @param productName {string} product name\n   */\n    public async findProductByName (productName: string): Promise {\n        if (!await this.hasProducts()) return null\n        // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n        const product = this.products.find(product => product.name === productName)\n        if (!product) return null\n        return product\n    }\n    /**\n   * Find product by several condition\n   * @param condition {productName?: string, userInputNo?: number, productId?: string} search conditions\n   */\n    public async searchProduct (condition: {productName?: string; userInputNo?: number; productId?: string}): Promise {\n        if (!condition.productName && !condition.userInputNo && !condition.productId) throw new Error('No search condition')\n        if (condition.userInputNo) return this.findProductByNo(condition.userInputNo)\n        if (condition.productName) return this.findProductByName(condition.productName)\n        if (condition.productId) return this.findProductById(condition.productId)\n        throw new Error('Invalid search condition')\n    }\n}\nexport default ISPProductClient\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/APIClient-1.html":{"url":"classes/APIClient-1.html","title":"class - APIClient-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  APIClient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/serviceClients/libs/client.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                endpoint\n                            \n                            \n                                    Protected\n                                isDebug\n                            \n                            \n                                    Protected\n                                locale\n                            \n                            \n                                    Protected\n                                path\n                            \n                            \n                                    Protected\n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                createAxiosRequestObject\n                            \n                            \n                                    Protected\n                                    Async\n                                delete\n                            \n                            \n                                    Protected\n                                    Async\n                                get\n                            \n                            \n                                    Protected\n                                getURL\n                            \n                            \n                                    Protected\n                                    Async\n                                post\n                            \n                            \n                                    Protected\n                                    Async\n                                put\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(requestEnvelope: RequestEnvelope, isDebug: boolean)\n                    \n                \n                        \n                            \n                                Defined in packages/serviceClients/libs/client.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        requestEnvelope\n                                                  \n                                                        \n                                                                    RequestEnvelope\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        isDebug\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            endpoint\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/serviceClients/libs/client.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            isDebug\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/serviceClients/libs/client.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            locale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/serviceClients/libs/client.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in packages/serviceClients/libs/client.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/serviceClients/libs/client.ts:6\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            createAxiosRequestObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createAxiosRequestObject(method: Method, path?: string, data?: any)\n                \n            \n\n\n            \n                \n                    Defined in packages/serviceClients/libs/client.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                                Method\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     AxiosRequestConfig\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(path?: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/serviceClients/libs/client.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Async\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(path?: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/serviceClients/libs/client.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getURL\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getURL(path?: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/serviceClients/libs/client.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Async\n                            post\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    post(body?: any, path?: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/serviceClients/libs/client.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Async\n                            put\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    put(body?: any, path?: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/serviceClients/libs/client.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import axios, { AxiosRequestConfig } from 'axios'\nimport { getLocale, getApiAccessToken } from 'ask-sdk-core'\nimport { RequestEnvelope } from 'ask-sdk-model'\ntype Method = 'GET' | 'PUT' | 'POST' | 'DELETE'\nexport abstract class APIClient {\n    protected token: string\n    protected locale: string\n    protected endpoint: string\n    protected path: string = ''\n    protected isDebug: boolean\n    public constructor (requestEnvelope: RequestEnvelope, isDebug: boolean = true) {\n        this.token = getApiAccessToken(requestEnvelope)\n        this.locale = getLocale(requestEnvelope)\n        this.endpoint = requestEnvelope.context.System.apiEndpoint\n        this.isDebug = isDebug\n    }\n    protected getURL (path?: string): string {\n        const p = `/${this.path}${path ? `/${path}` : ''}`\n        const url = `${this.endpoint}${p.replace(/\\/\\//g, '/')}`\n        return url\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    protected createAxiosRequestObject (method: Method, path?: string, data?: any): AxiosRequestConfig {\n        const conf: AxiosRequestConfig = {\n            method: method,\n            url: this.getURL(path),\n            headers: {\n                'Content-type': 'application/json',\n                'Accept-Language': this.locale,\n                'Authorization': `Bearer ${this.token}`\n            }\n        }\n        if (data) conf.data = data\n        return conf\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    protected async delete (path?: string): Promise {\n        const param = this.createAxiosRequestObject('DELETE', path)\n        if (this.isDebug) console.log('[Request] %j', param)\n        const { data } = await axios(param)\n        if (this.isDebug) console.log('[Response] %j', data)\n        return data\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    protected async get (path?: string): Promise {\n        const param = this.createAxiosRequestObject('GET', path)\n        if (this.isDebug) console.log('[Request] %j', param)\n        const { data } = await axios(param)\n        if (this.isDebug) console.log('[Response] %j', data)\n        return data\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    protected async post (body?: any, path?: string): Promise {\n        const param = this.createAxiosRequestObject('POST', path, body)\n        if (this.isDebug) console.log('[Request] %j', param)\n        const { data } = await axios(param)\n        if (this.isDebug) console.log('[Response] %j', data)\n        return data\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    protected async put (body?: any, path?: string): Promise {\n        const param = this.createAxiosRequestObject('PUT', path, body)\n        if (this.isDebug) console.log('[Request] %j', param)\n        const { data } = await axios(param)\n        if (this.isDebug) console.log('[Response] %j', data)\n        return data\n    }\n}\nexport default APIClient\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AlexaSpeechComponentProps.html":{"url":"interfaces/AlexaSpeechComponentProps.html","title":"interface - AlexaSpeechComponentProps","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AlexaSpeechComponentProps\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/speech-script/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        attributesManager\n                                \n                                \n                                        context\n                                \n                                \n                                            Optional\n                                        options\n                                \n                                \n                                        request\n                                \n                                \n                                            Optional\n                                        session\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        attributesManager\n                                    \n                                \n                                \n                                    \n                                        attributesManager:     AttributesManager\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     AttributesManager\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        context\n                                    \n                                \n                                \n                                    \n                                        context:     Context\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Context\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                    \n                                \n                                \n                                    \n                                        options:     U\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     U\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        request\n                                    \n                                \n                                \n                                    \n                                        request:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        session\n                                    \n                                \n                                \n                                    \n                                        session:     Session\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Session\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FC } from 'ssml-tsx'\nimport { Request, Session, Context, services } from 'ask-sdk-model'\nimport { AttributesManager } from 'ask-sdk'\n\nexport interface ProgressiveResponse {\n    ssml: string;\n    directive: services.directive.SendDirectiveRequest;\n}\nexport interface SpeechScriptResponse {\n    speech?: string;\n    reprompt?: string;\n    progressiveResponse?: ProgressiveResponse;\n}\n\nexport interface AlexaSpeechComponentProps {\n    request: T;\n    attributesManager: AttributesManager;\n    session?: Session;\n    context: Context;\n    options?: U;\n}\nexport type AlexaSpeechComponent = FC> | null\nexport type AlexaSpeechComponentFunction = (props: AlexaSpeechComponentProps) => FC | JSX.Element | JSX.Element[]\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApplicationFactory.html":{"url":"classes/ApplicationFactory.html","title":"class - ApplicationFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApplicationFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/test/libs/application/ApplicationFactory.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                app\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getApplication\n                            \n                            \n                                    Public\n                                putId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            app\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Application\n\n                        \n                    \n                    \n                        \n                            Default value : {\n        applicationId: ''\n    }\n                        \n                    \n                        \n                            \n                                    Defined in packages/test/libs/application/ApplicationFactory.ts:5\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getApplication\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getApplication()\n                \n            \n\n\n            \n                \n                    Defined in packages/test/libs/application/ApplicationFactory.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Application\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putId(id: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/test/libs/application/ApplicationFactory.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n    Application\n} from 'ask-sdk-model' // 'ask-sdk-core/node_modules/ask-sdk-model'\nexport class ApplicationFactory {\n    private readonly app: Application = {\n        applicationId: ''\n    }\n    public putId (id: string): this {\n        this.app.applicationId = id\n        return this\n    }\n    public getApplication (): Application {\n        return this.app\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AttributeType.html":{"url":"interfaces/AttributeType.html","title":"interface - AttributeType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AttributeType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/__tests__/libs/attributeManager.test.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in packages/core/__tests__/libs/attributeManager.test.ts:5\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { HandlerInput, AttributesManager } from 'ask-sdk'\nimport { updateSessionAttributes, getSessionAttribute, getSessionAttributes } from '../../libs/attributeManager'\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ninterface AttributeType {[key: string]: any}\nclass MockAttributeManager implements AttributesManager {\n    private request: AttributeType = {}\n    private session: AttributeType = {}\n    private persistent: AttributeType = {}\n    private db: AttributeType = {}\n    public getRequestAttributes () {\n        return this.request\n    }\n    public getSessionAttributes () {\n        return this.session\n    }\n    public getPersistentAttributes () {\n        return Promise.resolve(this.db)\n    }\n    public setRequestAttributes (attribute: AttributeType) {\n        this.request = attribute\n    }\n    public setSessionAttributes (attribute: AttributeType) {\n        this.session = attribute\n    }\n    public setPersistentAttributes (attribute: AttributeType) {\n        this.persistent = attribute\n    }\n    public savePersistentAttributes () {\n        this.db = this.persistent\n        return Promise.resolve()\n    }\n}\n\nconst generateHandlerInput = (): HandlerInput => {\n    const attributesManager: AttributesManager = new MockAttributeManager()\n    const handlerInput = {\n        attributesManager\n    } as HandlerInput\n    return handlerInput\n}\ndescribe('attributeManager.ts', () => {\n    let handlerInput = generateHandlerInput()\n    beforeEach(() => {\n        handlerInput = generateHandlerInput()\n    })\n    describe('updateSessionAttributes()', () => {\n        it('should save attributes', () => {\n            updateSessionAttributes(handlerInput, { test: 'true' })\n            const result = getSessionAttribute(handlerInput, 'test')\n            expect(result).toEqual('true')\n        })\n\n        it('should add save attributes', () => {\n            updateSessionAttributes(handlerInput, { test: 'true' })\n            updateSessionAttributes(handlerInput, { test1: 'false' })\n            const result = getSessionAttribute(handlerInput, 'test')\n            expect(result).toEqual('true')\n            const result2 = getSessionAttribute(handlerInput, 'test1')\n            expect(result2).toEqual('false')\n        })\n    })\n    describe('getSessionAttributes()', () => {\n        it('should get saved attributes', () => {\n            updateSessionAttributes(handlerInput, { test: 'true' })\n            const result = getSessionAttributes(handlerInput)\n            expect(result).toEqual({ test: 'true' })\n        })\n        it('should add save attributes', () => {\n            updateSessionAttributes(handlerInput, { test: 'true' })\n            updateSessionAttributes(handlerInput, { test1: 'false' })\n            const result = getSessionAttributes(handlerInput)\n            expect(result).toEqual({\n                test: 'true',\n                test1: 'false'\n            })\n        })\n    })\n})\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AudiencePayload.html":{"url":"interfaces/AudiencePayload.html","title":"interface - AudiencePayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AudiencePayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthResponse.html":{"url":"interfaces/AuthResponse.html","title":"interface - AuthResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AuthResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        access_token\n                                \n                                \n                                        expires_in\n                                \n                                \n                                        scope\n                                \n                                \n                                        token_type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        access_token\n                                    \n                                \n                                \n                                    \n                                        access_token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expires_in\n                                    \n                                \n                                \n                                    \n                                        expires_in:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scope\n                                    \n                                \n                                \n                                    \n                                        scope:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token_type\n                                    \n                                \n                                \n                                    \n                                        token_type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Availability.html":{"url":"interfaces/Availability.html","title":"interface - Availability","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Availability\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        method\n                                \n                                \n                                            Optional\n                                        provider\n                                \n                                \n                                        startTime\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        method\n                                    \n                                \n                                \n                                    \n                                        method:         DistributionMethod\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DistributionMethod\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        provider\n                                    \n                                \n                                \n                                    \n                                        provider:         Thing\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Thing\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startTime\n                                    \n                                \n                                \n                                    \n                                        startTime:         Types.dateTime\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Types.dateTime\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BaseSkillConfig.html":{"url":"interfaces/BaseSkillConfig.html","title":"interface - BaseSkillConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BaseSkillConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ask-utils/libs/models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        constants\n                                \n                                \n                                            Optional\n                                        isISP\n                                \n                                \n                                        persistanceType\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        constants\n                                    \n                                \n                                \n                                    \n                                        constants:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isISP\n                                    \n                                \n                                \n                                    \n                                        isISP:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        persistanceType\n                                    \n                                \n                                \n                                    \n                                        persistanceType:         PersistanceType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PersistanceType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n    RequestInterceptor,\n    ResponseInterceptor,\n    ErrorHandler,\n    RequestHandler\n} from 'ask-sdk'\nimport {\n    SkillConstants\n} from '@ask-utils/handlers'\n\ntype PersistanceType = 'DynamoDB' | 'S3'\ninterface BaseSkillConfig {\n    persistanceType: PersistanceType;\n    isISP?: boolean;\n    constants?: T;\n}\nexport interface S3SkillConfig extends BaseSkillConfig {\n    persistanceType: 'S3';\n    bucketName: string;\n    bucketPathPrefix: string;\n}\nexport interface DynamoDBSkillConfig extends BaseSkillConfig {\n    persistanceType: 'DynamoDB';\n    tableName: string;\n}\nexport type SkillConfig = S3SkillConfig | DynamoDBSkillConfig\nexport interface SkillHandlers {\n    requestHandlers: RequestHandler[];\n    requestInterceptors?: RequestInterceptor[];\n    responseInterceptors?: ResponseInterceptor[];\n    errorHandlers?: ErrorHandler[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BuyContentBuilder.html":{"url":"classes/BuyContentBuilder.html","title":"class - BuyContentBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BuyContentBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/isp/libs/contentBuilders/Buy.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ContentBuilder\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                contents\n                            \n                            \n                                    Protected\n                                locale\n                            \n                            \n                                    Protected\n                                responseBuilder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                setBuyDirective\n                            \n                            \n                                    Public\n                                getResponse\n                            \n                            \n                                    Protected\n                                isJP\n                            \n                            \n                                    Public\n                                putDirective\n                            \n                            \n                                    Public\n                                putDirectives\n                            \n                            \n                                    Public\n                                putRepromptText\n                            \n                            \n                                    Public\n                                putSpeechText\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            contents\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ResponseContent\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         ContentBuilder\n\n                                \n                            \n                        \n                            \n                                    Defined in         ContentBuilder:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            locale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ContentBuilder\n\n                                \n                            \n                        \n                            \n                                    Defined in         ContentBuilder:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            responseBuilder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ResponseBuilder\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ContentBuilder\n\n                                \n                            \n                        \n                            \n                                    Defined in         ContentBuilder:10\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setBuyDirective\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setBuyDirective(productId: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/Buy.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getResponse()\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:43\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Response\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isJP\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isJP()\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:16\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putDirective\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putDirective(directive: Directive)\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:35\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    directive\n                                    \n                                                Directive\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putDirectives\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putDirectives(directives: Directive[])\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    directives\n                                    \n                                            Directive[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putRepromptText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putRepromptText(text: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:23\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putSpeechText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putSpeechText(text: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n    getBuyProductDirective\n} from '../index'\nimport ContentBuilder from './base'\nexport class BuyContentBuilder extends ContentBuilder {\n    public setBuyDirective (productId: string): this {\n        this.contents.directive = getBuyProductDirective(productId)\n        return this\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BuyIntentHandlerBuilder.html":{"url":"classes/BuyIntentHandlerBuilder.html","title":"class - BuyIntentHandlerBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BuyIntentHandlerBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/isp/libs/handlers/Buy.ts\n        \n\n\n            \n                Extends\n            \n            \n                        HandlerBuilder\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                canHandle\n                            \n                            \n                                    Public\n                                canHandle\n                            \n                            \n                                    Protected\n                                canHandleFilter\n                            \n                            \n                                    Public\n                                handle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                create\n                            \n                            \n                                    Public\n                                getHandler\n                            \n                            \n                                    Public\n                                replaceHandler\n                            \n                            \n                                    Public\n                                setHandle\n                            \n                            \n                                    Public\n                                setHandleCondition\n                            \n                            \n                                    Public\n                                updateHandler\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            canHandle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CanHandle\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in packages/isp/libs/handlers/Buy.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            canHandle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CanHandle\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         HandlerBuilder\n\n                                \n                            \n                        \n                            \n                                    Defined in         HandlerBuilder:8\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            canHandleFilter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CanHandle\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         HandlerBuilder\n\n                                \n                            \n                        \n                            \n                                    Defined in         HandlerBuilder:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            handle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Handle\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         HandlerBuilder\n\n                                \n                            \n                        \n                            \n                                    Defined in         HandlerBuilder:11\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/handlers/Buy.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getHandler\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getHandler()\n                \n            \n\n\n            \n                \n                    Inherited from         HandlerBuilder\n\n                \n            \n            \n                \n                        Defined in         HandlerBuilder:32\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     RequestHandler\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            replaceHandler\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    replaceHandler(handler: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         HandlerBuilder\n\n                \n            \n            \n                \n                        Defined in         HandlerBuilder:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    handler\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setHandle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setHandle(handle: Handle)\n                \n            \n\n\n            \n                \n                    Inherited from         HandlerBuilder\n\n                \n            \n            \n                \n                        Defined in         HandlerBuilder:18\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    handle\n                                    \n                                                Handle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setHandleCondition\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setHandleCondition(condition: CanHandle)\n                \n            \n\n\n            \n                \n                    Inherited from         HandlerBuilder\n\n                \n            \n            \n                \n                        Defined in         HandlerBuilder:14\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                CanHandle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateHandler\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateHandler(condition: CanHandle, handle: Handle)\n                \n            \n\n\n            \n                \n                    Inherited from         HandlerBuilder\n\n                \n            \n            \n                \n                        Defined in         HandlerBuilder:22\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                CanHandle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    handle\n                                    \n                                                Handle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HandlerInput, getLocale } from 'ask-sdk-core'\nimport { Response } from 'ask-sdk-model'\nimport {\n    isYesIntent,\n    isMatchedIntent\n} from '@ask-utils/core'\nimport {\n    HandlerBuilder,\n    CanHandle\n} from './fixtures'\nimport {\n    isMatchedISPState,\n    getProduct\n} from './helpers'\nimport {\n    NoProductResponse,\n    UnSupportedISPResponse\n} from '../contentBuilders/generalResponse'\nimport {\n    getBuyProductDirective\n} from '../directiveBuilders'\nimport {\n    ISPProductClient\n} from '../client'\nimport {\n\n} from '../productFinders'\n\nexport class BuyIntentHandlerBuilder extends HandlerBuilder {\n    public canHandle: CanHandle = (handlerInput) => {\n        return this.canHandleFilter(handlerInput)\n    }\n    public static create () {\n\n    }\n}\n\nexport const BuyIntentHandler = {\n    canHandle (handlerInput: HandlerInput): boolean {\n        if (isMatchedIntent(handlerInput, 'BuyIntent')) return true\n        if (isYesIntent(handlerInput)) {\n            return isMatchedISPState(handlerInput.attributesManager, 'BUY')\n        }\n        return false\n    },\n    async handle (handlerInput: HandlerInput): Promise {\n        const { requestEnvelope, responseBuilder, serviceClientFactory } = handlerInput\n        const locale = getLocale(requestEnvelope)\n        if (!serviceClientFactory) {\n            const noISPResponse = UnSupportedISPResponse(locale)\n            return responseBuilder.speak(noISPResponse.speechText)\n                .reprompt(noISPResponse.repromptText)\n                .getResponse()\n        }\n\n        const product = await getProduct(handlerInput)\n        // みつからない\n        if (!product) {\n            const client = new ISPProductClient(handlerInput)\n            const { inSkillProducts } = await client.listProducts()\n            return NoProductResponse(responseBuilder, locale, inSkillProducts)\n        }\n        // 買えない商品\n        if (product.purchasable === 'NOT_PURCHASABLE') {\n            if (/^ja/.test(locale)) {\n                return responseBuilder\n                    .speak('すみません。その商品は現在購入できません。他に何をしますか？')\n                    .reprompt('他に何をしますか？')\n                    .getResponse()\n            }\n            return responseBuilder\n                .speak(\"I don't think we have a product by that name.  Can you try again?\")\n                .reprompt(\"I didn't catch that. Can you try again?\")\n                .getResponse()\n        }\n\n        // ここで一旦データを保存する\n        // Connectionの方にいくとセッションが切れるから\n        const attributes = handlerInput.attributesManager.getSessionAttributes()\n        const atts = await handlerInput.attributesManager.getPersistentAttributes()\n        const nextAttributes = Object.assign(atts, {\n            ispLastSessionAttribtes: attributes\n        })\n        await handlerInput.attributesManager.setPersistentAttributes(nextAttributes)\n        await handlerInput.attributesManager.savePersistentAttributes()\n\n        return handlerInput.responseBuilder\n            .addDirective(getBuyProductDirective(product.productId))\n            .getResponse()\n    }\n}\n\nexport default BuyIntentHandler\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BuyResponseContentBuilder.html":{"url":"classes/BuyResponseContentBuilder.html","title":"class - BuyResponseContentBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BuyResponseContentBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/isp/libs/contentBuilders/BuyResponse.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ContentBuilder\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                contents\n                            \n                            \n                                    Protected\n                                locale\n                            \n                            \n                                    Protected\n                                responseBuilder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getAcceptedPurchaseResult\n                            \n                            \n                                    Private\n                                getDeclinedPurchaseResult\n                            \n                            \n                                    Private\n                                getFailedPurchaseResult\n                            \n                            \n                                    Public\n                                setAcceptedPurchaseResult\n                            \n                            \n                                    Public\n                                setDeclinedPurchaseResult\n                            \n                            \n                                    Public\n                                setFailedPurchaseResult\n                            \n                            \n                                    Public\n                                getResponse\n                            \n                            \n                                    Protected\n                                isJP\n                            \n                            \n                                    Public\n                                putDirective\n                            \n                            \n                                    Public\n                                putDirectives\n                            \n                            \n                                    Public\n                                putRepromptText\n                            \n                            \n                                    Public\n                                putSpeechText\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            contents\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ResponseContent\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         ContentBuilder\n\n                                \n                            \n                        \n                            \n                                    Defined in         ContentBuilder:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            locale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ContentBuilder\n\n                                \n                            \n                        \n                            \n                                    Defined in         ContentBuilder:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            responseBuilder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ResponseBuilder\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ContentBuilder\n\n                                \n                            \n                        \n                            \n                                    Defined in         ContentBuilder:10\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getAcceptedPurchaseResult\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAcceptedPurchaseResult()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/BuyResponse.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ResponseContent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getDeclinedPurchaseResult\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDeclinedPurchaseResult()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/BuyResponse.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ResponseContent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getFailedPurchaseResult\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFailedPurchaseResult()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/BuyResponse.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ResponseContent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setAcceptedPurchaseResult\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setAcceptedPurchaseResult()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/BuyResponse.ts:51\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setDeclinedPurchaseResult\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setDeclinedPurchaseResult()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/BuyResponse.ts:27\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setFailedPurchaseResult\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setFailedPurchaseResult()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/BuyResponse.ts:71\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getResponse()\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:43\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Response\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isJP\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isJP()\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:16\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putDirective\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putDirective(directive: Directive)\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:35\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    directive\n                                    \n                                                Directive\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putDirectives\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putDirectives(directives: Directive[])\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    directives\n                                    \n                                            Directive[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putRepromptText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putRepromptText(text: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:23\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putSpeechText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putSpeechText(text: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import ContentBuilder, {\n    ResponseContent\n} from './base'\n\nexport class BuyResponseContentBuilder extends ContentBuilder {\n    // purchaseResult === 'DECLINED'\n    private getDeclinedPurchaseResult (): ResponseContent {\n        const product = this.getProduct()\n        if (this.isJP()) {\n            return {\n                speechText: [\n                    `${product && product.name ? product.name : '商品'}に興味を持ってくれてありがとうございます。`,\n                    'また機会が購入してくださいね。',\n                    '次はなにをしますか？'\n                ].join(' '),\n                repromptText: '次はなにをしますか？'\n            }\n        }\n        return {\n            speechText: [\n                `Thanks for your interest in the ${product && product.name ? product.name : 'product'}.`,\n                'What will you do for next?'\n            ].join(' '),\n            repromptText: 'What will you do for next?'\n        }\n    }\n    public setDeclinedPurchaseResult (): this {\n        this.contents = this.getDeclinedPurchaseResult()\n        return this\n    }\n    // purchaseResult === 'ACCEPTED'\n    private getAcceptedPurchaseResult (): ResponseContent {\n        const product = this.getProduct()\n        if (this.isJP()) {\n            return {\n                speechText: [\n                    `${product && product.name ? product.name : '商品'}の購入ありがとうございます。`,\n                    '次は何をしますか？'\n                ].join(' '),\n                repromptText: '次は何をしますか？'\n            }\n        }\n        return {\n            speechText: [\n                `You have purchased the ${product && product.name ? product.name : 'product'}.`,\n                'What will you do for next?'\n            ].join(' '),\n            repromptText: 'What will you do for next?'\n        }\n    }\n    public setAcceptedPurchaseResult (): this {\n        this.contents = this.getAcceptedPurchaseResult()\n        return this\n    }\n    private getFailedPurchaseResult (): ResponseContent {\n        if (this.isJP()) {\n            return {\n                speechText: [\n                    'スキル商品の購入処理に失敗しました。',\n                    'もう一度トライするか、アレクサアプリからサポートに問い合わせてください。'\n                ].join(' ')\n            }\n        }\n        return {\n            speechText: [\n                'There was an error handling your purchase request.',\n                'Please try again or contact us for help.'\n            ].join(' ')\n        }\n    }\n    public setFailedPurchaseResult (): this {\n        this.contents = this.getFailedPurchaseResult()\n        return this\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Class.html":{"url":"interfaces/Class.html","title":"interface - Class","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Class\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        getAccessToken\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        getAccessToken\n                                    \n                                \n                                \n                                    \n                                        getAccessToken:     Promise\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Promise\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ClientConfig.html":{"url":"interfaces/ClientConfig.html","title":"interface - ClientConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ClientConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        apiEndpont\n                                \n                                \n                                            Optional\n                                        apiRegion\n                                \n                                \n                                        clientId\n                                \n                                \n                                        clientSecret\n                                \n                                \n                                            Optional\n                                        isProduction\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        apiEndpont\n                                    \n                                \n                                \n                                    \n                                        apiEndpont:         APIEndpoint\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         APIEndpoint\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        apiRegion\n                                    \n                                \n                                \n                                    \n                                        apiRegion:         ApiRegion\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ApiRegion\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        clientId\n                                    \n                                \n                                \n                                    \n                                        clientId:         ClientId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ClientId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        clientSecret\n                                    \n                                \n                                \n                                    \n                                        clientSecret:         ClientSecret\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ClientSecret\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isProduction\n                                    \n                                \n                                \n                                    \n                                        isProduction:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ConfirmationState.html":{"url":"interfaces/ConfirmationState.html","title":"interface - ConfirmationState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ConfirmationState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        confirmationStatus\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        confirmationStatus\n                                    \n                                \n                                \n                                    \n                                        confirmationStatus:         ConfirmationStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ConfirmationStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConstantsInterceptorFactory.html":{"url":"classes/ConstantsInterceptorFactory.html","title":"class - ConstantsInterceptorFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConstantsInterceptorFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/handlers/libs/requestInterceptors/InjectConstants.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    init(constants: T)\n                \n            \n\n\n            \n                \n                    Defined in packages/handlers/libs/requestInterceptors/InjectConstants.ts:8\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    constants\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     RequestInterceptor\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HandlerInput } from 'ask-sdk-core'\nimport { RequestInterceptor } from 'ask-sdk-runtime'\n\nexport interface SkillConstants {\n    [key: string]: any;\n}\nexport class ConstantsInterceptorFactory {\n    public static init (constants: T): RequestInterceptor {\n        return {\n            async process ({ attributesManager }: HandlerInput) {\n                const atts = attributesManager.getRequestAttributes()\n                attributesManager.setRequestAttributes({\n                    ...atts,\n                    CONSTANTS: constants\n                })\n            }\n        }\n    }\n}\n\nexport default ConstantsInterceptorFactory\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ContentBuilder.html":{"url":"classes/ContentBuilder.html","title":"class - ContentBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ContentBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/libs/contentBuilder.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                contents\n                            \n                            \n                                    Protected\n                                locale\n                            \n                            \n                                    Protected\n                                responseBuilder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getResponse\n                            \n                            \n                                    Protected\n                                isJP\n                            \n                            \n                                    Public\n                                putDirective\n                            \n                            \n                                    Public\n                                putDirectives\n                            \n                            \n                                    Public\n                                putRepromptText\n                            \n                            \n                                    Public\n                                putSpeechText\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(locale: string, responseBuilder: ResponseBuilder)\n                    \n                \n                        \n                            \n                                Defined in packages/core/libs/contentBuilder.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        locale\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        responseBuilder\n                                                  \n                                                        \n                                                                        ResponseBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            contents\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ResponseContent\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/libs/contentBuilder.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            locale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/libs/contentBuilder.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            responseBuilder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ResponseBuilder\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/libs/contentBuilder.ts:10\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getResponse()\n                \n            \n\n\n            \n                \n                    Defined in packages/core/libs/contentBuilder.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Response\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isJP\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isJP()\n                \n            \n\n\n            \n                \n                    Defined in packages/core/libs/contentBuilder.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putDirective\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putDirective(directive: Directive)\n                \n            \n\n\n            \n                \n                    Defined in packages/core/libs/contentBuilder.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    directive\n                                    \n                                                Directive\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putDirectives\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putDirectives(directives: Directive[])\n                \n            \n\n\n            \n                \n                    Defined in packages/core/libs/contentBuilder.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    directives\n                                    \n                                            Directive[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putRepromptText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putRepromptText(text: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/core/libs/contentBuilder.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putSpeechText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putSpeechText(text: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/core/libs/contentBuilder.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ResponseBuilder } from 'ask-sdk-core'\nimport { Response, Directive } from 'ask-sdk-model'\nexport interface ResponseContent {\n    speechText?: string;\n    repromptText?: string;\n    directives?: Directive[];\n}\nexport class ContentBuilder {\n    protected locale: string\n    protected responseBuilder: ResponseBuilder\n    protected contents: ResponseContent = {}\n    public constructor (locale: string, responseBuilder: ResponseBuilder) {\n        this.locale = locale\n        this.responseBuilder = responseBuilder\n    }\n    protected isJP (): boolean {\n        return /^ja/.test(this.locale)\n    }\n    public putSpeechText (text: string): this {\n        this.contents.speechText = text\n        return this\n    }\n    public putRepromptText (text: string): this {\n        this.contents.repromptText = text\n        return this\n    }\n    public putDirectives (directives: Directive[]): this {\n        if (!this.contents.directives) {\n            this.contents.directives = directives\n            return this\n        }\n        this.contents.directives = this.contents.directives.concat(directives)\n        return this\n    }\n    public putDirective (directive: Directive): this {\n        if (!this.contents.directives) {\n            this.contents.directives = [directive]\n            return this\n        }\n        this.contents.directives.push(directive)\n        return this\n    }\n    public getResponse (): Response {\n        const { speechText, repromptText, directives } = this.contents\n        if (speechText) this.responseBuilder.speak(speechText)\n        if (repromptText) this.responseBuilder.reprompt(repromptText)\n        if (directives) directives.forEach((directive): ResponseBuilder => this.responseBuilder.addDirective(directive))\n        return this.responseBuilder.getResponse()\n    }\n}\nexport default ContentBuilder\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ContentBuilder-1.html":{"url":"classes/ContentBuilder-1.html","title":"class - ContentBuilder-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ContentBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/isp/libs/contentBuilders/base.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                contents\n                            \n                            \n                                    Protected\n                                locale\n                            \n                            \n                                    Protected\n                                responseBuilder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getResponse\n                            \n                            \n                                    Protected\n                                isJP\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(locale: string, responseBuilder: ResponseBuilder)\n                    \n                \n                        \n                            \n                                Defined in packages/isp/libs/contentBuilders/base.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        locale\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        responseBuilder\n                                                  \n                                                        \n                                                                        ResponseBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            contents\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ResponseContent\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in packages/isp/libs/contentBuilders/base.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            locale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/isp/libs/contentBuilders/base.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            responseBuilder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ResponseBuilder\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/isp/libs/contentBuilders/base.ts:14\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getResponse()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/base.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Response\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isJP\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isJP()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/base.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { services, Response, Directive } from 'ask-sdk-model'\nimport { ResponseBuilder } from 'ask-sdk-core'\n\nimport InSkillProduct = services.monetization.InSkillProduct\n\nexport interface ResponseContent {\n    speechText?: string;\n    repromptText?: string;\n    directive?: Directive;\n}\n\nexport class ContentBuilder {\n    protected locale: string\n    protected responseBuilder: ResponseBuilder\n    protected contents: ResponseContent = {}\n    public constructor (locale: string, responseBuilder: ResponseBuilder) {\n        this.locale = locale\n        this.responseBuilder = responseBuilder\n    }\n    protected isJP (): boolean {\n        return /^ja/.test(this.locale)\n    }\n    public getResponse (): Response {\n        const { speechText, repromptText, directive } = this.contents\n        if (speechText) this.responseBuilder.speak(speechText)\n        if (repromptText) this.responseBuilder.reprompt(repromptText)\n        if (directive) this.responseBuilder.addDirective(directive)\n        return this.responseBuilder.getResponse()\n    }\n}\n\nexport class ISPContentBuilder extends ContentBuilder {\n    protected productName?: string\n    protected product?: InSkillProduct\n    public constructor (locale: string, responseBuilder: ResponseBuilder, productName?: string, product?: InSkillProduct) {\n        super(locale, responseBuilder)\n        if (productName) this.productName = productName\n        if (product) this.product = product\n    }\n    public setProduct (product: InSkillProduct): this {\n        this.product = product\n        return this\n    }\n    protected getProduct (): InSkillProduct {\n        const { product } = this\n        if (!product) throw new Error('No products')\n        return product\n    }\n    public setProductName (name: string): this {\n        this.productName = name\n        return this\n    }\n    protected getProductName (): string {\n        if (!this.productName) throw new Error('No product name')\n        return this.productName\n    }\n    /**\n   * If the device or account does not supports ISP\n   */\n    private getUnSupportedISPResponse (): ResponseContent {\n        if (this.isJP()) {\n            return {\n                speechText: [\n                    'すみません。',\n                    'お使いのデバイス・アプリでは、スキル内課金を利用することができません。',\n                    '別のデバイスを利用するか、アレクサアプリから設定を確認してもう一度お試しください。',\n                    '次はなにをしますか？',\n                    'スキルを終了して、アプリの設定を確認したい場合は「終了」と話しかけてください。'\n                ].join(' '),\n                repromptText: [\n                    '次はなにをしますか？',\n                    'スキルを終了して、アプリの設定を確認したい場合は「終了」と話しかけてください。'\n                ].join(' ')\n            }\n        }\n        return {\n            speechText: [\n                'Sorry, you can not purchase by the device.',\n                'Please check your device and application settings by the Alexa app.',\n                'What will you do the next?'\n            ].join(' '),\n            repromptText: [\n                'What will you do the next?',\n                'If you want to stop the skill, please say me \"STOP\".'\n            ].join(' ')\n        }\n    }\n    public setUnSupportedISPResponse (): this {\n        this.contents = this.getUnSupportedISPResponse()\n        return this\n    }\n    /**\n   * Product does not found response\n   */\n    private getProductsNotFoundResponse (): ResponseContent {\n        if (this.isJP()) {\n            return {\n                speechText: [\n                    `すみません。商品が見つかりませんでした。`,\n                    '他に何をしますか？'\n                ].join(' '),\n                repromptText: '他に何をしますか？'\n            }\n        }\n        return {\n            speechText: `I can't find any products you can buy. What do you want to do next?`,\n            repromptText: `What do you want to do next?`\n        }\n    }\n    public setProductsNotFoundResponse (): this {\n        this.contents = this.getProductsNotFoundResponse()\n        return this\n    }\n    /**\n   * Product does not found response\n   */\n    private getProductNotFoundResponse (): ResponseContent {\n        try {\n            const productName = this.getProductName()\n            if (this.isJP()) {\n                return {\n                    speechText: [\n                        `${productName}を購入することができます。`,\n                        `詳細を聞きたい場合は「${productName}について教えて」、`,\n                        `購入する場合は「${productName}を購入」と話しかけてください。`,\n                        'どうしますか？'\n                    ].join(' '),\n                    repromptText: '購入・詳細、どちらにしますか？'\n                }\n            }\n            return {\n                speechText: `${productName}. what item do you want?`,\n                repromptText: `${productName}. what item do you want?`\n            }\n        } catch (e) {\n            return this.getProductsNotFoundResponse()\n        }\n    }\n    public setProductNotFoundResponse (): this {\n        this.contents = this.getProductNotFoundResponse()\n        return this\n    }\n    /**\n   * If product not found\n   */\n    private getCanNotBuyTheProductResponse (): ResponseContent {\n        if (this.isJP()) {\n            return {\n                speechText: 'すみません。その商品は現在購入できません。他に何をしますか？',\n                repromptText: '他に何をしますか？'\n            }\n        }\n        return {\n            speechText: \"I don't think we have a product by that name.  Can you try again?\",\n            repromptText: \"I didn't catch that. Can you try again?\"\n        }\n    }\n    public setCanNotBuyTheProductResponse (): this {\n        this.contents = this.getCanNotBuyTheProductResponse()\n        return this\n    }\n    /**\n   * If product already purchased\n   */\n    public getEntitledProductResponse (): ResponseContent {\n        if (this.isJP()) {\n            return {\n                speechText: 'その商品はすでに購入済の様子です。他に何をしますか？',\n                repromptText: '他に何をしますか？'\n            }\n        }\n        return {\n            speechText: 'You already entitled the product. What will you do for next?',\n            repromptText: 'What will you do for next?'\n        }\n    }\n    public setEntitledProductResponse (): this {\n        this.contents = this.getEntitledProductResponse()\n        return this\n    }\n}\nexport default ISPContentBuilder\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ContextFactory.html":{"url":"classes/ContextFactory.html","title":"class - ContextFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ContextFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/test/libs/context/ContextFactory.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                context\n                            \n                            \n                                    Public\n                                    Readonly\n                                system\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getContext\n                            \n                            \n                                    Public\n                                putContext\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Context\n\n                        \n                    \n                    \n                        \n                            Default value : {\n        System: this.system.getSystem()\n    }\n                        \n                    \n                        \n                            \n                                    Defined in packages/test/libs/context/ContextFactory.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            system\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new SystemFactory()\n                        \n                    \n                        \n                            \n                                    Defined in packages/test/libs/context/ContextFactory.ts:7\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getContext\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getContext()\n                \n            \n\n\n            \n                \n                    Defined in packages/test/libs/context/ContextFactory.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Context\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putContext\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putContext(context: Context)\n                \n            \n\n\n            \n                \n                    Defined in packages/test/libs/context/ContextFactory.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            Context\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n    Context\n} from 'ask-sdk-model' // 'ask-sdk-core/node_modules/ask-sdk-model'\nimport { SystemFactory } from './SystemFactory'\n\nexport class ContextFactory {\n    public readonly system = new SystemFactory()\n    private context: Context = {\n        System: this.system.getSystem()\n    }\n\n    public putContext (context: Context): this {\n        this.context = context\n        return this\n    }\n\n    public getContext (): Context {\n        return {\n            ...this.context,\n            System: this.system.getSystem()\n        }\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreativeWork.html":{"url":"interfaces/CreativeWork.html","title":"interface - CreativeWork","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CreativeWork\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        contentType\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        contentType\n                                    \n                                \n                                \n                                    \n                                        contentType:         MediaType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MediaType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CustomHandlerInput.html":{"url":"interfaces/CustomHandlerInput.html","title":"interface - CustomHandlerInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CustomHandlerInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/handlers/libs/requestHandlers/HandlerFactory.ts\n        \n\n\n            \n                Extends\n            \n            \n                    HandlerInput\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        requestEnvelope\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        requestEnvelope\n                                    \n                                \n                                \n                                    \n                                        requestEnvelope:         CustomeRequestEnvelope\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CustomeRequestEnvelope\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { RequestHandler, HandlerInput } from 'ask-sdk-core'\nimport { Response, Request, RequestEnvelope } from 'ask-sdk-model'\nimport Resolver, { interfaces } from 'class-resolver'\nimport { isLaunchRequest } from 'ask-utils'\n\nexport interface TMergeTargetHandler {\n    canHandle?: (input: Input) => Promise | boolean;\n    handle?: (input: Input) => Promise | Output;\n}\nexport interface TRequestHandler {\n    canHandle: (input: Input) => Promise | boolean;\n    handle: (input: Input) => Promise | Output;\n}\nexport interface CustomeRequestEnvelope extends RequestEnvelope {\n    request: CustomRequest;\n}\nexport interface CustomHandlerInput extends HandlerInput {\n    requestEnvelope: CustomeRequestEnvelope;\n}\nexport interface RequestHandlerBuilder extends interfaces.ResolveTarget {\n    handle(handler: TMergeTargetHandler): TRequestHandler;\n}\n\nconst merge = (handler: TMergeTargetHandler, target?: TMergeTargetHandler): TRequestHandler => {\n    const fallBackHandler: RequestHandler = {\n        canHandle () {\n            return true\n        },\n        handle (handlerInput) {\n            return handlerInput.responseBuilder.getResponse()\n        }\n    }\n    return Object.assign({}, fallBackHandler, target, handler)\n}\n\nexport type SupportedHandlerType = 'LaunchRequest'\nexport class RequestHandlerFactory {\n    public static create (type: SupportedHandlerType, handler: TMergeTargetHandler): TRequestHandler {\n        return new Resolver(\n            new LaunchRequestHandlerFactory(),\n            new FallbackIntentFactory()\n        ).resolve(type).handle(handler)\n    }\n}\nexport default RequestHandlerFactory\n\nexport class LaunchRequestHandlerFactory implements RequestHandlerBuilder {\n    supports (type: string) {\n        return type === 'LaunchRequest'\n    }\n    handle (handler: TMergeTargetHandler) {\n        return merge(handler, {\n            canHandle (handlerInput) {\n                return isLaunchRequest(handlerInput)\n            }\n        })\n    }\n}\n\nexport class FallbackIntentFactory implements RequestHandlerBuilder {\n    supports () {\n        return true\n    }\n    handle (handler: TMergeTargetHandler) {\n        return merge(handler)\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CustomeRequestEnvelope.html":{"url":"interfaces/CustomeRequestEnvelope.html","title":"interface - CustomeRequestEnvelope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CustomeRequestEnvelope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/handlers/libs/requestHandlers/HandlerFactory.ts\n        \n\n\n            \n                Extends\n            \n            \n                    RequestEnvelope\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        request\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        request\n                                    \n                                \n                                \n                                    \n                                        request:     CustomRequest\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     CustomRequest\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { RequestHandler, HandlerInput } from 'ask-sdk-core'\nimport { Response, Request, RequestEnvelope } from 'ask-sdk-model'\nimport Resolver, { interfaces } from 'class-resolver'\nimport { isLaunchRequest } from 'ask-utils'\n\nexport interface TMergeTargetHandler {\n    canHandle?: (input: Input) => Promise | boolean;\n    handle?: (input: Input) => Promise | Output;\n}\nexport interface TRequestHandler {\n    canHandle: (input: Input) => Promise | boolean;\n    handle: (input: Input) => Promise | Output;\n}\nexport interface CustomeRequestEnvelope extends RequestEnvelope {\n    request: CustomRequest;\n}\nexport interface CustomHandlerInput extends HandlerInput {\n    requestEnvelope: CustomeRequestEnvelope;\n}\nexport interface RequestHandlerBuilder extends interfaces.ResolveTarget {\n    handle(handler: TMergeTargetHandler): TRequestHandler;\n}\n\nconst merge = (handler: TMergeTargetHandler, target?: TMergeTargetHandler): TRequestHandler => {\n    const fallBackHandler: RequestHandler = {\n        canHandle () {\n            return true\n        },\n        handle (handlerInput) {\n            return handlerInput.responseBuilder.getResponse()\n        }\n    }\n    return Object.assign({}, fallBackHandler, target, handler)\n}\n\nexport type SupportedHandlerType = 'LaunchRequest'\nexport class RequestHandlerFactory {\n    public static create (type: SupportedHandlerType, handler: TMergeTargetHandler): TRequestHandler {\n        return new Resolver(\n            new LaunchRequestHandlerFactory(),\n            new FallbackIntentFactory()\n        ).resolve(type).handle(handler)\n    }\n}\nexport default RequestHandlerFactory\n\nexport class LaunchRequestHandlerFactory implements RequestHandlerBuilder {\n    supports (type: string) {\n        return type === 'LaunchRequest'\n    }\n    handle (handler: TMergeTargetHandler) {\n        return merge(handler, {\n            canHandle (handlerInput) {\n                return isLaunchRequest(handlerInput)\n            }\n        })\n    }\n}\n\nexport class FallbackIntentFactory implements RequestHandlerBuilder {\n    supports () {\n        return true\n    }\n    handle (handler: TMergeTargetHandler) {\n        return merge(handler)\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DBClient.html":{"url":"classes/DBClient.html","title":"class - DBClient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DBClient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/libs/db.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                client\n                            \n                            \n                                    Protected\n                                isDebug\n                            \n                            \n                                    Protected\n                                primaryKey\n                            \n                            \n                                    Protected\n                                tableName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                get\n                            \n                            \n                                    Public\n                                    Async\n                                put\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(tableName: string, config?: DBConfig)\n                    \n                \n                        \n                            \n                                Defined in packages/core/libs/db.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tableName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        DBConfig\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            client\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DocumentClient\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/libs/db.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            isDebug\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/libs/db.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            primaryKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/libs/db.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            tableName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/libs/db.ts:16\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(id: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/core/libs/db.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            put\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    put(id: string, attributes: DBItem)\n                \n            \n\n\n            \n                \n                    Defined in packages/core/libs/db.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    attributes\n                                    \n                                                DBItem\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DynamoDB } from 'aws-sdk'\nimport DocumentClient = DynamoDB.DocumentClient\n\nexport interface DBItem {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    [key: string]: any;\n}\nexport interface DBConfig {\n    client?: DocumentClient;\n    isDebug?: boolean;\n    primaryKey?: string;\n}\nexport class DBClient {\n    protected client: DocumentClient\n    protected isDebug: boolean\n    protected tableName: string\n    protected primaryKey: string\n    public constructor (tableName: string, config?: DBConfig) {\n        this.client = config ? config.client || new DocumentClient() : new DocumentClient()\n        this.isDebug = config ? config.isDebug || false : false\n        this.primaryKey = config ? config.primaryKey || 'id' : 'id'\n        this.tableName = tableName\n    }\n    public async get (id: string): Promise {\n        const param: DocumentClient.GetItemInput = {\n            TableName: this.tableName,\n            Key: {\n                [this.primaryKey]: id\n            }\n        }\n        if (this.isDebug) console.log('DBClient.get: %j', param)\n        const { Item } = await this.client.get(param).promise()\n        if (this.isDebug) console.log('DBClient.get(): %j', Item)\n        if (!Item) return {}\n        return Item\n    }\n    public async put (id: string, attributes: DBItem): Promise {\n        const param: DocumentClient.PutItemInput = {\n            TableName: this.tableName,\n            Item: {\n                [this.primaryKey]: id,\n                ...attributes\n            }\n        }\n        if (this.isDebug) console.log('DBClient.put: %j', param)\n        const result = await this.client.put(param).promise()\n        if (this.isDebug) console.log('DBClient.put: %j', result)\n        return result\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DBConfig.html":{"url":"interfaces/DBConfig.html","title":"interface - DBConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DBConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/libs/db.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        client\n                                \n                                \n                                            Optional\n                                        isDebug\n                                \n                                \n                                            Optional\n                                        primaryKey\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        client\n                                    \n                                \n                                \n                                    \n                                        client:         DocumentClient\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DocumentClient\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isDebug\n                                    \n                                \n                                \n                                    \n                                        isDebug:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        primaryKey\n                                    \n                                \n                                \n                                    \n                                        primaryKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DynamoDB } from 'aws-sdk'\nimport DocumentClient = DynamoDB.DocumentClient\n\nexport interface DBItem {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    [key: string]: any;\n}\nexport interface DBConfig {\n    client?: DocumentClient;\n    isDebug?: boolean;\n    primaryKey?: string;\n}\nexport class DBClient {\n    protected client: DocumentClient\n    protected isDebug: boolean\n    protected tableName: string\n    protected primaryKey: string\n    public constructor (tableName: string, config?: DBConfig) {\n        this.client = config ? config.client || new DocumentClient() : new DocumentClient()\n        this.isDebug = config ? config.isDebug || false : false\n        this.primaryKey = config ? config.primaryKey || 'id' : 'id'\n        this.tableName = tableName\n    }\n    public async get (id: string): Promise {\n        const param: DocumentClient.GetItemInput = {\n            TableName: this.tableName,\n            Key: {\n                [this.primaryKey]: id\n            }\n        }\n        if (this.isDebug) console.log('DBClient.get: %j', param)\n        const { Item } = await this.client.get(param).promise()\n        if (this.isDebug) console.log('DBClient.get(): %j', Item)\n        if (!Item) return {}\n        return Item\n    }\n    public async put (id: string, attributes: DBItem): Promise {\n        const param: DocumentClient.PutItemInput = {\n            TableName: this.tableName,\n            Item: {\n                [this.primaryKey]: id,\n                ...attributes\n            }\n        }\n        if (this.isDebug) console.log('DBClient.put: %j', param)\n        const result = await this.client.put(param).promise()\n        if (this.isDebug) console.log('DBClient.put: %j', result)\n        return result\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DBItem.html":{"url":"interfaces/DBItem.html","title":"interface - DBItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DBItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/libs/db.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in packages/core/libs/db.ts:4\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { DynamoDB } from 'aws-sdk'\nimport DocumentClient = DynamoDB.DocumentClient\n\nexport interface DBItem {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    [key: string]: any;\n}\nexport interface DBConfig {\n    client?: DocumentClient;\n    isDebug?: boolean;\n    primaryKey?: string;\n}\nexport class DBClient {\n    protected client: DocumentClient\n    protected isDebug: boolean\n    protected tableName: string\n    protected primaryKey: string\n    public constructor (tableName: string, config?: DBConfig) {\n        this.client = config ? config.client || new DocumentClient() : new DocumentClient()\n        this.isDebug = config ? config.isDebug || false : false\n        this.primaryKey = config ? config.primaryKey || 'id' : 'id'\n        this.tableName = tableName\n    }\n    public async get (id: string): Promise {\n        const param: DocumentClient.GetItemInput = {\n            TableName: this.tableName,\n            Key: {\n                [this.primaryKey]: id\n            }\n        }\n        if (this.isDebug) console.log('DBClient.get: %j', param)\n        const { Item } = await this.client.get(param).promise()\n        if (this.isDebug) console.log('DBClient.get(): %j', Item)\n        if (!Item) return {}\n        return Item\n    }\n    public async put (id: string, attributes: DBItem): Promise {\n        const param: DocumentClient.PutItemInput = {\n            TableName: this.tableName,\n            Item: {\n                [this.primaryKey]: id,\n                ...attributes\n            }\n        }\n        if (this.isDebug) console.log('DBClient.put: %j', param)\n        const result = await this.client.put(param).promise()\n        if (this.isDebug) console.log('DBClient.put: %j', result)\n        return result\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeviceAPIClient.html":{"url":"classes/DeviceAPIClient.html","title":"class - DeviceAPIClient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeviceAPIClient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/serviceClients/libs/Devices.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Client\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                path\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                getCountryAndPostalCode\n                            \n                            \n                                    Public\n                                    Async\n                                getFullAddress\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '/v1/devices/'\n                        \n                    \n                        \n                            \n                                    Defined in packages/serviceClients/libs/Devices.ts:5\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getCountryAndPostalCode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCountryAndPostalCode(deviceId: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/serviceClients/libs/Devices.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    deviceId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getFullAddress\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFullAddress(deviceId: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/serviceClients/libs/Devices.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    deviceId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { services } from 'ask-sdk-model'\nimport Client from './client'\n\nexport class DeviceAPIClient extends Client {\n    protected path = '/v1/devices/'\n    public async getCountryAndPostalCode (deviceId: string): Promise {\n        return this.get(`${deviceId}/settings/address/countryAndPostalCode`)\n    }\n    public async getFullAddress (deviceId: string): Promise {\n        return this.get(`${deviceId}/settings/address`)\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DynamoDBSkillConfig.html":{"url":"interfaces/DynamoDBSkillConfig.html","title":"interface - DynamoDBSkillConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DynamoDBSkillConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ask-utils/libs/models.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseSkillConfig\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        persistanceType\n                                \n                                \n                                        tableName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        persistanceType\n                                    \n                                \n                                \n                                    \n                                        persistanceType:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tableName\n                                    \n                                \n                                \n                                    \n                                        tableName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n    RequestInterceptor,\n    ResponseInterceptor,\n    ErrorHandler,\n    RequestHandler\n} from 'ask-sdk'\nimport {\n    SkillConstants\n} from '@ask-utils/handlers'\n\ntype PersistanceType = 'DynamoDB' | 'S3'\ninterface BaseSkillConfig {\n    persistanceType: PersistanceType;\n    isISP?: boolean;\n    constants?: T;\n}\nexport interface S3SkillConfig extends BaseSkillConfig {\n    persistanceType: 'S3';\n    bucketName: string;\n    bucketPathPrefix: string;\n}\nexport interface DynamoDBSkillConfig extends BaseSkillConfig {\n    persistanceType: 'DynamoDB';\n    tableName: string;\n}\nexport type SkillConfig = S3SkillConfig | DynamoDBSkillConfig\nexport interface SkillHandlers {\n    requestHandlers: RequestHandler[];\n    requestInterceptors?: RequestInterceptor[];\n    responseInterceptors?: ResponseInterceptor[];\n    errorHandlers?: ErrorHandler[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ErrorHandlerBuilder.html":{"url":"interfaces/ErrorHandlerBuilder.html","title":"interface - ErrorHandlerBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ErrorHandlerBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/error-handlers/libs/index.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getHandler\n                                \n                                \n                                    setErrorResponse\n                                \n                                \n                                    setHandle\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHandler\n                        \n                        \n                    \n                \n            \n            \n                \ngetHandler()\n                \n            \n\n\n            \n                \n                    Defined in packages/error-handlers/libs/index.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorHandler\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setErrorResponse\n                        \n                        \n                    \n                \n            \n            \n                \nsetErrorResponse(speechText: string, repromptText: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/error-handlers/libs/index.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    speechText\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    repromptText\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ErrorHandlerBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setHandle\n                        \n                        \n                    \n                \n            \n            \n                \nsetHandle(handle: ErrorHandle)\n                \n            \n\n\n            \n                \n                    Defined in packages/error-handlers/libs/index.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    handle\n                                    \n                                                ErrorHandle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ErrorHandlerBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ErrorHandler, RequestInterceptor, HandlerInput } from 'ask-sdk-core'\nimport { Response } from 'ask-sdk-model'\nimport * as Sentry from '@sentry/node'\nSentry.init({ dsn: process.env.SENTRY_DNS as string })\n\nexport type ErrorHandle = (handlerInput: HandlerInput, error: Error) => Promise | Response\nexport interface ErrorHandlerBuilder {\n    getHandler(): ErrorHandler;\n    setHandle(handle: ErrorHandle): ErrorHandlerBuilder;\n    setErrorResponse(speechText: string, repromptText: string): ErrorHandlerBuilder;\n}\n/**\n * ErrorHandler Factory for Sentry\n *\n * @example Basic\n * ```typescript\n * const ErrorHandler = SentryErrorHandlerFactory.init().getHandler()\n * ```\n * @example Custom speech and reprompt\n * ```typescript\n * const ErrorHandler = SentryErrorHandlerFactory.init()\n *                          .setErrorResponse('Speech something', 'reprompt something')\n *                          .getHandler()\n * ```\n * @example Custom handler\n * ```typescript\n * const ErrorHandler = SentryErrorHandlerFactory.init()\n *                          .setHandle((handlerInput) => {\n *                            return handlerInput.responseBuilder\n *                              .speak('Sorry I could not understand the meaning. Please tell me again')\n *                              .reprompt('Could you tell me onece more?')\n *                              .getResponse()\n *                          })\n *                          .getHandler()\n * ```\n */\nexport class SentryErrorHandlerFactory {\n    public static init (): ErrorHandlerBuilder {\n        let handlerFilter: ErrorHandle = (handlerInput) => {\n            return handlerInput.responseBuilder\n                .speak('Sorry I could not understand the meaning. Please tell me again')\n                .reprompt('Could you tell me onece more?')\n                .getResponse()\n        }\n\n        const handler: ErrorHandler = {\n            canHandle: () => true,\n            handle: (handlerInput, error) => {\n                Sentry.captureEvent({\n                    message: error.message,\n                    extra: {\n                        request: handlerInput.requestEnvelope,\n                        error,\n                        stack: error.stack\n                    }\n                })\n                return handlerFilter(handlerInput, error)\n            }\n        }\n        return {\n            getHandler (): ErrorHandler {\n                return handler\n            },\n            setHandle (handle: ErrorHandle) {\n                handlerFilter = handle\n                return this\n            },\n            setErrorResponse (speechText: string, repromptText: string) {\n                handlerFilter = (handlerInput) => {\n                    return handlerInput.responseBuilder\n                        .speak(speechText)\n                        .reprompt(repromptText)\n                        .getResponse()\n                }\n                return this\n            }\n        }\n    }\n}\n\nexport const SentryDefaultErrorHandler: ErrorHandler = SentryErrorHandlerFactory.init().getHandler()\n\n/**\n * Set additional track information\n *\n * @example\n * import Alexa from 'ask-sdk'\n * import { SetErrorTrackerInterceptor, SentryDefaultErrorHandler } from '@ask-utils/error-handlers'\n *\n * export const handler = Alexa.SkillBuilders.standard()\n *                            .addErrorHandlers(SentryDefaultErrorHandler)\n *                            .addRequestInterceptors(SetErrorTrackerInterceptor)\n *                            .lambda()\n */\nexport const SetErrorTrackerInterceptor: RequestInterceptor = {\n    process ({ requestEnvelope }) {\n        const { System } = requestEnvelope.context\n        const userParams: {[key: string]: string} = {\n            userId: System.user.userId\n        }\n        if (System.device) userParams.deviceId = System.device.deviceId\n        if (requestEnvelope.session) userParams.sessionId = requestEnvelope.session.sessionId\n\n        Sentry.configureScope(scope => {\n            scope.setTag('request_id', requestEnvelope.request.requestId)\n            scope.setUser(userParams)\n        })\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Factory.html":{"url":"interfaces/Factory.html","title":"interface - Factory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Factory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getLocalizedAttributes\n                                \n                                \n                                    putLocalizedAttribute\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLocalizedAttributes\n                        \n                        \n                    \n                \n            \n            \n                \ngetLocalizedAttributes()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:270\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Types.LocalizedAttributes\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            putLocalizedAttribute\n                        \n                        \n                    \n                \n            \n            \n                \nputLocalizedAttribute(locale: Types.Locale, key: string, text: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:269\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    locale\n                                    \n                                                Types.Locale\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Factory\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FallbackIntentFactory.html":{"url":"classes/FallbackIntentFactory.html","title":"class - FallbackIntentFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FallbackIntentFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/handlers/libs/requestHandlers/HandlerFactory.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            RequestHandlerBuilder\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                            \n                                supports\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handle\n                        \n                        \n                    \n                \n            \n            \n                \nhandle(handler: TMergeTargetHandler)\n                \n            \n\n\n            \n                \n                    Defined in packages/handlers/libs/requestHandlers/HandlerFactory.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    handler\n                                    \n                                                TMergeTargetHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TRequestHandler\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            supports\n                        \n                        \n                    \n                \n            \n            \n                \nsupports()\n                \n            \n\n\n            \n                \n                    Defined in packages/handlers/libs/requestHandlers/HandlerFactory.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { RequestHandler, HandlerInput } from 'ask-sdk-core'\nimport { Response, Request, RequestEnvelope } from 'ask-sdk-model'\nimport Resolver, { interfaces } from 'class-resolver'\nimport { isLaunchRequest } from 'ask-utils'\n\nexport interface TMergeTargetHandler {\n    canHandle?: (input: Input) => Promise | boolean;\n    handle?: (input: Input) => Promise | Output;\n}\nexport interface TRequestHandler {\n    canHandle: (input: Input) => Promise | boolean;\n    handle: (input: Input) => Promise | Output;\n}\nexport interface CustomeRequestEnvelope extends RequestEnvelope {\n    request: CustomRequest;\n}\nexport interface CustomHandlerInput extends HandlerInput {\n    requestEnvelope: CustomeRequestEnvelope;\n}\nexport interface RequestHandlerBuilder extends interfaces.ResolveTarget {\n    handle(handler: TMergeTargetHandler): TRequestHandler;\n}\n\nconst merge = (handler: TMergeTargetHandler, target?: TMergeTargetHandler): TRequestHandler => {\n    const fallBackHandler: RequestHandler = {\n        canHandle () {\n            return true\n        },\n        handle (handlerInput) {\n            return handlerInput.responseBuilder.getResponse()\n        }\n    }\n    return Object.assign({}, fallBackHandler, target, handler)\n}\n\nexport type SupportedHandlerType = 'LaunchRequest'\nexport class RequestHandlerFactory {\n    public static create (type: SupportedHandlerType, handler: TMergeTargetHandler): TRequestHandler {\n        return new Resolver(\n            new LaunchRequestHandlerFactory(),\n            new FallbackIntentFactory()\n        ).resolve(type).handle(handler)\n    }\n}\nexport default RequestHandlerFactory\n\nexport class LaunchRequestHandlerFactory implements RequestHandlerBuilder {\n    supports (type: string) {\n        return type === 'LaunchRequest'\n    }\n    handle (handler: TMergeTargetHandler) {\n        return merge(handler, {\n            canHandle (handlerInput) {\n                return isLaunchRequest(handlerInput)\n            }\n        })\n    }\n}\n\nexport class FallbackIntentFactory implements RequestHandlerBuilder {\n    supports () {\n        return true\n    }\n    handle (handler: TMergeTargetHandler) {\n        return merge(handler)\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FlashBriefingContent.html":{"url":"interfaces/FlashBriefingContent.html","title":"interface - FlashBriefingContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FlashBriefingContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/handlers/libs/flashbriefing.ts\n        \n\n            \n                Description\n            \n            \n                Flashbrieding feed contemts\nhttps://developer.amazon.com/docs/flashbriefing/flash-briefing-skill-api-feed-reference.html#details\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        mainText\n                                \n                                \n                                        redirectionUrl\n                                \n                                \n                                            Optional\n                                        streamUrl\n                                \n                                \n                                        titleText\n                                \n                                \n                                        uid\n                                \n                                \n                                        updateDate\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        mainText\n                                    \n                                \n                                \n                                    \n                                        mainText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        redirectionUrl\n                                    \n                                \n                                \n                                    \n                                        redirectionUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        streamUrl\n                                    \n                                \n                                \n                                    \n                                        streamUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        titleText\n                                    \n                                \n                                \n                                    \n                                        titleText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uid\n                                    \n                                \n                                \n                                    \n                                        uid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updateDate\n                                    \n                                \n                                \n                                    \n                                        updateDate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface FlashBriefingContent {\n    uid: string;\n    updateDate: string;\n    titleText: string;\n    streamUrl?: string;\n    mainText: string;\n    redirectionUrl: string;\n}\nexport type FlashBriefings = FlashBriefingContent[]\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Game.html":{"url":"interfaces/Game.html","title":"interface - Game","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Game\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        name\n                                \n                                \n                                        offer\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        offer\n                                    \n                                \n                                \n                                    \n                                        offer:         OfferType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OfferType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GameInvite.html":{"url":"interfaces/GameInvite.html","title":"interface - GameInvite","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GameInvite\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        inviter\n                                \n                                \n                                        inviteType\n                                \n                                \n                                        relationshipToInvitee\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        inviter\n                                    \n                                \n                                \n                                    \n                                        inviter:         Person\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Person\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inviteType\n                                    \n                                \n                                \n                                    \n                                        inviteType:         InviteType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         InviteType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        relationshipToInvitee\n                                    \n                                \n                                \n                                    \n                                        relationshipToInvitee:         RelationshipToInvitee\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RelationshipToInvitee\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GameStatistic.html":{"url":"interfaces/GameStatistic.html","title":"interface - GameStatistic","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GameStatistic\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        score\n                                \n                                \n                                        team\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        score\n                                    \n                                \n                                \n                                    \n                                        score:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        team\n                                    \n                                \n                                \n                                    \n                                        team:         SportsTeam\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SportsTeam\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Goal.html":{"url":"interfaces/Goal.html","title":"interface - Goal","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Goal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        scoreEarned\n                                \n                                \n                                        teamName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        scoreEarned\n                                    \n                                \n                                \n                                    \n                                        scoreEarned:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        teamName\n                                    \n                                \n                                \n                                    \n                                        teamName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HandlerBuilder.html":{"url":"classes/HandlerBuilder.html","title":"class - HandlerBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HandlerBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/isp/libs/handlers/fixtures.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                canHandle\n                            \n                            \n                                    Protected\n                                canHandleFilter\n                            \n                            \n                                    Public\n                                handle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getHandler\n                            \n                            \n                                    Public\n                                replaceHandler\n                            \n                            \n                                    Public\n                                setHandle\n                            \n                            \n                                    Public\n                                setHandleCondition\n                            \n                            \n                                    Public\n                                updateHandler\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            canHandle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CanHandle\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in packages/isp/libs/handlers/fixtures.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            canHandleFilter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CanHandle\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in packages/isp/libs/handlers/fixtures.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            handle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Handle\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in packages/isp/libs/handlers/fixtures.ts:11\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getHandler\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getHandler()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/handlers/fixtures.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     RequestHandler\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            replaceHandler\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    replaceHandler(handler: Partial)\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/handlers/fixtures.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    handler\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setHandle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setHandle(handle: Handle)\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/handlers/fixtures.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    handle\n                                    \n                                                Handle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setHandleCondition\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setHandleCondition(condition: CanHandle)\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/handlers/fixtures.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                CanHandle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateHandler\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateHandler(condition: CanHandle, handle: Handle)\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/handlers/fixtures.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                CanHandle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    handle\n                                    \n                                                Handle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { RequestHandler, HandlerInput } from 'ask-sdk-core'\nimport { Response } from 'ask-sdk-model'\n\nexport type CanHandle = (handlerInput: HandlerInput) => Promise | boolean\nexport type Handle = (handlerInput: HandlerInput) => Promise | Response\nexport class HandlerBuilder {\n    protected canHandleFilter: CanHandle = () => true\n    public canHandle: CanHandle = (handlerInput) => {\n        return this.canHandleFilter(handlerInput)\n    }\n    public handle: Handle = (handlerInput) => {\n        throw new Error(`Unsupported request: ${JSON.stringify(handlerInput)}`)\n    }\n    public setHandleCondition (condition: CanHandle): this {\n        this.canHandleFilter = condition\n        return this\n    }\n    public setHandle (handle: Handle): this {\n        this.handle = handle\n        return this\n    }\n    public updateHandler (condition: CanHandle, handle: Handle): this {\n        this.setHandle(handle)\n        this.setHandleCondition(condition)\n        return this\n    }\n    public replaceHandler (handler: Partial): this {\n        if (handler.canHandle) this.setHandleCondition(handler.canHandle)\n        if (handler.handle) this.setHandle(handler.handle)\n        return this\n    }\n    public getHandler (): RequestHandler {\n        return {\n            canHandle: this.canHandle,\n            handle: this.handle\n        }\n    }\n}\nexport class HandlerFactory {\n    public static init () {\n        const builder = new HandlerBuilder()\n        return builder\n    }\n}\nexport default HandlerFactory\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HandlerBuilder-1.html":{"url":"classes/HandlerBuilder-1.html","title":"class - HandlerBuilder-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HandlerBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/handlers/libs/requestHandlers/factories/Base.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            HandlerBuilderInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                canHandle\n                            \n                            \n                                    Protected\n                                canHandleFilter\n                            \n                            \n                                    Public\n                                handle\n                            \n                            \n                                    Protected\n                                handlerFilter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getHandler\n                            \n                            \n                                    Public\n                                replaceHandler\n                            \n                            \n                                    Public\n                                setHandle\n                            \n                            \n                                    Public\n                                setHandleCondition\n                            \n                            \n                                    Public\n                                updateHandler\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            canHandle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CanHandle\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in packages/handlers/libs/requestHandlers/factories/Base.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            canHandleFilter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CanHandle\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in packages/handlers/libs/requestHandlers/factories/Base.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            handle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Handle\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in packages/handlers/libs/requestHandlers/factories/Base.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            handlerFilter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Handle\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in packages/handlers/libs/requestHandlers/factories/Base.ts:8\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getHandler\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getHandler()\n                \n            \n\n\n            \n                \n                    Defined in packages/handlers/libs/requestHandlers/factories/Base.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     RequestHandler\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            replaceHandler\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    replaceHandler(handler: Partial)\n                \n            \n\n\n            \n                \n                    Defined in packages/handlers/libs/requestHandlers/factories/Base.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    handler\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setHandle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setHandle(handle: Handle)\n                \n            \n\n\n            \n                \n                    Defined in packages/handlers/libs/requestHandlers/factories/Base.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    handle\n                                    \n                                                Handle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setHandleCondition\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setHandleCondition(condition: CanHandle)\n                \n            \n\n\n            \n                \n                    Defined in packages/handlers/libs/requestHandlers/factories/Base.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                CanHandle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateHandler\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateHandler(condition: CanHandle, handle: Handle)\n                \n            \n\n\n            \n                \n                    Defined in packages/handlers/libs/requestHandlers/factories/Base.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                CanHandle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    handle\n                                    \n                                                Handle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { RequestHandler } from 'ask-sdk-core'\nimport {\n    CanHandle, Handle, HandlerBuilderInterface,\n    CanHandleResponse, HandleResponse\n} from './model'\nexport class HandlerBuilder implements HandlerBuilderInterface {\n    protected canHandleFilter: CanHandle = (): CanHandleResponse => true\n    protected handlerFilter: Handle = (handlerInput): HandleResponse => { throw new Error(`Unsupported request: ${JSON.stringify(handlerInput)}`) }\n    public canHandle: CanHandle = (handlerInput): CanHandleResponse => {\n        return this.canHandleFilter(handlerInput)\n    }\n    public handle: Handle = (handlerInput): HandleResponse => {\n        return this.handlerFilter(handlerInput)\n    }\n    public setHandleCondition (condition: CanHandle): this {\n        this.canHandleFilter = condition\n        return this\n    }\n    public setHandle (handle: Handle): this {\n        this.handlerFilter = handle\n        return this\n    }\n    public updateHandler (condition: CanHandle, handle: Handle): this {\n        this.setHandle(handle)\n        this.setHandleCondition(condition)\n        return this\n    }\n    public replaceHandler (handler: Partial): this {\n        if (handler.canHandle) this.setHandleCondition(handler.canHandle)\n        if (handler.handle) this.setHandle(handler.handle)\n        return this\n    }\n    public getHandler (): RequestHandler {\n        return {\n            canHandle: this.canHandle,\n            handle: this.handle\n        }\n    }\n}\nexport default HandlerBuilder\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HandlerBuilderInterface.html":{"url":"interfaces/HandlerBuilderInterface.html","title":"interface - HandlerBuilderInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  HandlerBuilderInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/handlers/libs/requestHandlers/factories/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        canHandle\n                                \n                                \n                                        handle\n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getHandler\n                                \n                                \n                                    replaceHandler\n                                \n                                \n                                    setHandle\n                                \n                                \n                                    setHandleCondition\n                                \n                                \n                                    updateHandler\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHandler\n                        \n                        \n                    \n                \n            \n            \n                \ngetHandler()\n                \n            \n\n\n            \n                \n                    Defined in packages/handlers/libs/requestHandlers/factories/model.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     RequestHandler\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            replaceHandler\n                        \n                        \n                    \n                \n            \n            \n                \nreplaceHandler(handler: Partial)\n                \n            \n\n\n            \n                \n                    Defined in packages/handlers/libs/requestHandlers/factories/model.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    handler\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         HandlerBuilderInterface\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setHandle\n                        \n                        \n                    \n                \n            \n            \n                \nsetHandle(handle: Handle)\n                \n            \n\n\n            \n                \n                    Defined in packages/handlers/libs/requestHandlers/factories/model.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    handle\n                                    \n                                                Handle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         HandlerBuilderInterface\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setHandleCondition\n                        \n                        \n                    \n                \n            \n            \n                \nsetHandleCondition(condition: CanHandle)\n                \n            \n\n\n            \n                \n                    Defined in packages/handlers/libs/requestHandlers/factories/model.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                CanHandle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         HandlerBuilderInterface\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateHandler\n                        \n                        \n                    \n                \n            \n            \n                \nupdateHandler(condition: CanHandle, handle: Handle)\n                \n            \n\n\n            \n                \n                    Defined in packages/handlers/libs/requestHandlers/factories/model.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                CanHandle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    handle\n                                    \n                                                Handle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         HandlerBuilderInterface\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        canHandle\n                                    \n                                \n                                \n                                    \n                                        canHandle:         CanHandle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CanHandle\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        handle\n                                    \n                                \n                                \n                                    \n                                        handle:         Handle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Handle\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { RequestHandler, HandlerInput } from 'ask-sdk-core'\nimport { Response } from 'ask-sdk-model'\n\nexport type CanHandleResponse = Promise | boolean\nexport type HandleResponse = Promise | Response\nexport type CanHandle = (handlerInput: HandlerInput) => CanHandleResponse\nexport type Handle = (handlerInput: HandlerInput) => Promise | Response\nexport interface HandlerBuilderInterface {\n    canHandle: CanHandle;\n    handle: Handle;\n    setHandleCondition(condition: CanHandle): HandlerBuilderInterface;\n    setHandle(handle: Handle): HandlerBuilderInterface;\n    updateHandler(condition: CanHandle, handle: Handle): HandlerBuilderInterface;\n    replaceHandler(handler: Partial): HandlerBuilderInterface;\n    getHandler(): RequestHandler;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HandlerFactory.html":{"url":"classes/HandlerFactory.html","title":"class - HandlerFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HandlerFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/isp/libs/handlers/fixtures.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/handlers/fixtures.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         HandlerBuilder\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { RequestHandler, HandlerInput } from 'ask-sdk-core'\nimport { Response } from 'ask-sdk-model'\n\nexport type CanHandle = (handlerInput: HandlerInput) => Promise | boolean\nexport type Handle = (handlerInput: HandlerInput) => Promise | Response\nexport class HandlerBuilder {\n    protected canHandleFilter: CanHandle = () => true\n    public canHandle: CanHandle = (handlerInput) => {\n        return this.canHandleFilter(handlerInput)\n    }\n    public handle: Handle = (handlerInput) => {\n        throw new Error(`Unsupported request: ${JSON.stringify(handlerInput)}`)\n    }\n    public setHandleCondition (condition: CanHandle): this {\n        this.canHandleFilter = condition\n        return this\n    }\n    public setHandle (handle: Handle): this {\n        this.handle = handle\n        return this\n    }\n    public updateHandler (condition: CanHandle, handle: Handle): this {\n        this.setHandle(handle)\n        this.setHandleCondition(condition)\n        return this\n    }\n    public replaceHandler (handler: Partial): this {\n        if (handler.canHandle) this.setHandleCondition(handler.canHandle)\n        if (handler.handle) this.setHandle(handler.handle)\n        return this\n    }\n    public getHandler (): RequestHandler {\n        return {\n            canHandle: this.canHandle,\n            handle: this.handle\n        }\n    }\n}\nexport class HandlerFactory {\n    public static init () {\n        const builder = new HandlerBuilder()\n        return builder\n    }\n}\nexport default HandlerFactory\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HandlerFactory-1.html":{"url":"classes/HandlerFactory-1.html","title":"class - HandlerFactory-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HandlerFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/handlers/libs/requestHandlers/factories/index.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    init(type: string, intentName?: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/handlers/libs/requestHandlers/factories/index.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    intentName\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         HandlerBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import HandlerBuilder from './Base'\nimport IntentHandlerBuilder from './Intent'\nimport LaunchRequestBuilder from './LaunchRequest'\nexport * from './Base'\nexport * from './Intent'\nexport * from './model'\n\nexport class IntentHandlerFactory {\n    public static init (intentName?: string): IntentHandlerBuilder {\n        if (!intentName) throw new Error('intentName is required')\n        return new IntentHandlerBuilder(intentName)\n    }\n}\n\nexport class HandlerFactory {\n    public static init (type: string, intentName?: string): HandlerBuilder {\n        if (type === 'IntentRequest') {\n            return IntentHandlerFactory.init(intentName)\n        }\n        return new HandlerBuilder()\n    }\n}\n\nexport class LaunchRequestFactory {\n    public static init (): HandlerBuilder {\n        return new LaunchRequestBuilder()\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HandlerHelpers.html":{"url":"interfaces/HandlerHelpers.html","title":"interface - HandlerHelpers","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  HandlerHelpers\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/router/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        stateManager\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        stateManager\n                                    \n                                \n                                \n                                    \n                                        stateManager:         StateManager\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateManager\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HandlerInput } from 'ask-sdk'\nimport { Response, Request\n} from 'ask-sdk-model' // 'ask-sdk-core/node_modules/ask-sdk-model'\nimport { StateManager, State } from '@ask-utils/situation'\n\n/**\n * Router for ASK SDK v2\n */\nexport interface Situation {\n    state?: SituationState;\n    custom?: (input: HandlerInput) => boolean | Promise;\n    shouldEndSession?: boolean;\n}\n\ninterface SituationState {\n    current?: string;\n    next?: string;\n}\n\nexport interface HandlerHelpers {\n    stateManager: StateManager;\n}\nexport type RouterHandler = (handlerInput: HandlerInput, helpers: HandlerHelpers) => Response | Promise\n\nexport interface Router {\n    requestType: Request['type'];\n    intentName?: string;\n    situation?: Situation;\n    handler: RouterHandler;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HandlerInputFactory.html":{"url":"classes/HandlerInputFactory.html","title":"class - HandlerInputFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HandlerInputFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/test/libs/HandlerInput/HandlerInputFactory.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Optional\n                                apiClient\n                            \n                            \n                                    Protected\n                                    Optional\n                                persistenceAdapter\n                            \n                            \n                                    Protected\n                                RequestEnvelopeFactory\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                create\n                            \n                            \n                                    Private\n                                getServiceClientFactory\n                            \n                            \n                                    Public\n                                setApiClient\n                            \n                            \n                                    Public\n                                setPersistanceAdapter\n                            \n                            \n                                    Public\n                                updateRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(requestEnvelopeFactory: RequestEnvelopeFactory)\n                    \n                \n                        \n                            \n                                Defined in packages/test/libs/HandlerInput/HandlerInputFactory.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        requestEnvelopeFactory\n                                                  \n                                                        \n                                                                        RequestEnvelopeFactory\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Optional\n                            apiClient\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ApiClient\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/test/libs/HandlerInput/HandlerInputFactory.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Optional\n                            persistenceAdapter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     PersistenceAdapter\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/test/libs/HandlerInput/HandlerInputFactory.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            RequestEnvelopeFactory\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RequestEnvelopeFactory\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/test/libs/HandlerInput/HandlerInputFactory.ts:19\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(context?: any)\n                \n            \n\n\n            \n                \n                    Defined in packages/test/libs/HandlerInput/HandlerInputFactory.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     HandlerInput\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getServiceClientFactory\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getServiceClientFactory()\n                \n            \n\n\n            \n                \n                    Defined in packages/test/libs/HandlerInput/HandlerInputFactory.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ServiceClientFactory | undefined\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setApiClient\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setApiClient(client: ApiClient)\n                \n            \n\n\n            \n                \n                    Defined in packages/test/libs/HandlerInput/HandlerInputFactory.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    client\n                                    \n                                                ApiClient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setPersistanceAdapter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setPersistanceAdapter(adapter: PersistenceAdapter)\n                \n            \n\n\n            \n                \n                    Defined in packages/test/libs/HandlerInput/HandlerInputFactory.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    adapter\n                                    \n                                            PersistenceAdapter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateRequest(requestEnvelope: RequestEnvelope)\n                \n            \n\n\n            \n                \n                    Defined in packages/test/libs/HandlerInput/HandlerInputFactory.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    requestEnvelope\n                                    \n                                            RequestEnvelope\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n    HandlerInput, AttributesManagerFactory, ResponseFactory, PersistenceAdapter\n} from 'ask-sdk-core'\nimport {\n    services as coreService,\n} from 'ask-sdk-model' //'ask-sdk-model' // 'ask-sdk-core/node_modules/ask-sdk-model'\nimport {\n    RequestEnvelope\n    // services\n} from 'ask-sdk-model'\nimport { RequestEnvelopeFactory } from '../RequestEnvelopeFactory';\n\nimport ServiceClientFactory = coreService.ServiceClientFactory // services.ServiceClientFactory;\nimport ApiClient = coreService.ApiClient;\n\nexport class HandlerInputFactory {\n    protected RequestEnvelopeFactory: RequestEnvelopeFactory;\n    protected persistenceAdapter?: PersistenceAdapter;\n    protected apiClient?: ApiClient;\n    public constructor(requestEnvelopeFactory: RequestEnvelopeFactory) {\n        this.RequestEnvelopeFactory = requestEnvelopeFactory\n    }\n\n    public setPersistanceAdapter (adapter: PersistenceAdapter): this {\n        this.persistenceAdapter = adapter\n        return this\n    }\n    public setApiClient (client: ApiClient): this {\n        this.apiClient = client\n        return this\n    }\n    public updateRequest (requestEnvelope: RequestEnvelope): this {\n        const {\n            request,\n            session,\n            context,\n        } = requestEnvelope\n        this.RequestEnvelopeFactory.request.putRequest(request)\n        if (session) this.RequestEnvelopeFactory.session.putSession(session)\n        this.RequestEnvelopeFactory.context.putContext(context)\n        return this\n    }\n    private getServiceClientFactory (): ServiceClientFactory | undefined {\n        const { apiClient } = this\n        const requestEnvelope = this.RequestEnvelopeFactory.getRequest()\n        const { apiAccessToken, apiEndpoint } = requestEnvelope.context.System\n        if (!apiClient || !apiAccessToken) return undefined\n        return new ServiceClientFactory({\n            apiClient: apiClient,\n            apiEndpoint: apiEndpoint,\n            authorizationValue: apiAccessToken\n        })\n    }\n    public create (context?: any): HandlerInput {\n        const requestEnvelope = this.RequestEnvelopeFactory.getRequest()\n        const input: HandlerInput = {\n            requestEnvelope,\n            context,\n            attributesManager: AttributesManagerFactory.init({\n                requestEnvelope,\n                persistenceAdapter: this.persistenceAdapter\n            }),\n            responseBuilder: ResponseFactory.init(),\n            serviceClientFactory: this.getServiceClientFactory()\n        }\n        return input\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ISPContentBuilder.html":{"url":"classes/ISPContentBuilder.html","title":"class - ISPContentBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ISPContentBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/isp/libs/contentBuilders/base.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ContentBuilder\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Optional\n                                product\n                            \n                            \n                                    Protected\n                                    Optional\n                                productName\n                            \n                            \n                                    Protected\n                                contents\n                            \n                            \n                                    Protected\n                                locale\n                            \n                            \n                                    Protected\n                                responseBuilder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getCanNotBuyTheProductResponse\n                            \n                            \n                                    Public\n                                getEntitledProductResponse\n                            \n                            \n                                    Protected\n                                getProduct\n                            \n                            \n                                    Protected\n                                getProductName\n                            \n                            \n                                    Private\n                                getProductNotFoundResponse\n                            \n                            \n                                    Private\n                                getProductsNotFoundResponse\n                            \n                            \n                                    Private\n                                getUnSupportedISPResponse\n                            \n                            \n                                    Public\n                                setCanNotBuyTheProductResponse\n                            \n                            \n                                    Public\n                                setEntitledProductResponse\n                            \n                            \n                                    Public\n                                setProduct\n                            \n                            \n                                    Public\n                                setProductName\n                            \n                            \n                                    Public\n                                setProductNotFoundResponse\n                            \n                            \n                                    Public\n                                setProductsNotFoundResponse\n                            \n                            \n                                    Public\n                                setUnSupportedISPResponse\n                            \n                            \n                                    Public\n                                getResponse\n                            \n                            \n                                    Protected\n                                isJP\n                            \n                            \n                                    Public\n                                putDirective\n                            \n                            \n                                    Public\n                                putDirectives\n                            \n                            \n                                    Public\n                                putRepromptText\n                            \n                            \n                                    Public\n                                putSpeechText\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(locale: string, responseBuilder: ResponseBuilder, productName?: string, product?: InSkillProduct)\n                    \n                \n                        \n                            \n                                Defined in packages/isp/libs/contentBuilders/base.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        locale\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        responseBuilder\n                                                  \n                                                        \n                                                                        ResponseBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        productName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        product\n                                                  \n                                                        \n                                                                        InSkillProduct\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Optional\n                            product\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         InSkillProduct\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/isp/libs/contentBuilders/base.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Optional\n                            productName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/isp/libs/contentBuilders/base.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            contents\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ResponseContent\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         ContentBuilder\n\n                                \n                            \n                        \n                            \n                                    Defined in         ContentBuilder:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            locale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ContentBuilder\n\n                                \n                            \n                        \n                            \n                                    Defined in         ContentBuilder:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            responseBuilder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ResponseBuilder\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ContentBuilder\n\n                                \n                            \n                        \n                            \n                                    Defined in         ContentBuilder:10\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getCanNotBuyTheProductResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCanNotBuyTheProductResponse()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/base.ts:146\n                \n            \n\n\n            \n                \n                    If product not found\n\n\n                    \n                        Returns :         ResponseContent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getEntitledProductResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getEntitledProductResponse()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/base.ts:165\n                \n            \n\n\n            \n                \n                    If product already purchased\n\n\n                    \n                        Returns :         ResponseContent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getProduct\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getProduct()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/base.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         InSkillProduct\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getProductName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getProductName()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/base.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getProductNotFoundResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getProductNotFoundResponse()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/base.ts:117\n                \n            \n\n\n            \n                \n                    Product does not found response\n\n\n                    \n                        Returns :         ResponseContent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getProductsNotFoundResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getProductsNotFoundResponse()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/base.ts:95\n                \n            \n\n\n            \n                \n                    Product does not found response\n\n\n                    \n                        Returns :         ResponseContent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getUnSupportedISPResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUnSupportedISPResponse()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/base.ts:60\n                \n            \n\n\n            \n                \n                    If the device or account does not supports ISP\n\n\n                    \n                        Returns :         ResponseContent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setCanNotBuyTheProductResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setCanNotBuyTheProductResponse()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/base.ts:158\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setEntitledProductResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setEntitledProductResponse()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/base.ts:177\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setProduct\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setProduct(product: InSkillProduct)\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/base.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    product\n                                    \n                                                InSkillProduct\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setProductName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setProductName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/base.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setProductNotFoundResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setProductNotFoundResponse()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/base.ts:139\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setProductsNotFoundResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setProductsNotFoundResponse()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/base.ts:110\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setUnSupportedISPResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setUnSupportedISPResponse()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/base.ts:88\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getResponse()\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:43\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Response\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isJP\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isJP()\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:16\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putDirective\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putDirective(directive: Directive)\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:35\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    directive\n                                    \n                                                Directive\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putDirectives\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putDirectives(directives: Directive[])\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    directives\n                                    \n                                            Directive[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putRepromptText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putRepromptText(text: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:23\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putSpeechText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putSpeechText(text: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { services, Response, Directive } from 'ask-sdk-model'\nimport { ResponseBuilder } from 'ask-sdk-core'\n\nimport InSkillProduct = services.monetization.InSkillProduct\n\nexport interface ResponseContent {\n    speechText?: string;\n    repromptText?: string;\n    directive?: Directive;\n}\n\nexport class ContentBuilder {\n    protected locale: string\n    protected responseBuilder: ResponseBuilder\n    protected contents: ResponseContent = {}\n    public constructor (locale: string, responseBuilder: ResponseBuilder) {\n        this.locale = locale\n        this.responseBuilder = responseBuilder\n    }\n    protected isJP (): boolean {\n        return /^ja/.test(this.locale)\n    }\n    public getResponse (): Response {\n        const { speechText, repromptText, directive } = this.contents\n        if (speechText) this.responseBuilder.speak(speechText)\n        if (repromptText) this.responseBuilder.reprompt(repromptText)\n        if (directive) this.responseBuilder.addDirective(directive)\n        return this.responseBuilder.getResponse()\n    }\n}\n\nexport class ISPContentBuilder extends ContentBuilder {\n    protected productName?: string\n    protected product?: InSkillProduct\n    public constructor (locale: string, responseBuilder: ResponseBuilder, productName?: string, product?: InSkillProduct) {\n        super(locale, responseBuilder)\n        if (productName) this.productName = productName\n        if (product) this.product = product\n    }\n    public setProduct (product: InSkillProduct): this {\n        this.product = product\n        return this\n    }\n    protected getProduct (): InSkillProduct {\n        const { product } = this\n        if (!product) throw new Error('No products')\n        return product\n    }\n    public setProductName (name: string): this {\n        this.productName = name\n        return this\n    }\n    protected getProductName (): string {\n        if (!this.productName) throw new Error('No product name')\n        return this.productName\n    }\n    /**\n   * If the device or account does not supports ISP\n   */\n    private getUnSupportedISPResponse (): ResponseContent {\n        if (this.isJP()) {\n            return {\n                speechText: [\n                    'すみません。',\n                    'お使いのデバイス・アプリでは、スキル内課金を利用することができません。',\n                    '別のデバイスを利用するか、アレクサアプリから設定を確認してもう一度お試しください。',\n                    '次はなにをしますか？',\n                    'スキルを終了して、アプリの設定を確認したい場合は「終了」と話しかけてください。'\n                ].join(' '),\n                repromptText: [\n                    '次はなにをしますか？',\n                    'スキルを終了して、アプリの設定を確認したい場合は「終了」と話しかけてください。'\n                ].join(' ')\n            }\n        }\n        return {\n            speechText: [\n                'Sorry, you can not purchase by the device.',\n                'Please check your device and application settings by the Alexa app.',\n                'What will you do the next?'\n            ].join(' '),\n            repromptText: [\n                'What will you do the next?',\n                'If you want to stop the skill, please say me \"STOP\".'\n            ].join(' ')\n        }\n    }\n    public setUnSupportedISPResponse (): this {\n        this.contents = this.getUnSupportedISPResponse()\n        return this\n    }\n    /**\n   * Product does not found response\n   */\n    private getProductsNotFoundResponse (): ResponseContent {\n        if (this.isJP()) {\n            return {\n                speechText: [\n                    `すみません。商品が見つかりませんでした。`,\n                    '他に何をしますか？'\n                ].join(' '),\n                repromptText: '他に何をしますか？'\n            }\n        }\n        return {\n            speechText: `I can't find any products you can buy. What do you want to do next?`,\n            repromptText: `What do you want to do next?`\n        }\n    }\n    public setProductsNotFoundResponse (): this {\n        this.contents = this.getProductsNotFoundResponse()\n        return this\n    }\n    /**\n   * Product does not found response\n   */\n    private getProductNotFoundResponse (): ResponseContent {\n        try {\n            const productName = this.getProductName()\n            if (this.isJP()) {\n                return {\n                    speechText: [\n                        `${productName}を購入することができます。`,\n                        `詳細を聞きたい場合は「${productName}について教えて」、`,\n                        `購入する場合は「${productName}を購入」と話しかけてください。`,\n                        'どうしますか？'\n                    ].join(' '),\n                    repromptText: '購入・詳細、どちらにしますか？'\n                }\n            }\n            return {\n                speechText: `${productName}. what item do you want?`,\n                repromptText: `${productName}. what item do you want?`\n            }\n        } catch (e) {\n            return this.getProductsNotFoundResponse()\n        }\n    }\n    public setProductNotFoundResponse (): this {\n        this.contents = this.getProductNotFoundResponse()\n        return this\n    }\n    /**\n   * If product not found\n   */\n    private getCanNotBuyTheProductResponse (): ResponseContent {\n        if (this.isJP()) {\n            return {\n                speechText: 'すみません。その商品は現在購入できません。他に何をしますか？',\n                repromptText: '他に何をしますか？'\n            }\n        }\n        return {\n            speechText: \"I don't think we have a product by that name.  Can you try again?\",\n            repromptText: \"I didn't catch that. Can you try again?\"\n        }\n    }\n    public setCanNotBuyTheProductResponse (): this {\n        this.contents = this.getCanNotBuyTheProductResponse()\n        return this\n    }\n    /**\n   * If product already purchased\n   */\n    public getEntitledProductResponse (): ResponseContent {\n        if (this.isJP()) {\n            return {\n                speechText: 'その商品はすでに購入済の様子です。他に何をしますか？',\n                repromptText: '他に何をしますか？'\n            }\n        }\n        return {\n            speechText: 'You already entitled the product. What will you do for next?',\n            repromptText: 'What will you do for next?'\n        }\n    }\n    public setEntitledProductResponse (): this {\n        this.contents = this.getEntitledProductResponse()\n        return this\n    }\n}\nexport default ISPContentBuilder\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ISPProductClient.html":{"url":"classes/ISPProductClient.html","title":"class - ISPProductClient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ISPProductClient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/isp/libs/client.ts\n        \n\n\n            \n                Extends\n            \n            \n                        APIClient\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                attributeManager\n                            \n                            \n                                    Private\n                                cacheUsage\n                            \n                            \n                                    Private\n                                products\n                            \n                            \n                                    Private\n                                endpoint\n                            \n                            \n                                    Private\n                                isDebug\n                            \n                            \n                                    Private\n                                locale\n                            \n                            \n                                    Private\n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                disabledCache\n                            \n                            \n                                    Public\n                                enableCache\n                            \n                            \n                                    Public\n                                    Async\n                                fetchLists\n                            \n                            \n                                    Public\n                                    Async\n                                findProductById\n                            \n                            \n                                    Public\n                                    Async\n                                findProductByName\n                            \n                            \n                                    Public\n                                    Async\n                                findProductByNo\n                            \n                            \n                                    Private\n                                getCachedProducts\n                            \n                            \n                                    Public\n                                getCacheStatus\n                            \n                            \n                                    Public\n                                    Async\n                                getProductById\n                            \n                            \n                                    Public\n                                    Async\n                                getProducts\n                            \n                            \n                                    Private\n                                    Async\n                                hasProducts\n                            \n                            \n                                    Public\n                                    Async\n                                searchProduct\n                            \n                            \n                                    Private\n                                createAxiosRequestObject\n                            \n                            \n                                    Protected\n                                    Async\n                                get\n                            \n                            \n                                    Public\n                                getProduct\n                            \n                            \n                                    Private\n                                getURL\n                            \n                            \n                                    Public\n                                listProducts\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(handlerInput: HandlerInput, isDebug: boolean)\n                    \n                \n                        \n                            \n                                Defined in packages/isp/libs/client.ts:54\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        handlerInput\n                                                  \n                                                        \n                                                                    HandlerInput\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        isDebug\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            attributeManager\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AttributesManager\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/isp/libs/client.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cacheUsage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"enable\" | \"disable\"\n\n                        \n                    \n                    \n                        \n                            Default value : 'enable'\n                        \n                    \n                        \n                            \n                                    Defined in packages/isp/libs/client.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            products\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         InskillProducts\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in packages/isp/libs/client.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            endpoint\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         APIClient\n\n                                \n                            \n                        \n                            \n                                    Defined in         APIClient:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isDebug\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         APIClient\n\n                                \n                            \n                        \n                            \n                                    Defined in         APIClient:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            locale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         APIClient\n\n                                \n                            \n                        \n                            \n                                    Defined in         APIClient:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         APIClient\n\n                                \n                            \n                        \n                            \n                                    Defined in         APIClient:9\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            disabledCache\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    disabledCache()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/client.ts:66\n                \n            \n\n\n            \n                \n                    Disallow to use the session attributes item at first\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            enableCache\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    enableCache()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/client.ts:73\n                \n            \n\n\n            \n                \n                    Allow to use the session attributes item at first\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            fetchLists\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchLists()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/client.ts:100\n                \n            \n\n\n            \n                \n                    Fetch the ISP API.\nIf cacheUsage is enabled, it will return from session attributes at first\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            findProductById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findProductById(productId: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/client.ts:152\n                \n            \n\n\n            \n                \n                    Find product by the specific id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    productId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        product id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            findProductByName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findProductByName(productName: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/client.ts:163\n                \n            \n\n\n            \n                \n                    Find product by the product name\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    productName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        product name\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            findProductByNo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findProductByNo(userInputNo: number)\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/client.ts:143\n                \n            \n\n\n            \n                \n                    Find product by the list number\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    userInputNo\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        list number\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getCachedProducts\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCachedProducts()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/client.ts:89\n                \n            \n\n\n            \n                \n                    get product from session attributes\n\n\n                    \n                        Returns :         InskillProducts\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getCacheStatus\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCacheStatus()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/client.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     \"enable\" | \"disable\"\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getProductById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getProductById(productId: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/client.ts:120\n                \n            \n\n\n            \n                \n                    get product by product id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getProducts\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getProducts()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/client.ts:135\n                \n            \n\n\n            \n                \n                    get products\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            hasProducts\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasProducts()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/client.ts:81\n                \n            \n\n\n            \n                \n                    Check product avaliable status\nIf products is empty, try to fetch at once\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            searchProduct\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    searchProduct(condition: literal type)\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/client.ts:174\n                \n            \n\n\n            \n                \n                    Find product by several condition\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : string, userInputNo?: number, productId?: string} search conditions\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createAxiosRequestObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createAxiosRequestObject(productId?: string)\n                \n            \n\n\n            \n                \n                    Inherited from         APIClient\n\n                \n            \n            \n                \n                        Defined in         APIClient:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productId\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     AxiosRequestConfig\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Async\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(productId?: string)\n                \n            \n\n\n            \n                \n                    Inherited from         APIClient\n\n                \n            \n            \n                \n                        Defined in         APIClient:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productId\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getProduct\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getProduct(productId: string)\n                \n            \n\n\n            \n                \n                    Inherited from         APIClient\n\n                \n            \n            \n                \n                        Defined in         APIClient:46\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getURL\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getURL(productId?: string)\n                \n            \n\n\n            \n                \n                    Inherited from         APIClient\n\n                \n            \n            \n                \n                        Defined in         APIClient:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productId\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            listProducts\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    listProducts()\n                \n            \n\n\n            \n                \n                    Inherited from         APIClient\n\n                \n            \n            \n                \n                        Defined in         APIClient:43\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import axios, { AxiosRequestConfig } from 'axios'\nimport { getLocale, getApiAccessToken, HandlerInput, AttributesManager } from 'ask-sdk-core'\nimport { RequestEnvelope, services } from 'ask-sdk-model'\nimport InSkillProductsResponse = services.monetization.InSkillProductsResponse\nimport InSkillProduct = services.monetization.InSkillProduct\ntype InskillProducts = InSkillProduct[]\n\nexport class APIClient {\n    private token: string\n    private locale: string\n    private endpoint: string\n    private isDebug: boolean\n    public constructor (requestEnvelope: RequestEnvelope, isDebug: boolean = true) {\n        this.token = getApiAccessToken(requestEnvelope)\n        this.locale = getLocale(requestEnvelope)\n        this.endpoint = requestEnvelope.context.System.apiEndpoint\n        this.isDebug = isDebug\n    }\n    private getURL (productId?: string): string {\n        const url = `${this.endpoint}/v1/users/~current/skills/~current/inSkillProducts`\n        if (!productId) return url\n        return `${url}/productId`\n    }\n    private createAxiosRequestObject (productId?: string): AxiosRequestConfig {\n        return {\n            method: 'GET',\n            url: this.getURL(productId),\n            headers: {\n                'Content-type': 'application/json',\n                'Accept-Language': this.locale,\n                'Authorization': `Bearer ${this.token}`\n            }\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    protected async get (productId?: string): Promise {\n        const param = this.createAxiosRequestObject(productId)\n        if (this.isDebug) console.log('[Get ISP product] %j', param)\n        const { data } = await axios(param)\n        if (this.isDebug) console.log('[Get ISP product] %j', data)\n        return data\n    }\n    public listProducts (): Promise {\n        return this.get()\n    }\n    public getProduct (productId: string): Promise {\n        return this.get(productId)\n    }\n}\n\nexport class ISPProductClient extends APIClient {\n    private attributeManager: AttributesManager\n    private cacheUsage: 'enable' | 'disable' = 'enable'\n    private products: InskillProducts = []\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    constructor (handlerInput: HandlerInput, isDebug: boolean = true) {\n        super(handlerInput.requestEnvelope, isDebug)\n        this.attributeManager = handlerInput.attributesManager\n    }\n    public getCacheStatus (): 'enable' | 'disable' {\n        return this.cacheUsage\n    }\n    /**\n   * Disallow to use the session attributes item at first\n   **/\n    public disabledCache (): this {\n        this.cacheUsage = 'disable'\n        return this\n    }\n    /**\n   * Allow to use the session attributes item at first\n   **/\n    public enableCache (): this {\n        this.cacheUsage = 'enable'\n        return this\n    }\n    /**\n   * Check product avaliable status\n   * If products is empty, try to fetch at once\n   */\n    private async hasProducts (): Promise {\n        if (!this.products || this.products.length  0) {\n            this.products = products\n        }\n        return this.products\n    }\n    /**\n   * Fetch the ISP API.\n   * If cacheUsage is enabled, it will return from session attributes at first\n   */\n    public async fetchLists (): Promise {\n        const atts = this.attributeManager.getSessionAttributes()\n        if (this.cacheUsage === 'enable') {\n            const cachedProducts = this.getCachedProducts()\n            if (cachedProducts && cachedProducts.length > 0) {\n                return\n            }\n        }\n        const data = await this.get()\n        const products = data.inSkillProducts\n        this.products = products\n        this.attributeManager.setSessionAttributes({\n            ...atts,\n            products\n        })\n    }\n    /**\n   * get product by product id\n   * @param productId {string}\n   */\n    public async getProductById (productId: string): Promise {\n        if (this.cacheUsage === 'enable') {\n            const cachedProducts = this.getCachedProducts()\n            if (cachedProducts && cachedProducts.length > 0) {\n                // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n                const item = cachedProducts.find(cache => cache.productId === productId)\n                if (item) return item\n            }\n        }\n        const product = await this.get(productId)\n        return product\n    }\n    /**\n   * get products\n   */\n    public async getProducts (): Promise {\n        await this.fetchLists()\n        return this.products\n    }\n    /**\n   * Find product by the list number\n   * @param userInputNo {number} list number\n   */\n    public async findProductByNo (userInputNo: number): Promise {\n        if (!await this.hasProducts()) return null\n        const target = this.products[userInputNo]\n        return target\n    }\n    /**\n   * Find product by the specific id\n   * @param productId {string} product id\n   */\n    public async findProductById (productId: string): Promise {\n        if (!await this.hasProducts()) return null\n        // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n        const product = this.products.find(product => product.productId === productId)\n        if (!product) return null\n        return product\n    }\n    /**\n   * Find product by the product name\n   * @param productName {string} product name\n   */\n    public async findProductByName (productName: string): Promise {\n        if (!await this.hasProducts()) return null\n        // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n        const product = this.products.find(product => product.name === productName)\n        if (!product) return null\n        return product\n    }\n    /**\n   * Find product by several condition\n   * @param condition {productName?: string, userInputNo?: number, productId?: string} search conditions\n   */\n    public async searchProduct (condition: {productName?: string; userInputNo?: number; productId?: string}): Promise {\n        if (!condition.productName && !condition.userInputNo && !condition.productId) throw new Error('No search condition')\n        if (condition.userInputNo) return this.findProductByNo(condition.userInputNo)\n        if (condition.productName) return this.findProductByName(condition.productName)\n        if (condition.productId) return this.findProductById(condition.productId)\n        throw new Error('Invalid search condition')\n    }\n}\nexport default ISPProductClient\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InitialState.html":{"url":"interfaces/InitialState.html","title":"interface - InitialState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  InitialState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/situationManager/libs/StateManager.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        current\n                                \n                                \n                                            Optional\n                                        next\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        current\n                                    \n                                \n                                \n                                    \n                                        current:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        next\n                                    \n                                \n                                \n                                    \n                                        next:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n    AttributesManager\n} from 'ask-sdk-core'\n\nexport type State = string\nexport interface SkillState {\n    current: T | '';\n    next?: T[];\n    before?: T[];\n}\nexport interface InitialState {\n    current?: T;\n    next?: T;\n}\nexport class StateManager {\n    public stateKey: string = '__state'\n    private state: SkillState;\n    private readonly attributeManager: AttributesManager\n    public constructor (attributeManager: AttributesManager, initialState?: InitialState) {\n        this.attributeManager = attributeManager\n        this.state = {\n            current: initialState && initialState.current ? initialState.current : '',\n            next: initialState && initialState.next ? [initialState.next] : []\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    private isState (state: any): state is SkillState {\n        return state && state.current\n    }\n    private mergeSessionAttributes (): this {\n        const { state, stateKey, attributeManager } = this\n        const attributes = {\n            ...attributeManager.getSessionAttributes(),\n            [stateKey]: state\n        }\n        attributeManager.setSessionAttributes(attributes)\n        return this\n    }\n    public setState (current: T, next?: T[], before?: T[]): this {\n        this.state = {\n            current,\n            next,\n            before\n        }\n        this.mergeSessionAttributes()\n        return this\n    }\n\n    public getState (): SkillState {\n        const { stateKey, attributeManager } = this\n\n        const attributes = attributeManager.getSessionAttributes()\n        const targetState = attributes[stateKey]\n        if (!this.isState(targetState)) {\n            this.mergeSessionAttributes()\n            const retryAtt = attributeManager.getSessionAttributes()\n            return retryAtt[stateKey]\n        }\n        return targetState\n    }\n\n    public hasState (): boolean {\n        const state = this.getState()\n        if (!state) return false\n        return state.current !== ''\n    }\n\n    public getCurrentState (): T | '' {\n        const targetState = this.getState()\n        return targetState.current\n    }\n\n    public getNextState (): T[] {\n        const targetState = this.getState()\n        return targetState.next || []\n    }\n\n    public getBeforeState (): T[] {\n        const targetState = this.getState()\n        return targetState.before || []\n    }\n\n    public matchedCurrentState (state: T): boolean {\n        return this.getCurrentState() === state\n    }\n    public includesNextState (state: T): boolean {\n        return this.getNextState().includes(state)\n    }\n    public includesBeforeState (state: T): boolean {\n        return this.getBeforeState().includes(state)\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IntentHandlerBuilder.html":{"url":"classes/IntentHandlerBuilder.html","title":"class - IntentHandlerBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IntentHandlerBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/handlers/libs/requestHandlers/factories/Intent.ts\n        \n\n\n            \n                Extends\n            \n            \n                        HandlerBuilder\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                canHandle\n                            \n                            \n                                    Protected\n                                intentName\n                            \n                            \n                                    Public\n                                canHandle\n                            \n                            \n                                    Protected\n                                canHandleFilter\n                            \n                            \n                                    Public\n                                handle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getHandler\n                            \n                            \n                                    Public\n                                replaceHandler\n                            \n                            \n                                    Public\n                                setHandle\n                            \n                            \n                                    Public\n                                setHandleCondition\n                            \n                            \n                                    Public\n                                updateHandler\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(intentName: string)\n                    \n                \n                        \n                            \n                                Defined in packages/handlers/libs/requestHandlers/factories/Intent.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        intentName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            canHandle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CanHandle\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in packages/handlers/libs/requestHandlers/factories/Intent.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            intentName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/handlers/libs/requestHandlers/factories/Intent.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            canHandle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CanHandle\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         HandlerBuilder\n\n                                \n                            \n                        \n                            \n                                    Defined in         HandlerBuilder:8\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            canHandleFilter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CanHandle\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         HandlerBuilder\n\n                                \n                            \n                        \n                            \n                                    Defined in         HandlerBuilder:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            handle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Handle\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         HandlerBuilder\n\n                                \n                            \n                        \n                            \n                                    Defined in         HandlerBuilder:11\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getHandler\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getHandler()\n                \n            \n\n\n            \n                \n                    Inherited from         HandlerBuilder\n\n                \n            \n            \n                \n                        Defined in         HandlerBuilder:32\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     RequestHandler\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            replaceHandler\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    replaceHandler(handler: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         HandlerBuilder\n\n                \n            \n            \n                \n                        Defined in         HandlerBuilder:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    handler\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setHandle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setHandle(handle: Handle)\n                \n            \n\n\n            \n                \n                    Inherited from         HandlerBuilder\n\n                \n            \n            \n                \n                        Defined in         HandlerBuilder:18\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    handle\n                                    \n                                                Handle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setHandleCondition\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setHandleCondition(condition: CanHandle)\n                \n            \n\n\n            \n                \n                    Inherited from         HandlerBuilder\n\n                \n            \n            \n                \n                        Defined in         HandlerBuilder:14\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                CanHandle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateHandler\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateHandler(condition: CanHandle, handle: Handle)\n                \n            \n\n\n            \n                \n                    Inherited from         HandlerBuilder\n\n                \n            \n            \n                \n                        Defined in         HandlerBuilder:22\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                CanHandle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    handle\n                                    \n                                                Handle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { isMatchedIntent } from 'ask-utils'\nimport { HandlerBuilder } from './Base'\nimport {\n    CanHandle, CanHandleResponse\n} from './model'\n\nexport class IntentHandlerBuilder extends HandlerBuilder {\n    public constructor (intentName: string) {\n        super()\n        this.intentName = intentName\n    }\n    protected intentName: string\n    public canHandle: CanHandle = (handlerInput): CanHandleResponse => {\n        if (!isMatchedIntent(handlerInput, this.intentName)) return false\n        return this.canHandleFilter(handlerInput)\n    }\n}\nexport default IntentHandlerBuilder\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IntentHandlerFactory.html":{"url":"classes/IntentHandlerFactory.html","title":"class - IntentHandlerFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IntentHandlerFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/handlers/libs/requestHandlers/factories/index.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    init(intentName?: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/handlers/libs/requestHandlers/factories/index.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    intentName\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IntentHandlerBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import HandlerBuilder from './Base'\nimport IntentHandlerBuilder from './Intent'\nimport LaunchRequestBuilder from './LaunchRequest'\nexport * from './Base'\nexport * from './Intent'\nexport * from './model'\n\nexport class IntentHandlerFactory {\n    public static init (intentName?: string): IntentHandlerBuilder {\n        if (!intentName) throw new Error('intentName is required')\n        return new IntentHandlerBuilder(intentName)\n    }\n}\n\nexport class HandlerFactory {\n    public static init (type: string, intentName?: string): HandlerBuilder {\n        if (type === 'IntentRequest') {\n            return IntentHandlerFactory.init(intentName)\n        }\n        return new HandlerBuilder()\n    }\n}\n\nexport class LaunchRequestFactory {\n    public static init (): HandlerBuilder {\n        return new LaunchRequestBuilder()\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IntentRequestFactory.html":{"url":"classes/IntentRequestFactory.html","title":"class - IntentRequestFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IntentRequestFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/test/libs/request/IntentRequestFactory.ts\n        \n\n\n            \n                Extends\n            \n            \n                        RequestFactory\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                date\n                            \n                            \n                                    Protected\n                                locale\n                            \n                            \n                                    Protected\n                                request\n                            \n                            \n                                    Protected\n                                    Optional\n                                requestID\n                            \n                            \n                                    Protected\n                                requestType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                setDialogState\n                            \n                            \n                                    Public\n                                setIntent\n                            \n                            \n                                    Protected\n                                validateRequest\n                            \n                            \n                                    Private\n                                getLocale\n                            \n                            \n                                    Public\n                                getRequest\n                            \n                            \n                                    Private\n                                getRequestId\n                            \n                            \n                                    Private\n                                getRequestType\n                            \n                            \n                                    Private\n                                getTimestamp\n                            \n                            \n                                    Public\n                                putRequest\n                            \n                            \n                                    Public\n                                setLocale\n                            \n                            \n                                    Public\n                                setRequestedDate\n                            \n                            \n                                    Public\n                                setRequestId\n                            \n                            \n                                    Public\n                                setRequestType\n                            \n                            \n                                    Protected\n                                updateRequest\n                            \n                            \n                                    Protected\n                                validateRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(locale: string)\n                    \n                \n                        \n                            \n                                Defined in packages/test/libs/request/IntentRequestFactory.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        locale\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            date\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                            \n                                \n                                    Inherited from         RequestFactory\n\n                                \n                            \n                        \n                            \n                                    Defined in         RequestFactory:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            locale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         RequestFactory\n\n                                \n                            \n                        \n                            \n                                    Defined in         RequestFactory:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            request\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Partial\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         RequestFactory\n\n                                \n                            \n                        \n                            \n                                    Defined in         RequestFactory:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Optional\n                            requestID\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         RequestFactory\n\n                                \n                            \n                        \n                            \n                                    Defined in         RequestFactory:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            requestType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         RequestFactory\n\n                                \n                            \n                        \n                            \n                                    Defined in         RequestFactory:8\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setDialogState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setDialogState(state: DialogState)\n                \n            \n\n\n            \n                \n                    Defined in packages/test/libs/request/IntentRequestFactory.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                DialogState\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setIntent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setIntent(intent: Intent)\n                \n            \n\n\n            \n                \n                    Defined in packages/test/libs/request/IntentRequestFactory.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    intent\n                                    \n                                            Intent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            validateRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateRequest()\n                \n            \n\n\n            \n                \n                    Defined in packages/test/libs/request/IntentRequestFactory.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getLocale\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getLocale()\n                \n            \n\n\n            \n                \n                    Inherited from         RequestFactory\n\n                \n            \n            \n                \n                        Defined in         RequestFactory:47\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getRequest()\n                \n            \n\n\n            \n                \n                    Inherited from         RequestFactory\n\n                \n            \n            \n                \n                        Defined in         RequestFactory:72\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Request\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getRequestId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getRequestId()\n                \n            \n\n\n            \n                \n                    Inherited from         RequestFactory\n\n                \n            \n            \n                \n                        Defined in         RequestFactory:29\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getRequestType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getRequestType()\n                \n            \n\n\n            \n                \n                    Inherited from         RequestFactory\n\n                \n            \n            \n                \n                        Defined in         RequestFactory:21\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getTimestamp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTimestamp()\n                \n            \n\n\n            \n                \n                    Inherited from         RequestFactory\n\n                \n            \n            \n                \n                        Defined in         RequestFactory:38\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putRequest(request: T)\n                \n            \n\n\n            \n                \n                    Inherited from         RequestFactory\n\n                \n            \n            \n                \n                        Defined in         RequestFactory:51\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setLocale\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setLocale(locale: string)\n                \n            \n\n\n            \n                \n                    Inherited from         RequestFactory\n\n                \n            \n            \n                \n                        Defined in         RequestFactory:43\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    locale\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setRequestedDate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setRequestedDate(date: Date)\n                \n            \n\n\n            \n                \n                    Inherited from         RequestFactory\n\n                \n            \n            \n                \n                        Defined in         RequestFactory:34\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setRequestId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setRequestId(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         RequestFactory\n\n                \n            \n            \n                \n                        Defined in         RequestFactory:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setRequestType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setRequestType(type)\n                \n            \n\n\n            \n                \n                    Inherited from         RequestFactory\n\n                \n            \n            \n                \n                        Defined in         RequestFactory:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateRequest(param?: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         RequestFactory\n\n                \n            \n            \n                \n                        Defined in         RequestFactory:55\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    param\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            validateRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateRequest()\n                \n            \n\n\n            \n                \n                    Inherited from         RequestFactory\n\n                \n            \n            \n                \n                        Defined in         RequestFactory:69\n\n                \n            \n\n\n            \n                \n                    IF the request type has several required value, should overwrite it to test them.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n    RequestFactory\n} from './RequestFactory'\nimport {\n    Intent,\n    IntentRequest,\n    DialogState\n} from 'ask-sdk-model' // 'ask-sdk-core/node_modules/ask-sdk-model'\n\nexport class InvalidIntentRequestException extends Error {\n    public message = 'Invalid IntentRequest object'\n}\n\nexport class IntentRequestFactory extends RequestFactory {\n    public constructor (locale: string = 'en-US') {\n        super('IntentRequest', locale)\n    }\n\n    public setIntent (intent: Intent): this {\n        this.updateRequest({\n            intent\n        })\n        return this\n    }\n\n    public setDialogState (state: DialogState): this {\n        this.updateRequest({\n            dialogState: state\n        })\n        return this\n    }\n\n    protected validateRequest (): void {\n        if (!this.request.intent) throw new InvalidIntentRequestException()\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidIntentRequestException.html":{"url":"classes/InvalidIntentRequestException.html","title":"class - InvalidIntentRequestException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidIntentRequestException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/test/libs/request/IntentRequestFactory.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Error\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                message\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Invalid IntentRequest object'\n                        \n                    \n                        \n                            \n                                    Defined in packages/test/libs/request/IntentRequestFactory.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n    RequestFactory\n} from './RequestFactory'\nimport {\n    Intent,\n    IntentRequest,\n    DialogState\n} from 'ask-sdk-model' // 'ask-sdk-core/node_modules/ask-sdk-model'\n\nexport class InvalidIntentRequestException extends Error {\n    public message = 'Invalid IntentRequest object'\n}\n\nexport class IntentRequestFactory extends RequestFactory {\n    public constructor (locale: string = 'en-US') {\n        super('IntentRequest', locale)\n    }\n\n    public setIntent (intent: Intent): this {\n        this.updateRequest({\n            intent\n        })\n        return this\n    }\n\n    public setDialogState (state: DialogState): this {\n        this.updateRequest({\n            dialogState: state\n        })\n        return this\n    }\n\n    protected validateRequest (): void {\n        if (!this.request.intent) throw new InvalidIntentRequestException()\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LaunchRequestFactory.html":{"url":"classes/LaunchRequestFactory.html","title":"class - LaunchRequestFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LaunchRequestFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/test/libs/request/LaunchRequestFactory.ts\n        \n\n\n            \n                Extends\n            \n            \n                        RequestFactory\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                date\n                            \n                            \n                                    Protected\n                                locale\n                            \n                            \n                                    Protected\n                                request\n                            \n                            \n                                    Protected\n                                    Optional\n                                requestID\n                            \n                            \n                                    Protected\n                                requestType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                setTask\n                            \n                            \n                                    Private\n                                getLocale\n                            \n                            \n                                    Public\n                                getRequest\n                            \n                            \n                                    Private\n                                getRequestId\n                            \n                            \n                                    Private\n                                getRequestType\n                            \n                            \n                                    Private\n                                getTimestamp\n                            \n                            \n                                    Public\n                                putRequest\n                            \n                            \n                                    Public\n                                setLocale\n                            \n                            \n                                    Public\n                                setRequestedDate\n                            \n                            \n                                    Public\n                                setRequestId\n                            \n                            \n                                    Public\n                                setRequestType\n                            \n                            \n                                    Protected\n                                updateRequest\n                            \n                            \n                                    Protected\n                                validateRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(locale: string)\n                    \n                \n                        \n                            \n                                Defined in packages/test/libs/request/LaunchRequestFactory.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        locale\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            date\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                            \n                                \n                                    Inherited from         RequestFactory\n\n                                \n                            \n                        \n                            \n                                    Defined in         RequestFactory:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            locale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         RequestFactory\n\n                                \n                            \n                        \n                            \n                                    Defined in         RequestFactory:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            request\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Partial\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         RequestFactory\n\n                                \n                            \n                        \n                            \n                                    Defined in         RequestFactory:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Optional\n                            requestID\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         RequestFactory\n\n                                \n                            \n                        \n                            \n                                    Defined in         RequestFactory:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            requestType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         RequestFactory\n\n                                \n                            \n                        \n                            \n                                    Defined in         RequestFactory:8\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setTask\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setTask(task: Task)\n                \n            \n\n\n            \n                \n                    Defined in packages/test/libs/request/LaunchRequestFactory.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                            Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getLocale\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getLocale()\n                \n            \n\n\n            \n                \n                    Inherited from         RequestFactory\n\n                \n            \n            \n                \n                        Defined in         RequestFactory:47\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getRequest()\n                \n            \n\n\n            \n                \n                    Inherited from         RequestFactory\n\n                \n            \n            \n                \n                        Defined in         RequestFactory:72\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Request\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getRequestId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getRequestId()\n                \n            \n\n\n            \n                \n                    Inherited from         RequestFactory\n\n                \n            \n            \n                \n                        Defined in         RequestFactory:29\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getRequestType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getRequestType()\n                \n            \n\n\n            \n                \n                    Inherited from         RequestFactory\n\n                \n            \n            \n                \n                        Defined in         RequestFactory:21\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getTimestamp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTimestamp()\n                \n            \n\n\n            \n                \n                    Inherited from         RequestFactory\n\n                \n            \n            \n                \n                        Defined in         RequestFactory:38\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putRequest(request: T)\n                \n            \n\n\n            \n                \n                    Inherited from         RequestFactory\n\n                \n            \n            \n                \n                        Defined in         RequestFactory:51\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setLocale\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setLocale(locale: string)\n                \n            \n\n\n            \n                \n                    Inherited from         RequestFactory\n\n                \n            \n            \n                \n                        Defined in         RequestFactory:43\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    locale\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setRequestedDate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setRequestedDate(date: Date)\n                \n            \n\n\n            \n                \n                    Inherited from         RequestFactory\n\n                \n            \n            \n                \n                        Defined in         RequestFactory:34\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setRequestId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setRequestId(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         RequestFactory\n\n                \n            \n            \n                \n                        Defined in         RequestFactory:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setRequestType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setRequestType(type)\n                \n            \n\n\n            \n                \n                    Inherited from         RequestFactory\n\n                \n            \n            \n                \n                        Defined in         RequestFactory:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateRequest(param?: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         RequestFactory\n\n                \n            \n            \n                \n                        Defined in         RequestFactory:55\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    param\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            validateRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateRequest()\n                \n            \n\n\n            \n                \n                    Inherited from         RequestFactory\n\n                \n            \n            \n                \n                        Defined in         RequestFactory:69\n\n                \n            \n\n\n            \n                \n                    IF the request type has several required value, should overwrite it to test them.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n    RequestFactory\n} from './RequestFactory'\nimport { LaunchRequest, Task } from 'ask-sdk-model' // 'ask-sdk-core/node_modules/ask-sdk-model'\n\nexport class LaunchRequestFactory extends RequestFactory {\n    public constructor (locale: string = 'en-US') {\n        super('LaunchRequest', locale)\n    }\n\n    public setTask (task: Task): this {\n        this.updateRequest({\n            task\n        })\n        return this\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LaunchRequestFactory-1.html":{"url":"classes/LaunchRequestFactory-1.html","title":"class - LaunchRequestFactory-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LaunchRequestFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/handlers/libs/requestHandlers/factories/index.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in packages/handlers/libs/requestHandlers/factories/index.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         HandlerBuilder\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import HandlerBuilder from './Base'\nimport IntentHandlerBuilder from './Intent'\nimport LaunchRequestBuilder from './LaunchRequest'\nexport * from './Base'\nexport * from './Intent'\nexport * from './model'\n\nexport class IntentHandlerFactory {\n    public static init (intentName?: string): IntentHandlerBuilder {\n        if (!intentName) throw new Error('intentName is required')\n        return new IntentHandlerBuilder(intentName)\n    }\n}\n\nexport class HandlerFactory {\n    public static init (type: string, intentName?: string): HandlerBuilder {\n        if (type === 'IntentRequest') {\n            return IntentHandlerFactory.init(intentName)\n        }\n        return new HandlerBuilder()\n    }\n}\n\nexport class LaunchRequestFactory {\n    public static init (): HandlerBuilder {\n        return new LaunchRequestBuilder()\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LaunchRequestHandlerFactory.html":{"url":"classes/LaunchRequestHandlerFactory.html","title":"class - LaunchRequestHandlerFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LaunchRequestHandlerFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/handlers/libs/requestHandlers/HandlerFactory.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            RequestHandlerBuilder\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                            \n                                supports\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handle\n                        \n                        \n                    \n                \n            \n            \n                \nhandle(handler: TMergeTargetHandler)\n                \n            \n\n\n            \n                \n                    Defined in packages/handlers/libs/requestHandlers/HandlerFactory.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    handler\n                                    \n                                                TMergeTargetHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TRequestHandler\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            supports\n                        \n                        \n                    \n                \n            \n            \n                \nsupports(type: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/handlers/libs/requestHandlers/HandlerFactory.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { RequestHandler, HandlerInput } from 'ask-sdk-core'\nimport { Response, Request, RequestEnvelope } from 'ask-sdk-model'\nimport Resolver, { interfaces } from 'class-resolver'\nimport { isLaunchRequest } from 'ask-utils'\n\nexport interface TMergeTargetHandler {\n    canHandle?: (input: Input) => Promise | boolean;\n    handle?: (input: Input) => Promise | Output;\n}\nexport interface TRequestHandler {\n    canHandle: (input: Input) => Promise | boolean;\n    handle: (input: Input) => Promise | Output;\n}\nexport interface CustomeRequestEnvelope extends RequestEnvelope {\n    request: CustomRequest;\n}\nexport interface CustomHandlerInput extends HandlerInput {\n    requestEnvelope: CustomeRequestEnvelope;\n}\nexport interface RequestHandlerBuilder extends interfaces.ResolveTarget {\n    handle(handler: TMergeTargetHandler): TRequestHandler;\n}\n\nconst merge = (handler: TMergeTargetHandler, target?: TMergeTargetHandler): TRequestHandler => {\n    const fallBackHandler: RequestHandler = {\n        canHandle () {\n            return true\n        },\n        handle (handlerInput) {\n            return handlerInput.responseBuilder.getResponse()\n        }\n    }\n    return Object.assign({}, fallBackHandler, target, handler)\n}\n\nexport type SupportedHandlerType = 'LaunchRequest'\nexport class RequestHandlerFactory {\n    public static create (type: SupportedHandlerType, handler: TMergeTargetHandler): TRequestHandler {\n        return new Resolver(\n            new LaunchRequestHandlerFactory(),\n            new FallbackIntentFactory()\n        ).resolve(type).handle(handler)\n    }\n}\nexport default RequestHandlerFactory\n\nexport class LaunchRequestHandlerFactory implements RequestHandlerBuilder {\n    supports (type: string) {\n        return type === 'LaunchRequest'\n    }\n    handle (handler: TMergeTargetHandler) {\n        return merge(handler, {\n            canHandle (handlerInput) {\n                return isLaunchRequest(handlerInput)\n            }\n        })\n    }\n}\n\nexport class FallbackIntentFactory implements RequestHandlerBuilder {\n    supports () {\n        return true\n    }\n    handle (handler: TMergeTargetHandler) {\n        return merge(handler)\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LaunchRequestrBuilder.html":{"url":"classes/LaunchRequestrBuilder.html","title":"class - LaunchRequestrBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LaunchRequestrBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/handlers/libs/requestHandlers/factories/LaunchRequest.ts\n        \n\n\n            \n                Extends\n            \n            \n                        HandlerBuilder\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                canHandle\n                            \n                            \n                                    Public\n                                canHandle\n                            \n                            \n                                    Protected\n                                canHandleFilter\n                            \n                            \n                                    Public\n                                handle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getHandler\n                            \n                            \n                                    Public\n                                replaceHandler\n                            \n                            \n                                    Public\n                                setHandle\n                            \n                            \n                                    Public\n                                setHandleCondition\n                            \n                            \n                                    Public\n                                updateHandler\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            canHandle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CanHandle\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in packages/handlers/libs/requestHandlers/factories/LaunchRequest.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            canHandle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CanHandle\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         HandlerBuilder\n\n                                \n                            \n                        \n                            \n                                    Defined in         HandlerBuilder:8\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            canHandleFilter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CanHandle\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         HandlerBuilder\n\n                                \n                            \n                        \n                            \n                                    Defined in         HandlerBuilder:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            handle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Handle\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         HandlerBuilder\n\n                                \n                            \n                        \n                            \n                                    Defined in         HandlerBuilder:11\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getHandler\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getHandler()\n                \n            \n\n\n            \n                \n                    Inherited from         HandlerBuilder\n\n                \n            \n            \n                \n                        Defined in         HandlerBuilder:32\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     RequestHandler\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            replaceHandler\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    replaceHandler(handler: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         HandlerBuilder\n\n                \n            \n            \n                \n                        Defined in         HandlerBuilder:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    handler\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setHandle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setHandle(handle: Handle)\n                \n            \n\n\n            \n                \n                    Inherited from         HandlerBuilder\n\n                \n            \n            \n                \n                        Defined in         HandlerBuilder:18\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    handle\n                                    \n                                                Handle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setHandleCondition\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setHandleCondition(condition: CanHandle)\n                \n            \n\n\n            \n                \n                    Inherited from         HandlerBuilder\n\n                \n            \n            \n                \n                        Defined in         HandlerBuilder:14\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                CanHandle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateHandler\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateHandler(condition: CanHandle, handle: Handle)\n                \n            \n\n\n            \n                \n                    Inherited from         HandlerBuilder\n\n                \n            \n            \n                \n                        Defined in         HandlerBuilder:22\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                CanHandle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    handle\n                                    \n                                                Handle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { isLaunchRequest } from 'ask-utils'\nimport { HandlerBuilder } from './Base'\nimport {\n    CanHandle, CanHandleResponse\n} from './model'\n\nexport class LaunchRequestrBuilder extends HandlerBuilder {\n    public canHandle: CanHandle = (handlerInput): CanHandleResponse => {\n        if (!isLaunchRequest(handlerInput)) return false\n        return this.canHandleFilter(handlerInput)\n    }\n}\nexport default LaunchRequestrBuilder\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ListManagementAPIClient.html":{"url":"classes/ListManagementAPIClient.html","title":"class - ListManagementAPIClient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ListManagementAPIClient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/serviceClients/libs/Lists.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Client\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                path\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createList\n                            \n                            \n                                    Public\n                                    Async\n                                createListItem\n                            \n                            \n                                    Public\n                                    Async\n                                deleteList\n                            \n                            \n                                    Public\n                                    Async\n                                deleteListItem\n                            \n                            \n                                    Public\n                                    Async\n                                getList\n                            \n                            \n                                    Public\n                                    Async\n                                getListItem\n                            \n                            \n                                    Public\n                                    Async\n                                getListsMetadata\n                            \n                            \n                                    Public\n                                    Async\n                                getProfileName\n                            \n                            \n                                    Public\n                                    Async\n                                updateList\n                            \n                            \n                                    Public\n                                    Async\n                                updateListItem\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'v2/householdlists/'\n                        \n                    \n                        \n                            \n                                    Defined in packages/serviceClients/libs/Lists.ts:6\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            createList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createList(request: listManagement.CreateListRequest)\n                \n            \n\n\n            \n                \n                    Defined in packages/serviceClients/libs/Lists.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            listManagement.CreateListRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            createListItem\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createListItem(listId: string, request: listManagement.CreateListItemRequest)\n                \n            \n\n\n            \n                \n                    Defined in packages/serviceClients/libs/Lists.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    listId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    request\n                                    \n                                            listManagement.CreateListItemRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            deleteList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteList(listId: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/serviceClients/libs/Lists.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    listId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            deleteListItem\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteListItem(listId: string, itemId: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/serviceClients/libs/Lists.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    listId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    itemId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getList(listId: string, status: ListStatus)\n                \n            \n\n\n            \n                \n                    Defined in packages/serviceClients/libs/Lists.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    listId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    status\n                                    \n                                                ListStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getListItem\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getListItem(listId: string, itemId: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/serviceClients/libs/Lists.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    listId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    itemId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getListsMetadata\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getListsMetadata()\n                \n            \n\n\n            \n                \n                    Defined in packages/serviceClients/libs/Lists.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getProfileName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getProfileName()\n                \n            \n\n\n            \n                \n                    Defined in packages/serviceClients/libs/Lists.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            updateList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateList(listId: string, request: listManagement.UpdateListRequest)\n                \n            \n\n\n            \n                \n                    Defined in packages/serviceClients/libs/Lists.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    listId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    request\n                                    \n                                            listManagement.UpdateListRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            updateListItem\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateListItem(listId: string, itemId: string, request: listManagement.UpdateListItemRequest)\n                \n            \n\n\n            \n                \n                    Defined in packages/serviceClients/libs/Lists.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    listId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    itemId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    request\n                                    \n                                            listManagement.UpdateListItemRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { services } from 'ask-sdk-model'\nimport Client from './client'\nimport listManagement = services.listManagement\ntype ListStatus = 'active' | 'completed'\nexport class ListManagementAPIClient extends Client {\n    protected path = 'v2/householdlists/'\n    public async getProfileName (): Promise {\n        return this.get('Profile.name')\n    }\n    public async getListsMetadata (): Promise {\n        return this.get()\n    }\n    public async getList (listId: string, status: ListStatus): Promise {\n        return this.get(`${listId}/${status}`)\n    }\n    public async createList (request: listManagement.CreateListRequest): Promise {\n        return this.post(request)\n    }\n    public async updateList (listId: string, request: listManagement.UpdateListRequest): Promise {\n        return this.put(request, listId)\n    }\n    public async deleteList (listId: string): Promise {\n        await this.delete(listId)\n    }\n    public async getListItem (listId: string, itemId: string): Promise {\n        return this.get(`${listId}/items/${itemId}`)\n    }\n    public async createListItem (listId: string, request: listManagement.CreateListItemRequest): Promise {\n        return this.post(request, `${listId}/items/`)\n    }\n    public async updateListItem (listId: string, itemId: string, request: listManagement.UpdateListItemRequest): Promise {\n        return this.put(request, `${listId}/items/${itemId}`)\n    }\n    public async deleteListItem (listId: string, itemId: string): Promise {\n        await this.delete(`${listId}/items/${itemId}`)\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LocalizedAttribute.html":{"url":"interfaces/LocalizedAttribute.html","title":"interface - LocalizedAttribute","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LocalizedAttribute\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        locale\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [name: string]:        string\n\n                    \n                \n                        \n                            \n                                Defined in packages/proactive-event/libs/model.ts:113\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        locale\n                                    \n                                \n                                \n                                    \n                                        locale:         Locale\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Locale\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LocalizedAttributesFactory.html":{"url":"classes/LocalizedAttributesFactory.html","title":"class - LocalizedAttributesFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LocalizedAttributesFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/LocalizedAttributes/Factory.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/LocalizedAttributes/Factory.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         interfaces.LocalizedAttributes.Factory\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n    Types,\n    interfaces\n} from '../model'\n\nexport default class LocalizedAttributesFactory {\n    public static init (): interfaces.LocalizedAttributes.Factory {\n        const localizedAttributes: Types.LocalizedAttributes = []\n        return {\n            putLocalizedAttribute (locale: Types.Locale, key: string, text: string) {\n                localizedAttributes.push({\n                    locale,\n                    [key]: text\n                })\n                return this\n            },\n            getLocalizedAttributes () {\n                return localizedAttributes\n            }\n        }\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MergeObjectType.html":{"url":"interfaces/MergeObjectType.html","title":"interface - MergeObjectType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MergeObjectType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/libs/requestHandler.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        canHandle\n                                \n                                \n                                            Optional\n                                        handle\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        canHandle\n                                    \n                                \n                                \n                                    \n                                        canHandle:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        handle\n                                    \n                                \n                                \n                                    \n                                        handle:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { RequestHandler, HandlerInput } from 'ask-sdk-core'\nimport {\n    Response,\n    RequestEnvelope\n} from 'ask-sdk-model'\n\nexport const cloneHandler = (cloneTarget: RequestHandler): RequestHandler => {\n    return Object.assign({}, cloneTarget)\n}\n\ninterface MergeObjectType {\n    canHandle?: (handlerInput: HandlerInput) => boolean;\n    handle?: (handlerInput: HandlerInput) => Response;\n}\n\nexport const mergeHandler = (cloneTarget: RequestHandler, mergeObject: MergeObjectType): RequestHandler => {\n    return Object.assign({}, cloneTarget, mergeObject)\n}\n\nexport const isSkillEvent = (requestEnvelope: RequestEnvelope): boolean => {\n    return /^AlexaSkillEvent/.test(requestEnvelope.request.type)\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MessageGroup.html":{"url":"interfaces/MessageGroup.html","title":"interface - MessageGroup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MessageGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        count\n                                \n                                \n                                        creator\n                                \n                                \n                                            Optional\n                                        urgency\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        count\n                                    \n                                \n                                \n                                    \n                                        count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator\n                                    \n                                \n                                \n                                    \n                                        creator:         Types.Person\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Types.Person\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        urgency\n                                    \n                                \n                                \n                                    \n                                        urgency:         MessageUrgent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MessageUrgent\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MessageState.html":{"url":"interfaces/MessageState.html","title":"interface - MessageState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MessageState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        freshness\n                                \n                                \n                                        status\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        freshness\n                                    \n                                \n                                \n                                    \n                                        freshness:         MessageFreshness\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MessageFreshness\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:         MessageStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MessageStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MockAttributeManager.html":{"url":"classes/MockAttributeManager.html","title":"class - MockAttributeManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MockAttributeManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/__tests__/libs/attributeManager.test.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        AttributesManager\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                db\n                            \n                            \n                                    Private\n                                persistent\n                            \n                            \n                                    Private\n                                request\n                            \n                            \n                                    Private\n                                session\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getPersistentAttributes\n                            \n                            \n                                    Public\n                                getRequestAttributes\n                            \n                            \n                                    Public\n                                getSessionAttributes\n                            \n                            \n                                    Public\n                                savePersistentAttributes\n                            \n                            \n                                    Public\n                                setPersistentAttributes\n                            \n                            \n                                    Public\n                                setRequestAttributes\n                            \n                            \n                                    Public\n                                setSessionAttributes\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            db\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AttributeType\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/__tests__/libs/attributeManager.test.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            persistent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AttributeType\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/__tests__/libs/attributeManager.test.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            request\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AttributeType\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/__tests__/libs/attributeManager.test.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            session\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AttributeType\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/__tests__/libs/attributeManager.test.ts:8\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getPersistentAttributes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPersistentAttributes()\n                \n            \n\n\n            \n                \n                    Defined in packages/core/__tests__/libs/attributeManager.test.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getRequestAttributes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getRequestAttributes()\n                \n            \n\n\n            \n                \n                    Defined in packages/core/__tests__/libs/attributeManager.test.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         AttributeType\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getSessionAttributes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSessionAttributes()\n                \n            \n\n\n            \n                \n                    Defined in packages/core/__tests__/libs/attributeManager.test.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         AttributeType\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            savePersistentAttributes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    savePersistentAttributes()\n                \n            \n\n\n            \n                \n                    Defined in packages/core/__tests__/libs/attributeManager.test.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setPersistentAttributes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setPersistentAttributes(attribute: AttributeType)\n                \n            \n\n\n            \n                \n                    Defined in packages/core/__tests__/libs/attributeManager.test.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    attribute\n                                    \n                                                AttributeType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setRequestAttributes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setRequestAttributes(attribute: AttributeType)\n                \n            \n\n\n            \n                \n                    Defined in packages/core/__tests__/libs/attributeManager.test.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    attribute\n                                    \n                                                AttributeType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setSessionAttributes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setSessionAttributes(attribute: AttributeType)\n                \n            \n\n\n            \n                \n                    Defined in packages/core/__tests__/libs/attributeManager.test.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    attribute\n                                    \n                                                AttributeType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HandlerInput, AttributesManager } from 'ask-sdk'\nimport { updateSessionAttributes, getSessionAttribute, getSessionAttributes } from '../../libs/attributeManager'\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ninterface AttributeType {[key: string]: any}\nclass MockAttributeManager implements AttributesManager {\n    private request: AttributeType = {}\n    private session: AttributeType = {}\n    private persistent: AttributeType = {}\n    private db: AttributeType = {}\n    public getRequestAttributes () {\n        return this.request\n    }\n    public getSessionAttributes () {\n        return this.session\n    }\n    public getPersistentAttributes () {\n        return Promise.resolve(this.db)\n    }\n    public setRequestAttributes (attribute: AttributeType) {\n        this.request = attribute\n    }\n    public setSessionAttributes (attribute: AttributeType) {\n        this.session = attribute\n    }\n    public setPersistentAttributes (attribute: AttributeType) {\n        this.persistent = attribute\n    }\n    public savePersistentAttributes () {\n        this.db = this.persistent\n        return Promise.resolve()\n    }\n}\n\nconst generateHandlerInput = (): HandlerInput => {\n    const attributesManager: AttributesManager = new MockAttributeManager()\n    const handlerInput = {\n        attributesManager\n    } as HandlerInput\n    return handlerInput\n}\ndescribe('attributeManager.ts', () => {\n    let handlerInput = generateHandlerInput()\n    beforeEach(() => {\n        handlerInput = generateHandlerInput()\n    })\n    describe('updateSessionAttributes()', () => {\n        it('should save attributes', () => {\n            updateSessionAttributes(handlerInput, { test: 'true' })\n            const result = getSessionAttribute(handlerInput, 'test')\n            expect(result).toEqual('true')\n        })\n\n        it('should add save attributes', () => {\n            updateSessionAttributes(handlerInput, { test: 'true' })\n            updateSessionAttributes(handlerInput, { test1: 'false' })\n            const result = getSessionAttribute(handlerInput, 'test')\n            expect(result).toEqual('true')\n            const result2 = getSessionAttribute(handlerInput, 'test1')\n            expect(result2).toEqual('false')\n        })\n    })\n    describe('getSessionAttributes()', () => {\n        it('should get saved attributes', () => {\n            updateSessionAttributes(handlerInput, { test: 'true' })\n            const result = getSessionAttributes(handlerInput)\n            expect(result).toEqual({ test: 'true' })\n        })\n        it('should add save attributes', () => {\n            updateSessionAttributes(handlerInput, { test: 'true' })\n            updateSessionAttributes(handlerInput, { test1: 'false' })\n            const result = getSessionAttributes(handlerInput)\n            expect(result).toEqual({\n                test: 'true',\n                test1: 'false'\n            })\n        })\n    })\n})\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Occasion.html":{"url":"interfaces/Occasion.html","title":"interface - Occasion","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Occasion\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        bookingTime\n                                \n                                \n                                            Optional\n                                        broker\n                                \n                                \n                                        occasionType\n                                \n                                \n                                        provider\n                                \n                                \n                                        subject\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bookingTime\n                                    \n                                \n                                \n                                    \n                                        bookingTime:         Types.dateTime\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Types.dateTime\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        broker\n                                    \n                                \n                                \n                                    \n                                        broker:         Skill\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Skill\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        occasionType\n                                    \n                                \n                                \n                                    \n                                        occasionType:         OccasionType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OccasionType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        provider\n                                    \n                                \n                                \n                                    \n                                        provider:         Ogranization\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Ogranization\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subject\n                                    \n                                \n                                \n                                    \n                                        subject:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Ogranization.html":{"url":"interfaces/Ogranization.html","title":"interface - Ogranization","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Ogranization\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Order.html":{"url":"interfaces/Order.html","title":"interface - Order","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Order\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        seller\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        seller\n                                    \n                                \n                                \n                                    \n                                        seller:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OrderState.html":{"url":"interfaces/OrderState.html","title":"interface - OrderState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OrderState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        deliveryDetails\n                                \n                                \n                                            Optional\n                                        enterTimestamp\n                                \n                                \n                                        status\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        deliveryDetails\n                                    \n                                \n                                \n                                    \n                                        deliveryDetails:         ParcelDelivery\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ParcelDelivery\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        enterTimestamp\n                                    \n                                \n                                \n                                    \n                                        enterTimestamp:         Types.dateTime\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Types.dateTime\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:         OrderStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OrderStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ParameterFactory.html":{"url":"classes/ParameterFactory.html","title":"class - ParameterFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ParameterFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/Occasion/Updated/PayloadFactory.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/Occasion/Updated/PayloadFactory.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         PayloadBuilder\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import moment from 'moment'\nimport {\n    interfaces,\n    Types\n} from '../../model'\n\n// helper\nimport {\n    getOccasion\n} from '../../helpers'\nimport Occasion = interfaces.Occasion\nimport PayloadBuilder = Occasion.Updated.PayloadBuilder\n\nexport default class ParameterFactory {\n    public static init (): PayloadBuilder {\n        const eventName = 'AMAZON.Occasion.Updated'\n        const confirmationState: Types.ConfirmationState = {\n            confirmationStatus: 'CONFIRMED'\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const occasion: any = {\n            broker: {\n                name: 'localizedattribute:brokerName'\n            },\n            provider: {\n                name: 'localizedattribute:providerName'\n            }\n        }\n        return {\n            updateConfirmationStatus (status: Types.ConfirmationStatus) {\n                confirmationState.confirmationStatus = status\n                return this\n            },\n            getConfirmationState (): Types.ConfirmationState {\n                return confirmationState\n            },\n            getConfirmationStatus (): Types.ConfirmationStatus {\n                return confirmationState.confirmationStatus\n            },\n            setOccasionType (type: Types.OccasionType) {\n                occasion.occasionType = type\n                return this\n            },\n            setSubject (subject: string) {\n                occasion.subject = subject\n                return this\n            },\n            setProviderName (name: string) {\n                occasion.provider.name = name\n                return this\n            },\n            setBookingTime (date: Date) {\n                occasion.bookingTime = moment(date).toISOString()\n                return this\n            },\n            setBrokerName (name: string) {\n                occasion.broker.name = name\n                return this\n            },\n            getEventName () {\n                return eventName\n            },\n            getPayload () {\n                return {\n                    state: confirmationState,\n                    occasion: getOccasion(occasion)\n                }\n            },\n            getParameter () {\n                return {\n                    name: eventName,\n                    payload: this.getPayload()\n                }\n            }\n        }\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ParameterFactory-1.html":{"url":"classes/ParameterFactory-1.html","title":"class - ParameterFactory-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ParameterFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/MessageAlert/Activated/PayloadFactory.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/MessageAlert/Activated/PayloadFactory.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         PayloadBuilder\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n    interfaces\n} from '../../model'\n\n// helper\nimport {\n    getMessageState,\n    getMessageGroup\n} from '../../helpers'\nimport MessageAlert = interfaces.MessageAlert\nimport PayloadBuilder = MessageAlert.Activated.PayloadBuilder\n\nexport default class ParameterFactory {\n    public static init (): PayloadBuilder {\n        const eventName = 'AMAZON.MessageAlert.Activated'\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const state: any = {}\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const group: any = {}\n        return {\n            setMessageCreator (name) {\n                const person = {\n                    name\n                }\n                group.creator = person\n                return this\n            },\n            setMessageCount (count) {\n                group.count = count\n                return this\n            },\n            setMessageUrgency (urgency = 'URGENT') {\n                group.urgency = urgency\n                return this\n            },\n            setMessageFreshness (freshness) {\n                state.freshness = freshness\n                return this\n            },\n            setMessageStatus (messageStatus) {\n                state.status = messageStatus\n                return this\n            },\n            getEventName () {\n                return eventName\n            },\n            getPayload () {\n                return {\n                    state: getMessageState(state),\n                    messageGroup: getMessageGroup(group)\n                }\n            },\n            getParameter () {\n                return {\n                    name: eventName,\n                    payload: this.getPayload()\n                }\n            }\n        }\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ParameterFactory-2.html":{"url":"classes/ParameterFactory-2.html","title":"class - ParameterFactory-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ParameterFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/MediaContent/Available/PayloadFactory.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/MediaContent/Available/PayloadFactory.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         PayloadBuilder\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import moment from 'moment'\nimport {\n    interfaces,\n    Types,\n    event\n} from '../../model'\n\n// helper\nimport {\n    getCreativeWork,\n    getAvailability\n} from '../../helpers'\nimport MediaContent = interfaces.MediaContent\nimport PayloadBuilder = MediaContent.Available.PayloadBuilder\n\nexport default class ParameterFactory {\n    public static init (): PayloadBuilder {\n        const eventName = 'AMAZON.MediaContent.Available'\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const availability: any = {}\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const content: any = {\n            name: 'localizedattribute:contentName'\n        }\n        return {\n            setContentName (name: string) {\n                content.name = name\n                return this\n            },\n            setMediaType (type: Types.MediaType) {\n                content.contentType = type\n                return this\n            },\n            setStartTime (date: Date): PayloadBuilder {\n                availability.startTime = moment(date).toISOString()\n                return this\n            },\n            setDistributionMethod (method: Types.DistributionMethod): PayloadBuilder {\n                availability.method = method\n                return this\n            },\n            setProvider (providerName: string = 'localizedattribute:providerName'): PayloadBuilder {\n                availability.provider = {\n                    name: providerName\n                }\n                return this\n            },\n            getEventName (): event.MediaContent.EventName {\n                return eventName\n            },\n            getPayload (): event.MediaContent.Available.Payload {\n                return {\n                    availability: getAvailability(availability),\n                    content: getCreativeWork(content)\n                }\n            },\n            getParameter () {\n                return {\n                    name: eventName,\n                    payload: this.getPayload()\n                }\n            }\n        }\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ParameterFactory-3.html":{"url":"classes/ParameterFactory-3.html","title":"class - ParameterFactory-3","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ParameterFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/SportsEvent/Updated/PayloadFactory.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/SportsEvent/Updated/PayloadFactory.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         PayloadBuilder\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n    interfaces,\n    Types,\n    event\n} from '../../model'\n\n// helper\nimport SportsEvent = interfaces.SportsEvent\nimport PayloadBuilder = SportsEvent.Updated.PayloadBuilder\n\nexport default class ParameterFactory {\n    public static init (): PayloadBuilder {\n        const eventName = 'AMAZON.SportsEvent.Updated'\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const eventLeague: Types.Soccer = {\n            name: 'localizedattribute:eventLeagueName'\n        }\n        const homeTeamStatistic: Types.GameStatistic = {\n            team: {\n                name: ''\n            },\n            score: 0\n        }\n        const awayTeamStatistic: Types.GameStatistic = {\n            team: {\n                name: ''\n            },\n            score: 0\n        }\n        let updated: Types.Goal | null = null\n        return {\n            updateGoalData (teamName: string, score: number) {\n                if (updated === null) {\n                    updated = {\n                        scoreEarned: score,\n                        teamName\n                    }\n                }\n                updated.scoreEarned = score\n                updated.teamName = teamName\n                return this\n            },\n            setEventLeagueName (name: string) {\n                eventLeague.name = name\n                return this\n            },\n            setHomeTeamStatistic (teamName: string, score: number) {\n                homeTeamStatistic.team.name = teamName\n                homeTeamStatistic.score = score\n                return this\n            },\n            setAwayTeamStatistic (teamName: string, score: number) {\n                awayTeamStatistic.score = score\n                awayTeamStatistic.team.name = teamName\n                return this\n            },\n            getEventName () {\n                return eventName\n            },\n            getPayload () {\n                const payload: event.SportsEvent.Updated.Payload = {\n                    sportsEvent: {\n                        eventLeague,\n                        homeTeamStatistic,\n                        awayTeamStatistic\n                    }\n                }\n\n                if (updated !== null && updated.hasOwnProperty('scoreEarned') && updated.hasOwnProperty('teamName')) payload.update = updated\n                return payload\n            },\n            getParameter () {\n                return {\n                    name: eventName,\n                    payload: this.getPayload()\n                }\n            }\n        }\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ParameterFactory-4.html":{"url":"classes/ParameterFactory-4.html","title":"class - ParameterFactory-4","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ParameterFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/SocialGameInvite/Available/PayloadFactory.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/SocialGameInvite/Available/PayloadFactory.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         PayloadBuilder\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n    interfaces,\n    Types\n} from '../../model'\n\n// helper\nimport {\n    getGame,\n    getGameInvite\n} from '../../helpers'\nimport SocialGameInvite = interfaces.SocialGameInvite\nimport PayloadBuilder = SocialGameInvite.Available.PayloadBuilder\n\nexport default class ParameterFactory {\n    public static init (): PayloadBuilder {\n        const eventName = 'AMAZON.SocialGameInvite.Available'\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const invite: any = {\n            inviter: {\n                name: ''\n            }\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const game: any = {\n            name: 'localizedattribute:gameName'\n        }\n        return {\n            setInviterName (name: string) {\n                invite.inviter.name = name\n                return this\n            },\n            setRelationshipToInvitee (relation: Types.RelationshipToInvitee) {\n                invite.relationshipToInvitee = relation\n                return this\n            },\n            setInviteType (type: Types.InviteType) {\n                invite.inviteType = type\n                return this\n            },\n            setGameOfferName (name: Types.OfferType) {\n                game.offer = name\n                return this\n            },\n            setGameName (name: string) {\n                game.name = name\n                return this\n            },\n            getEventName () {\n                return eventName\n            },\n            getPayload () {\n                return {\n                    invite: getGameInvite(invite),\n                    game: getGame(game)\n                }\n            },\n            getParameter () {\n                return {\n                    name: eventName,\n                    payload: this.getPayload()\n                }\n            }\n        }\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ParameterFactory-5.html":{"url":"classes/ParameterFactory-5.html","title":"class - ParameterFactory-5","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ParameterFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/OrderStatus/Updated/PayloadFactory.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/OrderStatus/Updated/PayloadFactory.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         PayloadBuilder\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import moment from 'moment'\nimport {\n    interfaces,\n    Types\n} from '../../model'\n\n// helper\nimport {\n    getOrderState\n} from '../../helpers'\nimport OrderStatus = interfaces.OrderStatus\nimport PayloadBuilder = OrderStatus.Updated.PayloadBuilder\n\nexport default class ParameterFactory {\n    public static init (): PayloadBuilder {\n        const eventName = 'AMAZON.OrderStatus.Updated'\n\n        const order: Types.Order = {\n            seller: {\n                name: 'localizedattribute:sellerName'\n            }\n        }\n\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const orderState: any = {}\n        return {\n            setOrderStatus (status: Types.OrderStatus) {\n                orderState.status = status\n                return this\n            },\n            setEnterTimestamp (date: Date) {\n                orderState.enterTimestamp = moment(date).toISOString()\n                return this\n            },\n            setExpectedArrival (date: Date) {\n                orderState.deliveryDetails = {\n                    expectedArrival: moment(date).toISOString()\n                }\n                return this\n            },\n            updateSellerName (name: string) {\n                order.seller.name = name\n                return this\n            },\n            getEventName () {\n                return eventName\n            },\n            getPayload () {\n                return {\n                    state: getOrderState(orderState),\n                    order\n                }\n            },\n            getParameter () {\n                return {\n                    name: eventName,\n                    payload: this.getPayload()\n                }\n            }\n        }\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ParameterFactory-6.html":{"url":"classes/ParameterFactory-6.html","title":"class - ParameterFactory-6","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ParameterFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/WeatherAlert/Activated/PayloadFactory.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/WeatherAlert/Activated/PayloadFactory.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         PayloadBuilder\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n    interfaces\n} from '../../model'\n\n// helper\nimport {\n    getWeatherAlert\n} from '../../helpers'\nimport WeatherAlert = interfaces.WeatherAlert\nimport PayloadBuilder = WeatherAlert.Activated.PayloadBuilder\n\nexport default class ParameterFactory {\n    public static init (): PayloadBuilder {\n        const eventName = 'AMAZON.WeatherAlert.Activated'\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const weatherAlert: any = {}\n        return {\n            setAlertSource (source: string = 'localizedattribute:source') {\n                weatherAlert.source = source\n                return this\n            },\n            setAlertType (type) {\n                weatherAlert.alertType = type\n                return this\n            },\n            getEventName () {\n                return eventName\n            },\n            getPayload () {\n                return {\n                    weatherAlert: getWeatherAlert(weatherAlert)\n                }\n            },\n            getParameter () {\n                return {\n                    name: eventName,\n                    payload: this.getPayload()\n                }\n            }\n        }\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ParameterFactory-7.html":{"url":"classes/ParameterFactory-7.html","title":"class - ParameterFactory-7","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ParameterFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/TrashCollectionAlert/Activated/PayloadFactory.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/TrashCollectionAlert/Activated/PayloadFactory.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         PayloadBuilder\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n    interfaces,\n    Types,\n    event\n} from '../../model'\nimport TrashCollectionAlert = interfaces.TrashCollectionAlert\nimport PayloadBuilder = TrashCollectionAlert.Activated.PayloadBuilder\n\nexport default class ParameterFactory {\n    public static init (): PayloadBuilder {\n        const eventName = 'AMAZON.TrashCollectionAlert.Activated'\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        let alert: any = {}\n        return {\n            putAlert (alertItem: Types.TrashCollectionAlert): PayloadBuilder {\n                alert = alertItem\n                return this\n            },\n            putGarbageTypes (garbageTypes: Types.GarbageType[]): PayloadBuilder {\n                alert.garbageTypes = garbageTypes\n                return this\n            },\n            addGarbageType (garbageType: Types.GarbageType): PayloadBuilder {\n                if (alert.garbageTypes && alert.garbageTypes.length > 0) {\n                    alert.garbageTypes.push(garbageType)\n                } else {\n                    alert.garbageTypes = [garbageType]\n                }\n                return this\n            },\n            setCollectionDayOfWeek (collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder {\n                alert.collectionDayOfWeek = collectionDayOfWeek\n                return this\n            },\n            getEventName () {\n                return eventName\n            },\n            getPayload (): event.TrashCollectionAlert.Activated.Payload {\n                return {\n                    alert\n                }\n            },\n            getParameter (): event.Props {\n                return {\n                    name: eventName,\n                    payload: this.getPayload()\n                }\n            }\n        }\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ParcelDelivery.html":{"url":"interfaces/ParcelDelivery.html","title":"interface - ParcelDelivery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ParcelDelivery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        expectedArrival\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        expectedArrival\n                                    \n                                \n                                \n                                    \n                                        expectedArrival:         Types.dateTime\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Types.dateTime\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Payload.html":{"url":"interfaces/Payload.html","title":"interface - Payload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Payload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        alert\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alert\n                                    \n                                \n                                \n                                    \n                                        alert:         Types.TrashCollectionAlert\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Types.TrashCollectionAlert\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Payload-1.html":{"url":"interfaces/Payload-1.html","title":"interface - Payload-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Payload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        weatherAlert\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        weatherAlert\n                                    \n                                \n                                \n                                    \n                                        weatherAlert:         Types.WeatherAlert\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Types.WeatherAlert\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Payload-2.html":{"url":"interfaces/Payload-2.html","title":"interface - Payload-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Payload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        sportsEvent\n                                \n                                \n                                            Optional\n                                        update\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        sportsEvent\n                                    \n                                \n                                \n                                    \n                                        sportsEvent:         Types.SportsEvent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Types.SportsEvent\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        update\n                                    \n                                \n                                \n                                    \n                                        update:         Types.Goal\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Types.Goal\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Payload-3.html":{"url":"interfaces/Payload-3.html","title":"interface - Payload-3","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Payload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        messageGroup\n                                \n                                \n                                        state\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        messageGroup\n                                    \n                                \n                                \n                                    \n                                        messageGroup:         Types.MessageGroup\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Types.MessageGroup\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        state\n                                    \n                                \n                                \n                                    \n                                        state:         Types.MessageState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Types.MessageState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Payload-4.html":{"url":"interfaces/Payload-4.html","title":"interface - Payload-4","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Payload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        order\n                                \n                                \n                                        state\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        order\n                                    \n                                \n                                \n                                    \n                                        order:         Types.Order\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Types.Order\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        state\n                                    \n                                \n                                \n                                    \n                                        state:         Types.OrderState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Types.OrderState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Payload-5.html":{"url":"interfaces/Payload-5.html","title":"interface - Payload-5","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Payload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        occasion\n                                \n                                \n                                        state\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        occasion\n                                    \n                                \n                                \n                                    \n                                        occasion:         Types.Occasion\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Types.Occasion\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        state\n                                    \n                                \n                                \n                                    \n                                        state:         Types.ConfirmationState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Types.ConfirmationState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Payload-6.html":{"url":"interfaces/Payload-6.html","title":"interface - Payload-6","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Payload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        availability\n                                \n                                \n                                        content\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        availability\n                                    \n                                \n                                \n                                    \n                                        availability:         Types.Availability\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Types.Availability\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:         Types.CreativeWork\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Types.CreativeWork\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Payload-7.html":{"url":"interfaces/Payload-7.html","title":"interface - Payload-7","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Payload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        game\n                                \n                                \n                                        invite\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        game\n                                    \n                                \n                                \n                                    \n                                        game:         Types.Game\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Types.Game\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        invite\n                                    \n                                \n                                \n                                    \n                                        invite:     Types.GameInvite\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Types.GameInvite\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PayloadBuilder.html":{"url":"interfaces/PayloadBuilder.html","title":"interface - PayloadBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PayloadBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getEventName\n                                \n                                \n                                    getParameter\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEventName\n                        \n                        \n                    \n                \n            \n            \n                \ngetEventName()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:264\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     event.EventName\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getParameter\n                        \n                        \n                    \n                \n            \n            \n                \ngetParameter()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:265\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         event.Props\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PayloadBuilder-1.html":{"url":"interfaces/PayloadBuilder-1.html","title":"interface - PayloadBuilder-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PayloadBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    addGarbageType\n                                \n                                \n                                    getEventName\n                                \n                                \n                                    getParameter\n                                \n                                \n                                    getPayload\n                                \n                                \n                                    putAlert\n                                \n                                \n                                    putGarbageTypes\n                                \n                                \n                                    setCollectionDayOfWeek\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addGarbageType\n                        \n                        \n                    \n                \n            \n            \n                \naddGarbageType(garbageType: Types.GarbageType)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:279\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    garbageType\n                                    \n                                                Types.GarbageType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEventName\n                        \n                        \n                    \n                \n            \n            \n                \ngetEventName()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:281\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         event.TrashCollectionAlert.Activated.EventName\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getParameter\n                        \n                        \n                    \n                \n            \n            \n                \ngetParameter()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:283\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     event.Props\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPayload\n                        \n                        \n                    \n                \n            \n            \n                \ngetPayload()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:282\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     event.TrashCollectionAlert.Payload\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            putAlert\n                        \n                        \n                    \n                \n            \n            \n                \nputAlert(alert: Types.TrashCollectionAlert)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:277\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    alert\n                                    \n                                                Types.TrashCollectionAlert\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            putGarbageTypes\n                        \n                        \n                    \n                \n            \n            \n                \nputGarbageTypes(garbageTypes: Types.GarbageType[])\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:278\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    garbageTypes\n                                    \n                                                Types.GarbageType[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setCollectionDayOfWeek\n                        \n                        \n                    \n                \n            \n            \n                \nsetCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:280\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collectionDayOfWeek\n                                    \n                                                Types.DayOfWeek\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PayloadBuilder-2.html":{"url":"interfaces/PayloadBuilder-2.html","title":"interface - PayloadBuilder-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PayloadBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getEventName\n                                \n                                \n                                    getParameter\n                                \n                                \n                                    getPayload\n                                \n                                \n                                    setAlertSource\n                                \n                                \n                                    setAlertType\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEventName\n                        \n                        \n                    \n                \n            \n            \n                \ngetEventName()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:293\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         event.WeatherAlert.Activated.EventName\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getParameter\n                        \n                        \n                    \n                \n            \n            \n                \ngetParameter()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:294\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     event.Props\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPayload\n                        \n                        \n                    \n                \n            \n            \n                \ngetPayload()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:295\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     event.WeatherAlert.Activated.Payload\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setAlertSource\n                        \n                        \n                    \n                \n            \n            \n                \nsetAlertSource(source?: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:291\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    source\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setAlertType\n                        \n                        \n                    \n                \n            \n            \n                \nsetAlertType(type: Types.WeatherAlertType)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:292\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                Types.WeatherAlertType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PayloadBuilder-3.html":{"url":"interfaces/PayloadBuilder-3.html","title":"interface - PayloadBuilder-3","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PayloadBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getEventName\n                                \n                                \n                                    getParameter\n                                \n                                \n                                    getPayload\n                                \n                                \n                                    setAwayTeamStatistic\n                                \n                                \n                                    setEventLeagueName\n                                \n                                \n                                    setHomeTeamStatistic\n                                \n                                \n                                    updateGoalData\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEventName\n                        \n                        \n                    \n                \n            \n            \n                \ngetEventName()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:307\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         event.SportsEvent.Updated.EventName\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getParameter\n                        \n                        \n                    \n                \n            \n            \n                \ngetParameter()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:308\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     event.Props\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPayload\n                        \n                        \n                    \n                \n            \n            \n                \ngetPayload()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:309\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     event.SportsEvent.Updated.Payload\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setAwayTeamStatistic\n                        \n                        \n                    \n                \n            \n            \n                \nsetAwayTeamStatistic(teamName: string, score: number)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:306\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    teamName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    score\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setEventLeagueName\n                        \n                        \n                    \n                \n            \n            \n                \nsetEventLeagueName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:304\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setHomeTeamStatistic\n                        \n                        \n                    \n                \n            \n            \n                \nsetHomeTeamStatistic(teamName: string, score: number)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:305\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    teamName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    score\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateGoalData\n                        \n                        \n                    \n                \n            \n            \n                \nupdateGoalData(teamName: string, score: number)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:303\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    teamName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    score\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PayloadBuilder-4.html":{"url":"interfaces/PayloadBuilder-4.html","title":"interface - PayloadBuilder-4","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PayloadBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getEventName\n                                \n                                \n                                    getParameter\n                                \n                                \n                                    getPayload\n                                \n                                \n                                    setMessageCount\n                                \n                                \n                                    setMessageCreator\n                                \n                                \n                                    setMessageFreshness\n                                \n                                \n                                    setMessageStatus\n                                \n                                \n                                    setMessageUrgency\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEventName\n                        \n                        \n                    \n                \n            \n            \n                \ngetEventName()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:322\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     event.MessageAlert.Activated.EventName\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getParameter\n                        \n                        \n                    \n                \n            \n            \n                \ngetParameter()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:323\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     event.Props\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPayload\n                        \n                        \n                    \n                \n            \n            \n                \ngetPayload()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:324\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     event.MessageAlert.Payload\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setMessageCount\n                        \n                        \n                    \n                \n            \n            \n                \nsetMessageCount(count: number)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:318\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    count\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setMessageCreator\n                        \n                        \n                    \n                \n            \n            \n                \nsetMessageCreator(name: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:317\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setMessageFreshness\n                        \n                        \n                    \n                \n            \n            \n                \nsetMessageFreshness(freshness: Types.MessageFreshness)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:320\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    freshness\n                                    \n                                                Types.MessageFreshness\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setMessageStatus\n                        \n                        \n                    \n                \n            \n            \n                \nsetMessageStatus(messageStatus: Types.MessageStatus)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:321\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    messageStatus\n                                    \n                                                Types.MessageStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setMessageUrgency\n                        \n                        \n                    \n                \n            \n            \n                \nsetMessageUrgency(urgency?: Types.MessageUrgent)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:319\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    urgency\n                                    \n                                                Types.MessageUrgent\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PayloadBuilder-5.html":{"url":"interfaces/PayloadBuilder-5.html","title":"interface - PayloadBuilder-5","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PayloadBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getEventName\n                                \n                                \n                                    getParameter\n                                \n                                \n                                    getPayload\n                                \n                                \n                                    setEnterTimestamp\n                                \n                                \n                                    setExpectedArrival\n                                \n                                \n                                    setOrderStatus\n                                \n                                \n                                    updateSellerName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEventName\n                        \n                        \n                    \n                \n            \n            \n                \ngetEventName()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:336\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         event.OrderStatus.EventName\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getParameter\n                        \n                        \n                    \n                \n            \n            \n                \ngetParameter()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:338\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     event.Props\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPayload\n                        \n                        \n                    \n                \n            \n            \n                \ngetPayload()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:337\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     event.OrderStatus.Updated.Payload\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setEnterTimestamp\n                        \n                        \n                    \n                \n            \n            \n                \nsetEnterTimestamp(date: Date)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:333\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setExpectedArrival\n                        \n                        \n                    \n                \n            \n            \n                \nsetExpectedArrival(date: Date)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:334\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setOrderStatus\n                        \n                        \n                    \n                \n            \n            \n                \nsetOrderStatus(status: Types.OrderStatus)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:332\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    status\n                                    \n                                                Types.OrderStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateSellerName\n                        \n                        \n                    \n                \n            \n            \n                \nupdateSellerName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:335\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PayloadBuilder-6.html":{"url":"interfaces/PayloadBuilder-6.html","title":"interface - PayloadBuilder-6","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PayloadBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getConfirmationState\n                                \n                                \n                                    getConfirmationStatus\n                                \n                                \n                                    getEventName\n                                \n                                \n                                    getParameter\n                                \n                                \n                                    getPayload\n                                \n                                \n                                    setBookingTime\n                                \n                                \n                                    setBrokerName\n                                \n                                \n                                    setOccasionType\n                                \n                                \n                                    setProviderName\n                                \n                                \n                                    setSubject\n                                \n                                \n                                    updateConfirmationStatus\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getConfirmationState\n                        \n                        \n                    \n                \n            \n            \n                \ngetConfirmationState()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:353\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Types.ConfirmationState\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getConfirmationStatus\n                        \n                        \n                    \n                \n            \n            \n                \ngetConfirmationStatus()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:354\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Types.ConfirmationStatus\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEventName\n                        \n                        \n                    \n                \n            \n            \n                \ngetEventName()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:352\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         event.Occasion.Updated.EventName\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getParameter\n                        \n                        \n                    \n                \n            \n            \n                \ngetParameter()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:356\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     event.Props\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPayload\n                        \n                        \n                    \n                \n            \n            \n                \ngetPayload()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:355\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     event.Occasion.Payload\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setBookingTime\n                        \n                        \n                    \n                \n            \n            \n                \nsetBookingTime(date: Date)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:350\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setBrokerName\n                        \n                        \n                    \n                \n            \n            \n                \nsetBrokerName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:351\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setOccasionType\n                        \n                        \n                    \n                \n            \n            \n                \nsetOccasionType(type: Types.OccasionType)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:347\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                Types.OccasionType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setProviderName\n                        \n                        \n                    \n                \n            \n            \n                \nsetProviderName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:349\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setSubject\n                        \n                        \n                    \n                \n            \n            \n                \nsetSubject(subject: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:348\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    subject\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateConfirmationStatus\n                        \n                        \n                    \n                \n            \n            \n                \nupdateConfirmationStatus(status: Types.ConfirmationStatus)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:346\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    status\n                                    \n                                                Types.ConfirmationStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PayloadBuilder-7.html":{"url":"interfaces/PayloadBuilder-7.html","title":"interface - PayloadBuilder-7","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PayloadBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getEventName\n                                \n                                \n                                    getParameter\n                                \n                                \n                                    getPayload\n                                \n                                \n                                    setContentName\n                                \n                                \n                                    setDistributionMethod\n                                \n                                \n                                    setMediaType\n                                \n                                \n                                    setProvider\n                                \n                                \n                                    setStartTime\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEventName\n                        \n                        \n                    \n                \n            \n            \n                \ngetEventName()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:365\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     event.MediaContent.EventName\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getParameter\n                        \n                        \n                    \n                \n            \n            \n                \ngetParameter()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:370\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     event.Props\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPayload\n                        \n                        \n                    \n                \n            \n            \n                \ngetPayload()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:369\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     event.MediaContent.Payload\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setContentName\n                        \n                        \n                    \n                \n            \n            \n                \nsetContentName(name?: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:363\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDistributionMethod\n                        \n                        \n                    \n                \n            \n            \n                \nsetDistributionMethod(method: Types.DistributionMethod)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:367\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                            Types.DistributionMethod\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setMediaType\n                        \n                        \n                    \n                \n            \n            \n                \nsetMediaType(type: Types.MediaType)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:364\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                Types.MediaType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setProvider\n                        \n                        \n                    \n                \n            \n            \n                \nsetProvider(providerName: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:368\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    providerName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setStartTime\n                        \n                        \n                    \n                \n            \n            \n                \nsetStartTime(date: Date)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:366\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PayloadBuilder-8.html":{"url":"interfaces/PayloadBuilder-8.html","title":"interface - PayloadBuilder-8","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PayloadBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getEventName\n                                \n                                \n                                    getPayload\n                                \n                                \n                                    setGameName\n                                \n                                \n                                    setGameOfferName\n                                \n                                \n                                    setInviterName\n                                \n                                \n                                    setInviteType\n                                \n                                \n                                    setRelationshipToInvitee\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEventName\n                        \n                        \n                    \n                \n            \n            \n                \ngetEventName()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:382\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     event.SocialGameInvite.Available.EventName\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPayload\n                        \n                        \n                    \n                \n            \n            \n                \ngetPayload()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:383\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     event.SocialGameInvite.Available.Payload\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setGameName\n                        \n                        \n                    \n                \n            \n            \n                \nsetGameName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:380\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setGameOfferName\n                        \n                        \n                    \n                \n            \n            \n                \nsetGameOfferName(name: Types.OfferType)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:381\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                Types.OfferType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setInviterName\n                        \n                        \n                    \n                \n            \n            \n                \nsetInviterName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:377\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setInviteType\n                        \n                        \n                    \n                \n            \n            \n                \nsetInviteType(type: Types.InviteType)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:379\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                Types.InviteType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setRelationshipToInvitee\n                        \n                        \n                    \n                \n            \n            \n                \nsetRelationshipToInvitee(relation: Types.RelationshipToInvitee)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:378\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    relation\n                                    \n                                                Types.RelationshipToInvitee\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Person.html":{"url":"interfaces/Person.html","title":"interface - Person","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Person\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProactiveClient.html":{"url":"classes/ProactiveClient.html","title":"class - ProactiveClient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProactiveClient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/clients.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                apiEndpoint\n                            \n                            \n                                    Private\n                                body\n                            \n                            \n                                    Protected\n                                clientId\n                            \n                            \n                                    Protected\n                                clientSecret\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                getAccessToken\n                            \n                            \n                                    Public\n                                getBody\n                            \n                            \n                                    Public\n                                getReferenceId\n                            \n                            \n                                    Public\n                                getRequestParams\n                            \n                            \n                                    Public\n                                    Async\n                                requestEvent\n                            \n                            \n                                    Public\n                                setEvent\n                            \n                            \n                                    Public\n                                setEventName\n                            \n                            \n                                    Public\n                                setExpiryTime\n                            \n                            \n                                    Public\n                                setLocalizedAttributes\n                            \n                            \n                                    Public\n                                setPayload\n                            \n                            \n                                    Public\n                                setReferenceId\n                            \n                            \n                                    Public\n                                setRelevantAudience\n                            \n                            \n                                    Public\n                                setTimestamp\n                            \n                            \n                                    Public\n                                updateReferenceId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(config: client.ClientConfig)\n                    \n                \n                        \n                            \n                                Defined in packages/proactive-event/libs/clients.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        client.ClientConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            apiEndpoint\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         client.APIEndpoint\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/proactive-event/libs/clients.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            body\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in packages/proactive-event/libs/clients.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            clientId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         client.ClientId\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/proactive-event/libs/clients.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            clientSecret\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         client.ClientSecret\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/proactive-event/libs/clients.ts:37\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getAccessToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAccessToken()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/clients.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getBody\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getBody()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/clients.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         client.RequstBody\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getReferenceId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getReferenceId()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/clients.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getRequestParams\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getRequestParams(accessToken: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/clients.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    accessToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     AxiosRequestConfig\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            requestEvent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    requestEvent()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/clients.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setEvent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setEvent(event: event.Props)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/clients.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                event.Props\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setEventName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setEventName(name: event.EventName)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/clients.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                            event.EventName\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setExpiryTime\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setExpiryTime(date: Date)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/clients.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setLocalizedAttributes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setLocalizedAttributes(localizedAttributes: literal type[])\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/clients.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    localizedAttributes\n                                    \n                                            literal type[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setPayload\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setPayload(payload: event.Payload)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/clients.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            event.Payload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setReferenceId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setReferenceId(id: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/clients.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setRelevantAudience\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setRelevantAudience(type: client.AudienceType, payload?: client.AudiencePayload)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/clients.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                client.AudienceType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    payload\n                                    \n                                            client.AudiencePayload\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setTimestamp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setTimestamp(date: Date)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/clients.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateReferenceId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateReferenceId(id: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/clients.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import axios, { AxiosRequestConfig } from 'axios'\nimport moment from 'moment'\nimport uuid from 'uuid'\nimport {\n    event,\n    client\n} from './model'\n\nexport const getApiURL = (config: client.ClientConfig): client.APIEndpoint => {\n    if (config.apiEndpont) return config.apiEndpont\n    switch (config.apiRegion) {\n        case 'FE':\n            return 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n        case 'EU':\n            return 'https://api.eu.amazonalexa.com/v1/proactiveEvents/'\n        case 'US':\n        default:\n            return 'https://api.amazonalexa.com/v1/proactiveEvents/'\n    }\n}\n\nexport const getApiEndpoint = (config: client.ClientConfig): client.APIEndpoint => {\n    const url = getApiURL(config)\n    if (!config.isProduction) return `${url}stages/development` as client.DevAPIURL\n    return url\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const isAuthResponse = (res: any): res is client.AuthResponse => {\n    if (!res) return false\n    if (!res.access_token || !res.expires_in || !res.scope || !res.token_type) return false\n    return true\n}\n\nexport default class ProactiveClient {\n    protected clientId: client.ClientId\n    protected clientSecret: client.ClientSecret\n    protected apiEndpoint: client.APIEndpoint\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    private body: any = {}\n\n    public constructor (config: client.ClientConfig) {\n        this.clientId = config.clientId\n        this.clientSecret = config.clientSecret\n        this.apiEndpoint = getApiEndpoint(config)\n        this.body = {\n            timestamp: moment().toISOString(),\n            expiryTime: moment().add(1, 'days').toISOString(),\n            event: {},\n            relevantAudience: 'Multicast',\n            referenceId: uuid.v4()\n        }\n        return this\n    }\n    public getReferenceId (): string {\n        return this.body.referenceId\n    }\n    public updateReferenceId (id: string): this{\n        this.body.referenceId = id\n        return this\n    }\n    public async getAccessToken (): Promise {\n        const response = await axios({\n            method: 'POST',\n            url: 'https://api.amazon.com/auth/O2/token',\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded'\n            },\n            data: [\n                'scope=alexa::proactive_events',\n                'grant_type=client_credentials',\n                `client_id=${this.clientId}`,\n                `client_secret=${this.clientSecret}`\n            ].join('&')\n        })\n        if (!isAuthResponse(response.data)) throw new Error('failed to get access token')\n        return response.data\n    }\n    public setReferenceId (id: string): this {\n        this.body.referenceId = id\n        return this\n    }\n    public setTimestamp (date: Date): this {\n        this.body.timestamp = moment(date).toISOString()\n        return this\n    }\n    public setExpiryTime (date: Date): this {\n        this.body.expiryTime = moment(date).toISOString()\n        return this\n    }\n    public setEvent (event: event.Props): this {\n        this.body.event = event\n        return this\n    }\n    public setPayload (payload: event.Payload): this {\n        this.body.event.payload = payload\n        return this\n    }\n    public setEventName (name: event.EventName): this {\n        this.body.event.name = name\n        return this\n    }\n    public setLocalizedAttributes (localizedAttributes: {}[]): this {\n        this.body.localizedAttributes = localizedAttributes\n        return this\n    }\n    public setRelevantAudience (type: client.AudienceType, payload?: client.AudiencePayload): this {\n        const relevantAudience: client.RelevantAudience = {\n            type\n        }\n        if (type === 'Unicast') relevantAudience.payload = payload\n        this.body.relevantAudience = relevantAudience\n        return this\n    }\n    public getBody (): client.RequstBody {\n        return this.body\n    }\n    public getRequestParams (accessToken: string): AxiosRequestConfig {\n        return {\n            method: 'POST',\n            url: this.apiEndpoint,\n            headers: {\n                'Content-type': 'application/json',\n                'Authorization': `Bearer ${accessToken}`\n            },\n            data: this.getBody()\n        }\n    }\n    public async requestEvent (): Promise {\n        const authResult = await this.getAccessToken()\n        if (!authResult.access_token) throw new Error('missing access_token')\n        const param = this.getRequestParams(authResult.access_token)\n        try {\n            const response = await axios(param)\n            return {\n                statusCode: response.status,\n                message: response.statusText,\n                request: this.getBody()\n            }\n        } catch (e) {\n            if (!e.response) throw e\n            const err = {\n                statusCode: 500,\n                errorCode: 'Error',\n                message: 'Internal Error'\n            }\n            if (e.response.data && e.response.data.message) err.message = e.response.data.message\n            if (e.response.status) err.statusCode = e.response.status\n            if (e.response.statusText) err.errorCode = e.response.statusText\n            throw err\n        }\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProductDetailResponseContentBuilder.html":{"url":"classes/ProductDetailResponseContentBuilder.html","title":"class - ProductDetailResponseContentBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProductDetailResponseContentBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/isp/libs/contentBuilders/Detail.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ContentBuilder\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                contents\n                            \n                            \n                                    Protected\n                                locale\n                            \n                            \n                                    Protected\n                                responseBuilder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getProductDetail\n                            \n                            \n                                    Public\n                                setProductDetail\n                            \n                            \n                                    Public\n                                getResponse\n                            \n                            \n                                    Protected\n                                isJP\n                            \n                            \n                                    Public\n                                putDirective\n                            \n                            \n                                    Public\n                                putDirectives\n                            \n                            \n                                    Public\n                                putRepromptText\n                            \n                            \n                                    Public\n                                putSpeechText\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            contents\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ResponseContent\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         ContentBuilder\n\n                                \n                            \n                        \n                            \n                                    Defined in         ContentBuilder:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            locale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ContentBuilder\n\n                                \n                            \n                        \n                            \n                                    Defined in         ContentBuilder:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            responseBuilder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ResponseBuilder\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ContentBuilder\n\n                                \n                            \n                        \n                            \n                                    Defined in         ContentBuilder:10\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getProductDetail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getProductDetail()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/Detail.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ResponseContent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setProductDetail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setProductDetail()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/Detail.ts:26\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getResponse()\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:43\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Response\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isJP\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isJP()\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:16\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putDirective\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putDirective(directive: Directive)\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:35\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    directive\n                                    \n                                                Directive\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putDirectives\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putDirectives(directives: Directive[])\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    directives\n                                    \n                                            Directive[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putRepromptText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putRepromptText(text: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:23\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putSpeechText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putSpeechText(text: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import ContentBuilder, {\n    ResponseContent\n} from './base'\n\nexport class ProductDetailResponseContentBuilder extends ContentBuilder {\n    // purchaseResult === 'DECLINED'\n    private getProductDetail (): ResponseContent {\n        const product = this.getProduct()\n        if (this.isJP()) {\n            return {\n                speechText: [\n                    product.summary,\n                    '購入しますか？'\n                ].join(' '),\n                repromptText: '購入しますか？'\n            }\n        }\n        return {\n            speechText: [\n                product.summary,\n                'Will you buy the product?'\n            ].join(' '),\n            repromptText: 'Will you buy the product?'\n        }\n    }\n    public setProductDetail (): this {\n        this.contents = this.getProductDetail()\n        return this\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProductListResponseContentBuilder.html":{"url":"classes/ProductListResponseContentBuilder.html","title":"class - ProductListResponseContentBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProductListResponseContentBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/isp/libs/contentBuilders/List.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ContentBuilder\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                listProducts\n                            \n                            \n                                    Protected\n                                contents\n                            \n                            \n                                    Protected\n                                locale\n                            \n                            \n                                    Protected\n                                responseBuilder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getListProducts\n                            \n                            \n                                    Private\n                                getProductLists\n                            \n                            \n                                    Public\n                                setListProducts\n                            \n                            \n                                    Public\n                                setProductLists\n                            \n                            \n                                    Public\n                                getResponse\n                            \n                            \n                                    Protected\n                                isJP\n                            \n                            \n                                    Public\n                                putDirective\n                            \n                            \n                                    Public\n                                putDirectives\n                            \n                            \n                                    Public\n                                putRepromptText\n                            \n                            \n                                    Public\n                                putSpeechText\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            listProducts\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         InSkillProduct[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in packages/isp/libs/contentBuilders/List.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            contents\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ResponseContent\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         ContentBuilder\n\n                                \n                            \n                        \n                            \n                                    Defined in         ContentBuilder:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            locale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ContentBuilder\n\n                                \n                            \n                        \n                            \n                                    Defined in         ContentBuilder:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            responseBuilder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ResponseBuilder\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ContentBuilder\n\n                                \n                            \n                        \n                            \n                                    Defined in         ContentBuilder:10\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getListProducts\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getListProducts()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/List.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ResponseContent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getProductLists\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getProductLists()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/List.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         InSkillProduct[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setListProducts\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setListProducts()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/List.ts:57\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setProductLists\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setProductLists(list: InSkillProduct[])\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/List.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    list\n                                    \n                                                InSkillProduct[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getResponse()\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:43\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Response\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isJP\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isJP()\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:16\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putDirective\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putDirective(directive: Directive)\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:35\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    directive\n                                    \n                                                Directive\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putDirectives\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putDirectives(directives: Directive[])\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    directives\n                                    \n                                            Directive[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putRepromptText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putRepromptText(text: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:23\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putSpeechText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putSpeechText(text: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { services } from 'ask-sdk-model'\nimport ContentBuilder, {\n    ResponseContent\n} from './base'\nimport InSkillProduct = services.monetization.InSkillProduct\nexport class ProductListResponseContentBuilder extends ContentBuilder {\n    private listProducts: InSkillProduct[] = []\n    public setProductLists (list: InSkillProduct[]): this {\n        this.listProducts = list\n        return this\n    }\n    private getProductLists (): InSkillProduct[] {\n        return this.listProducts\n    }\n    private getListProducts (): ResponseContent {\n        const products = this.getProductLists()\n        if (products.length === 1) {\n            const productText = `${products[0].name}. ${products[0].summary}`\n            if (this.isJP()) {\n                return {\n                    speechText: [\n                        productText,\n                        'どの商品を購入しますか？'\n                    ].join(' '),\n                    repromptText: 'どの商品を購入しますか？'\n                }\n            }\n            return {\n                speechText: [\n                    productText,\n                    'What item will you buy?'\n                ].join(' '),\n                repromptText: 'What item will you buy?'\n            }\n        }\n        if (this.isJP()) {\n            return {\n                speechText: [\n                    products.map((product, i): string => {\n                        return `${i + 1}番目。 ${product.name}. ${product.summary}`\n                    }).join(''),\n                    'どの商品を購入しますか？'\n                ].join(' '),\n                repromptText: 'どの商品を購入しますか？'\n            }\n        }\n        return {\n            speechText: [\n                products.map((product, i): string => {\n                    return `No.${i + 1}. ${product.name}. ${product.summary}`\n                }).join('Next.'),\n                'What item will you buy?'\n            ].join(' '),\n            repromptText: 'What item will you buy?'\n        }\n    }\n    public setListProducts (): this {\n        this.contents = this.getListProducts()\n        return this\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProgressiveResponse.html":{"url":"interfaces/ProgressiveResponse.html","title":"interface - ProgressiveResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ProgressiveResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/speech-script/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        directive\n                                \n                                \n                                        ssml\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        directive\n                                    \n                                \n                                \n                                    \n                                        directive:     services.directive.SendDirectiveRequest\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     services.directive.SendDirectiveRequest\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ssml\n                                    \n                                \n                                \n                                    \n                                        ssml:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FC } from 'ssml-tsx'\nimport { Request, Session, Context, services } from 'ask-sdk-model'\nimport { AttributesManager } from 'ask-sdk'\n\nexport interface ProgressiveResponse {\n    ssml: string;\n    directive: services.directive.SendDirectiveRequest;\n}\nexport interface SpeechScriptResponse {\n    speech?: string;\n    reprompt?: string;\n    progressiveResponse?: ProgressiveResponse;\n}\n\nexport interface AlexaSpeechComponentProps {\n    request: T;\n    attributesManager: AttributesManager;\n    session?: Session;\n    context: Context;\n    options?: U;\n}\nexport type AlexaSpeechComponent = FC> | null\nexport type AlexaSpeechComponentFunction = (props: AlexaSpeechComponentProps) => FC | JSX.Element | JSX.Element[]\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Props.html":{"url":"interfaces/Props.html","title":"interface - Props","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Props\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        name\n                                \n                                \n                                        payload\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     E\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     E\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payload\n                                    \n                                \n                                \n                                    \n                                        payload:     P\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     P\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RefundContentBuilder.html":{"url":"classes/RefundContentBuilder.html","title":"class - RefundContentBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RefundContentBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/isp/libs/contentBuilders/Refund.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ContentBuilder\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                contents\n                            \n                            \n                                    Protected\n                                locale\n                            \n                            \n                                    Protected\n                                responseBuilder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getNoEntitledProductResponse\n                            \n                            \n                                    Public\n                                setCancelDirective\n                            \n                            \n                                    Public\n                                setNoEntitledProductResponse\n                            \n                            \n                                    Public\n                                getResponse\n                            \n                            \n                                    Protected\n                                isJP\n                            \n                            \n                                    Public\n                                putDirective\n                            \n                            \n                                    Public\n                                putDirectives\n                            \n                            \n                                    Public\n                                putRepromptText\n                            \n                            \n                                    Public\n                                putSpeechText\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            contents\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ResponseContent\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         ContentBuilder\n\n                                \n                            \n                        \n                            \n                                    Defined in         ContentBuilder:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            locale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ContentBuilder\n\n                                \n                            \n                        \n                            \n                                    Defined in         ContentBuilder:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            responseBuilder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ResponseBuilder\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ContentBuilder\n\n                                \n                            \n                        \n                            \n                                    Defined in         ContentBuilder:10\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getNoEntitledProductResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNoEntitledProductResponse()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/Refund.ts:11\n                \n            \n\n\n            \n                \n                    If product not purchased yet\n\n\n                    \n                        Returns :         ResponseContent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setCancelDirective\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setCancelDirective(productId: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/Refund.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setNoEntitledProductResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setNoEntitledProductResponse()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/Refund.ts:31\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getResponse()\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:43\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Response\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isJP\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isJP()\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:16\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putDirective\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putDirective(directive: Directive)\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:35\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    directive\n                                    \n                                                Directive\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putDirectives\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putDirectives(directives: Directive[])\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    directives\n                                    \n                                            Directive[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putRepromptText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putRepromptText(text: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:23\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putSpeechText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putSpeechText(text: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n    getCancelProductDirective\n} from '../index'\nimport ContentBuilder, {\n    ResponseContent\n} from './base'\nexport class RefundContentBuilder extends ContentBuilder {\n    /**\n   * If product not purchased yet\n   */\n    public getNoEntitledProductResponse (): ResponseContent {\n        const product = this.getProduct()\n        if (this.isJP()) {\n            return {\n                speechText: [\n                    `${product.name} は購入していない商品ですので、キャンセルできません。`,\n                    '他になにをしますか？'\n                ].join(' '),\n                repromptText: '他に何をしますか？'\n            }\n        }\n        return {\n            speechText: [\n                'You can not refund it.',\n                `Because the ${product.name} is not purchased.`,\n                'What do you want to do next?'\n            ].join(' '),\n            repromptText: 'What will you do for next?'\n        }\n    }\n    public setNoEntitledProductResponse (): this {\n        this.contents = this.getNoEntitledProductResponse()\n        return this\n    }\n    public setCancelDirective (productId: string): this {\n        this.contents.directive = getCancelProductDirective(productId)\n        return this\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RefundResponseContentBuilder.html":{"url":"classes/RefundResponseContentBuilder.html","title":"class - RefundResponseContentBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RefundResponseContentBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/isp/libs/contentBuilders/RefundResponse.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ContentBuilder\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                contents\n                            \n                            \n                                    Protected\n                                locale\n                            \n                            \n                                    Protected\n                                responseBuilder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getAcceptedRefundResult\n                            \n                            \n                                    Private\n                                getDeclinedRefundResult\n                            \n                            \n                                    Private\n                                getFailedRefundResult\n                            \n                            \n                                    Public\n                                setAcceptedRefundResult\n                            \n                            \n                                    Public\n                                setDeclinedRefundResult\n                            \n                            \n                                    Public\n                                setFailedRefundResult\n                            \n                            \n                                    Public\n                                getResponse\n                            \n                            \n                                    Protected\n                                isJP\n                            \n                            \n                                    Public\n                                putDirective\n                            \n                            \n                                    Public\n                                putDirectives\n                            \n                            \n                                    Public\n                                putRepromptText\n                            \n                            \n                                    Public\n                                putSpeechText\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            contents\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ResponseContent\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         ContentBuilder\n\n                                \n                            \n                        \n                            \n                                    Defined in         ContentBuilder:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            locale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ContentBuilder\n\n                                \n                            \n                        \n                            \n                                    Defined in         ContentBuilder:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            responseBuilder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ResponseBuilder\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ContentBuilder\n\n                                \n                            \n                        \n                            \n                                    Defined in         ContentBuilder:10\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getAcceptedRefundResult\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAcceptedRefundResult()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/RefundResponse.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ResponseContent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getDeclinedRefundResult\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDeclinedRefundResult()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/RefundResponse.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ResponseContent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getFailedRefundResult\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFailedRefundResult()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/RefundResponse.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ResponseContent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setAcceptedRefundResult\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setAcceptedRefundResult()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/RefundResponse.ts:48\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setDeclinedRefundResult\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setDeclinedRefundResult()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/RefundResponse.ts:25\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setFailedRefundResult\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setFailedRefundResult()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/RefundResponse.ts:68\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getResponse()\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:43\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Response\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isJP\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isJP()\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:16\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putDirective\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putDirective(directive: Directive)\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:35\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    directive\n                                    \n                                                Directive\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putDirectives\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putDirectives(directives: Directive[])\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    directives\n                                    \n                                            Directive[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putRepromptText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putRepromptText(text: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:23\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putSpeechText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putSpeechText(text: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import ContentBuilder, {\n    ResponseContent\n} from './base'\n\nexport class RefundResponseContentBuilder extends ContentBuilder {\n    // purchaseResult === 'DECLINED'\n    private getDeclinedRefundResult (): ResponseContent {\n        if (this.isJP()) {\n            return {\n                speechText: [\n                    '承知しました。',\n                    '次はなにをしますか？'\n                ].join(' '),\n                repromptText: '次はなにをしますか？'\n            }\n        }\n        return {\n            speechText: [\n                `Ok.`,\n                'What will you do for next?'\n            ].join(' '),\n            repromptText: 'What will you do for next?'\n        }\n    }\n    public setDeclinedRefundResult (): this {\n        this.contents = this.getDeclinedRefundResult()\n        return this\n    }\n    // purchaseResult === 'ACCEPTED'\n    private getAcceptedRefundResult (): ResponseContent {\n        if (this.isJP()) {\n            return {\n                speechText: [\n                    `お使いいただいてありがとうございました。`,\n                    '次は何をしますか？'\n                ].join(' '),\n                repromptText: '次は何をしますか？'\n            }\n        }\n        return {\n            speechText: [\n                'Thanks for enjoy the packages. ',\n                'What will you do for next?'\n            ].join(' '),\n            repromptText: 'What will you do for next?'\n        }\n    }\n    public setAcceptedRefundResult (): this {\n        this.contents = this.getAcceptedRefundResult()\n        return this\n    }\n    private getFailedRefundResult (): ResponseContent {\n        if (this.isJP()) {\n            return {\n                speechText: [\n                    'キャンセル処理に失敗しました。',\n                    'もう一度トライするか、アレクサアプリからサポートに問い合わせてください。'\n                ].join(' ')\n            }\n        }\n        return {\n            speechText: [\n                'There was an error handling your refund request.',\n                'Please try again or contact us for help.'\n            ].join(' ')\n        }\n    }\n    public setFailedRefundResult (): this {\n        this.contents = this.getFailedRefundResult()\n        return this\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RelevantAudience.html":{"url":"interfaces/RelevantAudience.html","title":"interface - RelevantAudience","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RelevantAudience\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        payload\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        payload\n                                    \n                                \n                                \n                                    \n                                        payload:         AudiencePayload\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AudiencePayload\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         AudienceType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AudienceType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ReminderAPIClient.html":{"url":"classes/ReminderAPIClient.html","title":"class - ReminderAPIClient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ReminderAPIClient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/serviceClients/libs/Reminders.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Client\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                path\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createReminder\n                            \n                            \n                                    Public\n                                    Async\n                                deleteReminder\n                            \n                            \n                                    Public\n                                    Async\n                                getReminder\n                            \n                            \n                                    Public\n                                    Async\n                                getReminders\n                            \n                            \n                                    Public\n                                    Async\n                                updateReminder\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '/v1/alerts/reminders'\n                        \n                    \n                        \n                            \n                                    Defined in packages/serviceClients/libs/Reminders.ts:7\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            createReminder\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createReminder(reminderRequest: reminderManagement.ReminderRequest)\n                \n            \n\n\n            \n                \n                    Defined in packages/serviceClients/libs/Reminders.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reminderRequest\n                                    \n                                            reminderManagement.ReminderRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            deleteReminder\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteReminder(alertId: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/serviceClients/libs/Reminders.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    alertId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getReminder\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getReminder(alertId: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/serviceClients/libs/Reminders.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    alertId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getReminders\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getReminders()\n                \n            \n\n\n            \n                \n                    Defined in packages/serviceClients/libs/Reminders.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            updateReminder\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateReminder(alertId: string, reminderRequest: reminderManagement.ReminderRequest)\n                \n            \n\n\n            \n                \n                    Defined in packages/serviceClients/libs/Reminders.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    alertId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reminderRequest\n                                    \n                                            reminderManagement.ReminderRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { services } from 'ask-sdk-model'\nimport Client from './client'\n\nimport reminderManagement = services.reminderManagement\n\nexport class ReminderAPIClient extends Client {\n    protected path = '/v1/alerts/reminders'\n    public async deleteReminder (alertId: string): Promise {\n        return this.delete(alertId)\n    }\n    /**\n     *\n     * @param {string} alertId\n     */\n    public async getReminder (alertId: string): Promise {\n        return this.get(alertId)\n    }\n    /**\n     *\n     * @param {string} alertId\n     * @param {reminderManagement.ReminderRequest} reminderRequest\n     */\n    public async updateReminder (alertId: string, reminderRequest: reminderManagement.ReminderRequest): Promise {\n        return this.put(reminderRequest, alertId)\n    }\n    /**\n     *\n     */\n    public async getReminders (): Promise {\n        return this.get()\n    }\n    /**\n     *\n     * @param {reminderManagement.ReminderRequest} reminderRequest\n     */\n    public async createReminder (reminderRequest: reminderManagement.ReminderRequest): Promise {\n        return this.post(reminderRequest)\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RequestEnvelopeFactory.html":{"url":"classes/RequestEnvelopeFactory.html","title":"class - RequestEnvelopeFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RequestEnvelopeFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/test/libs/RequestEnvelopeFactory.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                apiAccessToken\n                            \n                            \n                                    Public\n                                apiEndpoint\n                            \n                            \n                                    Public\n                                applicationId\n                            \n                            \n                                    Public\n                                    Readonly\n                                context\n                            \n                            \n                                    Public\n                                    Readonly\n                                request\n                            \n                            \n                                    Public\n                                requestDate\n                            \n                            \n                                    Public\n                                requestId\n                            \n                            \n                                    Public\n                                    Readonly\n                                session\n                            \n                            \n                                    Public\n                                sessionId\n                            \n                            \n                                    Public\n                                    Readonly\n                                user\n                            \n                            \n                                    Public\n                                userId\n                            \n                            \n                                    Public\n                                    Readonly\n                                version\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getRequest\n                            \n                            \n                                    Private\n                                putRequestAttributes\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(request: T, context: ContextFactory, session: SessionFactory, user: UserFactory)\n                    \n                \n                        \n                            \n                                Defined in packages/test/libs/RequestEnvelopeFactory.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                  \n                                                        \n                                                                    T\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        context\n                                                  \n                                                        \n                                                                        ContextFactory\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        session\n                                                  \n                                                        \n                                                                        SessionFactory\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        user\n                                                  \n                                                        \n                                                                        UserFactory\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            apiAccessToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'token'\n                        \n                    \n                        \n                            \n                                    Defined in packages/test/libs/RequestEnvelopeFactory.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            apiEndpoint\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'https://api.amazonalexa.com'\n                        \n                    \n                        \n                            \n                                    Defined in packages/test/libs/RequestEnvelopeFactory.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            applicationId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'amzn1.echo-sdk-ams.app.' + uuid()\n                        \n                    \n                        \n                            \n                                    Defined in packages/test/libs/RequestEnvelopeFactory.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ContextFactory\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/test/libs/RequestEnvelopeFactory.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            request\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/test/libs/RequestEnvelopeFactory.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            requestDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                        \n                            \n                                    Defined in packages/test/libs/RequestEnvelopeFactory.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            requestId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'amzn1.echo-external.request.' + uuid()\n                        \n                    \n                        \n                            \n                                    Defined in packages/test/libs/RequestEnvelopeFactory.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            session\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SessionFactory\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/test/libs/RequestEnvelopeFactory.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sessionId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'SessionID.' + uuid()\n                        \n                    \n                        \n                            \n                                    Defined in packages/test/libs/RequestEnvelopeFactory.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserFactory\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/test/libs/RequestEnvelopeFactory.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'amzn1.ask.account.' + uuid()\n                        \n                    \n                        \n                            \n                                    Defined in packages/test/libs/RequestEnvelopeFactory.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            version\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '1.0'\n                        \n                    \n                        \n                            \n                                    Defined in packages/test/libs/RequestEnvelopeFactory.ts:32\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getRequest()\n                \n            \n\n\n            \n                \n                    Defined in packages/test/libs/RequestEnvelopeFactory.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     RequestEnvelope\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            putRequestAttributes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putRequestAttributes()\n                \n            \n\n\n            \n                \n                    Defined in packages/test/libs/RequestEnvelopeFactory.ts:45\n                \n            \n\n\n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n    RequestEnvelope\n} from 'ask-sdk-model' // 'ask-sdk-core/node_modules/ask-sdk-model'\nimport { v4 as uuid } from 'uuid'\nimport {\n    RequestFactory\n} from './request'\nimport {\n    SessionFactory\n} from './session'\nimport {\n    ContextFactory\n} from './context'\nimport {\n    UserFactory\n} from './user'\nimport { ApplicationFactory } from './application'\n\nexport class RequestEnvelopeFactory {\n    public applicationId: string = 'amzn1.echo-sdk-ams.app.' + uuid()\n    public userId: string = 'amzn1.ask.account.' + uuid()\n    public sessionId: string = 'SessionID.' + uuid()\n    public requestId: string = 'amzn1.echo-external.request.' + uuid()\n    public requestDate: Date = new Date()\n    public apiAccessToken: string = 'token'\n    public apiEndpoint: string = 'https://api.amazonalexa.com'\n\n    public readonly request: T;\n    public readonly context: ContextFactory;\n    public readonly session: SessionFactory;\n    public readonly user: UserFactory;\n    public readonly version = '1.0'\n\n    public constructor (\n        request: T,\n        context: ContextFactory = new ContextFactory(),\n        session: SessionFactory = new SessionFactory(),\n        user: UserFactory = new UserFactory()\n    ) {\n        this.request = request\n        this.context = context\n        this.session = session\n        this.user = user\n    }\n    private putRequestAttributes (): this {\n        const {\n            requestId,\n            applicationId,\n            userId,\n            sessionId,\n            apiAccessToken,\n            apiEndpoint\n        } = this\n        const application = (new ApplicationFactory()).putId(applicationId)\n            .getApplication()\n\n        const user = this.user.putUserId(userId).getUser()\n        this.request.setRequestId(requestId)\n            .setRequestedDate(this.requestDate)\n\n        this.context.system.putApplication(application)\n            .putApiEndpoint(apiEndpoint)\n            .putApiAccessToken(apiAccessToken)\n            .putUser(user)\n\n        this.session.putSessionId(sessionId)\n            .putUser(user)\n            .putApplication(application)\n\n        return this\n    }\n\n    public getRequest (): RequestEnvelope {\n        this.putRequestAttributes()\n        return {\n            request: this.request.getRequest(),\n            session: this.session.getSession(),\n            context: this.context.getContext(),\n            version: this.version\n        }\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RequestFactory.html":{"url":"classes/RequestFactory.html","title":"class - RequestFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RequestFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/test/libs/request/RequestFactory.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                date\n                            \n                            \n                                    Protected\n                                locale\n                            \n                            \n                                    Protected\n                                request\n                            \n                            \n                                    Protected\n                                    Optional\n                                requestID\n                            \n                            \n                                    Protected\n                                requestType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getLocale\n                            \n                            \n                                    Public\n                                getRequest\n                            \n                            \n                                    Private\n                                getRequestId\n                            \n                            \n                                    Private\n                                getRequestType\n                            \n                            \n                                    Private\n                                getTimestamp\n                            \n                            \n                                    Public\n                                putRequest\n                            \n                            \n                                    Public\n                                setLocale\n                            \n                            \n                                    Public\n                                setRequestedDate\n                            \n                            \n                                    Public\n                                setRequestId\n                            \n                            \n                                    Public\n                                setRequestType\n                            \n                            \n                                    Protected\n                                updateRequest\n                            \n                            \n                                    Protected\n                                validateRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(requestType, locale: string)\n                    \n                \n                        \n                            \n                                Defined in packages/test/libs/request/RequestFactory.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        requestType\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        locale\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            date\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                        \n                            \n                                    Defined in packages/test/libs/request/RequestFactory.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            locale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/test/libs/request/RequestFactory.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            request\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Partial\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in packages/test/libs/request/RequestFactory.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Optional\n                            requestID\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/test/libs/request/RequestFactory.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            requestType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/test/libs/request/RequestFactory.ts:8\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getLocale\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getLocale()\n                \n            \n\n\n            \n                \n                    Defined in packages/test/libs/request/RequestFactory.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getRequest()\n                \n            \n\n\n            \n                \n                    Defined in packages/test/libs/request/RequestFactory.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Request\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getRequestId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getRequestId()\n                \n            \n\n\n            \n                \n                    Defined in packages/test/libs/request/RequestFactory.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getRequestType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getRequestType()\n                \n            \n\n\n            \n                \n                    Defined in packages/test/libs/request/RequestFactory.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getTimestamp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTimestamp()\n                \n            \n\n\n            \n                \n                    Defined in packages/test/libs/request/RequestFactory.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putRequest(request: T)\n                \n            \n\n\n            \n                \n                    Defined in packages/test/libs/request/RequestFactory.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setLocale\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setLocale(locale: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/test/libs/request/RequestFactory.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    locale\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setRequestedDate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setRequestedDate(date: Date)\n                \n            \n\n\n            \n                \n                    Defined in packages/test/libs/request/RequestFactory.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setRequestId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setRequestId(id: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/test/libs/request/RequestFactory.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setRequestType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setRequestType(type)\n                \n            \n\n\n            \n                \n                    Defined in packages/test/libs/request/RequestFactory.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateRequest(param?: Partial)\n                \n            \n\n\n            \n                \n                    Defined in packages/test/libs/request/RequestFactory.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    param\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            validateRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateRequest()\n                \n            \n\n\n            \n                \n                    Defined in packages/test/libs/request/RequestFactory.ts:69\n                \n            \n\n\n            \n                \n                    IF the request type has several required value, should overwrite it to test them.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n    Request\n} from 'ask-sdk-model'// 'ask-sdk-model' // 'ask-sdk-core/node_modules/ask-sdk-model'\nimport { v4 as uuid } from 'uuid'\n\nexport class RequestFactory {\n    protected requestID?: string;\n    protected requestType: string;\n    protected date: Date = new Date();\n    protected locale: string;\n    protected request: Partial = {}\n    public constructor (requestType: T['type'], locale: string = 'en-US') {\n        this.requestType = requestType\n        this.locale = locale\n    }\n\n    public setRequestType (type: T['type']): this {\n        this.requestType = type\n        return this\n    }\n    private getRequestType (): string {\n        return this.requestType\n    }\n\n    public setRequestId (id: string): this {\n        this.requestID = id\n        return this\n    }\n    private getRequestId (): string {\n        if (this.requestID) return this.requestID\n        return 'amzn1.echo-external.request.' + uuid()\n    }\n\n    public setRequestedDate (date: Date): this {\n        this.date = date\n        return this\n    }\n    private getTimestamp (): string {\n        const timestamp = this.date.toISOString()\n        return timestamp.substring(0, 19) + 'Z'\n    }\n\n    public setLocale (locale: string): this {\n        this.locale = locale\n        return this\n    }\n    private getLocale (): string {\n        return this.locale\n    }\n\n    public putRequest (request: T): this {\n        this.request = request\n        return this\n    }\n    protected updateRequest (param?: Partial): this {\n        this.request = {\n            ...this.request,\n            timestamp: this.getTimestamp(),\n            locale: this.getLocale(),\n            requestId: this.getRequestId(),\n            type: this.getRequestType(),\n            ...param\n        }\n        return this\n    }\n    /**\n     * IF the request type has several required value, should overwrite it to test them.\n     */\n    protected validateRequest (): void {\n        if (!this.request) throw new Error('No request item')\n    }\n    public getRequest (): Request {\n        this.updateRequest()\n        this.validateRequest()\n        return this.request as Request\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RequestHandlerBuilder.html":{"url":"interfaces/RequestHandlerBuilder.html","title":"interface - RequestHandlerBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RequestHandlerBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/handlers/libs/requestHandlers/HandlerFactory.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    handle\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handle\n                        \n                        \n                    \n                \n            \n            \n                \nhandle(handler: TMergeTargetHandler)\n                \n            \n\n\n            \n                \n                    Defined in packages/handlers/libs/requestHandlers/HandlerFactory.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    handler\n                                    \n                                                TMergeTargetHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TRequestHandler\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { RequestHandler, HandlerInput } from 'ask-sdk-core'\nimport { Response, Request, RequestEnvelope } from 'ask-sdk-model'\nimport Resolver, { interfaces } from 'class-resolver'\nimport { isLaunchRequest } from 'ask-utils'\n\nexport interface TMergeTargetHandler {\n    canHandle?: (input: Input) => Promise | boolean;\n    handle?: (input: Input) => Promise | Output;\n}\nexport interface TRequestHandler {\n    canHandle: (input: Input) => Promise | boolean;\n    handle: (input: Input) => Promise | Output;\n}\nexport interface CustomeRequestEnvelope extends RequestEnvelope {\n    request: CustomRequest;\n}\nexport interface CustomHandlerInput extends HandlerInput {\n    requestEnvelope: CustomeRequestEnvelope;\n}\nexport interface RequestHandlerBuilder extends interfaces.ResolveTarget {\n    handle(handler: TMergeTargetHandler): TRequestHandler;\n}\n\nconst merge = (handler: TMergeTargetHandler, target?: TMergeTargetHandler): TRequestHandler => {\n    const fallBackHandler: RequestHandler = {\n        canHandle () {\n            return true\n        },\n        handle (handlerInput) {\n            return handlerInput.responseBuilder.getResponse()\n        }\n    }\n    return Object.assign({}, fallBackHandler, target, handler)\n}\n\nexport type SupportedHandlerType = 'LaunchRequest'\nexport class RequestHandlerFactory {\n    public static create (type: SupportedHandlerType, handler: TMergeTargetHandler): TRequestHandler {\n        return new Resolver(\n            new LaunchRequestHandlerFactory(),\n            new FallbackIntentFactory()\n        ).resolve(type).handle(handler)\n    }\n}\nexport default RequestHandlerFactory\n\nexport class LaunchRequestHandlerFactory implements RequestHandlerBuilder {\n    supports (type: string) {\n        return type === 'LaunchRequest'\n    }\n    handle (handler: TMergeTargetHandler) {\n        return merge(handler, {\n            canHandle (handlerInput) {\n                return isLaunchRequest(handlerInput)\n            }\n        })\n    }\n}\n\nexport class FallbackIntentFactory implements RequestHandlerBuilder {\n    supports () {\n        return true\n    }\n    handle (handler: TMergeTargetHandler) {\n        return merge(handler)\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RequestHandlerFactory.html":{"url":"classes/RequestHandlerFactory.html","title":"class - RequestHandlerFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RequestHandlerFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/handlers/libs/requestHandlers/HandlerFactory.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(type: SupportedHandlerType, handler: TMergeTargetHandler)\n                \n            \n\n\n            \n                \n                    Defined in packages/handlers/libs/requestHandlers/HandlerFactory.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                SupportedHandlerType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    handler\n                                    \n                                                TMergeTargetHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TRequestHandler\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { RequestHandler, HandlerInput } from 'ask-sdk-core'\nimport { Response, Request, RequestEnvelope } from 'ask-sdk-model'\nimport Resolver, { interfaces } from 'class-resolver'\nimport { isLaunchRequest } from 'ask-utils'\n\nexport interface TMergeTargetHandler {\n    canHandle?: (input: Input) => Promise | boolean;\n    handle?: (input: Input) => Promise | Output;\n}\nexport interface TRequestHandler {\n    canHandle: (input: Input) => Promise | boolean;\n    handle: (input: Input) => Promise | Output;\n}\nexport interface CustomeRequestEnvelope extends RequestEnvelope {\n    request: CustomRequest;\n}\nexport interface CustomHandlerInput extends HandlerInput {\n    requestEnvelope: CustomeRequestEnvelope;\n}\nexport interface RequestHandlerBuilder extends interfaces.ResolveTarget {\n    handle(handler: TMergeTargetHandler): TRequestHandler;\n}\n\nconst merge = (handler: TMergeTargetHandler, target?: TMergeTargetHandler): TRequestHandler => {\n    const fallBackHandler: RequestHandler = {\n        canHandle () {\n            return true\n        },\n        handle (handlerInput) {\n            return handlerInput.responseBuilder.getResponse()\n        }\n    }\n    return Object.assign({}, fallBackHandler, target, handler)\n}\n\nexport type SupportedHandlerType = 'LaunchRequest'\nexport class RequestHandlerFactory {\n    public static create (type: SupportedHandlerType, handler: TMergeTargetHandler): TRequestHandler {\n        return new Resolver(\n            new LaunchRequestHandlerFactory(),\n            new FallbackIntentFactory()\n        ).resolve(type).handle(handler)\n    }\n}\nexport default RequestHandlerFactory\n\nexport class LaunchRequestHandlerFactory implements RequestHandlerBuilder {\n    supports (type: string) {\n        return type === 'LaunchRequest'\n    }\n    handle (handler: TMergeTargetHandler) {\n        return merge(handler, {\n            canHandle (handlerInput) {\n                return isLaunchRequest(handlerInput)\n            }\n        })\n    }\n}\n\nexport class FallbackIntentFactory implements RequestHandlerBuilder {\n    supports () {\n        return true\n    }\n    handle (handler: TMergeTargetHandler) {\n        return merge(handler)\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RequestHandlerFactory-1.html":{"url":"classes/RequestHandlerFactory-1.html","title":"class - RequestHandlerFactory-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RequestHandlerFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/router/libs/requestHandlers/createRequestHandler.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addRoutes\n                            \n                            \n                                    Static\n                                create\n                            \n                            \n                                    Public\n                                createHandlers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            router\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Router[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in packages/router/libs/requestHandlers/createRequestHandler.ts:26\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addRoutes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addRoutes(routers: Router[])\n                \n            \n\n\n            \n                \n                    Defined in packages/router/libs/requestHandlers/createRequestHandler.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    routers\n                                    \n                                                Router[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(route: Router)\n                \n            \n\n\n            \n                \n                    Defined in packages/router/libs/requestHandlers/createRequestHandler.ts:39\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                Router\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     RequestHandler\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            createHandlers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createHandlers()\n                \n            \n\n\n            \n                \n                    Defined in packages/router/libs/requestHandlers/createRequestHandler.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     RequestHandler[]\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { StateManager, State, InitialState } from '@ask-utils/situation'\nimport { RequestHandler } from 'ask-sdk'\nimport {\n    Response\n} from 'ask-sdk-model' // 'ask-sdk-core/node_modules/ask-sdk-model'\nimport {\n    RouteMatcher\n} from '../matcher'\nimport {\n    Router,\n    Situation\n} from '../model'\n\nconst getSituation = (route: Router): Situation | undefined => {\n    const { situation } = route\n    return situation || undefined\n}\nconst getStateFromRoute = (route: Router): InitialState | undefined => {\n    const situation = getSituation(route)\n    if (!situation || !situation.state) return undefined\n    return situation.state as InitialState\n}\n\nexport class RequestHandlerFactory {\n    private router: Router[] = []\n\n    public addRoutes (...routers: Router[]): this {\n        this.router = [...this.router, ...routers]\n        return this\n    }\n\n    public createHandlers (): RequestHandler[] {\n        return this.router.map((route): RequestHandler => {\n            return RequestHandlerFactory.create(route)\n        })\n    }\n\n    public static create (route: Router): RequestHandler {\n        const expectedState = getStateFromRoute(route)\n        return {\n            async canHandle (handlerInput): Promise {\n                const matcher = new RouteMatcher(handlerInput, route)\n                await matcher.match()\n                return matcher.getMatchResult()\n            },\n            handle: (input): Response | Promise => {\n                const stateManager = new StateManager(input.attributesManager, expectedState)\n                /**\n                 * Auto state updator\n                 */\n                if (expectedState) {\n                    const { current, next } = expectedState\n                    if (current && next) {\n                        stateManager.setState(next, [], [current])\n                    }\n                }\n                const situation = getSituation(route)\n                if (situation && situation.shouldEndSession !== undefined) {\n                    input.responseBuilder.withShouldEndSession(situation.shouldEndSession)\n                }\n                const result = route.handler(input, {\n                    stateManager\n                })\n                return result\n            }\n        }\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RequstBody.html":{"url":"interfaces/RequstBody.html","title":"interface - RequstBody","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RequstBody\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        event\n                                \n                                \n                                        expiryTime\n                                \n                                \n                                        timestamp\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        event\n                                    \n                                \n                                \n                                    \n                                        event:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expiryTime\n                                    \n                                \n                                \n                                    \n                                        expiryTime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timestamp\n                                    \n                                \n                                \n                                    \n                                        timestamp:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Response.html":{"url":"interfaces/Response.html","title":"interface - Response","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Response\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        message\n                                \n                                \n                                        request\n                                \n                                \n                                        statusCode\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        request\n                                    \n                                \n                                \n                                    \n                                        request:         RequstBody\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RequstBody\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusCode\n                                    \n                                \n                                \n                                    \n                                        statusCode:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ResponseContent.html":{"url":"interfaces/ResponseContent.html","title":"interface - ResponseContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ResponseContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/libs/contentBuilder.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        directives\n                                \n                                \n                                            Optional\n                                        repromptText\n                                \n                                \n                                            Optional\n                                        speechText\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        directives\n                                    \n                                \n                                \n                                    \n                                        directives:     Directive[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Directive[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        repromptText\n                                    \n                                \n                                \n                                    \n                                        repromptText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        speechText\n                                    \n                                \n                                \n                                    \n                                        speechText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ResponseBuilder } from 'ask-sdk-core'\nimport { Response, Directive } from 'ask-sdk-model'\nexport interface ResponseContent {\n    speechText?: string;\n    repromptText?: string;\n    directives?: Directive[];\n}\nexport class ContentBuilder {\n    protected locale: string\n    protected responseBuilder: ResponseBuilder\n    protected contents: ResponseContent = {}\n    public constructor (locale: string, responseBuilder: ResponseBuilder) {\n        this.locale = locale\n        this.responseBuilder = responseBuilder\n    }\n    protected isJP (): boolean {\n        return /^ja/.test(this.locale)\n    }\n    public putSpeechText (text: string): this {\n        this.contents.speechText = text\n        return this\n    }\n    public putRepromptText (text: string): this {\n        this.contents.repromptText = text\n        return this\n    }\n    public putDirectives (directives: Directive[]): this {\n        if (!this.contents.directives) {\n            this.contents.directives = directives\n            return this\n        }\n        this.contents.directives = this.contents.directives.concat(directives)\n        return this\n    }\n    public putDirective (directive: Directive): this {\n        if (!this.contents.directives) {\n            this.contents.directives = [directive]\n            return this\n        }\n        this.contents.directives.push(directive)\n        return this\n    }\n    public getResponse (): Response {\n        const { speechText, repromptText, directives } = this.contents\n        if (speechText) this.responseBuilder.speak(speechText)\n        if (repromptText) this.responseBuilder.reprompt(repromptText)\n        if (directives) directives.forEach((directive): ResponseBuilder => this.responseBuilder.addDirective(directive))\n        return this.responseBuilder.getResponse()\n    }\n}\nexport default ContentBuilder\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ResponseContent-1.html":{"url":"interfaces/ResponseContent-1.html","title":"interface - ResponseContent-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ResponseContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/isp/libs/contentBuilders/base.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        directive\n                                \n                                \n                                            Optional\n                                        repromptText\n                                \n                                \n                                            Optional\n                                        speechText\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        directive\n                                    \n                                \n                                \n                                    \n                                        directive:         Directive\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Directive\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        repromptText\n                                    \n                                \n                                \n                                    \n                                        repromptText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        speechText\n                                    \n                                \n                                \n                                    \n                                        speechText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { services, Response, Directive } from 'ask-sdk-model'\nimport { ResponseBuilder } from 'ask-sdk-core'\n\nimport InSkillProduct = services.monetization.InSkillProduct\n\nexport interface ResponseContent {\n    speechText?: string;\n    repromptText?: string;\n    directive?: Directive;\n}\n\nexport class ContentBuilder {\n    protected locale: string\n    protected responseBuilder: ResponseBuilder\n    protected contents: ResponseContent = {}\n    public constructor (locale: string, responseBuilder: ResponseBuilder) {\n        this.locale = locale\n        this.responseBuilder = responseBuilder\n    }\n    protected isJP (): boolean {\n        return /^ja/.test(this.locale)\n    }\n    public getResponse (): Response {\n        const { speechText, repromptText, directive } = this.contents\n        if (speechText) this.responseBuilder.speak(speechText)\n        if (repromptText) this.responseBuilder.reprompt(repromptText)\n        if (directive) this.responseBuilder.addDirective(directive)\n        return this.responseBuilder.getResponse()\n    }\n}\n\nexport class ISPContentBuilder extends ContentBuilder {\n    protected productName?: string\n    protected product?: InSkillProduct\n    public constructor (locale: string, responseBuilder: ResponseBuilder, productName?: string, product?: InSkillProduct) {\n        super(locale, responseBuilder)\n        if (productName) this.productName = productName\n        if (product) this.product = product\n    }\n    public setProduct (product: InSkillProduct): this {\n        this.product = product\n        return this\n    }\n    protected getProduct (): InSkillProduct {\n        const { product } = this\n        if (!product) throw new Error('No products')\n        return product\n    }\n    public setProductName (name: string): this {\n        this.productName = name\n        return this\n    }\n    protected getProductName (): string {\n        if (!this.productName) throw new Error('No product name')\n        return this.productName\n    }\n    /**\n   * If the device or account does not supports ISP\n   */\n    private getUnSupportedISPResponse (): ResponseContent {\n        if (this.isJP()) {\n            return {\n                speechText: [\n                    'すみません。',\n                    'お使いのデバイス・アプリでは、スキル内課金を利用することができません。',\n                    '別のデバイスを利用するか、アレクサアプリから設定を確認してもう一度お試しください。',\n                    '次はなにをしますか？',\n                    'スキルを終了して、アプリの設定を確認したい場合は「終了」と話しかけてください。'\n                ].join(' '),\n                repromptText: [\n                    '次はなにをしますか？',\n                    'スキルを終了して、アプリの設定を確認したい場合は「終了」と話しかけてください。'\n                ].join(' ')\n            }\n        }\n        return {\n            speechText: [\n                'Sorry, you can not purchase by the device.',\n                'Please check your device and application settings by the Alexa app.',\n                'What will you do the next?'\n            ].join(' '),\n            repromptText: [\n                'What will you do the next?',\n                'If you want to stop the skill, please say me \"STOP\".'\n            ].join(' ')\n        }\n    }\n    public setUnSupportedISPResponse (): this {\n        this.contents = this.getUnSupportedISPResponse()\n        return this\n    }\n    /**\n   * Product does not found response\n   */\n    private getProductsNotFoundResponse (): ResponseContent {\n        if (this.isJP()) {\n            return {\n                speechText: [\n                    `すみません。商品が見つかりませんでした。`,\n                    '他に何をしますか？'\n                ].join(' '),\n                repromptText: '他に何をしますか？'\n            }\n        }\n        return {\n            speechText: `I can't find any products you can buy. What do you want to do next?`,\n            repromptText: `What do you want to do next?`\n        }\n    }\n    public setProductsNotFoundResponse (): this {\n        this.contents = this.getProductsNotFoundResponse()\n        return this\n    }\n    /**\n   * Product does not found response\n   */\n    private getProductNotFoundResponse (): ResponseContent {\n        try {\n            const productName = this.getProductName()\n            if (this.isJP()) {\n                return {\n                    speechText: [\n                        `${productName}を購入することができます。`,\n                        `詳細を聞きたい場合は「${productName}について教えて」、`,\n                        `購入する場合は「${productName}を購入」と話しかけてください。`,\n                        'どうしますか？'\n                    ].join(' '),\n                    repromptText: '購入・詳細、どちらにしますか？'\n                }\n            }\n            return {\n                speechText: `${productName}. what item do you want?`,\n                repromptText: `${productName}. what item do you want?`\n            }\n        } catch (e) {\n            return this.getProductsNotFoundResponse()\n        }\n    }\n    public setProductNotFoundResponse (): this {\n        this.contents = this.getProductNotFoundResponse()\n        return this\n    }\n    /**\n   * If product not found\n   */\n    private getCanNotBuyTheProductResponse (): ResponseContent {\n        if (this.isJP()) {\n            return {\n                speechText: 'すみません。その商品は現在購入できません。他に何をしますか？',\n                repromptText: '他に何をしますか？'\n            }\n        }\n        return {\n            speechText: \"I don't think we have a product by that name.  Can you try again?\",\n            repromptText: \"I didn't catch that. Can you try again?\"\n        }\n    }\n    public setCanNotBuyTheProductResponse (): this {\n        this.contents = this.getCanNotBuyTheProductResponse()\n        return this\n    }\n    /**\n   * If product already purchased\n   */\n    public getEntitledProductResponse (): ResponseContent {\n        if (this.isJP()) {\n            return {\n                speechText: 'その商品はすでに購入済の様子です。他に何をしますか？',\n                repromptText: '他に何をしますか？'\n            }\n        }\n        return {\n            speechText: 'You already entitled the product. What will you do for next?',\n            repromptText: 'What will you do for next?'\n        }\n    }\n    public setEntitledProductResponse (): this {\n        this.contents = this.getEntitledProductResponse()\n        return this\n    }\n}\nexport default ISPContentBuilder\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RouteMatcher.html":{"url":"classes/RouteMatcher.html","title":"class - RouteMatcher","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RouteMatcher\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/router/libs/matcher/RouteMatcher.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                canHandle\n                            \n                            \n                                    Private\n                                    Readonly\n                                input\n                            \n                            \n                                    Private\n                                    Readonly\n                                request\n                            \n                            \n                                    Private\n                                    Readonly\n                                stateManager\n                            \n                            \n                                    Private\n                                    Readonly\n                                targetRoute\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                executeCustomSituation\n                            \n                            \n                                    Public\n                                getMatchResult\n                            \n                            \n                                    Public\n                                    Async\n                                match\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(input: HandlerInput, targetRoute: Router)\n                    \n                \n                        \n                            \n                                Defined in packages/router/libs/matcher/RouteMatcher.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        input\n                                                  \n                                                        \n                                                                    HandlerInput\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        targetRoute\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            canHandle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in packages/router/libs/matcher/RouteMatcher.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            input\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HandlerInput\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/router/libs/matcher/RouteMatcher.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            request\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Request\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/router/libs/matcher/RouteMatcher.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            stateManager\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         StateManager\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/router/libs/matcher/RouteMatcher.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            targetRoute\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Router\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/router/libs/matcher/RouteMatcher.ts:28\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            executeCustomSituation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    executeCustomSituation()\n                \n            \n\n\n            \n                \n                    Defined in packages/router/libs/matcher/RouteMatcher.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getMatchResult\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMatchResult()\n                \n            \n\n\n            \n                \n                    Defined in packages/router/libs/matcher/RouteMatcher.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            match\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    match()\n                \n            \n\n\n            \n                \n                    Defined in packages/router/libs/matcher/RouteMatcher.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n    HandlerInput\n} from 'ask-sdk-core'\nimport {\n    getRequest,\n    isIntentRequestType\n} from '@ask-utils/core'\nimport {\n    StateManager,\n    State\n} from '@ask-utils/situation'\nimport {\n    Request\n} from 'ask-sdk-model' // 'ask-sdk-core/node_modules/ask-sdk-model'\nimport {\n    Router\n} from '../model'\nimport {\n    shouldMatchIntentRequest,\n    shouldMatchRequestType\n} from './helpers'\n\nexport class RouteMatcher  {\n    private readonly input: HandlerInput\n    private readonly stateManager: StateManager;\n    private readonly request: Request\n    private readonly targetRoute: Router\n    private canHandle: boolean = false\n    public constructor (input: HandlerInput, targetRoute: Router) {\n        this.input = input\n        this.request = getRequest(input)\n        this.stateManager = new StateManager(input.attributesManager)\n        this.targetRoute = targetRoute\n    }\n    private async executeCustomSituation (): Promise {\n        if (!this.targetRoute.situation || !this.targetRoute.situation.custom) return\n        this.canHandle = await this.targetRoute.situation.custom(this.input)\n    }\n    public async match (): Promise {\n        const {\n            request, targetRoute\n        } = this\n        /**\n         * If request type unmatch, always return false\n         */\n        if (!shouldMatchRequestType(request, targetRoute)) {\n            this.canHandle = false\n            return\n        }\n\n        /**\n         * If the request is intent request should check the intent name\n         */\n        if (isIntentRequestType(this.request)) {\n            this.canHandle = shouldMatchIntentRequest(request, targetRoute)\n        } else {\n            // If the request is not Intent Request, set true.(We can overwrite by state and custom)\n            this.canHandle = true\n        }\n\n        /**\n         * Check the requested state\n         */\n        if (this.stateManager.hasState() && this.targetRoute.situation) {\n            const currentState = this.targetRoute.situation.state\n            if (currentState) {\n                this.canHandle = this.stateManager.matchedCurrentState(currentState.current as T)\n            }\n        }\n\n        /**\n         * Execute custom matcher function\n         */\n        await this.executeCustomSituation()\n    }\n    public getMatchResult (): boolean {\n        return this.canHandle\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Router.html":{"url":"interfaces/Router.html","title":"interface - Router","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Router\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/router/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        handler\n                                \n                                \n                                            Optional\n                                        intentName\n                                \n                                \n                                        requestType\n                                \n                                \n                                            Optional\n                                        situation\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        handler\n                                    \n                                \n                                \n                                    \n                                        handler:         RouterHandler\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RouterHandler\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        intentName\n                                    \n                                \n                                \n                                    \n                                        intentName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        requestType\n                                    \n                                \n                                \n                                    \n                                        requestType:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        situation\n                                    \n                                \n                                \n                                    \n                                        situation:         Situation\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Situation\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HandlerInput } from 'ask-sdk'\nimport { Response, Request\n} from 'ask-sdk-model' // 'ask-sdk-core/node_modules/ask-sdk-model'\nimport { StateManager, State } from '@ask-utils/situation'\n\n/**\n * Router for ASK SDK v2\n */\nexport interface Situation {\n    state?: SituationState;\n    custom?: (input: HandlerInput) => boolean | Promise;\n    shouldEndSession?: boolean;\n}\n\ninterface SituationState {\n    current?: string;\n    next?: string;\n}\n\nexport interface HandlerHelpers {\n    stateManager: StateManager;\n}\nexport type RouterHandler = (handlerInput: HandlerInput, helpers: HandlerHelpers) => Response | Promise\n\nexport interface Router {\n    requestType: Request['type'];\n    intentName?: string;\n    situation?: Situation;\n    handler: RouterHandler;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/S3SkillConfig.html":{"url":"interfaces/S3SkillConfig.html","title":"interface - S3SkillConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  S3SkillConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ask-utils/libs/models.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseSkillConfig\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        bucketName\n                                \n                                \n                                        bucketPathPrefix\n                                \n                                \n                                        persistanceType\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bucketName\n                                    \n                                \n                                \n                                    \n                                        bucketName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bucketPathPrefix\n                                    \n                                \n                                \n                                    \n                                        bucketPathPrefix:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        persistanceType\n                                    \n                                \n                                \n                                    \n                                        persistanceType:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n    RequestInterceptor,\n    ResponseInterceptor,\n    ErrorHandler,\n    RequestHandler\n} from 'ask-sdk'\nimport {\n    SkillConstants\n} from '@ask-utils/handlers'\n\ntype PersistanceType = 'DynamoDB' | 'S3'\ninterface BaseSkillConfig {\n    persistanceType: PersistanceType;\n    isISP?: boolean;\n    constants?: T;\n}\nexport interface S3SkillConfig extends BaseSkillConfig {\n    persistanceType: 'S3';\n    bucketName: string;\n    bucketPathPrefix: string;\n}\nexport interface DynamoDBSkillConfig extends BaseSkillConfig {\n    persistanceType: 'DynamoDB';\n    tableName: string;\n}\nexport type SkillConfig = S3SkillConfig | DynamoDBSkillConfig\nexport interface SkillHandlers {\n    requestHandlers: RequestHandler[];\n    requestInterceptors?: RequestInterceptor[];\n    responseInterceptors?: ResponseInterceptor[];\n    errorHandlers?: ErrorHandler[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SentryErrorHandlerFactory.html":{"url":"classes/SentryErrorHandlerFactory.html","title":"class - SentryErrorHandlerFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SentryErrorHandlerFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/error-handlers/libs/index.ts\n        \n\n            \n                Description\n            \n            \n                ErrorHandler Factory for Sentry\n\n            \n\n\n\n            \n                Example\n            \n            \n                        \n                            Basic\n```typescript\n * const ErrorHandler = SentryErrorHandlerFactory.init().getHandler()\n * ```\n                        \n                        \n                            Custom speech and reprompt\n```typescript\n * const ErrorHandler = SentryErrorHandlerFactory.init()\n *                          .setErrorResponse('Speech something', 'reprompt something')\n *                          .getHandler()\n * ```\n                        \n                        \n                            Custom handler\n```typescript\n * const ErrorHandler = SentryErrorHandlerFactory.init()\n *                          .setHandle((handlerInput) => {\n *                            return handlerInput.responseBuilder\n *                              .speak('Sorry I could not understand the meaning. Please tell me again')\n *                              .reprompt('Could you tell me onece more?')\n *                              .getResponse()\n *                          })\n *                          .getHandler()\n * ```\n                        \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in packages/error-handlers/libs/index.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorHandlerBuilder\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ErrorHandler, RequestInterceptor, HandlerInput } from 'ask-sdk-core'\nimport { Response } from 'ask-sdk-model'\nimport * as Sentry from '@sentry/node'\nSentry.init({ dsn: process.env.SENTRY_DNS as string })\n\nexport type ErrorHandle = (handlerInput: HandlerInput, error: Error) => Promise | Response\nexport interface ErrorHandlerBuilder {\n    getHandler(): ErrorHandler;\n    setHandle(handle: ErrorHandle): ErrorHandlerBuilder;\n    setErrorResponse(speechText: string, repromptText: string): ErrorHandlerBuilder;\n}\n/**\n * ErrorHandler Factory for Sentry\n *\n * @example Basic\n * ```typescript\n * const ErrorHandler = SentryErrorHandlerFactory.init().getHandler()\n * ```\n * @example Custom speech and reprompt\n * ```typescript\n * const ErrorHandler = SentryErrorHandlerFactory.init()\n *                          .setErrorResponse('Speech something', 'reprompt something')\n *                          .getHandler()\n * ```\n * @example Custom handler\n * ```typescript\n * const ErrorHandler = SentryErrorHandlerFactory.init()\n *                          .setHandle((handlerInput) => {\n *                            return handlerInput.responseBuilder\n *                              .speak('Sorry I could not understand the meaning. Please tell me again')\n *                              .reprompt('Could you tell me onece more?')\n *                              .getResponse()\n *                          })\n *                          .getHandler()\n * ```\n */\nexport class SentryErrorHandlerFactory {\n    public static init (): ErrorHandlerBuilder {\n        let handlerFilter: ErrorHandle = (handlerInput) => {\n            return handlerInput.responseBuilder\n                .speak('Sorry I could not understand the meaning. Please tell me again')\n                .reprompt('Could you tell me onece more?')\n                .getResponse()\n        }\n\n        const handler: ErrorHandler = {\n            canHandle: () => true,\n            handle: (handlerInput, error) => {\n                Sentry.captureEvent({\n                    message: error.message,\n                    extra: {\n                        request: handlerInput.requestEnvelope,\n                        error,\n                        stack: error.stack\n                    }\n                })\n                return handlerFilter(handlerInput, error)\n            }\n        }\n        return {\n            getHandler (): ErrorHandler {\n                return handler\n            },\n            setHandle (handle: ErrorHandle) {\n                handlerFilter = handle\n                return this\n            },\n            setErrorResponse (speechText: string, repromptText: string) {\n                handlerFilter = (handlerInput) => {\n                    return handlerInput.responseBuilder\n                        .speak(speechText)\n                        .reprompt(repromptText)\n                        .getResponse()\n                }\n                return this\n            }\n        }\n    }\n}\n\nexport const SentryDefaultErrorHandler: ErrorHandler = SentryErrorHandlerFactory.init().getHandler()\n\n/**\n * Set additional track information\n *\n * @example\n * import Alexa from 'ask-sdk'\n * import { SetErrorTrackerInterceptor, SentryDefaultErrorHandler } from '@ask-utils/error-handlers'\n *\n * export const handler = Alexa.SkillBuilders.standard()\n *                            .addErrorHandlers(SentryDefaultErrorHandler)\n *                            .addRequestInterceptors(SetErrorTrackerInterceptor)\n *                            .lambda()\n */\nexport const SetErrorTrackerInterceptor: RequestInterceptor = {\n    process ({ requestEnvelope }) {\n        const { System } = requestEnvelope.context\n        const userParams: {[key: string]: string} = {\n            userId: System.user.userId\n        }\n        if (System.device) userParams.deviceId = System.device.deviceId\n        if (requestEnvelope.session) userParams.sessionId = requestEnvelope.session.sessionId\n\n        Sentry.configureScope(scope => {\n            scope.setTag('request_id', requestEnvelope.request.requestId)\n            scope.setUser(userParams)\n        })\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SessionAttribute.html":{"url":"interfaces/SessionAttribute.html","title":"interface - SessionAttribute","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SessionAttribute\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/test/libs/session/SessionFactory.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in packages/test/libs/session/SessionFactory.ts:8\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import {\n    User,\n    Session,\n    Application\n} from 'ask-sdk-model' // 'ask-sdk-core/node_modules/ask-sdk-model'\nimport { v4 as uuid } from 'uuid'\n\nexport interface SessionAttribute {\n    [key: string]: any;\n}\n\nexport class SessionFactory {\n    protected session: Session = {\n        new: true,\n        sessionId: 'SessionID.' + uuid(),\n        application: {\n            applicationId: ''\n        },\n        user: {\n            userId: ''\n        }\n    }\n\n    public putApplication (app: Application): this {\n        this.session.application = app\n        return this\n    }\n\n    public putSessionId (sessionId: string): this {\n        this.session.sessionId = sessionId\n        return this\n    }\n    public putUser (user: User): this {\n        this.session.user = user\n        return this\n    }\n\n    public putAttributes (attributes: T): this {\n        this.session.attributes = attributes\n        return this\n    }\n\n    public isNewSession (status: boolean): this {\n        this.session.new = status\n        return this\n    }\n\n    public putSession (session: Session): this {\n        this.session = session\n        return this\n    }\n    public getSession (): Session {\n        return this.session\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SessionFactory.html":{"url":"classes/SessionFactory.html","title":"class - SessionFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SessionFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/test/libs/session/SessionFactory.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                session\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getSession\n                            \n                            \n                                    Public\n                                isNewSession\n                            \n                            \n                                    Public\n                                putApplication\n                            \n                            \n                                    Public\n                                putAttributes\n                            \n                            \n                                    Public\n                                putSession\n                            \n                            \n                                    Public\n                                putSessionId\n                            \n                            \n                                    Public\n                                putUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            session\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Session\n\n                        \n                    \n                    \n                        \n                            Default value : {\n        new: true,\n        sessionId: 'SessionID.' + uuid(),\n        application: {\n            applicationId: ''\n        },\n        user: {\n            userId: ''\n        }\n    }\n                        \n                    \n                        \n                            \n                                    Defined in packages/test/libs/session/SessionFactory.ts:13\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getSession\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSession()\n                \n            \n\n\n            \n                \n                    Defined in packages/test/libs/session/SessionFactory.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Session\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isNewSession\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isNewSession(status: boolean)\n                \n            \n\n\n            \n                \n                    Defined in packages/test/libs/session/SessionFactory.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    status\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putApplication\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putApplication(app: Application)\n                \n            \n\n\n            \n                \n                    Defined in packages/test/libs/session/SessionFactory.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            Application\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putAttributes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putAttributes(attributes: T)\n                \n            \n\n\n            \n                \n                    Defined in packages/test/libs/session/SessionFactory.ts:38\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    attributes\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putSession\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putSession(session: Session)\n                \n            \n\n\n            \n                \n                    Defined in packages/test/libs/session/SessionFactory.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    session\n                                    \n                                            Session\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putSessionId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putSessionId(sessionId: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/test/libs/session/SessionFactory.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sessionId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putUser(user: User)\n                \n            \n\n\n            \n                \n                    Defined in packages/test/libs/session/SessionFactory.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                            User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n    User,\n    Session,\n    Application\n} from 'ask-sdk-model' // 'ask-sdk-core/node_modules/ask-sdk-model'\nimport { v4 as uuid } from 'uuid'\n\nexport interface SessionAttribute {\n    [key: string]: any;\n}\n\nexport class SessionFactory {\n    protected session: Session = {\n        new: true,\n        sessionId: 'SessionID.' + uuid(),\n        application: {\n            applicationId: ''\n        },\n        user: {\n            userId: ''\n        }\n    }\n\n    public putApplication (app: Application): this {\n        this.session.application = app\n        return this\n    }\n\n    public putSessionId (sessionId: string): this {\n        this.session.sessionId = sessionId\n        return this\n    }\n    public putUser (user: User): this {\n        this.session.user = user\n        return this\n    }\n\n    public putAttributes (attributes: T): this {\n        this.session.attributes = attributes\n        return this\n    }\n\n    public isNewSession (status: boolean): this {\n        this.session.new = status\n        return this\n    }\n\n    public putSession (session: Session): this {\n        this.session = session\n        return this\n    }\n    public getSession (): Session {\n        return this.session\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SettingAPIClient.html":{"url":"classes/SettingAPIClient.html","title":"class - SettingAPIClient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SettingAPIClient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/serviceClients/libs/Settings.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Client\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                path\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                getDistanceUnits\n                            \n                            \n                                    Public\n                                    Async\n                                getTempratureUnit\n                            \n                            \n                                    Public\n                                    Async\n                                getTimezone\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '/v2/devices/'\n                        \n                    \n                        \n                            \n                                    Defined in packages/serviceClients/libs/Settings.ts:5\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getDistanceUnits\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDistanceUnits(deviceId: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/serviceClients/libs/Settings.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    deviceId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getTempratureUnit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTempratureUnit(deviceId: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/serviceClients/libs/Settings.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    deviceId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getTimezone\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTimezone(deviceId: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/serviceClients/libs/Settings.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    deviceId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { services } from 'ask-sdk-model'\nimport Client from './client'\n\nexport class SettingAPIClient extends Client {\n    protected path = '/v2/devices/'\n    public async getTimezone (deviceId: string): Promise {\n        return this.get(`${deviceId}/settings/System.timeZone`)\n    }\n    public async getTempratureUnit (deviceId: string): Promise {\n        return this.get(`${deviceId}/settings/System.temperatureUnit`)\n    }\n    public async getDistanceUnits (deviceId: string): Promise {\n        return this.get(`${deviceId}/settings/System.distanceUnits`)\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Situation.html":{"url":"interfaces/Situation.html","title":"interface - Situation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Situation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/router/libs/model.ts\n        \n\n            \n                Description\n            \n            \n                Router for ASK SDK v2\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        custom\n                                \n                                \n                                            Optional\n                                        shouldEndSession\n                                \n                                \n                                            Optional\n                                        state\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        custom\n                                    \n                                \n                                \n                                    \n                                        custom:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shouldEndSession\n                                    \n                                \n                                \n                                    \n                                        shouldEndSession:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        state\n                                    \n                                \n                                \n                                    \n                                        state:         SituationState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SituationState\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HandlerInput } from 'ask-sdk'\nimport { Response, Request\n} from 'ask-sdk-model' // 'ask-sdk-core/node_modules/ask-sdk-model'\nimport { StateManager, State } from '@ask-utils/situation'\n\n/**\n * Router for ASK SDK v2\n */\nexport interface Situation {\n    state?: SituationState;\n    custom?: (input: HandlerInput) => boolean | Promise;\n    shouldEndSession?: boolean;\n}\n\ninterface SituationState {\n    current?: string;\n    next?: string;\n}\n\nexport interface HandlerHelpers {\n    stateManager: StateManager;\n}\nexport type RouterHandler = (handlerInput: HandlerInput, helpers: HandlerHelpers) => Response | Promise\n\nexport interface Router {\n    requestType: Request['type'];\n    intentName?: string;\n    situation?: Situation;\n    handler: RouterHandler;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SituationState.html":{"url":"interfaces/SituationState.html","title":"interface - SituationState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SituationState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/router/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        current\n                                \n                                \n                                            Optional\n                                        next\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        current\n                                    \n                                \n                                \n                                    \n                                        current:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        next\n                                    \n                                \n                                \n                                    \n                                        next:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HandlerInput } from 'ask-sdk'\nimport { Response, Request\n} from 'ask-sdk-model' // 'ask-sdk-core/node_modules/ask-sdk-model'\nimport { StateManager, State } from '@ask-utils/situation'\n\n/**\n * Router for ASK SDK v2\n */\nexport interface Situation {\n    state?: SituationState;\n    custom?: (input: HandlerInput) => boolean | Promise;\n    shouldEndSession?: boolean;\n}\n\ninterface SituationState {\n    current?: string;\n    next?: string;\n}\n\nexport interface HandlerHelpers {\n    stateManager: StateManager;\n}\nexport type RouterHandler = (handlerInput: HandlerInput, helpers: HandlerHelpers) => Response | Promise\n\nexport interface Router {\n    requestType: Request['type'];\n    intentName?: string;\n    situation?: Situation;\n    handler: RouterHandler;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Skill.html":{"url":"interfaces/Skill.html","title":"interface - Skill","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Skill\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SkillConstants.html":{"url":"interfaces/SkillConstants.html","title":"interface - SkillConstants","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SkillConstants\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/handlers/libs/requestInterceptors/InjectConstants.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in packages/handlers/libs/requestInterceptors/InjectConstants.ts:4\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { HandlerInput } from 'ask-sdk-core'\nimport { RequestInterceptor } from 'ask-sdk-runtime'\n\nexport interface SkillConstants {\n    [key: string]: any;\n}\nexport class ConstantsInterceptorFactory {\n    public static init (constants: T): RequestInterceptor {\n        return {\n            async process ({ attributesManager }: HandlerInput) {\n                const atts = attributesManager.getRequestAttributes()\n                attributesManager.setRequestAttributes({\n                    ...atts,\n                    CONSTANTS: constants\n                })\n            }\n        }\n    }\n}\n\nexport default ConstantsInterceptorFactory\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SkillHandlers.html":{"url":"interfaces/SkillHandlers.html","title":"interface - SkillHandlers","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SkillHandlers\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ask-utils/libs/models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        errorHandlers\n                                \n                                \n                                        requestHandlers\n                                \n                                \n                                            Optional\n                                        requestInterceptors\n                                \n                                \n                                            Optional\n                                        responseInterceptors\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errorHandlers\n                                    \n                                \n                                \n                                    \n                                        errorHandlers:     ErrorHandler[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ErrorHandler[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        requestHandlers\n                                    \n                                \n                                \n                                    \n                                        requestHandlers:     RequestHandler[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     RequestHandler[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        requestInterceptors\n                                    \n                                \n                                \n                                    \n                                        requestInterceptors:     RequestInterceptor[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     RequestInterceptor[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        responseInterceptors\n                                    \n                                \n                                \n                                    \n                                        responseInterceptors:         ResponseInterceptor[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ResponseInterceptor[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n    RequestInterceptor,\n    ResponseInterceptor,\n    ErrorHandler,\n    RequestHandler\n} from 'ask-sdk'\nimport {\n    SkillConstants\n} from '@ask-utils/handlers'\n\ntype PersistanceType = 'DynamoDB' | 'S3'\ninterface BaseSkillConfig {\n    persistanceType: PersistanceType;\n    isISP?: boolean;\n    constants?: T;\n}\nexport interface S3SkillConfig extends BaseSkillConfig {\n    persistanceType: 'S3';\n    bucketName: string;\n    bucketPathPrefix: string;\n}\nexport interface DynamoDBSkillConfig extends BaseSkillConfig {\n    persistanceType: 'DynamoDB';\n    tableName: string;\n}\nexport type SkillConfig = S3SkillConfig | DynamoDBSkillConfig\nexport interface SkillHandlers {\n    requestHandlers: RequestHandler[];\n    requestInterceptors?: RequestInterceptor[];\n    responseInterceptors?: ResponseInterceptor[];\n    errorHandlers?: ErrorHandler[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SkillHandlersBuilder.html":{"url":"interfaces/SkillHandlersBuilder.html","title":"interface - SkillHandlersBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SkillHandlersBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ask-utils/libs/handlerBuilders.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    addErrorHandlers\n                                \n                                \n                                    addRequestHandlers\n                                \n                                \n                                    addRequestInterceptors\n                                \n                                \n                                    addResponseInterceptors\n                                \n                                \n                                    getHandlers\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addErrorHandlers\n                        \n                        \n                    \n                \n            \n            \n                \naddErrorHandlers(...errorHandlers: ErrorHandler[])\n                \n            \n\n\n            \n                \n                    Defined in packages/ask-utils/libs/handlerBuilders.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    errorHandlers\n                                    \n                                            ErrorHandler[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SkillHandlersBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addRequestHandlers\n                        \n                        \n                    \n                \n            \n            \n                \naddRequestHandlers(...requestHandlers: RequestHandler[])\n                \n            \n\n\n            \n                \n                    Defined in packages/ask-utils/libs/handlerBuilders.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    requestHandlers\n                                    \n                                            RequestHandler[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SkillHandlersBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addRequestInterceptors\n                        \n                        \n                    \n                \n            \n            \n                \naddRequestInterceptors(...requestInterceptors: RequestInterceptor[])\n                \n            \n\n\n            \n                \n                    Defined in packages/ask-utils/libs/handlerBuilders.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    requestInterceptors\n                                    \n                                            RequestInterceptor[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SkillHandlersBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addResponseInterceptors\n                        \n                        \n                    \n                \n            \n            \n                \naddResponseInterceptors(responseInterceptors: ResponseInterceptor[])\n                \n            \n\n\n            \n                \n                    Defined in packages/ask-utils/libs/handlerBuilders.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    responseInterceptors\n                                    \n                                                ResponseInterceptor[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SkillHandlersBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHandlers\n                        \n                        \n                    \n                \n            \n            \n                \ngetHandlers()\n                \n            \n\n\n            \n                \n                    Defined in packages/ask-utils/libs/handlerBuilders.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         SkillHandlers\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n    RequestInterceptor,\n    ResponseInterceptor,\n    ErrorHandler,\n    RequestHandler\n} from 'ask-sdk'\nimport {\n    SkillHandlers\n} from './models'\n\nexport interface SkillHandlersBuilder {\n    addRequestHandlers(...requestHandlers: RequestHandler[]): SkillHandlersBuilder;\n    addRequestInterceptors(...requestInterceptors: RequestInterceptor[]): SkillHandlersBuilder;\n    addResponseInterceptors(...responseInterceptors: ResponseInterceptor[]): SkillHandlersBuilder;\n    addErrorHandlers(...errorHandlers: ErrorHandler[]): SkillHandlersBuilder;\n    getHandlers(): SkillHandlers;\n}\nexport class SkillHandlersFactory {\n    public static create (): SkillHandlersBuilder {\n        const handlers: Required = {\n            requestHandlers: [],\n            requestInterceptors: [],\n            responseInterceptors: [],\n            errorHandlers: []\n        }\n        return {\n            addRequestHandlers (...requestHandlers: RequestHandler[]): SkillHandlersBuilder {\n                requestHandlers.forEach(handler => handlers.requestHandlers.push(handler))\n                return this\n            },\n            addRequestInterceptors (...requestInterceptors: RequestInterceptor[]): SkillHandlersBuilder {\n                if (!handlers.requestInterceptors) handlers.requestInterceptors = []\n                requestInterceptors.forEach(interceptor => handlers.requestInterceptors.push(interceptor))\n                return this\n            },\n            addResponseInterceptors (...responseInterceptors: ResponseInterceptor[]): SkillHandlersBuilder {\n                if (!handlers.responseInterceptors) handlers.responseInterceptors = []\n                responseInterceptors.forEach(interceptor => handlers.responseInterceptors.push(interceptor))\n                return this\n            },\n            addErrorHandlers (...errorHandlers: ErrorHandler[]): SkillHandlersBuilder {\n                if (!handlers.errorHandlers) handlers.errorHandlers = []\n                handlers.errorHandlers.concat(errorHandlers)\n                return this\n            },\n            getHandlers (): SkillHandlers {\n                return handlers\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SkillHandlersFactory.html":{"url":"classes/SkillHandlersFactory.html","title":"class - SkillHandlersFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SkillHandlersFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ask-utils/libs/handlerBuilders.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create()\n                \n            \n\n\n            \n                \n                    Defined in packages/ask-utils/libs/handlerBuilders.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         SkillHandlersBuilder\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n    RequestInterceptor,\n    ResponseInterceptor,\n    ErrorHandler,\n    RequestHandler\n} from 'ask-sdk'\nimport {\n    SkillHandlers\n} from './models'\n\nexport interface SkillHandlersBuilder {\n    addRequestHandlers(...requestHandlers: RequestHandler[]): SkillHandlersBuilder;\n    addRequestInterceptors(...requestInterceptors: RequestInterceptor[]): SkillHandlersBuilder;\n    addResponseInterceptors(...responseInterceptors: ResponseInterceptor[]): SkillHandlersBuilder;\n    addErrorHandlers(...errorHandlers: ErrorHandler[]): SkillHandlersBuilder;\n    getHandlers(): SkillHandlers;\n}\nexport class SkillHandlersFactory {\n    public static create (): SkillHandlersBuilder {\n        const handlers: Required = {\n            requestHandlers: [],\n            requestInterceptors: [],\n            responseInterceptors: [],\n            errorHandlers: []\n        }\n        return {\n            addRequestHandlers (...requestHandlers: RequestHandler[]): SkillHandlersBuilder {\n                requestHandlers.forEach(handler => handlers.requestHandlers.push(handler))\n                return this\n            },\n            addRequestInterceptors (...requestInterceptors: RequestInterceptor[]): SkillHandlersBuilder {\n                if (!handlers.requestInterceptors) handlers.requestInterceptors = []\n                requestInterceptors.forEach(interceptor => handlers.requestInterceptors.push(interceptor))\n                return this\n            },\n            addResponseInterceptors (...responseInterceptors: ResponseInterceptor[]): SkillHandlersBuilder {\n                if (!handlers.responseInterceptors) handlers.responseInterceptors = []\n                responseInterceptors.forEach(interceptor => handlers.responseInterceptors.push(interceptor))\n                return this\n            },\n            addErrorHandlers (...errorHandlers: ErrorHandler[]): SkillHandlersBuilder {\n                if (!handlers.errorHandlers) handlers.errorHandlers = []\n                handlers.errorHandlers.concat(errorHandlers)\n                return this\n            },\n            getHandlers (): SkillHandlers {\n                return handlers\n            }\n        }\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SkillState.html":{"url":"interfaces/SkillState.html","title":"interface - SkillState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SkillState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/situationManager/libs/StateManager.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        before\n                                \n                                \n                                        current\n                                \n                                \n                                            Optional\n                                        next\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        before\n                                    \n                                \n                                \n                                    \n                                        before:     T[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        current\n                                    \n                                \n                                \n                                    \n                                        current:     T | \"\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T | \"\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        next\n                                    \n                                \n                                \n                                    \n                                        next:     T[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n    AttributesManager\n} from 'ask-sdk-core'\n\nexport type State = string\nexport interface SkillState {\n    current: T | '';\n    next?: T[];\n    before?: T[];\n}\nexport interface InitialState {\n    current?: T;\n    next?: T;\n}\nexport class StateManager {\n    public stateKey: string = '__state'\n    private state: SkillState;\n    private readonly attributeManager: AttributesManager\n    public constructor (attributeManager: AttributesManager, initialState?: InitialState) {\n        this.attributeManager = attributeManager\n        this.state = {\n            current: initialState && initialState.current ? initialState.current : '',\n            next: initialState && initialState.next ? [initialState.next] : []\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    private isState (state: any): state is SkillState {\n        return state && state.current\n    }\n    private mergeSessionAttributes (): this {\n        const { state, stateKey, attributeManager } = this\n        const attributes = {\n            ...attributeManager.getSessionAttributes(),\n            [stateKey]: state\n        }\n        attributeManager.setSessionAttributes(attributes)\n        return this\n    }\n    public setState (current: T, next?: T[], before?: T[]): this {\n        this.state = {\n            current,\n            next,\n            before\n        }\n        this.mergeSessionAttributes()\n        return this\n    }\n\n    public getState (): SkillState {\n        const { stateKey, attributeManager } = this\n\n        const attributes = attributeManager.getSessionAttributes()\n        const targetState = attributes[stateKey]\n        if (!this.isState(targetState)) {\n            this.mergeSessionAttributes()\n            const retryAtt = attributeManager.getSessionAttributes()\n            return retryAtt[stateKey]\n        }\n        return targetState\n    }\n\n    public hasState (): boolean {\n        const state = this.getState()\n        if (!state) return false\n        return state.current !== ''\n    }\n\n    public getCurrentState (): T | '' {\n        const targetState = this.getState()\n        return targetState.current\n    }\n\n    public getNextState (): T[] {\n        const targetState = this.getState()\n        return targetState.next || []\n    }\n\n    public getBeforeState (): T[] {\n        const targetState = this.getState()\n        return targetState.before || []\n    }\n\n    public matchedCurrentState (state: T): boolean {\n        return this.getCurrentState() === state\n    }\n    public includesNextState (state: T): boolean {\n        return this.getNextState().includes(state)\n    }\n    public includesBeforeState (state: T): boolean {\n        return this.getBeforeState().includes(state)\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Soccer.html":{"url":"interfaces/Soccer.html","title":"interface - Soccer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Soccer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SpeechScriptResponse.html":{"url":"interfaces/SpeechScriptResponse.html","title":"interface - SpeechScriptResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SpeechScriptResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/speech-script/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        progressiveResponse\n                                \n                                \n                                            Optional\n                                        reprompt\n                                \n                                \n                                            Optional\n                                        speech\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        progressiveResponse\n                                    \n                                \n                                \n                                    \n                                        progressiveResponse:         ProgressiveResponse\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ProgressiveResponse\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reprompt\n                                    \n                                \n                                \n                                    \n                                        reprompt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        speech\n                                    \n                                \n                                \n                                    \n                                        speech:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FC } from 'ssml-tsx'\nimport { Request, Session, Context, services } from 'ask-sdk-model'\nimport { AttributesManager } from 'ask-sdk'\n\nexport interface ProgressiveResponse {\n    ssml: string;\n    directive: services.directive.SendDirectiveRequest;\n}\nexport interface SpeechScriptResponse {\n    speech?: string;\n    reprompt?: string;\n    progressiveResponse?: ProgressiveResponse;\n}\n\nexport interface AlexaSpeechComponentProps {\n    request: T;\n    attributesManager: AttributesManager;\n    session?: Session;\n    context: Context;\n    options?: U;\n}\nexport type AlexaSpeechComponent = FC> | null\nexport type AlexaSpeechComponentFunction = (props: AlexaSpeechComponentProps) => FC | JSX.Element | JSX.Element[]\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SportsEvent.html":{"url":"interfaces/SportsEvent.html","title":"interface - SportsEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SportsEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        awayTeamStatistic\n                                \n                                \n                                        eventLeague\n                                \n                                \n                                        homeTeamStatistic\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        awayTeamStatistic\n                                    \n                                \n                                \n                                    \n                                        awayTeamStatistic:         GameStatistic\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GameStatistic\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        eventLeague\n                                    \n                                \n                                \n                                    \n                                        eventLeague:         Soccer\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Soccer\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        homeTeamStatistic\n                                    \n                                \n                                \n                                    \n                                        homeTeamStatistic:         GameStatistic\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GameStatistic\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SportsTeam.html":{"url":"interfaces/SportsTeam.html","title":"interface - SportsTeam","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SportsTeam\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StateManager.html":{"url":"classes/StateManager.html","title":"class - StateManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StateManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/libs/stateManager.ts\n        \n\n            \n                Description\n            \n            \n                State manager class\n\n            \n\n\n\n            \n                Example\n            \n            \n                        \n                            ```\n * type NEWSTATE = 'BYE' | 'HELLO'\n * export const updateState = (attributeManager: AttributesManager): void => StateManager.updateState(attributeManager, 'HELLO')\n * export const getState = (attributeManager: AttributesManager): NEWSTATE => StateManager.getCurrentState(attributeManager)\n * export const isHelloState = (attributeManager: AttributesManager): boolean => {\n *   const state = getState(attributeManager)\n *   return state === 'HELLO'\n * }\n * const TestHandler: RequestHandler = {\n *   canHandle(handlerInput) {\n *     if (handlerInput.requestEnvelope.request.type !== 'LaunchRequest') return false\n *     return isHelloState(handlerInput.attributesManager)\n *   },\n *   handle(handlerInput) {\n *     ...\n *   }\n * }\n * ```\n                        \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getCurrentState\n                            \n                            \n                                    Static\n                                isMatchedState\n                            \n                            \n                                    Static\n                                resetState\n                            \n                            \n                                    Static\n                                updateState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getCurrentState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCurrentState(attributeManager: AttributesManager)\n                \n            \n\n\n            \n                \n                    Defined in packages/core/libs/stateManager.ts:35\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    attributeManager\n                                    \n                                            AttributesManager\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            isMatchedState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isMatchedState(attributeManager: AttributesManager, state: T)\n                \n            \n\n\n            \n                \n                    Defined in packages/core/libs/stateManager.ts:42\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    attributeManager\n                                    \n                                            AttributesManager\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            resetState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetState(attributeManager: AttributesManager)\n                \n            \n\n\n            \n                \n                    Defined in packages/core/libs/stateManager.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    attributeManager\n                                    \n                                            AttributesManager\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            updateState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateState(attributeManager: AttributesManager, state: T)\n                \n            \n\n\n            \n                \n                    Defined in packages/core/libs/stateManager.ts:29\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    attributeManager\n                                    \n                                            AttributesManager\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n    AttributesManager\n} from 'ask-sdk-core'\nexport type DefaultState = string\n\n/**\n * State manager class\n * @example\n * ```\n * type NEWSTATE = 'BYE' | 'HELLO'\n * export const updateState = (attributeManager: AttributesManager): void => StateManager.updateState(attributeManager, 'HELLO')\n * export const getState = (attributeManager: AttributesManager): NEWSTATE => StateManager.getCurrentState(attributeManager)\n * export const isHelloState = (attributeManager: AttributesManager): boolean => {\n *   const state = getState(attributeManager)\n *   return state === 'HELLO'\n * }\n * const TestHandler: RequestHandler = {\n *   canHandle(handlerInput) {\n *     if (handlerInput.requestEnvelope.request.type !== 'LaunchRequest') return false\n *     return isHelloState(handlerInput.attributesManager)\n *   },\n *   handle(handlerInput) {\n *     ...\n *   }\n * }\n * ```\n */\nexport class StateManager {\n    public static updateState (attributeManager: AttributesManager, state: T): void {\n        attributeManager.setSessionAttributes({\n            ...attributeManager.getSessionAttributes(),\n            state\n        })\n    }\n    public static getCurrentState (attributeManager: AttributesManager): T {\n        const att = attributeManager.getSessionAttributes()\n        return att.state || ''\n    }\n    public static resetState (attributeManager: AttributesManager): void {\n        this.updateState(attributeManager, '')\n    }\n    public static isMatchedState (attributeManager: AttributesManager, state: T): boolean {\n        return state === this.getCurrentState(attributeManager)\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StateManager-1.html":{"url":"classes/StateManager-1.html","title":"class - StateManager-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StateManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/situationManager/libs/StateManager.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                attributeManager\n                            \n                            \n                                    Private\n                                state\n                            \n                            \n                                    Public\n                                stateKey\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getBeforeState\n                            \n                            \n                                    Public\n                                getCurrentState\n                            \n                            \n                                    Public\n                                getNextState\n                            \n                            \n                                    Public\n                                getState\n                            \n                            \n                                    Public\n                                hasState\n                            \n                            \n                                    Public\n                                includesBeforeState\n                            \n                            \n                                    Public\n                                includesNextState\n                            \n                            \n                                    Private\n                                isState\n                            \n                            \n                                    Public\n                                matchedCurrentState\n                            \n                            \n                                    Private\n                                mergeSessionAttributes\n                            \n                            \n                                    Public\n                                setState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(attributeManager: AttributesManager, initialState?: InitialState)\n                    \n                \n                        \n                            \n                                Defined in packages/situationManager/libs/StateManager.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        attributeManager\n                                                  \n                                                        \n                                                                    AttributesManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        initialState\n                                                  \n                                                        \n                                                                        InitialState\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            attributeManager\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AttributesManager\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/situationManager/libs/StateManager.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            state\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SkillState\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/situationManager/libs/StateManager.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            stateKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '__state'\n                        \n                    \n                        \n                            \n                                    Defined in packages/situationManager/libs/StateManager.ts:16\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getBeforeState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getBeforeState()\n                \n            \n\n\n            \n                \n                    Defined in packages/situationManager/libs/StateManager.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getCurrentState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCurrentState()\n                \n            \n\n\n            \n                \n                    Defined in packages/situationManager/libs/StateManager.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T | \"\"\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getNextState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNextState()\n                \n            \n\n\n            \n                \n                    Defined in packages/situationManager/libs/StateManager.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getState()\n                \n            \n\n\n            \n                \n                    Defined in packages/situationManager/libs/StateManager.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         SkillState\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasState()\n                \n            \n\n\n            \n                \n                    Defined in packages/situationManager/libs/StateManager.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            includesBeforeState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    includesBeforeState(state: T)\n                \n            \n\n\n            \n                \n                    Defined in packages/situationManager/libs/StateManager.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            includesNextState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    includesNextState(state: T)\n                \n            \n\n\n            \n                \n                    Defined in packages/situationManager/libs/StateManager.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            isState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isState(state: any)\n                \n            \n\n\n            \n                \n                    Defined in packages/situationManager/libs/StateManager.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SkillState\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            matchedCurrentState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    matchedCurrentState(state: T)\n                \n            \n\n\n            \n                \n                    Defined in packages/situationManager/libs/StateManager.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            mergeSessionAttributes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mergeSessionAttributes()\n                \n            \n\n\n            \n                \n                    Defined in packages/situationManager/libs/StateManager.ts:30\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setState(current: T, next?: T[], before?: T[])\n                \n            \n\n\n            \n                \n                    Defined in packages/situationManager/libs/StateManager.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    current\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    before\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n    AttributesManager\n} from 'ask-sdk-core'\n\nexport type State = string\nexport interface SkillState {\n    current: T | '';\n    next?: T[];\n    before?: T[];\n}\nexport interface InitialState {\n    current?: T;\n    next?: T;\n}\nexport class StateManager {\n    public stateKey: string = '__state'\n    private state: SkillState;\n    private readonly attributeManager: AttributesManager\n    public constructor (attributeManager: AttributesManager, initialState?: InitialState) {\n        this.attributeManager = attributeManager\n        this.state = {\n            current: initialState && initialState.current ? initialState.current : '',\n            next: initialState && initialState.next ? [initialState.next] : []\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    private isState (state: any): state is SkillState {\n        return state && state.current\n    }\n    private mergeSessionAttributes (): this {\n        const { state, stateKey, attributeManager } = this\n        const attributes = {\n            ...attributeManager.getSessionAttributes(),\n            [stateKey]: state\n        }\n        attributeManager.setSessionAttributes(attributes)\n        return this\n    }\n    public setState (current: T, next?: T[], before?: T[]): this {\n        this.state = {\n            current,\n            next,\n            before\n        }\n        this.mergeSessionAttributes()\n        return this\n    }\n\n    public getState (): SkillState {\n        const { stateKey, attributeManager } = this\n\n        const attributes = attributeManager.getSessionAttributes()\n        const targetState = attributes[stateKey]\n        if (!this.isState(targetState)) {\n            this.mergeSessionAttributes()\n            const retryAtt = attributeManager.getSessionAttributes()\n            return retryAtt[stateKey]\n        }\n        return targetState\n    }\n\n    public hasState (): boolean {\n        const state = this.getState()\n        if (!state) return false\n        return state.current !== ''\n    }\n\n    public getCurrentState (): T | '' {\n        const targetState = this.getState()\n        return targetState.current\n    }\n\n    public getNextState (): T[] {\n        const targetState = this.getState()\n        return targetState.next || []\n    }\n\n    public getBeforeState (): T[] {\n        const targetState = this.getState()\n        return targetState.before || []\n    }\n\n    public matchedCurrentState (state: T): boolean {\n        return this.getCurrentState() === state\n    }\n    public includesNextState (state: T): boolean {\n        return this.getNextState().includes(state)\n    }\n    public includesBeforeState (state: T): boolean {\n        return this.getBeforeState().includes(state)\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SystemFactory.html":{"url":"classes/SystemFactory.html","title":"class - SystemFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SystemFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/test/libs/context/SystemFactory.ts\n        \n\n            \n                Description\n            \n            \n                Skill request context (system factory)\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                system\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getSystem\n                            \n                            \n                                    Public\n                                putApiAccessToken\n                            \n                            \n                                    Public\n                                putApiEndpoint\n                            \n                            \n                                    Public\n                                putApplication\n                            \n                            \n                                    Public\n                                putApplicationId\n                            \n                            \n                                    Public\n                                putDevice\n                            \n                            \n                                    Public\n                                putPerson\n                            \n                            \n                                    Public\n                                putUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(applicationId?: string, userId?: string)\n                    \n                \n                        \n                            \n                                Defined in packages/test/libs/context/SystemFactory.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        applicationId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            system\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     System\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/test/libs/context/SystemFactory.ts:18\n                            \n                        \n\n                \n                    \n                        Default object\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getSystem\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSystem()\n                \n            \n\n\n            \n                \n                    Defined in packages/test/libs/context/SystemFactory.ts:107\n                \n            \n\n\n            \n                \n                    Get attributes\n\n\n                    \n                        Returns :     System\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putApiAccessToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putApiAccessToken(token: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/test/libs/context/SystemFactory.ts:86\n                \n            \n\n\n            \n                \n                    Put api access token for ASK API\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putApiEndpoint\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putApiEndpoint(endpoint: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/test/libs/context/SystemFactory.ts:77\n                \n            \n\n\n            \n                \n                    Put api endpoint url fo ASK API\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    endpoint\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putApplication\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putApplication(application: Application)\n                \n            \n\n\n            \n                \n                    Defined in packages/test/libs/context/SystemFactory.ts:44\n                \n            \n\n\n            \n                \n                    Put the application\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    application\n                                    \n                                            Application\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putApplicationId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putApplicationId(id: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/test/libs/context/SystemFactory.ts:35\n                \n            \n\n\n            \n                \n                    Put the application id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putDevice\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putDevice(device: Device)\n                \n            \n\n\n            \n                \n                    Defined in packages/test/libs/context/SystemFactory.ts:65\n                \n            \n\n\n            \n                \n                    Put execution device attributes\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    device\n                                    \n                                            Device\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putPerson\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putPerson(id: string, accessToken?: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/test/libs/context/SystemFactory.ts:96\n                \n            \n\n\n            \n                \n                    Put execution person attributes\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    accessToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putUser(user: Partial)\n                \n            \n\n\n            \n                \n                    Defined in packages/test/libs/context/SystemFactory.ts:55\n                \n            \n\n\n            \n                \n                    Put skill user attributes\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n    interfaces,\n    User,\n    Device,\n    Application\n\n} from 'ask-sdk-model' // 'ask-sdk-core/node_modules/ask-sdk-model'\nimport { v4 as uuid } from 'uuid'\nimport System = interfaces.system.SystemState\n\n/**\n * Skill request context (system factory)\n */\nexport class SystemFactory {\n    /**\n     * Default object\n     */\n    private system: System\n    public constructor (applicationId?: string, userId?: string) {\n        this.system = {\n            application: {\n                applicationId: applicationId || 'amzn1.echo-sdk-ams.app.' + uuid()\n            },\n            user: {\n                userId: userId || 'amzn1.ask.account.' + uuid()\n            },\n            apiEndpoint: 'https://api.amazonalexa.com'\n        }\n    }\n\n    /**\n     * Put the application id\n     * @param id\n     */\n    public putApplicationId (id: string): this {\n        this.system.application.applicationId = id\n        return this\n    }\n\n    /**\n     * Put the application\n     * @param id\n     */\n    public putApplication (application: Application): this {\n        this.system.application = application\n        return this\n    }\n\n    /**\n     * Put skill user attributes\n     * @param id\n     * @param acccessToken\n     * @param permissions\n     */\n    public putUser (user: Partial): this {\n        this.system.user = Object.assign(this.system.user, user)\n        return this\n    }\n\n    /**\n     * Put execution device attributes\n     * @param id\n     * @param supportedInterfaces\n     */\n    public putDevice (device: Device): this {\n        this.system.device = {\n            ...this.system.device,\n            ...device\n        }\n        return this\n    }\n\n    /**\n     * Put api endpoint url fo ASK API\n     * @param endpoint\n     */\n    public putApiEndpoint (endpoint: string): this {\n        this.system.apiEndpoint = endpoint\n        return this\n    }\n\n    /**\n     * Put api access token for ASK API\n     * @param token\n     */\n    public putApiAccessToken (token: string): this {\n        this.system.apiAccessToken = token\n        return this\n    }\n\n    /**\n     * Put execution person attributes\n     * @param id\n     * @param accessToken\n     */\n    public putPerson (id: string, accessToken?: string): this {\n        this.system.person = {\n            personId: id,\n            accessToken\n        }\n        return this\n    }\n\n    /**\n     * Get attributes\n     */\n    public getSystem (): System {\n        return this.system\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TMergeTargetHandler.html":{"url":"interfaces/TMergeTargetHandler.html","title":"interface - TMergeTargetHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TMergeTargetHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/handlers/libs/requestHandlers/HandlerFactory.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        canHandle\n                                \n                                \n                                            Optional\n                                        handle\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        canHandle\n                                    \n                                \n                                \n                                    \n                                        canHandle:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        handle\n                                    \n                                \n                                \n                                    \n                                        handle:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { RequestHandler, HandlerInput } from 'ask-sdk-core'\nimport { Response, Request, RequestEnvelope } from 'ask-sdk-model'\nimport Resolver, { interfaces } from 'class-resolver'\nimport { isLaunchRequest } from 'ask-utils'\n\nexport interface TMergeTargetHandler {\n    canHandle?: (input: Input) => Promise | boolean;\n    handle?: (input: Input) => Promise | Output;\n}\nexport interface TRequestHandler {\n    canHandle: (input: Input) => Promise | boolean;\n    handle: (input: Input) => Promise | Output;\n}\nexport interface CustomeRequestEnvelope extends RequestEnvelope {\n    request: CustomRequest;\n}\nexport interface CustomHandlerInput extends HandlerInput {\n    requestEnvelope: CustomeRequestEnvelope;\n}\nexport interface RequestHandlerBuilder extends interfaces.ResolveTarget {\n    handle(handler: TMergeTargetHandler): TRequestHandler;\n}\n\nconst merge = (handler: TMergeTargetHandler, target?: TMergeTargetHandler): TRequestHandler => {\n    const fallBackHandler: RequestHandler = {\n        canHandle () {\n            return true\n        },\n        handle (handlerInput) {\n            return handlerInput.responseBuilder.getResponse()\n        }\n    }\n    return Object.assign({}, fallBackHandler, target, handler)\n}\n\nexport type SupportedHandlerType = 'LaunchRequest'\nexport class RequestHandlerFactory {\n    public static create (type: SupportedHandlerType, handler: TMergeTargetHandler): TRequestHandler {\n        return new Resolver(\n            new LaunchRequestHandlerFactory(),\n            new FallbackIntentFactory()\n        ).resolve(type).handle(handler)\n    }\n}\nexport default RequestHandlerFactory\n\nexport class LaunchRequestHandlerFactory implements RequestHandlerBuilder {\n    supports (type: string) {\n        return type === 'LaunchRequest'\n    }\n    handle (handler: TMergeTargetHandler) {\n        return merge(handler, {\n            canHandle (handlerInput) {\n                return isLaunchRequest(handlerInput)\n            }\n        })\n    }\n}\n\nexport class FallbackIntentFactory implements RequestHandlerBuilder {\n    supports () {\n        return true\n    }\n    handle (handler: TMergeTargetHandler) {\n        return merge(handler)\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TRequestHandler.html":{"url":"interfaces/TRequestHandler.html","title":"interface - TRequestHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TRequestHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/handlers/libs/requestHandlers/HandlerFactory.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        canHandle\n                                \n                                \n                                        handle\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        canHandle\n                                    \n                                \n                                \n                                    \n                                        canHandle:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        handle\n                                    \n                                \n                                \n                                    \n                                        handle:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { RequestHandler, HandlerInput } from 'ask-sdk-core'\nimport { Response, Request, RequestEnvelope } from 'ask-sdk-model'\nimport Resolver, { interfaces } from 'class-resolver'\nimport { isLaunchRequest } from 'ask-utils'\n\nexport interface TMergeTargetHandler {\n    canHandle?: (input: Input) => Promise | boolean;\n    handle?: (input: Input) => Promise | Output;\n}\nexport interface TRequestHandler {\n    canHandle: (input: Input) => Promise | boolean;\n    handle: (input: Input) => Promise | Output;\n}\nexport interface CustomeRequestEnvelope extends RequestEnvelope {\n    request: CustomRequest;\n}\nexport interface CustomHandlerInput extends HandlerInput {\n    requestEnvelope: CustomeRequestEnvelope;\n}\nexport interface RequestHandlerBuilder extends interfaces.ResolveTarget {\n    handle(handler: TMergeTargetHandler): TRequestHandler;\n}\n\nconst merge = (handler: TMergeTargetHandler, target?: TMergeTargetHandler): TRequestHandler => {\n    const fallBackHandler: RequestHandler = {\n        canHandle () {\n            return true\n        },\n        handle (handlerInput) {\n            return handlerInput.responseBuilder.getResponse()\n        }\n    }\n    return Object.assign({}, fallBackHandler, target, handler)\n}\n\nexport type SupportedHandlerType = 'LaunchRequest'\nexport class RequestHandlerFactory {\n    public static create (type: SupportedHandlerType, handler: TMergeTargetHandler): TRequestHandler {\n        return new Resolver(\n            new LaunchRequestHandlerFactory(),\n            new FallbackIntentFactory()\n        ).resolve(type).handle(handler)\n    }\n}\nexport default RequestHandlerFactory\n\nexport class LaunchRequestHandlerFactory implements RequestHandlerBuilder {\n    supports (type: string) {\n        return type === 'LaunchRequest'\n    }\n    handle (handler: TMergeTargetHandler) {\n        return merge(handler, {\n            canHandle (handlerInput) {\n                return isLaunchRequest(handlerInput)\n            }\n        })\n    }\n}\n\nexport class FallbackIntentFactory implements RequestHandlerBuilder {\n    supports () {\n        return true\n    }\n    handle (handler: TMergeTargetHandler) {\n        return merge(handler)\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Thing.html":{"url":"interfaces/Thing.html","title":"interface - Thing","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Thing\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TranslationBuilder.html":{"url":"interfaces/TranslationBuilder.html","title":"interface - TranslationBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TranslationBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/libs/translator.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    addLocale\n                                \n                                \n                                    addLocaleStrings\n                                \n                                \n                                    getLanguageStrings\n                                \n                                \n                                    putLocaleStrings\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addLocale\n                        \n                        \n                    \n                \n            \n            \n                \naddLocale(locale: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/core/libs/translator.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    locale\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TranslationBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addLocaleStrings\n                        \n                        \n                    \n                \n            \n            \n                \naddLocaleStrings(locale: string, key: string, message: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/core/libs/translator.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    locale\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TranslationBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLanguageStrings\n                        \n                        \n                    \n                \n            \n            \n                \ngetLanguageStrings()\n                \n            \n\n\n            \n                \n                    Defined in packages/core/libs/translator.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         TranslationObject | literal type\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            putLocaleStrings\n                        \n                        \n                    \n                \n            \n            \n                \nputLocaleStrings(locale: string, messages: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/core/libs/translator.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    locale\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    messages\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TranslationBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface TranslationObject {\n    translation: {\n        [key: string]: string;\n    };\n}\nexport interface TranslationBuilder {\n    addLocale(locale: string): TranslationBuilder;\n    putLocaleStrings(locale: string, messages: string): TranslationBuilder;\n    addLocaleStrings(locale: string, key: string, message: string): TranslationBuilder;\n    getLanguageStrings(): TranslationObject | {};\n}\n\n// beta\nexport class TranslationFactory {\n    public static init (): TranslationBuilder {\n        const translationObject: TranslationObject | null = null\n        const languageStrings: {\n            [lang: string]: TranslationObject;\n        } = {}\n        return {\n            addLocale (locale: string): TranslationBuilder {\n                if (languageStrings[locale] || !translationObject) return this\n                languageStrings[locale] = translationObject\n                return this\n            },\n            putLocaleStrings (locale: string, messages: string): TranslationBuilder {\n                if (!locale) throw new Error('locale is required')\n                if (!messages || Object.keys(messages).length \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TranslationFactory.html":{"url":"classes/TranslationFactory.html","title":"class - TranslationFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TranslationFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/libs/translator.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in packages/core/libs/translator.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         TranslationBuilder\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export interface TranslationObject {\n    translation: {\n        [key: string]: string;\n    };\n}\nexport interface TranslationBuilder {\n    addLocale(locale: string): TranslationBuilder;\n    putLocaleStrings(locale: string, messages: string): TranslationBuilder;\n    addLocaleStrings(locale: string, key: string, message: string): TranslationBuilder;\n    getLanguageStrings(): TranslationObject | {};\n}\n\n// beta\nexport class TranslationFactory {\n    public static init (): TranslationBuilder {\n        const translationObject: TranslationObject | null = null\n        const languageStrings: {\n            [lang: string]: TranslationObject;\n        } = {}\n        return {\n            addLocale (locale: string): TranslationBuilder {\n                if (languageStrings[locale] || !translationObject) return this\n                languageStrings[locale] = translationObject\n                return this\n            },\n            putLocaleStrings (locale: string, messages: string): TranslationBuilder {\n                if (!locale) throw new Error('locale is required')\n                if (!messages || Object.keys(messages).length \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TranslationObject.html":{"url":"interfaces/TranslationObject.html","title":"interface - TranslationObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TranslationObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/libs/translator.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        translation\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        translation\n                                    \n                                \n                                \n                                    \n                                        translation:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TranslationObject {\n    translation: {\n        [key: string]: string;\n    };\n}\nexport interface TranslationBuilder {\n    addLocale(locale: string): TranslationBuilder;\n    putLocaleStrings(locale: string, messages: string): TranslationBuilder;\n    addLocaleStrings(locale: string, key: string, message: string): TranslationBuilder;\n    getLanguageStrings(): TranslationObject | {};\n}\n\n// beta\nexport class TranslationFactory {\n    public static init (): TranslationBuilder {\n        const translationObject: TranslationObject | null = null\n        const languageStrings: {\n            [lang: string]: TranslationObject;\n        } = {}\n        return {\n            addLocale (locale: string): TranslationBuilder {\n                if (languageStrings[locale] || !translationObject) return this\n                languageStrings[locale] = translationObject\n                return this\n            },\n            putLocaleStrings (locale: string, messages: string): TranslationBuilder {\n                if (!locale) throw new Error('locale is required')\n                if (!messages || Object.keys(messages).length \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TrashCollectionAlert.html":{"url":"interfaces/TrashCollectionAlert.html","title":"interface - TrashCollectionAlert","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TrashCollectionAlert\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        collectionDayOfWeek\n                                \n                                \n                                        garbageTypes\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        collectionDayOfWeek\n                                    \n                                \n                                \n                                    \n                                        collectionDayOfWeek:         DayOfWeek\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DayOfWeek\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        garbageTypes\n                                    \n                                \n                                \n                                    \n                                        garbageTypes:         GarbageType[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GarbageType[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserFactory.html":{"url":"classes/UserFactory.html","title":"class - UserFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/test/libs/user/UserFactory.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getUser\n                            \n                            \n                                    Public\n                                putUser\n                            \n                            \n                                    Public\n                                putUserId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                    \n                        \n                            Default value : {\n        userId: ''\n    }\n                        \n                    \n                        \n                            \n                                    Defined in packages/test/libs/user/UserFactory.ts:6\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUser()\n                \n            \n\n\n            \n                \n                    Defined in packages/test/libs/user/UserFactory.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     User\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putUser(user: User)\n                \n            \n\n\n            \n                \n                    Defined in packages/test/libs/user/UserFactory.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                            User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putUserId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putUserId(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/test/libs/user/UserFactory.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n    User\n} from 'ask-sdk-model' // 'ask-sdk-core/node_modules/ask-sdk-model'\n\nexport class UserFactory {\n    private user: User = {\n        userId: ''\n    }\n    public putUserId (userId: string): this {\n        this.user.userId = userId\n        return this\n    }\n\n    public putUser (user: User): this {\n        this.user = user\n        return this\n    }\n\n    public getUser (): User {\n        return this.user\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserProfileAPIClient.html":{"url":"classes/UserProfileAPIClient.html","title":"class - UserProfileAPIClient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserProfileAPIClient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/serviceClients/libs/UserProfiles.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Client\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                path\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                getEmail\n                            \n                            \n                                    Public\n                                    Async\n                                getGivenName\n                            \n                            \n                                    Public\n                                    Async\n                                getMobileNumber\n                            \n                            \n                                    Public\n                                    Async\n                                getProfileName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '/v2/accounts/~current/settings'\n                        \n                    \n                        \n                            \n                                    Defined in packages/serviceClients/libs/UserProfiles.ts:5\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getEmail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getEmail()\n                \n            \n\n\n            \n                \n                    Defined in packages/serviceClients/libs/UserProfiles.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getGivenName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGivenName()\n                \n            \n\n\n            \n                \n                    Defined in packages/serviceClients/libs/UserProfiles.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getMobileNumber\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMobileNumber()\n                \n            \n\n\n            \n                \n                    Defined in packages/serviceClients/libs/UserProfiles.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getProfileName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getProfileName()\n                \n            \n\n\n            \n                \n                    Defined in packages/serviceClients/libs/UserProfiles.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { services } from 'ask-sdk-model'\nimport Client from './client'\n\nexport class UserProfileAPIClient extends Client {\n    protected path = '/v2/accounts/~current/settings'\n    public async getProfileName (): Promise {\n        return this.get('Profile.name')\n    }\n    public async getGivenName (): Promise {\n        return this.get('Profile.givenName')\n    }\n    public async getEmail (): Promise {\n        return this.get('Profile.email')\n    }\n    public async getMobileNumber (): Promise {\n        return this.get('Profile.mobileNumber')\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WeatherAlert.html":{"url":"interfaces/WeatherAlert.html","title":"interface - WeatherAlert","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WeatherAlert\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        alertType\n                                \n                                \n                                            Optional\n                                        source\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alertType\n                                    \n                                \n                                \n                                    \n                                        alertType:         WeatherAlertType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         WeatherAlertType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source\n                                    \n                                \n                                \n                                    \n                                        source:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Peer dependencies\n    \n    \n        \n            ask-sdk-model : ^1.9.0\n    \n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nASK-Utils - Utility functions for ask-sdk\n\n\n\n\n\n\nhttps://ask-utils.dev\nGetting started\n$ npm i -S ask-utilsPackages\n\n\n\nname\nnpm url\nRepository\nSummary\n\n\n\n\n@ask-utils/core\nhttps://www.npmjs.com/package/@ask-utils/core\nhttps://github.com/ask-utils/ask-utils/tree/master/packages/core\nCore utilities\n\n\n@ask-utils/proactive-event\nhttps://www.npmjs.com/package/@ask-utils/proactive-event\nhttps://github.com/ask-utils/ask-utils/tree/master/packages/proactive-event\nProactive Event parameter builder and request client\n\n\n@ask-utils/isp\nhttps://www.npmjs.com/package/@ask-utils/isp\nhttps://github.com/ask-utils/ask-utils/tree/master/packages/isp\nISP helpers\n\n\n@ask-utils/handlers\nhttps://www.npmjs.com/package/@ask-utils/handlers\nhttps://github.com/ask-utils/ask-utils/tree/master/packages/handlers\nUtility handler and interceptors\n\n\n@ask-utils/error-handlers\nhttps://www.npmjs.com/package/@ask-utils/error-handlers\nhttps://github.com/ask-utils/ask-utils/tree/master/packages/error-handlers\nError handler helpers\n\n\n@ask-utils/service-client\nhttps://www.npmjs.com/package/@ask-utils/service-client\nhttps://github.com/ask-utils/ask-utils/tree/master/packages/serviceClient s\nServiceClient alternative\n\n\n\ndevelopment\n$ git clone git@github.com:hideokamoto/ask-utils.git\n$ cd ask-utils\n$ yarn\n$ yarn bootstraptest\n$ npm testLint\n$ npm run lint\n\nor\n\n$ npm run lint -- --fixHistory\n-> Release Note\nContributors\n\n\n\nName\nVersion\n\n\n\n\n@ArtskydJ\nv0.13.0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    60 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    81 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AlexaSpeechComponent   (packages/.../model.ts)\n                        \n                        \n                            AlexaSpeechComponentFunction   (packages/.../model.ts)\n                        \n                        \n                            APIEndpoint   (packages/.../model.ts)\n                        \n                        \n                            ApiRegion   (packages/.../model.ts)\n                        \n                        \n                            APIURL   (packages/.../model.ts)\n                        \n                        \n                            AudienceType   (packages/.../model.ts)\n                        \n                        \n                            CanHandle   (packages/.../fixtures.ts)\n                        \n                        \n                            CanHandle   (packages/.../model.ts)\n                        \n                        \n                            CanHandleResponse   (packages/.../model.ts)\n                        \n                        \n                            ClientId   (packages/.../model.ts)\n                        \n                        \n                            ClientSecret   (packages/.../model.ts)\n                        \n                        \n                            ConfirmationStatus   (packages/.../model.ts)\n                        \n                        \n                            dateTime   (packages/.../model.ts)\n                        \n                        \n                            DayOfWeek   (packages/.../model.ts)\n                        \n                        \n                            DefaultState   (packages/.../stateManager.ts)\n                        \n                        \n                            DevAPIURL   (packages/.../model.ts)\n                        \n                        \n                            DistributionMethod   (packages/.../model.ts)\n                        \n                        \n                            ErrorHandle   (packages/.../index.ts)\n                        \n                        \n                            EventName   (packages/.../model.ts)\n                        \n                        \n                            EventName   (packages/.../model.ts)\n                        \n                        \n                            EventName   (packages/.../model.ts)\n                        \n                        \n                            EventName   (packages/.../model.ts)\n                        \n                        \n                            EventName   (packages/.../model.ts)\n                        \n                        \n                            EventName   (packages/.../model.ts)\n                        \n                        \n                            EventName   (packages/.../model.ts)\n                        \n                        \n                            EventName   (packages/.../model.ts)\n                        \n                        \n                            EventName   (packages/.../model.ts)\n                        \n                        \n                            EventName   (packages/.../model.ts)\n                        \n                        \n                            EventName   (packages/.../model.ts)\n                        \n                        \n                            EventName   (packages/.../model.ts)\n                        \n                        \n                            EventName   (packages/.../model.ts)\n                        \n                        \n                            EventName   (packages/.../model.ts)\n                        \n                        \n                            EventName   (packages/.../model.ts)\n                        \n                        \n                            EventName   (packages/.../model.ts)\n                        \n                        \n                            EventName   (packages/.../model.ts)\n                        \n                        \n                            FlashBriefings   (packages/.../flashbriefing.ts)\n                        \n                        \n                            GarbageType   (packages/.../model.ts)\n                        \n                        \n                            Handle   (packages/.../fixtures.ts)\n                        \n                        \n                            Handle   (packages/.../model.ts)\n                        \n                        \n                            HandleResponse   (packages/.../model.ts)\n                        \n                        \n                            InskillProducts   (packages/.../client.ts)\n                        \n                        \n                            InskillProducts   (packages/.../productFinders.ts)\n                        \n                        \n                            InskillProducts   (packages/.../productFinders.test.ts)\n                        \n                        \n                            InskillProducts   (packages/.../generalResponse.ts)\n                        \n                        \n                            InviteType   (packages/.../model.ts)\n                        \n                        \n                            ISPState   (packages/.../helpers.ts)\n                        \n                        \n                            ListStatus   (packages/.../Lists.ts)\n                        \n                        \n                            Locale   (packages/.../model.ts)\n                        \n                        \n                            LocalizedAttributes   (packages/.../model.ts)\n                        \n                        \n                            MediaType   (packages/.../model.ts)\n                        \n                        \n                            MessageFreshness   (packages/.../model.ts)\n                        \n                        \n                            MessageStatus   (packages/.../model.ts)\n                        \n                        \n                            MessageUrgent   (packages/.../model.ts)\n                        \n                        \n                            Method   (packages/.../client.ts)\n                        \n                        \n                            OccasionType   (packages/.../model.ts)\n                        \n                        \n                            OfferType   (packages/.../model.ts)\n                        \n                        \n                            OrderStatus   (packages/.../model.ts)\n                        \n                        \n                            Payload   (packages/.../model.ts)\n                        \n                        \n                            Payload   (packages/.../model.ts)\n                        \n                        \n                            Payload   (packages/.../model.ts)\n                        \n                        \n                            Payload   (packages/.../model.ts)\n                        \n                        \n                            Payload   (packages/.../model.ts)\n                        \n                        \n                            Payload   (packages/.../model.ts)\n                        \n                        \n                            Payload   (packages/.../model.ts)\n                        \n                        \n                            Payload   (packages/.../model.ts)\n                        \n                        \n                            Payload   (packages/.../model.ts)\n                        \n                        \n                            PayloadBuilder   (packages/.../model.ts)\n                        \n                        \n                            PayloadBuilder   (packages/.../model.ts)\n                        \n                        \n                            PayloadBuilder   (packages/.../model.ts)\n                        \n                        \n                            PayloadBuilder   (packages/.../model.ts)\n                        \n                        \n                            PayloadBuilder   (packages/.../model.ts)\n                        \n                        \n                            PayloadBuilder   (packages/.../model.ts)\n                        \n                        \n                            PersistanceType   (packages/.../models.ts)\n                        \n                        \n                            PollyLanguage   (packages/.../amznPolly.ts)\n                        \n                        \n                            ProgressiveResponseErrorHandler   (packages/.../responseHelpers.ts)\n                        \n                        \n                            RelationshipToInvitee   (packages/.../model.ts)\n                        \n                        \n                            resolutionSlot   (packages/.../slot.ts)\n                        \n                        \n                            RouterHandler   (packages/.../model.ts)\n                        \n                        \n                            SkillConfig   (packages/.../models.ts)\n                        \n                        \n                            State   (packages/.../StateManager.ts)\n                        \n                        \n                            SupportedHandlerType   (packages/.../HandlerFactory.ts)\n                        \n                        \n                            WeatherAlertType   (packages/.../model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    packages/speech-script/libs/model.ts\n    \n    \n        \n            \n                \n                    \n                    AlexaSpeechComponent\n                \n            \n            \n                \n                            FC> | null\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AlexaSpeechComponentFunction\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    packages/proactive-event/libs/model.ts\n    \n    \n        \n            \n                \n                    \n                    APIEndpoint\n                \n            \n            \n                \n                        APIURL | DevAPIURL\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ApiRegion\n                \n            \n            \n                \n                        \"FE\" | \"US\" | \"EU\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    APIURL\n                \n            \n            \n                \n                        \"https://api.amazonalexa.com/v1/proactiveEvents/\" | \"https://api.eu.amazonalexa.com/v1/proactiveEvents/\" | \"https://api.fe.amazonalexa.com/v1/proactiveEvents/\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AudienceType\n                \n            \n            \n                \n                        \"Unicast\" | \"Multicast\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ClientId\n                \n            \n            \n                \n                            string\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ClientSecret\n                \n            \n            \n                \n                            string\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ConfirmationStatus\n                \n            \n            \n                \n                        \"CONFIRMED\" | \"CANCELED\" | \"RESCHEDULED\" | \"REQUESTED\" | \"CREATED\" | \"UPDATED\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    dateTime\n                \n            \n            \n                \n                            string\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DayOfWeek\n                \n            \n            \n                \n                        \"MONDAY\" | \"TUESDAY\" | \"WEDNESDAY\" | \"THURSDAY\" | \"FRIDAY\" | \"SATURDAY\" | \"SUNDAY\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DevAPIURL\n                \n            \n            \n                \n                        \"https://api.amazonalexa.com/v1/proactiveEvents/stages/development\" | \"https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development\" | \"https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DistributionMethod\n                \n            \n            \n                \n                        \"STREAM\" | \"AIR\" | \"RELEASE\" | \"PREMIERE\" | \"DROP\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EventName\n                \n            \n            \n                \n                        WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EventName\n                \n            \n            \n                \n                        Activated.EventName\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EventName\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EventName\n                \n            \n            \n                \n                        Activated.EventName\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EventName\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EventName\n                \n            \n            \n                \n                        Updated.EventName\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EventName\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EventName\n                \n            \n            \n                \n                        Activated.EventName\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EventName\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EventName\n                \n            \n            \n                \n                        Updated.EventName\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EventName\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EventName\n                \n            \n            \n                \n                        Updated.EventName\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EventName\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EventName\n                \n            \n            \n                \n                        Available.EventName\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EventName\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EventName\n                \n            \n            \n                \n                        Available.EventName\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EventName\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GarbageType\n                \n            \n            \n                \n                        \"BOTTLES\" | \"BULKY\" | \"BURNABLE\" | \"CANS\" | \"CLOTHING\" | \"COMPOSTABLE\" | \"CRUSHABLE\" | \"GARDEN_WASTE\" | \"GLASS\" | \"HAZARDOUS\" | \"HOME_APPLIANCES\" | \"KITCHEN_WASTE\" | \"LANDFILL\" | \"PET_BOTTLES\" | \"RECYCLABLE_PLASTICS\" | \"WASTE_PAPER\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    InviteType\n                \n            \n            \n                \n                        \"CHALLENGE\" | \"INVITE\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Locale\n                \n            \n            \n                \n                        \"de-DE\" | \"en-AU\" | \"en-CA\" | \"en-GB\" | \"en-IN\" | \"en-US\" | \"es-ES\" | \"es-MX\" | \"fr-CA\" | \"fr-FR\" | \"it-IT\" | \"ja-JP\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    LocalizedAttributes\n                \n            \n            \n                \n                            LocalizedAttribute[]\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MediaType\n                \n            \n            \n                \n                        \"BOOK\" | \"EPISODE\" | \"ALBUM\" | \"SINGLE\" | \"MOVIE\" | \"GAME\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MessageFreshness\n                \n            \n            \n                \n                        \"NEW\" | \"OVERDUE\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MessageStatus\n                \n            \n            \n                \n                        \"UNREAD\" | \"FLAGGED\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MessageUrgent\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    OccasionType\n                \n            \n            \n                \n                        \"RESERVATION_REQUEST\" | \"RESERVATION\" | \"APPOINTMENT_REQUEST\" | \"APPOINTMENT\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    OfferType\n                \n            \n            \n                \n                        \"MATCH\" | \"REMATCH\" | \"GAME\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    OrderStatus\n                \n            \n            \n                \n                        \"PREORDER_RECEIVED\" | \"ORDER_RECEIVED\" | \"ORDER_PREPARING\" | \"ORDER_SHIPPED\" | \"ORDER_OUT_FOR_DELIVERY\" | \"ORDER_OUT_FOR_DELIVERY\" | \"ORDER_DELIVERED\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Payload\n                \n            \n            \n                \n                        TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Payload\n                \n            \n            \n                \n                        Activated.Payload\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Payload\n                \n            \n            \n                \n                        Activated.Payload\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Payload\n                \n            \n            \n                \n                        Updated.Payload\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Payload\n                \n            \n            \n                \n                        Activated.Payload\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Payload\n                \n            \n            \n                \n                        Updated.Payload\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Payload\n                \n            \n            \n                \n                        Updated.Payload\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Payload\n                \n            \n            \n                \n                        Available.Payload\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Payload\n                \n            \n            \n                \n                        Available.Payload\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    PayloadBuilder\n                \n            \n            \n                \n                        Activated.PayloadBuilder\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    PayloadBuilder\n                \n            \n            \n                \n                        Activated.PayloadBuilder\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    PayloadBuilder\n                \n            \n            \n                \n                        Updated.PayloadBuilder\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    PayloadBuilder\n                \n            \n            \n                \n                        Activated.PayloadBuilder\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    PayloadBuilder\n                \n            \n            \n                \n                        Updated.PayloadBuilder\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    PayloadBuilder\n                \n            \n            \n                \n                        Updated.PayloadBuilder\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    RelationshipToInvitee\n                \n            \n            \n                \n                        \"FRIEND\" | \"CONTACT\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    WeatherAlertType\n                \n            \n            \n                \n                        \"TORNADO\" | \"HURRICANE\" | \"SNOW_STORM\" | \"THUNDER_STORM\"\n\n                \n            \n        \n    \n    packages/isp/libs/handlers/fixtures.ts\n    \n    \n        \n            \n                \n                    \n                    CanHandle\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Handle\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    packages/handlers/libs/requestHandlers/factories/model.ts\n    \n    \n        \n            \n                \n                    \n                    CanHandle\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    CanHandleResponse\n                \n            \n            \n                \n                        Promise | boolean\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Handle\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    HandleResponse\n                \n            \n            \n                \n                            Promise | Response\n\n                \n            \n        \n    \n    packages/core/libs/stateManager.ts\n    \n    \n        \n            \n                \n                    \n                    DefaultState\n                \n            \n            \n                \n                            string\n\n                \n            \n        \n    \n    packages/error-handlers/libs/index.ts\n    \n    \n        \n            \n                \n                    \n                    ErrorHandle\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    packages/handlers/libs/flashbriefing.ts\n    \n    \n        \n            \n                \n                    \n                    FlashBriefings\n                \n            \n            \n                \n                            FlashBriefingContent[]\n\n                \n            \n        \n    \n    packages/isp/libs/client.ts\n    \n    \n        \n            \n                \n                    \n                    InskillProducts\n                \n            \n            \n                \n                            InSkillProduct[]\n\n                \n            \n        \n    \n    packages/isp/libs/productFinders.ts\n    \n    \n        \n            \n                \n                    \n                    InskillProducts\n                \n            \n            \n                \n                            InSkillProduct[]\n\n                \n            \n        \n    \n    packages/isp/__tests__/libs/productFinders.test.ts\n    \n    \n        \n            \n                \n                    \n                    InskillProducts\n                \n            \n            \n                \n                            InSkillProduct[]\n\n                \n            \n        \n    \n    packages/isp/libs/contentBuilders/generalResponse.ts\n    \n    \n        \n            \n                \n                    \n                    InskillProducts\n                \n            \n            \n                \n                            InSkillProduct[]\n\n                \n            \n        \n    \n    packages/isp/libs/handlers/helpers.ts\n    \n    \n        \n            \n                \n                    \n                    ISPState\n                \n            \n            \n                \n                        \"BUY\" | \"CANCEL\" | \"PRODUCT_DETAIL\" | \"\"\n\n                \n            \n        \n    \n    packages/serviceClients/libs/Lists.ts\n    \n    \n        \n            \n                \n                    \n                    ListStatus\n                \n            \n            \n                \n                        \"active\" | \"completed\"\n\n                \n            \n        \n    \n    packages/serviceClients/libs/client.ts\n    \n    \n        \n            \n                \n                    \n                    Method\n                \n            \n            \n                \n                        \"GET\" | \"PUT\" | \"POST\" | \"DELETE\"\n\n                \n            \n        \n    \n    packages/ask-utils/libs/models.ts\n    \n    \n        \n            \n                \n                    \n                    PersistanceType\n                \n            \n            \n                \n                        \"DynamoDB\" | \"S3\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SkillConfig\n                \n            \n            \n                \n                            S3SkillConfig | DynamoDBSkillConfig\n\n                \n            \n        \n    \n    packages/core/libs/amznPolly.ts\n    \n    \n        \n            \n                \n                    \n                    PollyLanguage\n                \n            \n            \n                \n                        \"de-DE\" | \"en-AU\" | \"en-CA\" | \"en-GB\" | \"en-IN\" | \"en-US\" | \"es-ES\" | \"fr-FR\" | \"it-IT\" | \"ja-JP\"\n\n                \n            \n        \n    \n    packages/core/libs/responseHelpers.ts\n    \n    \n        \n            \n                \n                    \n                    ProgressiveResponseErrorHandler\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    packages/core/libs/slot.ts\n    \n    \n        \n            \n                \n                    \n                    resolutionSlot\n                \n            \n            \n                \n                        literal type | \"\"\n\n                \n            \n        \n    \n    packages/router/libs/model.ts\n    \n    \n        \n            \n                \n                    \n                    RouterHandler\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    packages/situationManager/libs/StateManager.ts\n    \n    \n        \n            \n                \n                    \n                    State\n                \n            \n            \n                \n                            string\n\n                \n            \n        \n    \n    packages/handlers/libs/requestHandlers/HandlerFactory.ts\n    \n    \n        \n            \n                \n                    \n                    SupportedHandlerType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
