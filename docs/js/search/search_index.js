var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/classes/APIClient.html",[0,0.221,1,3.235]],["body/classes/APIClient.html",[0,0.273,1,4.631,2,0.775,3,0.035,4,0.035,5,0.035,6,3.385,7,0.049,8,0.476,9,3.499,10,5.18,11,5.889,12,1.005,13,4.631,14,0.849,15,5.556,16,2.052,17,4.108,18,1.237,19,4.631,20,5.556,21,6.04,22,2.647,23,3.692,24,3.752,25,0.731,26,1.121,27,5.88,28,1.544,29,0.008,30,0.518,31,0.228,32,0.997,33,0.306,34,4.157,35,4.157,36,4.157,37,3.692,38,4.157,39,7.039,40,3.15,41,1.13,42,5.18,43,3.692,44,4.157,45,1.113,46,3.692,47,4.157,48,3.692,49,4.157,50,4.157,51,0.894,52,4.465,53,2.691,54,3.385,55,2.272,56,3.256,57,0.995,58,0.976,59,1.328,60,2.226,61,0.731,62,3.692,63,3.692,64,3.807,65,2.822,66,4.465,67,0.08,68,2.335,69,4.788,70,3.385,71,3.502,72,3.156,73,3.385,74,3.385,75,4.631,76,1.821,77,4.631,78,3.692,79,1.246,80,3.692,81,0.868,82,3.692,83,3.156,84,0.885,85,3.156,86,3.385,87,3.385,88,3.156,89,0.902,90,3.342,91,3.644,92,2.606,93,3.342,94,3.183,95,1.775,96,1.775,97,4.473,98,3.692,99,5.222,100,4.631,101,5.585,102,3.991,103,5.632,104,4.625,105,3.156,106,4.465,107,5.222,108,4.465,109,0.496,110,2.822,111,5.222,112,7.215,113,5.669,114,6.587,115,3.692,116,3.692,117,3.692,118,2.974,119,3.692,120,3.692,121,6.95,122,3.692,123,5.222,124,4.23,125,3.431,126,4.49,127,6.059,128,3.692,129,3.692,130,3.692,131,2.822,132,3.692,133,0.852,134,3.692,135,2.476,136,5.222,137,3.692,138,3.692,139,6.95,140,3.692,141,5.18,142,3.156,143,3.692,144,3.692,145,4.206,146,3.692,147,6.587,148,5.222,149,5.222,150,3.692,151,3.692,152,3.778,153,3.692,154,4.23,155,3.692,156,3.692,157,3.692,158,3.692,159,5.306,160,4.788,161,1.796,162,6.587,163,3.692,164,6.059,165,5.312,166,3.373,167,3.692,168,3.692,169,3.692,170,5.222,171,3.692,172,5.598,173,3.692,174,2.974,175,2.974,176,4.661,177,6.059,178,3.692,179,3.692,180,5.222,181,5.222,182,5.222,183,2.644,184,0.598,185,2.822,186,3.692,187,3.692,188,3.692,189,3.692,190,0.805,191,0.003,192,0.004,193,0.003]],["title/classes/APIClient-1.html",[0,0.186,1,2.715,194,2.142]],["body/classes/APIClient-1.html",[0,0.227,1,5.049,2,0.913,3,0.042,4,0.042,5,0.042,7,0.057,8,0.533,10,5.648,11,5.927,12,1.096,13,5.049,14,0.951,15,6.057,16,2.926,17,4.264,18,0.875,20,6.057,22,2.555,23,4.35,24,3.946,25,0.747,26,1.176,28,1.723,29,0.008,30,0.542,31,0.233,32,1.113,33,0.309,40,4.152,41,1.234,42,6.039,45,1.083,51,0.85,52,5,53,3.171,54,3.989,57,1.115,58,1.093,59,1.565,61,0.862,67,0.077,68,1.945,69,5.362,70,3.989,71,3.922,72,3.719,73,3.989,74,3.989,75,6.104,76,1.844,77,5.049,79,1.112,81,1.854,83,3.719,84,1.043,85,3.719,86,3.989,87,3.989,88,3.719,89,1.063,90,3.544,91,3.544,92,2.763,93,3.544,94,3.375,95,3.544,96,3.544,97,4.753,102,6.025,103,7.181,104,4.404,105,6.039,190,1.275,191,0.004,192,0.005,193,0.004,195,4.35,196,6.518,197,7.064,198,6.477,199,5.399,200,6.585,201,4.898,202,4.898,203,1.503,204,4.898,205,4.898,206,4.898,207,4.898,208,4.898,209,4.898,210,4.898,211,4.898,212,4.898,213,4.898,214,4.898,215,4.898,216,7.59,217,4.898,218,4.898,219,4.898,220,1.125,221,4.898,222,4.898,223,6.585,224,4.898,225,4.898,226,4.898,227,7.954,228,7.954,229,4.898,230,4.898,231,4.898]],["title/classes/ApplicationFactory.html",[0,0.221,232,3.881]],["body/classes/ApplicationFactory.html",[0,0.322,2,1.294,3,0.059,4,0.059,5,0.059,7,0.081,8,0.665,9,3.241,14,1.185,18,1.242,26,1.114,28,1.37,29,0.008,30,0.431,31,0.205,32,0.884,33,0.279,41,1.002,51,0.793,57,1.175,58,1.363,61,1.222,67,0.081,79,1.068,152,4.84,190,1.344,191,0.005,192,0.006,193,0.005,203,2.13,232,6.685,233,6.942,234,5.659,235,5.933,236,8.022,237,8.741,238,5.715,239,5.872,240,6.942,241,6.942,242,6.942,243,6.942,244,3.121,245,6.942,246,6.942]],["title/interfaces/AttributeType.html",[247,0.151,248,3.881]],["body/interfaces/AttributeType.html",[0,0.275,3,0.051,4,0.051,5,0.051,9,3.174,18,1.215,26,0.756,29,0.008,33,0.238,51,0.852,55,3.042,56,4.883,57,1.004,58,0.985,68,3.575,76,1.859,79,1.148,90,2.533,91,2.533,92,1.975,93,2.533,94,2.412,95,2.533,96,2.533,124,3.677,125,4.305,184,0.604,191,0.007,192,0.006,193,0.005,247,0.188,248,7.593,249,0.575,250,5.267,251,4.243,252,1.312,253,5.931,254,5.267,255,5.267,256,6.623,257,5.267,258,6.073,259,3.284,260,0.756,261,5.267,262,5.267,263,5.267,264,5.334,265,5.334,266,5.267,267,5.267,268,5.267,269,7.994,270,5.267,271,5.267,272,6.623,273,5.267,274,5.267,275,5.267,276,7.244,277,5.267,278,5.267,279,5.267,280,7.601,281,7.244,282,7.994,283,6.61,284,7.244,285,6.623,286,6.623,287,7.601,288,4.103,289,5.267,290,5.267,291,5.267,292,5.267,293,6.623,294,6.623]],["title/interfaces/AudiencePayload.html",[247,0.151,295,1.094]],["body/interfaces/AudiencePayload.html",[0,0.146,3,0.027,4,0.041,5,0.027,7,0.037,8,0.389,12,0.856,25,0.284,29,0.008,30,0.527,31,0.241,33,0.304,45,0.385,67,0.116,81,0.658,84,0.671,89,0.684,109,0.879,133,0.983,161,1.786,184,0.321,191,0.002,192,0.004,193,0.002,220,0.724,247,0.304,249,0.465,252,0.555,260,0.402,295,1.334,296,0.599,297,0.724,298,1.382,299,2.218,300,0.646,301,1.101,302,1.487,303,0.724,304,1.101,305,0.724,306,1.334,307,0.724,308,1.334,309,0.724,310,0.724,311,0.724,312,1.061,313,1.101,314,0.724,315,0.724,316,0.724,317,0.724,318,0.724,319,1.435,320,1.101,321,0.724,322,0.724,323,0.71,324,0.724,325,0.724,326,1.101,327,1.081,328,1.081,329,0.737,330,1.519,331,1.101,332,0.724,333,0.724,334,0.737,335,1.101,336,0.71,337,0.724,338,1.334,339,0.724,340,1.081,341,1.334,342,0.724,343,0.697,344,0.724,345,0.724,346,0.737,347,0.724,348,1.309,349,0.71,350,0.724,351,0.724,352,0.71,353,0.724,354,1.724,355,1.334,356,0.724,357,0.724,358,0.724,359,0.724,360,0.71,361,1.101,362,1.002,363,0.724,364,1.463,365,0.724,366,0.737,367,0.737,368,1.359,369,0.737,370,0.737,371,0.724,372,1.101,373,0.724,374,0.737,375,0.737,376,0.71,377,1.463,378,0.737,379,0.737,380,0.737,381,0.737,382,0.737,383,1.081,384,0.724,385,0.724,386,0.724,387,0.724,388,0.724,389,0.724,390,1.101,391,0.724,392,1.081,393,0.724,394,0.724,395,0.724,396,0.724,397,0.724,398,0.724,399,0.724,400,0.724,401,0.724,402,0.724,403,0.724,404,0.724,405,0.724,406,0.724,407,0.724,408,0.724,409,1.101,410,0.724,411,0.724,412,0.724,413,0.724,414,0.724,415,0.724,416,0.724,417,1.309,418,0.724,419,0.724,420,1.101,421,0.724,422,0.724,423,0.724,424,0.724,425,1.463,426,0.724,427,0.737,428,0.724,429,0.724,430,0.724,431,1.463,432,0.724,433,1.101,434,0.724,435,1.334,436,0.724,437,1.101,438,0.724,439,1.491,440,0.724,441,1.081,442,0.724,443,1.101,444,0.724,445,0.724,446,0.724,447,1.101,448,0.724,449,1.081,450,0.737,451,0.737,452,0.724,453,0.724,454,1.081,455,1.061,456,1.021,457,0.724,458,0.684,459,1.503,460,1.756,461,0.724,462,0.724,463,0.724,464,0.724,465,0.724,466,0.724,467,0.724,468,0.724,469,0.724,470,0.724,471,0.724,472,0.724,473,0.724,474,0.724,475,0.724,476,0.724,477,1.334,478,1.334,479,1.722,480,0.724,481,0.724,482,1.101,483,0.724,484,0.737,485,1.334,486,1.334,487,0.724,488,0.737,489,0.724,490,0.737,491,1.101,492,0.724,493,1.003,494,0.737,495,0.737,496,0.724,497,0.737,498,0.724,499,0.724,500,1.101,501,0.737,502,1.101,503,1.101,504,1.101,505,1.519,506,0.724,507,0.737,508,0.737,509,1.101,510,0.724,511,0.737,512,0.737,513,0.588,514,0.724,515,1.309,516,1.309,517,1.101,518,0.71,519,0.71,520,0.71,521,1.101,522,0.724,523,0.724,524,0.724,525,1.021,526,1.334,527,0.71,528,0.71,529,0.724,530,0.737,531,0.737,532,0.724,533,0.724,534,0.737,535,0.737,536,0.737,537,0.737,538,1.101,539,0.71,540,0.71,541,1.309,542,1.101,543,0.71,544,0.724,545,0.724,546,1.101,547,0.737,548,0.376,549,0.724,550,0.634,551,1.597,552,1.625,553,1.586,554,1.777,555,1.041,556,0.737,557,0.724,558,0.61,559,0.724,560,0.724,561,1.334,562,0.737,563,0.737,564,1.101,565,0.737,566,0.737,567,0.724,568,0.737,569,1.586,570,0.737,571,1.722,572,0.737,573,0.737,574,0.737,575,0.737,576,0.737,577,1.334,578,0.737,579,0.737,580,0.737,581,0.737,582,0.737,583,0.724,584,0.737,585,0.737,586,0.737,587,0.737,588,0.737,589,0.737,590,0.737,591,0.737,592,0.737,593,0.737,594,0.737,595,0.724,596,0.737,597,1.306,598,0.737,599,0.737,600,0.737,601,0.737,602,0.737,603,1.101,604,0.737,605,0.724,606,0.737,607,0.737,608,0.737,609,0.737,610,0.737,611,0.724,612,0.724,613,0.737,614,0.737,615,0.737,616,0.724,617,0.724,618,0.737,619,0.737,620,0.724,621,0.737,622,0.737,623,0.737,624,0.737,625,0.724,626,0.737,627,0.724,628,0.737,629,0.737,630,0.724,631,0.737,632,0.737]],["title/interfaces/AuthResponse.html",[247,0.151,532,1.094]],["body/interfaces/AuthResponse.html",[0,0.145,3,0.027,4,0.041,5,0.027,7,0.037,8,0.387,12,0.853,25,0.282,29,0.008,30,0.526,31,0.242,33,0.303,45,0.382,67,0.116,81,0.655,84,0.667,89,0.68,109,0.877,133,0.979,161,1.849,184,0.319,191,0.002,192,0.004,193,0.002,220,0.719,247,0.304,249,0.463,252,0.551,260,0.399,295,1.097,296,0.595,297,0.719,298,0.667,299,2.217,300,0.642,301,1.097,302,1.483,303,0.719,304,1.097,305,0.719,306,1.329,307,0.719,308,1.329,309,0.719,310,0.719,311,0.719,312,1.056,313,1.097,314,0.719,315,0.719,316,0.719,317,0.719,318,0.719,319,1.431,320,1.097,321,0.719,322,0.719,323,0.706,324,0.719,325,0.719,326,1.097,327,1.076,328,1.076,329,0.733,330,1.515,331,1.097,332,0.719,333,0.719,334,0.733,335,1.097,336,0.706,337,0.719,338,1.329,339,0.719,340,1.076,341,1.329,342,0.719,343,0.693,344,0.719,345,0.719,346,0.733,347,0.719,348,1.304,349,0.706,350,0.719,351,0.719,352,0.706,353,0.719,354,1.72,355,1.329,356,0.719,357,0.719,358,0.719,359,0.719,360,0.706,361,1.097,362,0.998,363,0.719,364,1.458,365,0.719,366,0.733,367,0.733,368,1.354,369,0.733,370,0.733,371,0.719,372,1.097,373,0.719,374,0.733,375,0.733,376,0.706,377,1.458,378,0.733,379,0.733,380,0.733,381,0.733,382,0.733,383,1.076,384,0.719,385,0.719,386,0.719,387,0.719,388,0.719,389,0.719,390,1.097,391,0.719,392,1.076,393,0.719,394,0.719,395,0.719,396,0.719,397,0.719,398,0.719,399,0.719,400,0.719,401,0.719,402,0.719,403,0.719,404,0.719,405,0.719,406,0.719,407,0.719,408,0.719,409,1.097,410,0.719,411,0.719,412,0.719,413,0.719,414,0.719,415,0.719,416,0.719,417,1.304,418,0.719,419,0.719,420,1.097,421,0.719,422,0.719,423,0.719,424,0.719,425,1.458,426,0.719,427,0.733,428,0.719,429,0.719,430,0.719,431,1.458,432,0.719,433,1.097,434,0.719,435,1.329,436,0.719,437,1.097,438,0.719,439,1.486,440,0.719,441,1.076,442,0.719,443,1.097,444,0.719,445,0.719,446,0.719,447,1.097,448,0.719,449,1.076,450,0.733,451,0.733,452,0.719,453,0.719,454,1.076,455,1.056,456,1.017,457,0.719,458,0.68,459,1.501,460,1.754,461,0.719,462,0.719,463,0.719,464,0.719,465,0.719,466,0.719,467,0.719,468,0.719,469,0.719,470,0.719,471,0.719,472,0.719,473,0.719,474,0.719,475,0.719,476,0.719,477,1.329,478,1.329,479,1.718,480,0.719,481,0.719,482,1.097,483,0.719,484,0.733,485,1.329,486,1.329,487,0.719,488,0.733,489,0.719,490,0.733,491,1.097,492,0.719,493,0.999,494,0.733,495,0.733,496,0.719,497,0.733,498,0.719,499,0.719,500,1.097,501,0.733,502,1.097,503,1.097,504,1.097,505,1.515,506,0.719,507,0.733,508,0.733,509,1.097,510,0.719,511,0.733,512,0.733,513,0.584,514,0.719,515,1.304,516,1.304,517,1.097,518,0.706,519,0.706,520,0.706,521,1.097,522,0.719,523,0.719,524,0.719,525,1.017,526,1.329,527,0.706,528,0.706,529,0.719,530,0.733,531,0.733,532,1.097,533,1.486,534,1.515,535,1.515,536,0.733,537,1.515,538,1.097,539,0.706,540,0.706,541,1.304,542,1.097,543,0.706,544,0.719,545,0.719,546,1.097,547,0.733,548,0.374,549,0.719,550,0.63,551,1.597,552,1.622,553,1.583,554,1.773,555,1.036,556,0.733,557,0.719,558,0.607,559,0.719,560,0.719,561,1.329,562,0.733,563,0.733,564,1.097,565,0.733,566,0.733,567,0.719,568,0.733,569,1.583,570,0.733,571,1.718,572,0.733,573,0.733,574,0.733,575,0.733,576,0.733,577,1.329,578,0.733,579,0.733,580,0.733,581,0.733,582,0.733,583,0.719,584,0.733,585,0.733,586,0.733,587,0.733,588,0.733,589,0.733,590,0.733,591,0.733,592,0.733,593,0.733,594,0.733,595,0.719,596,0.733,597,1.302,598,0.733,599,0.733,600,0.733,601,0.733,602,0.733,603,1.097,604,0.733,605,0.719,606,0.733,607,0.733,608,0.733,609,0.733,610,0.733,611,0.719,612,0.719,613,0.733,614,0.733,615,0.733,616,0.719,617,0.719,618,0.733,619,0.733,620,0.719,621,0.733,622,0.733,623,0.733,624,0.733,625,0.719,626,0.733,627,0.719,628,0.733,629,0.733,630,0.719,631,0.733,632,0.733]],["title/interfaces/Availability.html",[247,0.151,328,1.074]],["body/interfaces/Availability.html",[0,0.145,3,0.027,4,0.041,5,0.027,7,0.037,8,0.386,12,0.852,25,0.282,29,0.008,30,0.526,31,0.242,32,0.608,33,0.303,45,0.382,67,0.116,81,1.351,84,0.666,89,0.679,109,0.876,133,0.978,161,1.782,184,0.318,191,0.002,192,0.004,193,0.002,220,0.718,247,0.304,249,0.463,252,0.551,260,0.399,295,1.095,296,0.595,297,0.718,298,0.666,299,2.217,300,0.641,301,1.095,302,1.483,303,0.718,304,1.095,305,0.718,306,1.328,307,0.718,308,1.328,309,0.718,310,0.718,311,0.718,312,1.055,313,1.095,314,0.718,315,0.718,316,0.718,317,0.718,318,0.718,319,1.43,320,1.485,321,0.718,322,0.718,323,0.705,324,0.718,325,0.718,326,1.485,327,1.075,328,1.303,329,1.513,330,1.717,331,1.599,332,0.718,333,0.718,334,0.732,335,1.095,336,0.705,337,0.718,338,1.328,339,0.718,340,1.075,341,1.328,342,0.718,343,0.692,344,0.718,345,0.718,346,0.732,347,0.718,348,1.303,349,0.705,350,0.718,351,0.718,352,0.705,353,0.718,354,1.719,355,1.328,356,0.718,357,0.718,358,0.718,359,0.718,360,0.705,361,1.095,362,0.997,363,0.718,364,1.457,365,0.718,366,0.732,367,0.732,368,1.353,369,0.732,370,0.732,371,0.718,372,1.095,373,0.718,374,0.732,375,0.732,376,0.705,377,1.457,378,0.732,379,0.732,380,0.732,381,0.732,382,0.732,383,1.075,384,0.718,385,0.718,386,0.718,387,0.718,388,0.718,389,0.718,390,1.095,391,0.718,392,1.075,393,0.718,394,0.718,395,0.718,396,0.718,397,0.718,398,0.718,399,0.718,400,0.718,401,0.718,402,0.718,403,0.718,404,0.718,405,0.718,406,0.718,407,0.718,408,0.718,409,1.095,410,0.718,411,0.718,412,0.718,413,0.718,414,0.718,415,0.718,416,0.718,417,1.303,418,0.718,419,0.718,420,1.095,421,0.718,422,0.718,423,0.718,424,0.718,425,1.457,426,0.718,427,0.732,428,0.718,429,0.718,430,0.718,431,1.457,432,0.718,433,1.095,434,0.718,435,1.328,436,0.718,437,1.095,438,0.718,439,1.485,440,0.718,441,1.075,442,0.718,443,1.095,444,0.718,445,0.718,446,0.718,447,1.095,448,0.718,449,1.075,450,0.732,451,0.732,452,0.718,453,0.718,454,1.075,455,1.055,456,1.016,457,0.718,458,0.679,459,1.501,460,1.754,461,0.718,462,0.718,463,0.718,464,0.718,465,0.718,466,0.718,467,0.718,468,0.718,469,0.718,470,0.718,471,0.718,472,0.718,473,0.718,474,0.718,475,0.718,476,0.718,477,1.328,478,1.328,479,1.717,480,0.718,481,0.718,482,1.095,483,0.718,484,0.732,485,1.328,486,1.328,487,0.718,488,0.732,489,0.718,490,0.732,491,1.095,492,0.718,493,0.998,494,0.732,495,0.732,496,0.718,497,0.732,498,0.718,499,0.718,500,1.095,501,0.732,502,1.095,503,1.095,504,1.095,505,1.513,506,0.718,507,0.732,508,0.732,509,1.095,510,0.718,511,0.732,512,0.732,513,0.583,514,0.718,515,1.303,516,1.303,517,1.095,518,0.705,519,0.705,520,0.705,521,1.095,522,0.718,523,0.718,524,0.718,525,1.016,526,1.328,527,0.705,528,0.705,529,0.718,530,0.732,531,0.732,532,0.718,533,0.718,534,0.732,535,0.732,536,0.732,537,0.732,538,1.095,539,0.705,540,0.705,541,1.303,542,1.095,543,0.705,544,0.718,545,0.718,546,1.095,547,0.732,548,0.374,549,0.718,550,0.629,551,1.596,552,1.622,553,1.583,554,1.773,555,1.035,556,0.732,557,0.718,558,0.606,559,0.718,560,0.718,561,1.328,562,0.732,563,0.732,564,1.095,565,0.732,566,0.732,567,0.718,568,0.732,569,1.583,570,0.732,571,1.717,572,0.732,573,0.732,574,0.732,575,0.732,576,0.732,577,1.328,578,0.732,579,0.732,580,0.732,581,0.732,582,0.732,583,0.718,584,0.732,585,0.732,586,0.732,587,0.732,588,0.732,589,0.732,590,0.732,591,0.732,592,0.732,593,0.732,594,0.732,595,0.718,596,0.732,597,1.301,598,0.732,599,0.732,600,0.732,601,0.732,602,0.732,603,1.095,604,0.732,605,0.718,606,0.732,607,0.732,608,0.732,609,0.732,610,0.732,611,0.718,612,0.718,613,0.732,614,0.732,615,0.732,616,0.718,617,0.718,618,0.732,619,0.732,620,0.718,621,0.732,622,0.732,623,0.732,624,0.732,625,0.718,626,0.732,627,0.718,628,0.732,629,0.732,630,0.718,631,0.732,632,0.732]],["title/interfaces/BaseSkillConfig.html",[247,0.151,633,3.409]],["body/interfaces/BaseSkillConfig.html",[3,0.058,4,0.058,5,0.058,7,0.08,8,0.659,25,0.782,29,0.007,31,0.229,32,1.145,33,0.277,51,0.929,57,1.377,58,1.135,67,0.105,109,0.971,191,0.005,192,0.006,193,0.005,247,0.285,249,0.663,633,6.43,634,4.428,635,4.892,636,6.101,637,6.826,638,6.862,639,3.905,640,4.668,641,5.523,642,5.044,643,3.157,644,4.428,645,4.892,646,5.044,647,5.82,648,5.523,649,5.193,650,5.193,651,5.523,652,4.428,653,4.892,654,4.428,655,4.642,656,4.642,657,4.642,658,4.642]],["title/classes/BuyContentBuilder.html",[0,0.221,659,4.233]],["body/classes/BuyContentBuilder.html",[0,0.296,2,1.19,3,0.054,4,0.054,5,0.054,7,0.091,8,0.632,12,1.15,14,1.127,16,2.818,18,1.278,25,0.574,26,1.21,28,1.778,29,0.007,30,0.559,31,0.234,32,1.148,33,0.299,39,5.927,41,1.127,51,0.892,67,0.075,79,0.831,109,0.932,190,1.236,191,0.005,192,0.006,193,0.005,203,1.959,548,0.762,558,1.512,659,6.933,660,6.385,661,4.97,662,4.323,663,4.373,664,8.432,665,4.241,666,4.669,667,4.649,668,4.649,669,4.649,670,4.649,671,3.311,672,4.896,673,4.133,674,4.133,675,4.133,676,6.385,677,6.385,678,4.133,679,4.133,680,3.958,681,4.989,682,4.133,683,3.958,684,4.133,685,3.803,686,3.958,687,4.133,688,3.958,689,4.133,690,5.67,691,3.536,692,5.67,693,6.385]],["title/classes/BuyIntentHandlerBuilder.html",[0,0.221,694,4.233]],["body/classes/BuyIntentHandlerBuilder.html",[0,0.248,2,0.997,3,0.046,4,0.046,5,0.046,7,0.063,8,0.565,12,1.028,14,1.008,16,2.099,17,2.47,18,1.273,19,3.63,24,2.47,25,0.481,26,1.176,28,1.625,29,0.008,30,0.53,31,0.226,32,1.049,41,1.008,45,0.653,51,1.045,53,3.463,55,2.971,57,1.315,58,1.159,59,1.709,61,0.941,66,5.3,67,0.091,68,2.124,72,4.061,76,1.857,79,1.191,101,4.627,104,4.73,108,4.061,109,0.833,125,3.51,135,4.157,145,3.826,176,4.157,184,0.544,190,1.654,191,0.004,192,0.005,193,0.004,203,2.526,288,2.69,513,1.301,548,0.639,643,2.076,663,4.029,665,4.142,672,4.693,690,4.75,694,6.199,695,5.349,696,5.15,697,3.953,698,4.737,699,3.972,700,2.432,701,4.271,702,4.627,703,4.519,704,4.157,705,4.519,706,4.519,707,5.349,708,4.356,709,4.356,710,4.356,711,5.349,712,3.463,713,4.356,714,3.63,715,3.865,716,4.356,717,2.175,718,3.316,719,4.356,720,3.63,721,4.356,722,3.63,723,4.356,724,5.349,725,4.75,726,4.356,727,5.349,728,5.349,729,2.774,730,5.349,731,5.349,732,5.349,733,5.349,734,5.349,735,3.63,736,6.98,737,4.75,738,5.349,739,5.349,740,5.349,741,3.463,742,6.199,743,5.349,744,5.349,745,5.349,746,5.349,747,5.349,748,5.349,749,5.349,750,5.349,751,5.349,752,5.349,753,5.349,754,5.349,755,4.356,756,5.349,757,4.061,758,4.061,759,4.327,760,5.349,761,4.061,762,3.826,763,5.349,764,5.349,765,5.349,766,5.349,767,5.349,768,5.349,769,5.349,770,5.349,771,4.356,772,5.349]],["title/classes/BuyResponseContentBuilder.html",[0,0.221,773,4.233]],["body/classes/BuyResponseContentBuilder.html",[0,0.252,2,1.012,3,0.046,4,0.046,5,0.046,7,0.064,8,0.571,9,3.403,12,1.038,14,1.018,16,2.73,18,1.278,25,0.488,26,1.211,28,1.634,29,0.008,30,0.514,31,0.223,32,1.055,33,0.274,41,1.239,51,0.62,67,0.064,76,1.417,79,1.194,92,2.758,101,5.406,109,0.841,135,3.233,174,6.493,190,1.051,191,0.004,192,0.005,193,0.004,203,1.665,260,0.692,343,1.2,548,0.648,558,1.365,661,4.863,662,3.902,663,4.058,665,3.936,666,4.333,667,4.197,668,4.197,669,4.197,670,4.197,671,4.708,672,4.758,673,3.514,674,3.514,675,3.514,678,3.514,679,3.514,680,3.365,681,4.753,682,3.514,683,3.365,684,3.514,685,3.233,686,3.365,687,3.514,688,3.365,689,3.514,691,3.006,759,3.365,773,6.259,774,5.428,775,8.282,776,8.282,777,8.282,778,8.282,779,8.282,780,8.282,781,5.428,782,5.428,783,5.428,784,5.428,785,5.428,786,5.428,787,5.739,788,4.421,789,5.739,790,4.851,791,4.71,792,5.239,793,4.435,794,4.821,795,5.428,796,4.489,797,5.428,798,4.821,799,3.883,800,5.428,801,3.365,802,4.821,803,4.122,804,3.514,805,4.821,806,5.428]],["title/interfaces/Class.html",[0,0.221,247,0.151]],["body/interfaces/Class.html",[0,0.223,3,0.027,4,0.041,5,0.027,7,0.037,8,0.389,12,0.856,25,0.284,29,0.008,30,0.527,31,0.241,33,0.303,45,0.709,67,0.116,81,0.658,84,0.671,89,0.684,109,0.879,133,0.983,161,1.786,184,0.321,191,0.002,192,0.004,193,0.002,220,0.724,247,0.304,249,0.465,252,0.555,260,0.402,295,1.101,296,0.599,297,0.724,298,0.671,299,2.218,300,0.646,301,1.101,302,1.487,303,0.724,304,1.101,305,0.724,306,1.334,307,0.724,308,1.334,309,0.724,310,0.724,311,0.724,312,1.061,313,1.101,314,0.724,315,0.724,316,0.724,317,0.724,318,0.724,319,1.435,320,1.101,321,0.724,322,0.724,323,0.71,324,0.724,325,0.724,326,1.101,327,1.081,328,1.081,329,0.737,330,1.519,331,1.101,332,0.724,333,0.724,334,0.737,335,1.101,336,0.71,337,0.724,338,1.334,339,0.724,340,1.081,341,1.334,342,0.724,343,0.697,344,0.724,345,0.724,346,0.737,347,0.724,348,1.309,349,0.71,350,0.724,351,0.724,352,0.71,353,0.724,354,1.724,355,1.334,356,0.724,357,0.724,358,0.724,359,0.724,360,0.71,361,1.101,362,1.002,363,0.724,364,1.463,365,0.724,366,0.737,367,0.737,368,1.359,369,0.737,370,0.737,371,0.724,372,1.101,373,0.724,374,0.737,375,0.737,376,0.71,377,1.463,378,0.737,379,0.737,380,0.737,381,0.737,382,0.737,383,1.081,384,0.724,385,0.724,386,0.724,387,0.724,388,0.724,389,0.724,390,1.101,391,0.724,392,1.081,393,0.724,394,0.724,395,0.724,396,0.724,397,0.724,398,0.724,399,0.724,400,0.724,401,0.724,402,0.724,403,0.724,404,0.724,405,0.724,406,0.724,407,0.724,408,0.724,409,1.101,410,0.724,411,0.724,412,0.724,413,0.724,414,0.724,415,0.724,416,0.724,417,1.309,418,0.724,419,0.724,420,1.101,421,0.724,422,0.724,423,0.724,424,0.724,425,1.463,426,0.724,427,0.737,428,0.724,429,0.724,430,0.724,431,1.463,432,0.724,433,1.101,434,0.724,435,1.334,436,0.724,437,1.101,438,0.724,439,1.491,440,0.724,441,1.081,442,0.724,443,1.101,444,0.724,445,0.724,446,0.724,447,1.101,448,0.724,449,1.081,450,0.737,451,0.737,452,0.724,453,0.724,454,1.081,455,1.061,456,1.021,457,0.724,458,0.684,459,1.503,460,1.756,461,0.724,462,0.724,463,0.724,464,0.724,465,0.724,466,0.724,467,0.724,468,0.724,469,0.724,470,0.724,471,0.724,472,0.724,473,0.724,474,0.724,475,0.724,476,0.724,477,1.334,478,1.334,479,1.722,480,0.724,481,0.724,482,1.101,483,0.724,484,0.737,485,1.334,486,1.334,487,0.724,488,0.737,489,0.724,490,0.737,491,1.101,492,0.724,493,1.003,494,0.737,495,0.737,496,0.724,497,0.737,498,0.724,499,0.724,500,1.101,501,0.737,502,1.101,503,1.101,504,1.101,505,1.519,506,0.724,507,0.737,508,0.737,509,1.101,510,0.724,511,0.737,512,0.737,513,0.588,514,1.491,515,1.309,516,1.309,517,1.101,518,0.71,519,0.71,520,0.71,521,1.101,522,0.724,523,0.724,524,0.724,525,1.021,526,1.334,527,0.71,528,0.71,529,0.724,530,0.737,531,0.737,532,0.724,533,0.724,534,0.737,535,0.737,536,0.737,537,0.737,538,1.101,539,0.71,540,0.71,541,1.309,542,1.101,543,0.71,544,0.724,545,0.724,546,1.101,547,0.737,548,0.376,549,0.724,550,0.634,551,1.597,552,1.625,553,1.586,554,1.777,555,1.041,556,0.737,557,0.724,558,0.61,559,0.724,560,0.724,561,1.334,562,0.737,563,0.737,564,1.101,565,0.737,566,0.737,567,0.724,568,0.737,569,1.586,570,0.737,571,1.722,572,0.737,573,0.737,574,0.737,575,0.737,576,0.737,577,1.334,578,0.737,579,0.737,580,0.737,581,0.737,582,0.737,583,0.724,584,0.737,585,0.737,586,0.737,587,0.737,588,0.737,589,0.737,590,0.737,591,0.737,592,0.737,593,0.737,594,0.737,595,0.724,596,0.737,597,1.306,598,0.737,599,0.737,600,0.737,601,0.737,602,0.737,603,1.101,604,0.737,605,0.724,606,0.737,607,0.737,608,0.737,609,0.737,610,0.737,611,0.724,612,0.724,613,0.737,614,0.737,615,0.737,616,0.724,617,0.724,618,0.737,619,0.737,620,0.724,621,0.737,622,0.737,623,0.737,624,0.737,625,0.724,626,0.737,627,0.724,628,0.737,629,0.737,630,0.724,631,0.737,632,0.737]],["title/interfaces/ClientConfig.html",[247,0.151,529,1.094]],["body/interfaces/ClientConfig.html",[0,0.144,3,0.026,4,0.04,5,0.026,7,0.036,8,0.384,12,0.848,25,0.518,29,0.008,30,0.525,31,0.242,32,0.932,33,0.302,45,0.379,67,0.116,81,0.648,84,0.661,89,0.673,109,0.874,133,0.972,161,1.778,184,0.316,191,0.002,192,0.004,193,0.002,220,0.713,247,0.304,249,0.46,252,0.546,260,0.395,295,1.089,296,0.59,297,0.713,298,0.661,299,2.215,300,0.636,301,1.089,302,1.477,303,0.713,304,1.089,305,0.713,306,1.321,307,0.713,308,1.321,309,0.713,310,0.713,311,0.713,312,1.048,313,1.089,314,0.713,315,0.713,316,0.713,317,0.713,318,0.713,319,1.424,320,1.089,321,0.713,322,0.713,323,0.699,324,0.713,325,0.713,326,1.089,327,1.068,328,1.068,329,0.726,330,1.507,331,1.089,332,0.713,333,0.713,334,0.726,335,1.089,336,0.699,337,0.713,338,1.321,339,0.713,340,1.068,341,1.321,342,0.713,343,0.686,344,0.713,345,0.713,346,0.726,347,0.713,348,1.296,349,0.699,350,0.713,351,0.713,352,0.699,353,0.713,354,1.715,355,1.321,356,0.713,357,0.713,358,0.713,359,0.713,360,0.699,361,1.089,362,0.991,363,0.713,364,1.451,365,0.713,366,0.726,367,0.726,368,1.346,369,0.726,370,0.726,371,0.713,372,1.089,373,0.713,374,0.726,375,0.726,376,0.699,377,1.451,378,0.726,379,0.726,380,0.726,381,0.726,382,0.726,383,1.068,384,0.713,385,0.713,386,0.713,387,0.713,388,0.713,389,0.713,390,1.089,391,0.713,392,1.068,393,0.713,394,0.713,395,0.713,396,0.713,397,0.713,398,0.713,399,0.713,400,0.713,401,0.713,402,0.713,403,0.713,404,0.713,405,0.713,406,0.713,407,0.713,408,0.713,409,1.089,410,0.713,411,0.713,412,0.713,413,0.713,414,0.713,415,0.713,416,0.713,417,1.296,418,0.713,419,0.713,420,1.089,421,0.713,422,0.713,423,0.713,424,0.713,425,1.451,426,0.713,427,0.726,428,0.713,429,0.713,430,0.713,431,1.451,432,0.713,433,1.089,434,0.713,435,1.321,436,0.713,437,1.089,438,0.713,439,1.479,440,0.713,441,1.068,442,0.713,443,1.089,444,0.713,445,0.713,446,0.713,447,1.089,448,0.713,449,1.068,450,0.726,451,0.726,452,0.713,453,0.713,454,1.068,455,1.048,456,1.009,457,0.713,458,0.673,459,1.499,460,1.751,461,0.713,462,0.713,463,0.713,464,0.713,465,0.713,466,0.713,467,0.713,468,0.713,469,0.713,470,0.713,471,0.713,472,0.713,473,0.713,474,0.713,475,0.713,476,0.713,477,1.321,478,1.321,479,1.712,480,0.713,481,0.713,482,1.089,483,0.713,484,0.726,485,1.321,486,1.321,487,0.713,488,0.726,489,0.713,490,0.726,491,1.089,492,0.713,493,0.993,494,0.726,495,0.726,496,0.713,497,0.726,498,0.713,499,0.713,500,1.089,501,0.726,502,1.089,503,1.089,504,1.089,505,1.507,506,0.713,507,0.726,508,0.726,509,1.089,510,0.713,511,0.726,512,0.726,513,0.579,514,0.713,515,1.768,516,1.768,517,1.089,518,0.699,519,0.699,520,0.699,521,1.089,522,0.713,523,0.713,524,0.713,525,1.371,526,1.802,527,0.699,528,0.699,529,1.089,530,1.507,531,1.507,532,0.713,533,0.713,534,0.726,535,0.726,536,0.726,537,0.726,538,1.089,539,0.699,540,0.699,541,1.296,542,1.089,543,0.699,544,0.713,545,0.713,546,1.089,547,0.726,548,0.371,549,0.713,550,0.624,551,1.596,552,1.618,553,1.579,554,1.768,555,1.029,556,0.726,557,0.713,558,0.601,559,0.713,560,0.713,561,1.321,562,0.726,563,0.726,564,1.089,565,0.726,566,0.726,567,0.713,568,0.726,569,1.579,570,0.726,571,1.712,572,0.726,573,0.726,574,0.726,575,0.726,576,0.726,577,1.321,578,0.726,579,0.726,580,0.726,581,0.726,582,0.726,583,0.713,584,0.726,585,0.726,586,0.726,587,0.726,588,0.726,589,0.726,590,0.726,591,0.726,592,0.726,593,0.726,594,0.726,595,0.713,596,0.726,597,1.296,598,0.726,599,0.726,600,0.726,601,0.726,602,0.726,603,1.089,604,0.726,605,0.713,606,0.726,607,0.726,608,0.726,609,0.726,610,0.726,611,0.713,612,0.713,613,0.726,614,0.726,615,0.726,616,0.713,617,0.713,618,0.726,619,0.726,620,0.713,621,0.726,622,0.726,623,0.726,624,0.726,625,0.713,626,0.726,627,0.713,628,0.726,629,0.726,630,0.713,631,0.726,632,0.726]],["title/interfaces/ConfirmationState.html",[247,0.151,360,1.074]],["body/interfaces/ConfirmationState.html",[0,0.146,3,0.027,4,0.041,5,0.027,7,0.037,8,0.389,12,0.856,25,0.284,29,0.008,30,0.527,31,0.241,33,0.303,45,0.385,67,0.116,81,0.658,84,0.671,89,0.684,109,0.879,133,0.983,161,1.786,184,0.321,191,0.002,192,0.004,193,0.002,220,0.724,247,0.304,249,0.465,252,0.555,260,0.402,295,1.101,296,0.599,297,0.724,298,0.671,299,2.218,300,0.646,301,1.101,302,1.487,303,0.724,304,1.101,305,0.724,306,1.334,307,0.724,308,1.334,309,0.724,310,0.724,311,0.724,312,1.061,313,1.101,314,0.724,315,0.724,316,0.724,317,0.724,318,0.724,319,1.435,320,1.101,321,0.724,322,0.724,323,0.71,324,0.724,325,0.724,326,1.101,327,1.081,328,1.081,329,0.737,330,1.519,331,1.101,332,0.724,333,0.724,334,0.737,335,1.101,336,0.71,337,0.724,338,1.334,339,0.724,340,1.081,341,1.334,342,0.724,343,0.697,344,0.724,345,0.724,346,0.737,347,0.724,348,1.777,349,0.71,350,0.724,351,0.724,352,0.71,353,0.724,354,1.724,355,1.334,356,0.724,357,0.724,358,0.724,359,0.724,360,1.081,361,1.101,362,1.002,363,0.724,364,1.463,365,0.724,366,0.737,367,0.737,368,1.359,369,0.737,370,0.737,371,0.724,372,1.101,373,0.724,374,0.737,375,0.737,376,0.71,377,1.463,378,0.737,379,0.737,380,0.737,381,0.737,382,0.737,383,1.081,384,0.724,385,0.724,386,0.724,387,0.724,388,0.724,389,0.724,390,1.101,391,0.724,392,1.081,393,0.724,394,0.724,395,0.724,396,0.724,397,0.724,398,0.724,399,0.724,400,0.724,401,0.724,402,0.724,403,0.724,404,0.724,405,0.724,406,0.724,407,0.724,408,0.724,409,1.101,410,0.724,411,0.724,412,0.724,413,0.724,414,0.724,415,0.724,416,0.724,417,1.309,418,0.724,419,0.724,420,1.101,421,0.724,422,0.724,423,0.724,424,0.724,425,1.463,426,0.724,427,0.737,428,0.724,429,0.724,430,0.724,431,1.463,432,0.724,433,1.101,434,0.724,435,1.334,436,0.724,437,1.101,438,0.724,439,1.491,440,0.724,441,1.081,442,0.724,443,1.101,444,0.724,445,0.724,446,0.724,447,1.101,448,0.724,449,1.081,450,0.737,451,0.737,452,0.724,453,0.724,454,1.081,455,1.061,456,1.021,457,0.724,458,0.684,459,1.503,460,1.756,461,0.724,462,0.724,463,0.724,464,0.724,465,0.724,466,0.724,467,0.724,468,0.724,469,0.724,470,0.724,471,0.724,472,0.724,473,0.724,474,0.724,475,0.724,476,0.724,477,1.334,478,1.334,479,1.722,480,0.724,481,0.724,482,1.101,483,0.724,484,0.737,485,1.334,486,1.334,487,0.724,488,0.737,489,0.724,490,0.737,491,1.101,492,0.724,493,1.003,494,0.737,495,0.737,496,0.724,497,0.737,498,0.724,499,0.724,500,1.101,501,0.737,502,1.101,503,1.101,504,1.101,505,1.519,506,0.724,507,0.737,508,0.737,509,1.101,510,0.724,511,0.737,512,0.737,513,0.588,514,0.724,515,1.309,516,1.309,517,1.101,518,0.71,519,0.71,520,0.71,521,1.101,522,0.724,523,0.724,524,0.724,525,1.021,526,1.334,527,0.71,528,0.71,529,0.724,530,0.737,531,0.737,532,0.724,533,0.724,534,0.737,535,0.737,536,0.737,537,0.737,538,1.101,539,0.71,540,0.71,541,1.309,542,1.101,543,0.71,544,0.724,545,0.724,546,1.101,547,0.737,548,0.376,549,0.724,550,0.634,551,1.597,552,1.625,553,1.586,554,1.777,555,1.041,556,0.737,557,0.724,558,0.61,559,0.724,560,0.724,561,1.334,562,0.737,563,0.737,564,1.101,565,0.737,566,0.737,567,0.724,568,0.737,569,1.586,570,0.737,571,1.722,572,0.737,573,0.737,574,0.737,575,0.737,576,0.737,577,1.334,578,0.737,579,0.737,580,0.737,581,0.737,582,0.737,583,0.724,584,0.737,585,0.737,586,0.737,587,0.737,588,0.737,589,0.737,590,0.737,591,0.737,592,0.737,593,0.737,594,0.737,595,0.724,596,0.737,597,1.306,598,0.737,599,0.737,600,0.737,601,0.737,602,0.737,603,1.101,604,0.737,605,0.724,606,0.737,607,0.737,608,0.737,609,0.737,610,0.737,611,0.724,612,0.724,613,0.737,614,0.737,615,0.737,616,0.724,617,0.724,618,0.737,619,0.737,620,0.724,621,0.737,622,0.737,623,0.737,624,0.737,625,0.724,626,0.737,627,0.724,628,0.737,629,0.737,630,0.724,631,0.737,632,0.737]],["title/classes/ConstantsInterceptorFactory.html",[0,0.221,807,3.881]],["body/classes/ConstantsInterceptorFactory.html",[0,0.325,2,1.303,3,0.06,4,0.06,5,0.06,7,0.082,14,1.19,17,3.228,18,0.929,26,0.891,28,1.627,29,0.008,30,0.434,31,0.206,32,0.891,33,0.223,41,1.009,51,0.941,55,2.745,56,3.871,57,1.395,58,1.368,59,2.234,67,0.103,76,1.406,79,0.91,145,5.897,190,1.354,191,0.005,192,0.006,193,0.005,247,0.221,252,1.23,636,6.145,639,4.07,640,5.029,644,4.526,700,2.744,807,7.139,808,6.209,809,3.653,810,6.991,811,6.991,812,6.209,813,5.308,814,6.209,815,6.209]],["title/classes/ContentBuilder.html",[0,0.221,661,2.472]],["body/classes/ContentBuilder.html",[0,0.271,2,1.089,3,0.05,4,0.05,5,0.05,7,0.068,8,0.598,12,1.321,14,1.066,16,2.849,18,1.281,22,2.866,25,0.665,26,1.194,28,1.733,29,0.008,30,0.544,31,0.23,32,1.119,33,0.303,41,1.066,51,0.844,57,1.25,58,1.226,59,1.866,61,1.028,67,0.095,71,3.479,76,1.175,79,1.199,190,1.43,191,0.004,192,0.006,193,0.004,203,1.792,247,0.185,548,0.967,558,1.736,661,4.201,662,4.485,663,4.953,665,4.281,666,4.713,667,4.824,668,4.824,669,4.824,670,4.824,671,4.201,680,3.621,681,5.219,683,3.621,685,5.341,686,3.621,688,3.621,791,4.337,793,4.337,796,3.351,816,5.187,817,4.178,818,7.386,819,5.841,820,5.841,821,5.841,822,5.841,823,5.841,824,5.841,825,5.841,826,5.841,827,4.178,828,4.178,829,5.187,830,5.187,831,7.796,832,5.187,833,5.187,834,4.178,835,4.178,836,5.187,837,4.178,838,4.178]],["title/classes/ContentBuilder-1.html",[0,0.186,194,2.142,661,2.074]],["body/classes/ContentBuilder-1.html",[0,0.304,2,0.903,3,0.041,4,0.041,5,0.041,7,0.057,8,0.53,9,2.937,12,1.283,14,0.944,16,2.83,18,1.24,19,3.29,22,2.871,25,0.588,26,1.086,28,0.957,29,0.008,30,0.513,31,0.198,32,0.618,33,0.294,41,0.944,51,0.845,57,1.107,58,1.085,59,1.549,60,2.595,61,0.853,64,5.353,65,3.29,67,0.093,71,2.887,76,1.488,79,1.246,92,2.837,100,3.29,101,5.605,109,0.579,113,4.438,126,3.751,131,3.29,135,4.407,159,3.467,172,6.488,183,2.939,184,0.665,185,4.438,190,1.266,191,0.004,192,0.005,193,0.004,203,1.487,235,3.29,238,3.005,247,0.153,362,1.012,458,1.051,548,0.987,661,3.837,662,4.097,663,4.881,665,3.983,666,4.385,671,4.592,681,4.579,741,3.138,757,3.68,758,3.68,759,4.053,761,3.68,762,4.677,790,5.127,791,4.967,792,5.074,793,4.967,796,4.888,799,3.467,803,3.68,804,4.233,817,3.467,827,3.467,828,3.467,834,3.467,835,3.467,837,3.467,838,3.467,839,3.947,840,6.538,841,4.847,842,4.847,843,4.847,844,4.847,845,4.964,846,3.947,847,6.449,848,5.324,849,3.947,850,3.947,851,3.947,852,5.618,853,3.947,854,2.684,855,3.947,856,3.947,857,3.947,858,3.467,859,6.279,860,5.324,861,3.947,862,3.947,863,6.025,864,3.947,865,3.947,866,3.947,867,5.324,868,3.947,869,3.947,870,3.947,871,3.947,872,3.947,873,3.947,874,3.947,875,5.324,876,3.947,877,3.947,878,3.947,879,3.947]],["title/classes/ContextFactory.html",[0,0.221,880,3.881]],["body/classes/ContextFactory.html",[0,0.314,2,1.262,3,0.058,4,0.058,5,0.058,7,0.079,8,0.655,9,3.208,14,1.168,18,1.267,26,1.142,28,1.336,29,0.008,30,0.42,31,0.202,32,0.863,41,0.978,51,0.924,57,1.146,58,1.343,61,1.192,67,0.079,79,1.053,184,0.823,190,1.566,191,0.005,192,0.006,193,0.005,203,2.482,234,5.6,244,3.045,880,6.587,881,6.772,882,7.37,883,7.057,884,8.96,885,8.65,886,8.65,887,6.772,888,7.297,889,6.772,890,6.772,891,6.772,892,6.772,893,7.184]],["title/interfaces/CreativeWork.html",[247,0.151,332,1.094]],["body/interfaces/CreativeWork.html",[0,0.146,3,0.027,4,0.041,5,0.027,7,0.037,8,0.388,12,0.854,25,0.283,29,0.008,30,0.543,31,0.242,33,0.303,45,0.383,67,0.116,81,0.656,84,0.669,89,0.682,109,0.878,133,0.981,161,1.784,184,0.32,191,0.002,192,0.004,193,0.002,220,0.721,247,0.304,249,0.464,252,0.553,260,0.4,295,1.099,296,0.597,297,0.721,298,0.669,299,2.218,300,0.644,301,1.099,302,1.485,303,0.721,304,1.099,305,0.721,306,1.331,307,0.721,308,1.331,309,0.721,310,0.721,311,0.721,312,1.058,313,1.488,314,0.721,315,0.721,316,0.721,317,0.721,318,0.721,319,1.433,320,1.099,321,0.721,322,0.721,323,0.708,324,0.721,325,0.721,326,1.099,327,1.078,328,1.078,329,0.735,330,1.517,331,1.099,332,1.099,333,0.721,334,1.517,335,1.099,336,0.708,337,0.721,338,1.331,339,0.721,340,1.078,341,1.331,342,0.721,343,0.695,344,0.721,345,0.721,346,0.735,347,0.721,348,1.306,349,0.708,350,0.721,351,0.721,352,0.708,353,0.721,354,1.722,355,1.331,356,0.721,357,0.721,358,0.721,359,0.721,360,0.708,361,1.099,362,1,363,0.721,364,1.46,365,0.721,366,0.735,367,0.735,368,1.356,369,0.735,370,0.735,371,0.721,372,1.099,373,0.721,374,0.735,375,0.735,376,0.708,377,1.46,378,0.735,379,0.735,380,0.735,381,0.735,382,0.735,383,1.078,384,0.721,385,0.721,386,0.721,387,0.721,388,0.721,389,0.721,390,1.099,391,0.721,392,1.078,393,0.721,394,0.721,395,0.721,396,0.721,397,0.721,398,0.721,399,0.721,400,0.721,401,0.721,402,0.721,403,0.721,404,0.721,405,0.721,406,0.721,407,0.721,408,0.721,409,1.099,410,0.721,411,0.721,412,0.721,413,0.721,414,0.721,415,0.721,416,0.721,417,1.306,418,0.721,419,0.721,420,1.099,421,0.721,422,0.721,423,0.721,424,0.721,425,1.46,426,0.721,427,0.735,428,0.721,429,0.721,430,0.721,431,1.46,432,0.721,433,1.099,434,0.721,435,1.331,436,0.721,437,1.099,438,0.721,439,1.488,440,0.721,441,1.078,442,0.721,443,1.099,444,0.721,445,0.721,446,0.721,447,1.099,448,0.721,449,1.078,450,0.735,451,0.735,452,0.721,453,0.721,454,1.078,455,1.058,456,1.019,457,0.721,458,0.682,459,1.502,460,1.755,461,0.721,462,0.721,463,0.721,464,0.721,465,0.721,466,0.721,467,0.721,468,0.721,469,0.721,470,0.721,471,0.721,472,0.721,473,0.721,474,0.721,475,0.721,476,0.721,477,1.331,478,1.331,479,1.72,480,0.721,481,0.721,482,1.099,483,0.721,484,0.735,485,1.331,486,1.331,487,0.721,488,0.735,489,0.721,490,0.735,491,1.099,492,0.721,493,1.001,494,0.735,495,0.735,496,0.721,497,0.735,498,0.721,499,0.721,500,1.099,501,0.735,502,1.099,503,1.099,504,1.099,505,1.517,506,0.721,507,0.735,508,0.735,509,1.099,510,0.721,511,0.735,512,0.735,513,0.586,514,0.721,515,1.306,516,1.306,517,1.099,518,0.708,519,0.708,520,0.708,521,1.099,522,0.721,523,0.721,524,0.721,525,1.019,526,1.331,527,0.708,528,0.708,529,0.721,530,0.735,531,0.735,532,0.721,533,0.721,534,0.735,535,0.735,536,0.735,537,0.735,538,1.099,539,0.708,540,0.708,541,1.306,542,1.099,543,0.708,544,0.721,545,0.721,546,1.099,547,0.735,548,0.375,549,0.721,550,0.632,551,1.597,552,1.624,553,1.585,554,1.775,555,1.038,556,0.735,557,0.721,558,0.608,559,0.721,560,0.721,561,1.331,562,0.735,563,0.735,564,1.099,565,0.735,566,0.735,567,0.721,568,0.735,569,1.585,570,0.735,571,1.72,572,0.735,573,0.735,574,0.735,575,0.735,576,0.735,577,1.331,578,0.735,579,0.735,580,0.735,581,0.735,582,0.735,583,0.721,584,0.735,585,0.735,586,0.735,587,0.735,588,0.735,589,0.735,590,0.735,591,0.735,592,0.735,593,0.735,594,0.735,595,0.721,596,0.735,597,1.304,598,0.735,599,0.735,600,0.735,601,0.735,602,0.735,603,1.099,604,0.735,605,0.721,606,0.735,607,0.735,608,0.735,609,0.735,610,0.735,611,0.721,612,0.721,613,0.735,614,0.735,615,0.735,616,0.721,617,0.721,618,0.735,619,0.735,620,0.721,621,0.735,622,0.735,623,0.735,624,0.735,625,0.721,626,0.735,627,0.721,628,0.735,629,0.735,630,0.721,631,0.735,632,0.735]],["title/interfaces/CustomHandlerInput.html",[247,0.151,894,2.839]],["body/interfaces/CustomHandlerInput.html",[0,0.402,3,0.052,4,0.052,5,0.052,7,0.072,8,0.616,18,0.813,24,4.188,25,0.684,29,0.008,31,0.222,33,0.195,45,1.056,51,0.988,55,2.963,57,1.4,58,1.262,59,1.953,61,1.076,67,0.111,68,3.019,76,1.529,79,1.22,109,1.033,166,4.36,184,0.842,190,1.184,191,0.005,192,0.006,193,0.005,247,0.282,249,0.737,259,4.209,260,0.968,548,0.73,643,2.949,697,3.605,699,3.8,700,1.914,701,3.171,717,3.619,854,4.209,894,4.527,895,3.642,896,5.153,897,5.128,898,3.642,899,3.386,900,5.478,901,4.539,902,4.712,903,5.153,904,3.791,905,4.926,906,3.791,907,3.791,908,3.791,909,4.712,910,3.791,911,3.642,912,4.527,913,3.942,914,4.209,915,4.527,916,4.527,917,3.791,918,4.712,919,3.642]],["title/interfaces/CustomeRequestEnvelope.html",[247,0.151,896,2.839]],["body/interfaces/CustomeRequestEnvelope.html",[0,0.402,3,0.052,4,0.052,5,0.052,7,0.072,8,0.616,18,0.813,24,3.995,25,0.684,29,0.008,31,0.222,33,0.195,45,1.056,51,0.988,55,2.881,57,1.4,58,1.262,59,1.953,61,1.076,67,0.111,68,3.019,76,1.529,79,1.22,109,1.033,166,4.36,184,0.842,190,1.184,191,0.005,192,0.006,193,0.005,247,0.282,249,0.737,259,4.209,260,1.134,548,0.73,643,2.949,697,3.605,699,3.8,700,1.914,701,3.171,717,3.619,854,4.209,894,3.642,895,3.642,896,4.926,897,5.128,898,3.642,899,3.386,900,5.478,901,4.539,902,4.712,903,5.153,904,5.128,905,4.926,906,3.791,907,3.791,908,3.791,909,4.712,910,3.791,911,3.642,912,4.527,913,3.942,914,4.209,915,4.527,916,4.527,917,3.791,918,4.712,919,3.642]],["title/classes/DBClient.html",[0,0.221,920,3.619]],["body/classes/DBClient.html",[0,0.272,2,1.092,3,0.05,4,0.05,5,0.05,7,0.069,8,0.599,11,5.784,14,1.069,16,2.85,17,4.144,18,1.225,22,2.872,25,0.73,26,1.161,28,1.601,29,0.008,30,0.503,31,0.227,32,1.034,33,0.306,40,2.706,41,1.069,45,1.04,51,0.845,58,0.973,67,0.095,75,5.965,76,1.714,79,1.056,90,2.503,91,2.503,92,1.951,93,2.503,94,2.383,95,2.503,96,2.503,97,4.563,102,5.784,104,4.098,125,4.286,126,5.041,152,5.105,184,0.753,191,0.006,192,0.006,193,0.004,199,5.506,247,0.234,252,1.302,288,3.723,513,1.588,646,3.633,652,5.969,920,5.62,921,4.773,922,6.94,923,5.861,924,6.814,925,6.471,926,7.401,927,7.308,928,5.861,929,5.861,930,5.861,931,5.861,932,5.861,933,5.861,934,6.471,935,5.861,936,4.773,937,4.773,938,4.773,939,4.773,940,4.773,941,6.606,942,4.773,943,6.606,944,4.773,945,6.027,946,4.773,947,4.773,948,6.027,949,4.773]],["title/interfaces/DBConfig.html",[247,0.151,925,3.619]],["body/interfaces/DBConfig.html",[0,0.29,3,0.053,4,0.053,5,0.053,7,0.073,8,0.623,11,6.074,16,2.62,17,3.552,18,1.109,22,2.42,25,0.784,29,0.008,31,0.208,32,1.161,33,0.3,45,0.939,51,0.879,58,1.035,67,0.098,75,6.074,76,1.752,79,1.086,90,2.663,91,2.663,92,2.076,93,2.663,94,2.536,95,2.663,96,2.663,97,4.665,102,5.913,104,4.26,125,3.869,126,5.134,152,5.047,184,0.783,191,0.007,192,0.006,193,0.005,199,4.232,247,0.244,249,0.605,252,1.354,288,3.869,513,1.668,646,3.866,652,5.793,920,4.735,921,5.078,922,7.288,924,6.615,925,6.335,927,7.522,934,5.842,936,5.078,937,5.078,938,5.078,939,5.078,940,5.078,941,6.795,942,5.078,943,6.795,944,5.078,945,6.265,946,5.078,947,5.078,948,6.265,949,5.078]],["title/interfaces/DBItem.html",[247,0.151,934,3.619]],["body/interfaces/DBItem.html",[0,0.296,3,0.054,4,0.054,5,0.054,11,5.295,16,2.64,17,3.603,18,1.12,22,2.475,25,0.702,26,0.813,29,0.008,33,0.299,45,0.952,51,0.891,58,1.059,67,0.099,75,6.114,76,1.766,79,1.097,90,2.724,91,2.724,92,2.124,93,2.724,94,2.594,95,2.724,96,2.724,97,4.702,102,5.96,104,4.32,125,3.924,126,5.167,152,5.075,184,0.794,191,0.007,192,0.006,193,0.005,199,4.33,247,0.247,249,0.619,251,4.563,252,1.483,288,3.924,513,1.454,646,3.955,652,5.831,920,4.844,921,5.195,922,6.354,924,6.668,925,5.924,927,7.335,934,6.4,936,5.195,937,5.195,938,5.195,939,5.195,940,5.195,941,6.864,942,5.195,943,6.864,944,5.195,945,6.354,946,5.195,947,5.195,948,6.354,949,5.195,950,6.379]],["title/classes/DeviceAPIClient.html",[0,0.221,951,4.233]],["body/classes/DeviceAPIClient.html",[0,0.319,2,1.279,3,0.059,4,0.059,5,0.059,7,0.08,8,0.66,14,1.177,16,2.615,17,4.304,18,1.239,26,1.108,28,1.609,29,0.007,30,0.505,31,0.217,32,1.039,33,0.3,41,1.177,45,1.098,51,0.931,57,1.161,58,1.139,60,3.673,61,1.207,67,0.08,79,1.061,109,0.973,190,1.328,191,0.005,192,0.006,193,0.005,196,5.903,203,2.104,513,1.677,951,7.239,952,6.859,953,8.697,954,8.697,955,8.151,956,6.859,957,6.859,958,6.859,959,7.991,960,6.859,961,6.859,962,6.859,963,6.859]],["title/interfaces/DynamoDBSkillConfig.html",[247,0.151,651,3.235]],["body/interfaces/DynamoDBSkillConfig.html",[3,0.059,4,0.059,5,0.059,7,0.081,8,0.664,25,0.623,29,0.007,31,0.218,33,0.294,51,0.936,57,1.388,58,1.15,67,0.106,109,1.043,191,0.005,192,0.006,193,0.005,247,0.286,249,0.672,633,6.458,634,4.485,635,4.956,636,4.702,637,5.26,638,6.801,639,3.115,640,4.704,641,5.565,642,5.083,643,3.182,644,4.485,645,4.956,646,5.083,647,5.865,648,5.565,649,5.26,650,5.26,651,5.928,652,5.844,653,4.956,654,4.485,655,4.702,656,4.702,657,4.702,658,4.702]],["title/interfaces/ErrorHandlerBuilder.html",[247,0.151,964,3.881]],["body/interfaces/ErrorHandlerBuilder.html",[0,0.252,3,0.046,4,0.046,5,0.046,7,0.064,14,1.016,18,0.72,24,2.503,26,0.996,28,1.389,29,0.008,30,0.437,31,0.195,32,0.897,33,0.297,41,1.129,45,0.661,51,0.98,55,2.928,57,1.401,58,1.298,59,1.732,61,0.954,67,0.103,68,2.153,76,1.845,79,1.181,94,3.18,191,0.004,192,0.005,193,0.004,247,0.172,249,0.526,252,0.954,260,0.691,548,0.841,550,1.09,555,1.176,640,4.039,642,5.736,665,3.933,697,2.258,699,3.535,700,1.697,702,5.331,704,4.657,717,3.366,718,4.365,755,5.733,759,4.365,771,6.368,791,3.77,793,4.432,801,5.318,804,4.558,809,2.258,813,4.115,858,3.877,883,4.115,964,7.29,965,6.741,966,4.414,967,6.944,968,5.42,969,6.252,970,5.42,971,7.16,972,5.42,973,6.252,974,4.813,975,4.813,976,4.813,977,4.813,978,6.741,979,4.813,980,6.252,981,4.558,982,4.813,983,6.252,984,4.813,985,6.252,986,4.813,987,6.252,988,6.252,989,6.252,990,7.351,991,6.252,992,6.252,993,6.252,994,4.414,995,6.368,996,4.813,997,4.813,998,4.813,999,4.813,1000,4.813,1001,4.813,1002,4.813,1003,4.813,1004,4.813,1005,6.252,1006,4.414,1007,4.813,1008,4.813,1009,4.813,1010,6.252,1011,4.414,1012,3.877,1013,4.813,1014,4.813,1015,4.813,1016,4.813,1017,4.813,1018,4.813,1019,3.509,1020,4.813,1021,4.813,1022,4.813,1023,4.813,1024,4.813,1025,4.813,1026,4.813,1027,4.813,1028,4.813,1029,4.813,1030,4.813]],["title/interfaces/Factory.html",[247,0.151,555,1.034]],["body/interfaces/Factory.html",[0,0.145,3,0.027,4,0.041,5,0.027,7,0.036,12,0.951,14,0.686,25,0.28,26,0.606,28,0.614,29,0.008,30,0.532,31,0.241,32,0.397,33,0.304,41,0.686,45,0.38,67,0.116,81,0.65,84,0.663,89,0.675,109,0.875,133,0.974,161,1.78,184,0.317,191,0.002,192,0.004,193,0.002,220,0.715,247,0.304,249,0.461,252,1.015,260,0.397,295,1.091,296,1.095,297,0.715,298,0.663,299,2.216,300,0.638,301,1.091,302,1.479,303,0.715,304,1.091,305,0.715,306,1.324,307,0.715,308,1.324,309,0.715,310,0.715,311,0.715,312,1.051,313,1.091,314,0.715,315,0.715,316,0.715,317,0.715,318,0.715,319,1.426,320,1.091,321,0.715,322,0.715,323,0.701,324,0.715,325,0.715,326,1.091,327,1.071,328,1.071,329,0.728,330,1.51,331,1.091,332,0.715,333,0.715,334,0.728,335,1.091,336,0.701,337,0.715,338,1.324,339,0.715,340,1.071,341,1.324,342,0.715,343,0.688,344,0.715,345,0.715,346,0.728,347,0.715,348,1.299,349,0.701,350,0.715,351,0.715,352,0.701,353,0.715,354,1.717,355,1.324,356,0.715,357,0.715,358,0.715,359,0.715,360,0.701,361,1.091,362,0.993,363,0.715,364,1.454,365,0.715,366,0.728,367,0.728,368,1.349,369,0.728,370,0.728,371,0.715,372,1.091,373,0.715,374,0.728,375,0.728,376,0.701,377,1.454,378,0.728,379,0.728,380,0.728,381,0.728,382,0.728,383,1.071,384,0.715,385,0.715,386,0.715,387,0.715,388,0.715,389,0.715,390,1.091,391,0.715,392,1.071,393,0.715,394,0.715,395,0.715,396,0.715,397,0.715,398,0.715,399,0.715,400,0.715,401,0.715,402,0.715,403,0.715,404,0.715,405,0.715,406,0.715,407,0.715,408,0.715,409,1.091,410,0.715,411,0.715,412,0.715,413,0.715,414,0.715,415,0.715,416,0.715,417,1.299,418,0.715,419,0.715,420,1.091,421,0.715,422,0.715,423,0.715,424,0.715,425,1.454,426,0.715,427,0.728,428,0.715,429,0.715,430,0.715,431,1.454,432,0.715,433,1.091,434,0.715,435,1.324,436,0.715,437,1.091,438,0.715,439,1.481,440,0.715,441,1.071,442,0.715,443,1.091,444,0.715,445,0.715,446,0.715,447,1.091,448,0.715,449,1.071,450,0.728,451,0.728,452,0.715,453,0.715,454,1.071,455,1.051,456,1.012,457,0.715,458,0.675,459,1.5,460,1.752,461,0.715,462,0.715,463,0.715,464,0.715,465,0.715,466,0.715,467,0.715,468,0.715,469,0.715,470,0.715,471,0.715,472,0.715,473,0.715,474,0.715,475,0.715,476,0.715,477,1.324,478,1.324,479,1.714,480,0.715,481,0.715,482,1.091,483,0.715,484,0.728,485,1.324,486,1.324,487,0.715,488,0.728,489,0.715,490,0.728,491,1.091,492,0.715,493,0.995,494,0.728,495,0.728,496,0.715,497,0.728,498,0.715,499,0.715,500,1.091,501,0.728,502,1.091,503,1.091,504,1.091,505,1.51,506,0.715,507,0.728,508,0.728,509,1.091,510,0.715,511,0.728,512,0.728,513,0.58,514,0.715,515,1.299,516,1.299,517,1.091,518,0.701,519,0.701,520,0.701,521,1.091,522,0.715,523,0.715,524,0.715,525,1.012,526,1.324,527,0.701,528,0.701,529,0.715,530,0.728,531,0.728,532,0.715,533,0.715,534,0.728,535,0.728,536,0.728,537,0.728,538,1.091,539,0.701,540,0.701,541,1.299,542,1.091,543,0.701,544,0.715,545,0.715,546,1.091,547,0.728,548,0.372,549,0.715,550,0.626,551,1.596,552,1.619,553,1.58,554,1.77,555,1.4,556,1.112,557,1.324,558,1.116,559,1.481,560,1.091,561,1.324,562,0.728,563,0.728,564,1.091,565,0.728,566,0.728,567,0.715,568,0.728,569,1.58,570,0.728,571,1.714,572,0.728,573,0.728,574,0.728,575,0.728,576,0.728,577,1.324,578,0.728,579,0.728,580,0.728,581,0.728,582,0.728,583,0.715,584,0.728,585,0.728,586,0.728,587,0.728,588,0.728,589,0.728,590,0.728,591,0.728,592,0.728,593,0.728,594,0.728,595,0.715,596,0.728,597,1.298,598,0.728,599,0.728,600,0.728,601,0.728,602,0.728,603,1.091,604,0.728,605,0.715,606,0.728,607,0.728,608,0.728,609,0.728,610,0.728,611,0.715,612,0.715,613,0.728,614,0.728,615,0.728,616,0.715,617,0.715,618,0.728,619,0.728,620,0.715,621,0.728,622,0.728,623,0.728,624,0.728,625,0.715,626,0.728,627,0.715,628,0.728,629,0.728,630,0.715,631,0.728,632,0.728,1031,4.221,1032,3.114,1033,3.114]],["title/classes/FallbackIntentFactory.html",[0,0.221,916,2.839]],["body/classes/FallbackIntentFactory.html",[0,0.4,2,1.123,3,0.051,4,0.051,5,0.051,7,0.071,14,1.087,18,0.801,24,3.793,25,0.739,26,0.959,28,1.189,29,0.008,30,0.374,31,0.221,32,0.767,33,0.192,41,1.087,45,1.05,51,0.983,55,2.866,57,1.391,58,1.25,59,1.925,61,1.06,67,0.11,68,2.991,76,1.515,79,1.217,109,0.981,166,4.32,184,0.836,190,1.166,191,0.005,192,0.006,193,0.005,247,0.28,249,0.584,259,4.549,260,0.959,548,0.719,643,2.922,697,3.586,699,3.916,700,1.886,701,3.124,717,3.675,854,4.906,894,3.588,895,3.588,896,4.485,897,5.093,898,3.588,899,3.336,900,5.568,901,4.526,902,4.668,903,5.277,904,3.734,905,5.126,906,3.734,907,4.668,908,3.734,909,4.668,910,3.734,911,3.588,912,4.485,913,3.905,914,4.17,915,4.485,916,4.893,917,3.734,918,4.668,919,3.588,1034,6.024,1035,6.024]],["title/interfaces/FlashBriefingContent.html",[247,0.151,1036,3.881]],["body/interfaces/FlashBriefingContent.html",[3,0.06,4,0.06,5,0.06,7,0.082,8,0.669,29,0.007,31,0.236,32,1.052,33,0.313,67,0.097,142,5.324,191,0.005,192,0.006,193,0.005,247,0.222,249,0.68,362,1.465,1036,7.148,1037,6.227,1038,4.759,1039,7.012,1040,8.258,1041,7.012,1042,7.012,1043,7.012,1044,7.012,1045,9.063,1046,9.063,1047,9.063,1048,9.063,1049,9.063,1050,9.063,1051,6.227]],["title/interfaces/Game.html",[247,0.151,319,1.054]],["body/interfaces/Game.html",[0,0.146,3,0.027,4,0.041,5,0.027,7,0.037,8,0.388,12,0.854,25,0.283,29,0.008,30,0.543,31,0.242,33,0.303,45,0.383,67,0.116,81,0.656,84,0.669,89,0.682,109,0.878,133,0.981,161,1.784,184,0.32,191,0.002,192,0.004,193,0.002,220,0.721,247,0.304,249,0.464,252,0.553,260,0.4,295,1.099,296,0.597,297,0.721,298,0.669,299,2.218,300,0.644,301,1.099,302,1.485,303,0.721,304,1.099,305,0.721,306,1.331,307,0.721,308,1.331,309,0.721,310,0.721,311,0.721,312,1.058,313,1.099,314,0.721,315,0.721,316,0.721,317,0.721,318,0.721,319,1.542,320,1.099,321,0.721,322,0.721,323,0.708,324,0.721,325,0.721,326,1.099,327,1.078,328,1.078,329,0.735,330,1.517,331,1.099,332,0.721,333,0.721,334,0.735,335,1.488,336,0.708,337,0.721,338,1.331,339,0.721,340,1.078,341,1.331,342,0.721,343,0.695,344,0.721,345,0.721,346,1.517,347,0.721,348,1.306,349,0.708,350,0.721,351,0.721,352,0.708,353,0.721,354,1.722,355,1.331,356,0.721,357,0.721,358,0.721,359,0.721,360,0.708,361,1.099,362,1,363,0.721,364,1.46,365,0.721,366,0.735,367,0.735,368,1.356,369,0.735,370,0.735,371,0.721,372,1.099,373,0.721,374,0.735,375,0.735,376,0.708,377,1.46,378,0.735,379,0.735,380,0.735,381,0.735,382,0.735,383,1.078,384,0.721,385,0.721,386,0.721,387,0.721,388,0.721,389,0.721,390,1.099,391,0.721,392,1.078,393,0.721,394,0.721,395,0.721,396,0.721,397,0.721,398,0.721,399,0.721,400,0.721,401,0.721,402,0.721,403,0.721,404,0.721,405,0.721,406,0.721,407,0.721,408,0.721,409,1.099,410,0.721,411,0.721,412,0.721,413,0.721,414,0.721,415,0.721,416,0.721,417,1.306,418,0.721,419,0.721,420,1.099,421,0.721,422,0.721,423,0.721,424,0.721,425,1.46,426,0.721,427,0.735,428,0.721,429,0.721,430,0.721,431,1.46,432,0.721,433,1.099,434,0.721,435,1.331,436,0.721,437,1.099,438,0.721,439,1.488,440,0.721,441,1.078,442,0.721,443,1.099,444,0.721,445,0.721,446,0.721,447,1.099,448,0.721,449,1.078,450,0.735,451,0.735,452,0.721,453,0.721,454,1.078,455,1.058,456,1.019,457,0.721,458,0.682,459,1.502,460,1.755,461,0.721,462,0.721,463,0.721,464,0.721,465,0.721,466,0.721,467,0.721,468,0.721,469,0.721,470,0.721,471,0.721,472,0.721,473,0.721,474,0.721,475,0.721,476,0.721,477,1.331,478,1.331,479,1.72,480,0.721,481,0.721,482,1.099,483,0.721,484,0.735,485,1.331,486,1.331,487,0.721,488,0.735,489,0.721,490,0.735,491,1.099,492,0.721,493,1.001,494,0.735,495,0.735,496,0.721,497,0.735,498,0.721,499,0.721,500,1.099,501,0.735,502,1.099,503,1.099,504,1.099,505,1.517,506,0.721,507,0.735,508,0.735,509,1.099,510,0.721,511,0.735,512,0.735,513,0.586,514,0.721,515,1.306,516,1.306,517,1.099,518,0.708,519,0.708,520,0.708,521,1.099,522,0.721,523,0.721,524,0.721,525,1.019,526,1.331,527,0.708,528,0.708,529,0.721,530,0.735,531,0.735,532,0.721,533,0.721,534,0.735,535,0.735,536,0.735,537,0.735,538,1.099,539,0.708,540,0.708,541,1.306,542,1.099,543,0.708,544,0.721,545,0.721,546,1.099,547,0.735,548,0.375,549,0.721,550,0.632,551,1.597,552,1.624,553,1.585,554,1.775,555,1.038,556,0.735,557,0.721,558,0.608,559,0.721,560,0.721,561,1.331,562,0.735,563,0.735,564,1.099,565,0.735,566,0.735,567,0.721,568,0.735,569,1.585,570,0.735,571,1.72,572,0.735,573,0.735,574,0.735,575,0.735,576,0.735,577,1.331,578,0.735,579,0.735,580,0.735,581,0.735,582,0.735,583,0.721,584,0.735,585,0.735,586,0.735,587,0.735,588,0.735,589,0.735,590,0.735,591,0.735,592,0.735,593,0.735,594,0.735,595,0.721,596,0.735,597,1.304,598,0.735,599,0.735,600,0.735,601,0.735,602,0.735,603,1.099,604,0.735,605,0.721,606,0.735,607,0.735,608,0.735,609,0.735,610,0.735,611,0.721,612,0.721,613,0.735,614,0.735,615,0.735,616,0.721,617,0.721,618,0.735,619,0.735,620,0.721,621,0.735,622,0.735,623,0.735,624,0.735,625,0.721,626,0.735,627,0.721,628,0.735,629,0.735,630,0.721,631,0.735,632,0.735]],["title/interfaces/GameInvite.html",[247,0.151,344,1.094]],["body/interfaces/GameInvite.html",[0,0.145,3,0.027,4,0.041,5,0.027,7,0.037,8,0.387,12,0.853,25,0.282,29,0.008,30,0.526,31,0.242,33,0.303,45,0.382,67,0.116,81,0.654,84,0.667,89,0.679,109,0.877,133,0.979,161,1.783,184,0.319,191,0.002,192,0.004,193,0.002,220,0.719,247,0.304,249,0.463,252,0.551,260,0.399,295,1.096,296,0.595,297,0.719,298,0.667,299,2.217,300,0.642,301,1.096,302,1.483,303,0.719,304,1.096,305,0.719,306,1.328,307,0.719,308,1.328,309,0.719,310,0.719,311,0.719,312,1.431,313,1.096,314,0.719,315,0.719,316,0.719,317,0.719,318,0.719,319,1.431,320,1.096,321,0.719,322,0.719,323,0.706,324,0.719,325,0.719,326,1.096,327,1.076,328,1.076,329,0.733,330,1.514,331,1.096,332,0.719,333,0.719,334,0.733,335,1.096,336,0.706,337,0.719,338,1.807,339,0.719,340,1.076,341,1.807,342,0.719,343,0.692,344,1.096,345,1.486,346,0.733,347,0.719,348,1.304,349,0.706,350,0.719,351,0.719,352,0.706,353,0.719,354,1.72,355,1.328,356,0.719,357,0.719,358,0.719,359,0.719,360,0.706,361,1.096,362,0.997,363,0.719,364,1.458,365,0.719,366,0.733,367,0.733,368,1.354,369,0.733,370,0.733,371,0.719,372,1.096,373,0.719,374,0.733,375,0.733,376,0.706,377,1.458,378,0.733,379,0.733,380,0.733,381,0.733,382,0.733,383,1.076,384,0.719,385,0.719,386,0.719,387,0.719,388,0.719,389,0.719,390,1.096,391,0.719,392,1.076,393,0.719,394,0.719,395,0.719,396,0.719,397,0.719,398,0.719,399,0.719,400,0.719,401,0.719,402,0.719,403,0.719,404,0.719,405,0.719,406,0.719,407,0.719,408,0.719,409,1.096,410,0.719,411,0.719,412,0.719,413,0.719,414,0.719,415,0.719,416,0.719,417,1.304,418,0.719,419,0.719,420,1.096,421,0.719,422,0.719,423,0.719,424,0.719,425,1.458,426,0.719,427,0.733,428,0.719,429,0.719,430,0.719,431,1.458,432,0.719,433,1.096,434,0.719,435,1.328,436,0.719,437,1.096,438,0.719,439,1.486,440,0.719,441,1.076,442,0.719,443,1.096,444,0.719,445,0.719,446,0.719,447,1.096,448,0.719,449,1.076,450,0.733,451,0.733,452,0.719,453,0.719,454,1.076,455,1.056,456,1.016,457,0.719,458,0.679,459,1.501,460,1.754,461,0.719,462,0.719,463,0.719,464,0.719,465,0.719,466,0.719,467,0.719,468,0.719,469,0.719,470,0.719,471,0.719,472,0.719,473,0.719,474,0.719,475,0.719,476,0.719,477,1.328,478,1.328,479,1.718,480,0.719,481,0.719,482,1.096,483,0.719,484,0.733,485,1.328,486,1.328,487,0.719,488,0.733,489,0.719,490,0.733,491,1.096,492,0.719,493,0.999,494,0.733,495,0.733,496,0.719,497,0.733,498,0.719,499,0.719,500,1.096,501,0.733,502,1.096,503,1.096,504,1.096,505,1.514,506,0.719,507,0.733,508,0.733,509,1.096,510,0.719,511,0.733,512,0.733,513,0.584,514,0.719,515,1.304,516,1.304,517,1.096,518,0.706,519,0.706,520,0.706,521,1.096,522,0.719,523,0.719,524,0.719,525,1.016,526,1.328,527,0.706,528,0.706,529,0.719,530,0.733,531,0.733,532,0.719,533,0.719,534,0.733,535,0.733,536,0.733,537,0.733,538,1.096,539,0.706,540,0.706,541,1.304,542,1.096,543,0.706,544,0.719,545,0.719,546,1.096,547,0.733,548,0.374,549,0.719,550,0.63,551,1.596,552,1.622,553,1.583,554,1.773,555,1.036,556,0.733,557,0.719,558,0.606,559,0.719,560,0.719,561,1.328,562,0.733,563,0.733,564,1.096,565,0.733,566,0.733,567,0.719,568,0.733,569,1.583,570,0.733,571,1.718,572,0.733,573,0.733,574,0.733,575,0.733,576,0.733,577,1.328,578,0.733,579,0.733,580,0.733,581,0.733,582,0.733,583,0.719,584,0.733,585,0.733,586,0.733,587,0.733,588,0.733,589,0.733,590,0.733,591,0.733,592,0.733,593,0.733,594,0.733,595,0.719,596,0.733,597,1.302,598,0.733,599,0.733,600,0.733,601,0.733,602,0.733,603,1.096,604,0.733,605,0.719,606,0.733,607,0.733,608,0.733,609,0.733,610,0.733,611,0.719,612,0.719,613,0.733,614,0.733,615,0.733,616,0.719,617,0.719,618,0.733,619,0.733,620,0.719,621,0.733,622,0.733,623,0.733,624,0.733,625,0.719,626,0.733,627,0.719,628,0.733,629,0.733,630,0.719,631,0.733,632,0.733]],["title/interfaces/GameStatistic.html",[247,0.151,435,1.094]],["body/interfaces/GameStatistic.html",[0,0.146,3,0.027,4,0.041,5,0.027,7,0.037,8,0.388,12,0.854,25,0.283,29,0.008,30,0.526,31,0.242,33,0.303,45,0.383,67,0.116,81,0.656,84,0.669,89,0.682,109,0.878,133,0.981,161,1.85,184,0.32,191,0.002,192,0.004,193,0.002,220,0.721,247,0.304,249,0.464,252,0.553,260,0.4,295,1.099,296,0.597,297,0.721,298,0.669,299,2.218,300,0.644,301,1.099,302,1.485,303,0.721,304,1.099,305,0.721,306,1.331,307,0.721,308,1.331,309,0.721,310,0.721,311,0.721,312,1.058,313,1.099,314,0.721,315,0.721,316,0.721,317,0.721,318,0.721,319,1.433,320,1.099,321,0.721,322,0.721,323,0.708,324,0.721,325,0.721,326,1.099,327,1.078,328,1.078,329,0.735,330,1.517,331,1.099,332,0.721,333,0.721,334,0.735,335,1.099,336,0.708,337,0.721,338,1.331,339,0.721,340,1.078,341,1.331,342,0.721,343,0.695,344,0.721,345,0.721,346,0.735,347,0.721,348,1.306,349,0.708,350,0.721,351,0.721,352,0.708,353,0.721,354,1.722,355,1.331,356,0.721,357,0.721,358,0.721,359,0.721,360,0.708,361,1.099,362,1,363,0.721,364,1.46,365,0.721,366,0.735,367,0.735,368,1.356,369,0.735,370,0.735,371,0.721,372,1.099,373,0.721,374,0.735,375,0.735,376,0.708,377,1.46,378,0.735,379,0.735,380,0.735,381,0.735,382,0.735,383,1.078,384,0.721,385,0.721,386,0.721,387,0.721,388,0.721,389,0.721,390,1.099,391,0.721,392,1.078,393,0.721,394,0.721,395,0.721,396,0.721,397,0.721,398,0.721,399,0.721,400,0.721,401,0.721,402,0.721,403,0.721,404,0.721,405,0.721,406,0.721,407,0.721,408,0.721,409,1.099,410,0.721,411,0.721,412,0.721,413,0.721,414,0.721,415,0.721,416,0.721,417,1.306,418,0.721,419,0.721,420,1.099,421,0.721,422,0.721,423,0.721,424,0.721,425,1.46,426,0.721,427,0.735,428,0.721,429,0.721,430,0.721,431,1.46,432,0.721,433,1.099,434,0.721,435,1.488,436,0.721,437,1.488,438,1.488,439,1.755,440,0.721,441,1.078,442,0.721,443,1.099,444,0.721,445,0.721,446,0.721,447,1.099,448,0.721,449,1.078,450,0.735,451,0.735,452,0.721,453,0.721,454,1.078,455,1.058,456,1.019,457,0.721,458,0.682,459,1.502,460,1.755,461,0.721,462,0.721,463,0.721,464,0.721,465,0.721,466,0.721,467,0.721,468,0.721,469,0.721,470,0.721,471,0.721,472,0.721,473,0.721,474,0.721,475,0.721,476,0.721,477,1.331,478,1.331,479,1.72,480,0.721,481,0.721,482,1.099,483,0.721,484,0.735,485,1.331,486,1.331,487,0.721,488,0.735,489,0.721,490,0.735,491,1.099,492,0.721,493,1.001,494,0.735,495,0.735,496,0.721,497,0.735,498,0.721,499,0.721,500,1.099,501,0.735,502,1.099,503,1.099,504,1.099,505,1.517,506,0.721,507,0.735,508,0.735,509,1.099,510,0.721,511,0.735,512,0.735,513,0.586,514,0.721,515,1.306,516,1.306,517,1.099,518,0.708,519,0.708,520,0.708,521,1.099,522,0.721,523,0.721,524,0.721,525,1.019,526,1.331,527,0.708,528,0.708,529,0.721,530,0.735,531,0.735,532,0.721,533,0.721,534,0.735,535,0.735,536,0.735,537,0.735,538,1.099,539,0.708,540,0.708,541,1.306,542,1.099,543,0.708,544,0.721,545,0.721,546,1.099,547,0.735,548,0.375,549,0.721,550,0.632,551,1.597,552,1.624,553,1.585,554,1.775,555,1.038,556,0.735,557,0.721,558,0.608,559,0.721,560,0.721,561,1.331,562,0.735,563,0.735,564,1.099,565,0.735,566,0.735,567,0.721,568,0.735,569,1.585,570,0.735,571,1.72,572,0.735,573,0.735,574,0.735,575,0.735,576,0.735,577,1.331,578,0.735,579,0.735,580,0.735,581,0.735,582,0.735,583,0.721,584,0.735,585,0.735,586,0.735,587,0.735,588,0.735,589,0.735,590,0.735,591,0.735,592,0.735,593,0.735,594,0.735,595,0.721,596,0.735,597,1.304,598,0.735,599,0.735,600,0.735,601,0.735,602,0.735,603,1.099,604,0.735,605,0.721,606,0.735,607,0.735,608,0.735,609,0.735,610,0.735,611,0.721,612,0.721,613,0.735,614,0.735,615,0.735,616,0.721,617,0.721,618,0.735,619,0.735,620,0.721,621,0.735,622,0.735,623,0.735,624,0.735,625,0.721,626,0.735,627,0.721,628,0.735,629,0.735,630,0.721,631,0.735,632,0.735]],["title/interfaces/Goal.html",[247,0.151,428,1.094]],["body/interfaces/Goal.html",[0,0.146,3,0.027,4,0.041,5,0.027,7,0.037,8,0.388,12,0.854,25,0.283,29,0.008,30,0.526,31,0.242,33,0.303,45,0.383,67,0.116,81,0.656,84,0.669,89,0.682,109,0.878,133,0.981,161,1.85,184,0.32,191,0.002,192,0.004,193,0.002,220,0.721,247,0.304,249,0.464,252,0.553,260,0.4,295,1.099,296,0.597,297,0.721,298,0.669,299,2.218,300,0.644,301,1.099,302,1.485,303,0.721,304,1.099,305,0.721,306,1.331,307,0.721,308,1.331,309,0.721,310,0.721,311,0.721,312,1.058,313,1.099,314,0.721,315,0.721,316,0.721,317,0.721,318,0.721,319,1.433,320,1.099,321,0.721,322,0.721,323,0.708,324,0.721,325,0.721,326,1.099,327,1.078,328,1.078,329,0.735,330,1.517,331,1.099,332,0.721,333,0.721,334,0.735,335,1.099,336,0.708,337,0.721,338,1.331,339,0.721,340,1.078,341,1.331,342,0.721,343,0.695,344,0.721,345,0.721,346,0.735,347,0.721,348,1.306,349,0.708,350,0.721,351,0.721,352,0.708,353,0.721,354,1.722,355,1.331,356,0.721,357,0.721,358,0.721,359,0.721,360,0.708,361,1.099,362,1,363,0.721,364,1.46,365,0.721,366,0.735,367,0.735,368,1.356,369,0.735,370,0.735,371,0.721,372,1.099,373,0.721,374,0.735,375,0.735,376,0.708,377,1.46,378,0.735,379,0.735,380,0.735,381,0.735,382,0.735,383,1.078,384,0.721,385,0.721,386,0.721,387,0.721,388,0.721,389,0.721,390,1.099,391,0.721,392,1.078,393,0.721,394,0.721,395,0.721,396,0.721,397,0.721,398,0.721,399,0.721,400,0.721,401,0.721,402,0.721,403,0.721,404,0.721,405,0.721,406,0.721,407,0.721,408,0.721,409,1.099,410,0.721,411,0.721,412,0.721,413,0.721,414,0.721,415,0.721,416,0.721,417,1.306,418,0.721,419,0.721,420,1.099,421,0.721,422,0.721,423,0.721,424,0.721,425,1.46,426,0.721,427,0.735,428,1.099,429,1.488,430,1.488,431,1.46,432,0.721,433,1.099,434,0.721,435,1.331,436,0.721,437,1.099,438,0.721,439,1.488,440,0.721,441,1.078,442,0.721,443,1.099,444,0.721,445,0.721,446,0.721,447,1.099,448,0.721,449,1.078,450,0.735,451,0.735,452,0.721,453,0.721,454,1.078,455,1.058,456,1.019,457,0.721,458,0.682,459,1.502,460,1.755,461,0.721,462,0.721,463,0.721,464,0.721,465,0.721,466,0.721,467,0.721,468,0.721,469,0.721,470,0.721,471,0.721,472,0.721,473,0.721,474,0.721,475,0.721,476,0.721,477,1.331,478,1.331,479,1.72,480,0.721,481,0.721,482,1.099,483,0.721,484,0.735,485,1.331,486,1.331,487,0.721,488,0.735,489,0.721,490,0.735,491,1.099,492,0.721,493,1.001,494,0.735,495,0.735,496,0.721,497,0.735,498,0.721,499,0.721,500,1.099,501,0.735,502,1.099,503,1.099,504,1.099,505,1.517,506,0.721,507,0.735,508,0.735,509,1.099,510,0.721,511,0.735,512,0.735,513,0.586,514,0.721,515,1.306,516,1.306,517,1.099,518,0.708,519,0.708,520,0.708,521,1.099,522,0.721,523,0.721,524,0.721,525,1.019,526,1.331,527,0.708,528,0.708,529,0.721,530,0.735,531,0.735,532,0.721,533,0.721,534,0.735,535,0.735,536,0.735,537,0.735,538,1.099,539,0.708,540,0.708,541,1.306,542,1.099,543,0.708,544,0.721,545,0.721,546,1.099,547,0.735,548,0.375,549,0.721,550,0.632,551,1.597,552,1.624,553,1.585,554,1.775,555,1.038,556,0.735,557,0.721,558,0.608,559,0.721,560,0.721,561,1.331,562,0.735,563,0.735,564,1.099,565,0.735,566,0.735,567,0.721,568,0.735,569,1.585,570,0.735,571,1.72,572,0.735,573,0.735,574,0.735,575,0.735,576,0.735,577,1.331,578,0.735,579,0.735,580,0.735,581,0.735,582,0.735,583,0.721,584,0.735,585,0.735,586,0.735,587,0.735,588,0.735,589,0.735,590,0.735,591,0.735,592,0.735,593,0.735,594,0.735,595,0.721,596,0.735,597,1.304,598,0.735,599,0.735,600,0.735,601,0.735,602,0.735,603,1.099,604,0.735,605,0.721,606,0.735,607,0.735,608,0.735,609,0.735,610,0.735,611,0.721,612,0.721,613,0.735,614,0.735,615,0.735,616,0.721,617,0.721,618,0.735,619,0.735,620,0.721,621,0.735,622,0.735,623,0.735,624,0.735,625,0.721,626,0.735,627,0.721,628,0.735,629,0.735,630,0.721,631,0.735,632,0.735]],["title/classes/HandlerBuilder.html",[0,0.221,696,2.639]],["body/classes/HandlerBuilder.html",[0,0.344,2,1.095,3,0.05,4,0.05,5,0.05,7,0.069,8,0.6,14,1.07,16,2.442,18,1.293,25,0.529,26,1.175,28,1.683,29,0.008,30,0.529,31,0.232,32,1.087,41,0.848,45,0.905,51,0.847,55,3.036,57,1.255,58,1.231,59,1.877,61,1.034,67,0.103,68,2.334,76,1.182,79,1.187,176,5.238,183,2.641,184,0.754,190,1.652,191,0.004,192,0.006,193,0.004,203,2.492,260,0.749,548,0.885,643,3.152,696,4.497,697,3.995,698,5.513,699,4.134,700,1.839,702,5.08,703,5.258,704,4.837,705,5.258,706,5.258,714,3.988,715,4.497,717,3.015,718,3.643,720,3.988,722,3.988,735,3.988,809,2.448,1052,4.785,1053,5.875,1054,5.875,1055,5.875,1056,5.875,1057,5.875,1058,5.875,1059,5.875,1060,5.875,1061,4.785,1062,4.785,1063,4.785,1064,6.037,1065,4.785,1066,4.785,1067,4.785,1068,4.785,1069,4.785,1070,4.785,1071,4.461,1072,4.799,1073,6.037]],["title/classes/HandlerBuilder-1.html",[0,0.186,194,2.142,696,2.215]],["body/classes/HandlerBuilder-1.html",[0,0.274,2,1.099,3,0.05,4,0.05,5,0.05,7,0.069,8,0.602,14,1.073,16,2.703,18,1.292,26,1.187,28,1.685,29,0.008,30,0.53,31,0.23,32,1.088,41,0.851,51,0.848,55,2.709,57,0.998,58,0.979,59,1.884,61,1.037,67,0.087,68,2.341,79,1.188,176,5.243,183,2.65,184,0.6,190,1.705,191,0.004,192,0.006,193,0.004,203,2.62,259,4.114,260,0.751,643,3.157,696,4.504,697,3.996,698,5.521,699,4.15,702,5.086,703,5.266,704,4.845,705,5.266,706,5.266,714,4.001,715,4.504,717,3.021,718,3.655,720,4.001,722,4.001,735,4.001,995,6.625,1061,4.801,1062,4.801,1063,4.801,1064,4.801,1065,4.801,1066,4.801,1067,4.801,1068,4.801,1069,4.801,1070,4.801,1071,4.476,1074,5.895,1075,6.625,1076,5.895,1077,5.895,1078,5.895,1079,5.895,1080,5.895,1081,5.895,1082,5.895,1083,5.895,1084,5.895,1085,5.819,1086,6.625,1087,5.895,1088,5.895]],["title/interfaces/HandlerBuilderInterface.html",[247,0.151,1075,3.881]],["body/interfaces/HandlerBuilderInterface.html",[3,0.055,4,0.055,5,0.055,7,0.075,8,0.635,14,1.133,25,0.579,26,1.151,28,1.738,29,0.008,30,0.546,31,0.237,32,1.122,41,1.304,45,1.033,51,0.896,55,3.007,57,1.328,58,1.302,59,2.057,61,1.133,67,0.106,176,4.673,191,0.005,192,0.006,193,0.005,247,0.204,249,0.624,548,1.01,643,3.284,697,4.023,699,4.159,702,5.247,703,5.079,704,4.673,705,5.079,706,5.079,714,5.325,715,4.686,717,2.618,718,4.864,720,5.325,722,5.325,1075,7.744,1085,5.613,1086,5.243,1089,5.718,1090,6.438,1091,6.438,1092,6.438,1093,6.438,1094,6.438]],["title/classes/HandlerFactory.html",[0,0.221,1072,3.085]],["body/classes/HandlerFactory.html",[0,0.366,2,1.209,3,0.055,4,0.055,5,0.055,7,0.076,14,1.138,16,1.951,18,1.249,25,0.584,26,0.826,29,0.008,31,0.197,41,0.937,45,0.962,51,0.9,55,3.101,57,1.334,58,1.308,59,2.072,61,1.141,67,0.106,68,2.576,76,1.305,79,1.212,176,5.057,183,2.916,184,0.802,190,1.256,191,0.005,192,0.006,193,0.005,260,0.826,548,0.941,643,3.058,696,4.702,697,3.88,698,4.403,699,4.042,700,2.658,702,3.863,703,4.199,704,3.863,705,4.199,706,4.199,715,3.592,717,2.638,735,4.403,809,3.68,1052,5.282,1061,5.282,1062,5.282,1063,5.282,1064,6.419,1065,5.282,1066,5.282,1067,5.282,1068,5.282,1069,5.282,1070,5.282,1071,4.925,1072,5.497,1073,6.419,1095,6.487]],["title/classes/HandlerFactory-1.html",[0,0.186,194,2.142,1072,2.59]],["body/classes/HandlerFactory-1.html",[0,0.403,2,1.274,3,0.058,4,0.058,5,0.058,7,0.08,14,1.174,18,1.154,26,0.871,28,1.348,29,0.007,30,0.424,31,0.224,32,0.871,33,0.3,40,3.155,41,0.986,51,0.992,61,1.202,67,0.109,79,1.17,183,3.072,184,0.914,191,0.005,192,0.006,193,0.005,691,4.503,696,5.083,700,2.874,809,3.825,913,3.543,1072,5.264,1096,5.564,1097,6.832,1098,5.691,1099,6.832,1100,5.817,1101,5.519,1102,6.622,1103,5.188,1104,5.564,1105,3.783,1106,5.564,1107,4.887,1108,5.564,1109,4.637]],["title/interfaces/HandlerHelpers.html",[247,0.151,1110,3.409]],["body/interfaces/HandlerHelpers.html",[3,0.059,4,0.059,5,0.059,7,0.081,8,0.662,25,0.736,29,0.008,31,0.204,33,0.278,45,0.998,51,0.995,55,3.001,57,1.526,58,1.496,61,1.213,67,0.106,92,2.295,191,0.005,192,0.006,193,0.005,244,3.099,247,0.285,249,0.668,260,0.878,493,1.411,548,0.976,717,2.804,729,3.575,901,3.366,981,4.463,1098,4.274,1110,6.234,1111,4.931,1112,5.087,1113,4.679,1114,5.292,1115,5.234,1116,5.915,1117,5.848,1118,5.234,1119,4.274,1120,5.848,1121,4.463,1122,5.234]],["title/classes/HandlerInputFactory.html",[0,0.221,1123,4.233]],["body/classes/HandlerInputFactory.html",[0,0.267,1,6.445,2,1.071,3,0.049,4,0.049,5,0.049,7,0.067,8,0.592,9,2.98,14,1.055,16,2.788,18,1.267,22,2.229,24,4.341,26,1.181,28,1.724,29,0.008,30,0.542,31,0.229,32,1.181,40,2.652,41,1.055,51,1.02,55,2.817,56,3.181,57,1.36,58,1.404,59,1.835,60,3.913,61,1.286,67,0.067,76,1.796,79,1.162,124,4.53,184,0.584,191,0.004,192,0.006,193,0.004,244,2.582,260,0.732,513,1.498,525,1.711,663,2.979,701,4.168,742,7.757,882,6.423,901,3.569,1123,6.49,1124,5.744,1125,9.343,1126,7.698,1127,8.459,1128,8.037,1129,8.037,1130,6.103,1131,7.308,1132,7.308,1133,5.744,1134,5.744,1135,5.744,1136,5.744,1137,5.744,1138,7.138,1139,5.744,1140,5.744,1141,5.744,1142,5.744,1143,8.037,1144,5.744,1145,5.744,1146,5.744,1147,5.744,1148,5.744,1149,5.744,1150,5.744,1151,5.744,1152,5.744,1153,7.308,1154,5.744,1155,5.744,1156,5.744,1157,5.744,1158,7.308,1159,7.138,1160,5.744,1161,5.744,1162,5.744,1163,5.744,1164,5.744]],["title/classes/ISPContentBuilder.html",[0,0.221,845,3.619]],["body/classes/ISPContentBuilder.html",[0,0.27,2,0.763,3,0.035,4,0.035,5,0.035,7,0.048,8,0.471,9,3.322,12,1.225,14,0.84,16,2.847,18,1.286,19,5.001,22,2.626,25,0.524,26,1.212,28,1.641,29,0.008,30,0.556,31,0.224,32,1.13,33,0.3,40,2.687,41,1.248,51,0.773,57,0.985,58,0.966,59,1.309,60,2.193,61,0.721,64,5.743,65,2.78,67,0.086,71,2.439,76,1.361,79,1.226,92,2.692,100,3.949,101,5.652,109,0.695,113,3.949,126,3.338,131,2.78,135,4.03,159,2.93,172,6.508,183,2.616,184,0.592,185,3.949,190,1.127,191,0.003,192,0.004,193,0.003,203,1.256,235,2.78,238,2.539,247,0.13,362,0.856,458,0.888,548,0.993,558,1.127,661,4.646,662,3.747,663,4.774,665,3.706,666,4.08,667,3.465,668,3.465,669,3.465,670,3.465,671,4.685,672,4.484,673,2.651,674,2.651,675,2.651,678,2.651,679,2.651,680,2.539,681,4.856,682,2.651,683,2.539,684,2.651,685,2.439,686,2.539,687,2.651,688,2.539,689,2.651,741,2.651,757,3.11,758,3.11,759,3.607,761,3.11,762,4.162,790,4.825,791,4.837,792,4.816,793,4.837,796,4.638,799,4.162,803,3.11,804,3.767,817,2.93,827,2.93,828,2.93,834,2.93,835,2.93,837,2.93,838,2.93,839,3.335,845,5.138,846,3.335,847,6,848,4.738,849,5.511,850,5.511,851,6,852,5.594,853,4.738,854,3.222,855,6,856,3.335,857,3.335,858,2.93,859,5.909,860,4.738,861,6,862,3.335,863,6.584,864,6,865,3.335,866,6,867,4.738,868,6,869,3.335,870,6,871,3.335,872,6,873,6,874,3.335,875,5.511,876,6,877,3.335,878,6,879,3.335,1165,5.818,1166,4.096,1167,4.096,1168,4.096,1169,4.096,1170,4.096,1171,4.096,1172,4.096,1173,4.096,1174,4.096,1175,4.096,1176,4.096,1177,4.096,1178,4.096,1179,4.096,1180,4.096,1181,4.096,1182,4.096]],["title/classes/ISPProductClient.html",[0,0.221,108,3.619]],["body/classes/ISPProductClient.html",[0,0.242,1,5.904,2,0.656,3,0.03,4,0.03,5,0.03,6,2.867,7,0.041,8,0.422,9,3.52,10,4.714,11,5.652,12,0.915,13,4.214,14,0.753,15,5.056,16,1.867,17,4.339,18,1.271,19,4.214,20,5.056,21,5.589,22,2.409,24,2.867,25,0.69,26,1.191,28,1.672,29,0.008,30,0.55,31,0.233,32,1.079,33,0.305,37,3.127,39,6.978,40,2.867,41,1.29,42,4.714,43,3.127,45,1.13,46,3.127,48,3.127,51,0.837,52,3.959,53,2.279,54,2.867,55,2.555,56,3.438,57,0.882,58,0.865,59,1.125,60,1.885,61,0.62,62,3.127,63,3.127,64,3.375,65,2.39,66,5.211,67,0.073,68,2.071,69,4.246,70,2.867,71,3.105,72,2.673,73,2.867,74,2.867,75,4.214,76,1.768,77,4.214,78,3.127,79,1.231,80,3.127,81,0.735,82,3.127,83,2.673,84,0.749,85,2.673,86,2.867,87,2.867,88,2.673,89,0.764,90,3.129,91,3.618,92,2.44,93,3.129,94,2.98,95,1.504,96,1.504,97,4.252,98,3.127,99,4.63,100,4.659,101,5.644,102,3.539,103,5.211,104,4.397,105,2.673,106,3.959,107,4.63,108,4.714,109,0.622,110,4.214,111,6.507,112,7.396,113,5.833,114,6.095,115,3.127,116,3.127,117,3.127,118,2.518,119,3.127,120,6.095,121,6.507,122,4.63,123,6.095,124,4.923,125,3.994,126,4.555,127,6.814,128,6.095,129,4.63,130,6.095,131,3.539,132,4.63,133,1.069,134,4.63,135,3.105,136,6.095,137,4.63,138,6.095,139,6.507,140,3.127,141,4.714,142,3.959,143,4.63,144,6.095,145,3.729,146,3.127,147,6.095,148,4.63,149,4.63,150,3.127,151,3.127,152,4.249,153,5.514,154,3.849,155,3.127,156,3.127,157,6.095,158,3.127,159,5.833,160,5.589,161,1.9,162,6.814,163,5.514,164,5.514,165,4.973,166,2.991,167,3.127,168,4.63,169,5.514,170,4.63,171,3.127,172,5.489,173,5.514,174,2.518,175,3.729,176,4.729,177,6.095,178,4.63,179,5.514,180,4.63,181,4.63,182,4.63,183,2.344,184,0.531,185,2.39,186,3.127,187,3.127,188,3.127,189,3.127,190,1.202,191,0.003,192,0.004,193,0.003,203,1.599,672,4.319,1038,4.659,1183,6.208,1184,3.521,1185,5.213,1186,3.521,1187,3.521,1188,3.521,1189,3.521,1190,3.521,1191,3.521,1192,3.521,1193,3.521,1194,3.521,1195,3.521,1196,3.521,1197,3.521,1198,3.521,1199,3.521,1200,3.521,1201,3.521,1202,3.521,1203,3.521,1204,3.521,1205,3.521,1206,3.521,1207,3.521,1208,3.375,1209,3.521,1210,3.521,1211,3.521,1212,3.521,1213,3.521,1214,3.521]],["title/interfaces/InitialState.html",[247,0.151,1215,3.409]],["body/interfaces/InitialState.html",[0,0.27,3,0.05,4,0.05,5,0.05,7,0.068,8,0.596,9,3.151,18,1.252,22,2.255,25,0.764,29,0.008,31,0.202,32,1.082,33,0.235,51,0.664,56,4.475,57,0.984,58,0.965,59,1.857,67,0.1,76,1.883,79,1.238,90,2.482,91,2.482,92,3.093,93,2.482,94,2.363,95,2.482,96,2.482,110,5.949,118,4.157,125,3.703,191,0.004,192,0.006,193,0.004,234,3.762,247,0.233,249,0.564,288,2.923,493,1.641,639,4.339,1112,3.112,1119,5.706,1215,6.406,1216,4.413,1217,6.451,1218,6.581,1219,6.918,1220,4.733,1221,5.995,1222,5.995,1223,5.995,1224,4.733,1225,5.995,1226,4.733,1227,6.136,1228,4.733,1229,4.733,1230,5.995,1231,4.413,1232,7.138,1233,4.733,1234,4.733,1235,4.733,1236,4.733,1237,4.733,1238,6.918,1239,4.413,1240,4.733,1241,4.733,1242,4.733,1243,4.733,1244,4.733,1245,4.733,1246,4.733,1247,4.733,1248,4.733,1249,4.733,1250,4.733]],["title/classes/IntentHandlerBuilder.html",[0,0.221,1100,3.409]],["body/classes/IntentHandlerBuilder.html",[0,0.281,2,1.13,3,0.052,4,0.052,5,0.052,7,0.071,8,0.612,14,1.091,16,2.669,18,1.29,22,2.933,26,1.207,28,1.752,29,0.008,30,0.55,31,0.235,32,1.131,33,0.283,41,0.875,51,0.941,55,2.018,57,1.026,61,1.066,67,0.089,79,0.984,109,0.903,176,4.502,190,1.719,191,0.005,192,0.006,193,0.005,203,2.646,288,3.048,643,2.352,672,4.813,691,3.356,696,5.247,697,3.996,698,5.131,699,4.024,702,4.906,703,4.894,704,4.502,705,4.894,706,4.894,708,4.936,709,4.936,710,4.936,713,4.936,714,4.114,715,4.186,716,4.936,717,2.465,718,3.757,719,4.936,720,4.114,721,4.936,722,4.114,723,4.936,725,5.382,735,4.114,737,5.382,899,3.356,1085,5.407,1098,5.611,1100,5.893,1251,6.061,1252,6.061,1253,6.061,1254,6.061,1255,6.061,1256,6.061,1257,7.559]],["title/classes/IntentHandlerFactory.html",[0,0.221,1103,3.619]],["body/classes/IntentHandlerFactory.html",[0,0.404,2,1.279,3,0.059,4,0.059,5,0.059,7,0.08,14,1.177,18,1.156,26,0.874,28,1.354,29,0.008,30,0.425,31,0.217,32,0.874,33,0.293,40,3.167,41,0.99,51,0.993,61,1.207,67,0.109,79,1.171,183,3.084,184,0.916,191,0.005,192,0.006,193,0.005,691,4.513,696,4.983,700,2.877,809,3.829,913,3.557,1072,4.441,1096,5.586,1098,5.578,1100,6.221,1101,5.532,1102,6.638,1103,6.189,1104,5.586,1105,3.798,1106,5.586,1107,4.907,1108,5.586,1109,4.656,1258,6.859,1259,6.859]],["title/classes/IntentRequestFactory.html",[0,0.221,1260,3.881]],["body/classes/IntentRequestFactory.html",[0,0.325,2,1,3,0.046,4,0.046,5,0.046,7,0.063,8,0.566,9,3.358,12,1.292,14,1.01,16,2.872,18,1.282,22,2.714,26,1.228,28,1.807,29,0.008,30,0.568,31,0.237,32,1.185,33,0.301,40,2.477,41,1.289,51,0.799,53,5.037,57,0.908,58,1.161,61,0.944,67,0.082,79,0.91,97,2.873,109,0.929,152,2.971,175,3.838,183,2.412,184,0.712,190,1.354,191,0.004,192,0.005,193,0.004,203,2.387,244,2.412,260,1.09,283,3.838,302,1.142,493,1.343,550,1.079,597,1.796,639,3.144,672,4.954,712,5.037,715,4.309,801,3.326,817,3.838,1101,6.061,1105,2.971,1107,5.003,1121,4.528,1130,5.31,1260,5.696,1261,4.765,1262,6.544,1263,5.31,1264,6.91,1265,6.91,1266,6.78,1267,5.566,1268,6.337,1269,6.337,1270,6.337,1271,5.696,1272,5.696,1273,5.696,1274,5.696,1275,5.696,1276,5.365,1277,4.765,1278,4.765,1279,4.765,1280,4.765,1281,4.765,1282,5.365,1283,7.594,1284,5.365,1285,5.365,1286,5.365,1287,5.365,1288,4.765,1289,4.765,1290,4.765,1291,4.765,1292,4.765,1293,4.369,1294,4.765,1295,4.369,1296,4.765,1297,4.369,1298,4.765,1299,4.369,1300,4.765,1301,4.369,1302,4.765,1303,4.369,1304,4.765,1305,4.765,1306,4.074,1307,5.696,1308,4.765,1309,4.369,1310,4.765,1311,5.31,1312,4.765]],["title/classes/InvalidIntentRequestException.html",[0,0.221,1307,3.881]],["body/classes/InvalidIntentRequestException.html",[0,0.379,2,1.284,3,0.059,4,0.059,5,0.059,7,0.081,8,0.662,12,1.204,16,2.071,18,1.24,22,2.672,26,0.877,29,0.008,31,0.172,33,0.26,51,0.933,57,1.166,58,1.356,61,1.212,67,0.096,79,1.063,109,1.04,183,3.096,184,0.701,190,1.334,191,0.005,192,0.006,193,0.005,203,2.113,244,3.096,302,1.466,493,1.41,550,1.752,712,4.458,801,5.065,1101,6.115,1107,6.232,1260,5.608,1261,6.116,1262,5.913,1264,6.116,1265,6.116,1266,5.229,1283,7.736,1307,7.094,1308,7.256,1309,6.653,1310,6.116,1311,6.204,1312,6.116,1313,6.887]],["title/classes/LaunchRequestFactory.html",[0,0.221,1109,3.235]],["body/classes/LaunchRequestFactory.html",[0,0.261,2,1.049,3,0.048,4,0.048,5,0.048,7,0.066,8,0.584,9,3.391,12,1.308,14,1.041,16,2.859,18,1.276,22,2.799,26,1.229,28,1.805,29,0.007,30,0.567,31,0.237,32,1.186,33,0.303,40,2.598,41,1.282,51,0.824,53,5.153,57,0.952,58,1.197,61,0.99,67,0.066,79,0.732,97,3.013,109,0.861,152,3.116,175,4.025,184,0.573,190,1.397,191,0.004,192,0.005,193,0.004,203,2.442,244,2.53,260,1.106,283,4.025,302,1.198,597,1.816,639,3.243,672,4.978,712,3.643,715,4.408,817,4.025,913,2.918,1105,3.116,1109,4.895,1121,4.669,1130,5.476,1262,6.57,1263,5.476,1266,6.044,1267,5.694,1268,6.482,1269,6.482,1270,6.482,1271,5.874,1272,5.874,1273,5.874,1274,5.874,1275,5.874,1277,4.997,1278,4.997,1279,4.997,1280,4.997,1281,4.997,1288,4.997,1289,4.997,1290,4.997,1291,4.997,1292,4.997,1293,4.582,1294,4.997,1295,4.582,1296,4.997,1297,4.582,1298,4.997,1299,4.582,1300,4.997,1301,4.582,1302,4.997,1303,4.582,1304,4.997,1305,4.997,1306,4.273,1311,4.273,1314,5.627,1315,7.96,1316,5.627,1317,5.627,1318,9.03,1319,5.627,1320,5.627]],["title/classes/LaunchRequestFactory-1.html",[0,0.186,194,2.142,1109,2.715]],["body/classes/LaunchRequestFactory-1.html",[0,0.405,2,1.29,3,0.059,4,0.059,5,0.059,7,0.081,14,1.183,18,1.16,26,0.882,29,0.007,31,0.204,33,0.278,41,0.999,51,0.997,61,1.218,67,0.109,79,1.175,183,3.112,184,0.918,191,0.005,192,0.006,193,0.005,691,4.538,696,5.1,700,2.883,809,3.891,913,3.589,1072,4.481,1096,5.636,1098,5.412,1100,5.862,1101,5.562,1102,6.673,1103,5.255,1104,5.636,1105,3.832,1106,5.636,1107,4.951,1108,5.636,1109,5.562,1321,6.921]],["title/classes/LaunchRequestHandlerFactory.html",[0,0.221,915,2.839]],["body/classes/LaunchRequestHandlerFactory.html",[0,0.399,2,1.115,3,0.051,4,0.051,5,0.051,7,0.07,14,1.083,18,0.795,24,3.781,25,0.737,26,0.955,28,1.48,29,0.008,30,0.465,31,0.228,32,0.955,33,0.261,41,1.083,45,1.048,51,0.981,55,2.859,57,1.386,58,1.245,59,1.911,61,1.053,67,0.11,68,2.978,76,1.508,79,1.215,109,0.978,166,4.301,184,0.833,190,1.158,191,0.005,192,0.006,193,0.005,247,0.28,249,0.58,259,4.535,260,0.955,548,0.714,643,2.909,697,3.577,699,3.91,700,1.873,701,3.102,717,3.669,854,4.754,894,3.563,895,3.563,896,4.466,897,5.077,898,3.563,899,3.313,900,5.561,901,4.52,902,4.648,903,5.266,904,3.709,905,5.113,906,3.709,907,4.648,908,3.709,909,4.648,910,3.709,911,3.563,912,4.466,913,3.888,914,4.152,915,4.877,916,4.466,917,3.709,918,4.648,919,3.563,1322,5.982,1323,5.982,1324,5.982]],["title/classes/LaunchRequestrBuilder.html",[0,0.221,1325,4.233]],["body/classes/LaunchRequestrBuilder.html",[0,0.291,2,1.166,3,0.053,4,0.053,5,0.053,7,0.073,8,0.624,14,1.113,16,2.319,18,1.289,26,1.199,28,1.722,29,0.008,30,0.541,31,0.233,32,1.111,41,0.904,51,0.954,55,2.084,57,1.059,61,1.101,67,0.09,79,1.004,109,0.921,176,4.592,190,1.735,191,0.005,192,0.006,193,0.005,203,2.676,288,3.147,643,2.428,672,4.842,691,3.465,696,5.271,697,4.011,698,5.233,699,4.044,702,4.978,703,4.992,704,4.592,705,4.992,706,4.992,708,5.096,709,5.096,710,5.096,713,5.096,714,4.247,715,4.27,716,5.096,717,2.545,718,3.88,719,5.096,720,4.247,721,5.096,722,4.247,723,5.096,735,4.247,898,3.727,899,3.465,919,3.727,1085,5.516,1325,7.422,1326,6.258,1327,6.258]],["title/classes/ListManagementAPIClient.html",[0,0.221,1328,4.233]],["body/classes/ListManagementAPIClient.html",[0,0.25,2,1.003,3,0.046,4,0.046,5,0.046,7,0.063,8,0.568,14,1.012,16,2.343,17,4.507,18,1.297,26,1.186,28,1.788,29,0.008,30,0.562,31,0.231,32,1.154,33,0.311,41,1.334,45,1.175,51,0.89,57,0.911,58,0.893,60,2.882,61,0.947,67,0.063,79,1.179,104,3.881,106,4.087,109,0.837,133,1.597,190,1.042,191,0.004,192,0.005,193,0.004,196,5.289,203,1.651,260,1.186,513,1.539,1328,6.224,1329,4.78,1330,7.793,1331,7.793,1332,7.793,1333,7.793,1334,7.793,1335,7.793,1336,8.255,1337,7.331,1338,7.793,1339,7.793,1340,7.008,1341,5.382,1342,5.382,1343,7.793,1344,5.382,1345,5.382,1346,7.793,1347,5.382,1348,9.494,1349,5.382,1350,5.382,1351,5.382,1352,9.16,1353,5.382,1354,5.382,1355,7.331,1356,5.382,1357,5.382,1358,5.382,1359,5.382,1360,5.382,1361,5.382,1362,7.793,1363,5.382,1364,5.382,1365,7.793,1366,5.382,1367,5.382,1368,5.382,1369,4.78,1370,4.78,1371,4.78,1372,5.382,1373,7.008,1374,7.008,1375,5.382,1376,5.382,1377,5.382,1378,5.382,1379,5.382]],["title/interfaces/LocalizedAttribute.html",[247,0.151,454,1.074]],["body/interfaces/LocalizedAttribute.html",[0,0.146,3,0.027,4,0.041,5,0.027,7,0.037,8,0.388,12,1.161,25,0.283,26,0.4,29,0.008,30,0.533,31,0.241,33,0.303,45,0.383,67,0.116,81,0.656,84,0.669,89,0.682,109,0.878,133,0.981,161,1.784,184,0.32,191,0.002,192,0.004,193,0.002,220,0.721,247,0.304,249,0.464,251,2.248,252,0.553,260,0.4,295,1.099,296,0.909,297,0.721,298,0.669,299,2.218,300,0.644,301,1.099,302,1.485,303,0.721,304,1.099,305,0.721,306,1.331,307,0.721,308,1.331,309,0.721,310,0.721,311,0.721,312,1.058,313,1.099,314,0.721,315,0.721,316,0.721,317,0.721,318,0.721,319,1.433,320,1.099,321,0.721,322,0.721,323,0.708,324,0.721,325,0.721,326,1.099,327,1.078,328,1.078,329,0.735,330,1.517,331,1.099,332,0.721,333,0.721,334,0.735,335,1.099,336,0.708,337,0.721,338,1.331,339,0.721,340,1.078,341,1.331,342,0.721,343,0.695,344,0.721,345,0.721,346,0.735,347,0.721,348,1.306,349,0.708,350,0.721,351,0.721,352,0.708,353,0.721,354,1.722,355,1.331,356,0.721,357,0.721,358,0.721,359,0.721,360,0.708,361,1.099,362,1,363,0.721,364,1.46,365,0.721,366,0.735,367,0.735,368,1.356,369,0.735,370,0.735,371,0.721,372,1.099,373,0.721,374,0.735,375,0.735,376,0.708,377,1.46,378,0.735,379,0.735,380,0.735,381,0.735,382,0.735,383,1.078,384,0.721,385,0.721,386,0.721,387,0.721,388,0.721,389,0.721,390,1.099,391,0.721,392,1.078,393,0.721,394,0.721,395,0.721,396,0.721,397,0.721,398,0.721,399,0.721,400,0.721,401,0.721,402,0.721,403,0.721,404,0.721,405,0.721,406,0.721,407,0.721,408,0.721,409,1.099,410,0.721,411,0.721,412,0.721,413,0.721,414,0.721,415,0.721,416,0.721,417,1.306,418,0.721,419,0.721,420,1.099,421,0.721,422,0.721,423,0.721,424,0.721,425,1.46,426,0.721,427,0.735,428,0.721,429,0.721,430,0.721,431,1.46,432,0.721,433,1.099,434,0.721,435,1.331,436,0.721,437,1.099,438,0.721,439,1.488,440,0.721,441,1.078,442,0.721,443,1.099,444,0.721,445,0.721,446,0.721,447,1.099,448,0.721,449,1.078,450,0.735,451,0.735,452,0.721,453,0.721,454,1.306,455,1.058,456,1.019,457,0.721,458,0.682,459,1.502,460,1.755,461,0.721,462,0.721,463,0.721,464,0.721,465,0.721,466,0.721,467,0.721,468,0.721,469,0.721,470,0.721,471,0.721,472,0.721,473,0.721,474,0.721,475,0.721,476,0.721,477,1.331,478,1.331,479,1.72,480,0.721,481,0.721,482,1.099,483,0.721,484,0.735,485,1.331,486,1.331,487,0.721,488,0.735,489,0.721,490,0.735,491,1.099,492,0.721,493,1.001,494,0.735,495,0.735,496,0.721,497,0.735,498,0.721,499,0.721,500,1.099,501,0.735,502,1.099,503,1.099,504,1.099,505,1.517,506,0.721,507,0.735,508,0.735,509,1.099,510,0.721,511,0.735,512,0.735,513,0.586,514,0.721,515,1.306,516,1.306,517,1.099,518,0.708,519,0.708,520,0.708,521,1.099,522,0.721,523,0.721,524,0.721,525,1.019,526,1.331,527,0.708,528,0.708,529,0.721,530,0.735,531,0.735,532,0.721,533,0.721,534,0.735,535,0.735,536,0.735,537,0.735,538,1.099,539,0.708,540,0.708,541,1.306,542,1.099,543,0.708,544,0.721,545,0.721,546,1.099,547,0.735,548,0.375,549,0.721,550,0.632,551,1.597,552,1.624,553,1.585,554,1.775,555,1.038,556,0.735,557,0.721,558,0.608,559,0.721,560,0.721,561,1.331,562,0.735,563,0.735,564,1.099,565,0.735,566,0.735,567,0.721,568,0.735,569,1.585,570,0.735,571,1.72,572,0.735,573,0.735,574,0.735,575,0.735,576,0.735,577,1.331,578,0.735,579,0.735,580,0.735,581,0.735,582,0.735,583,0.721,584,0.735,585,0.735,586,0.735,587,0.735,588,0.735,589,0.735,590,0.735,591,0.735,592,0.735,593,0.735,594,0.735,595,0.721,596,0.735,597,1.304,598,0.735,599,0.735,600,0.735,601,0.735,602,0.735,603,1.099,604,0.735,605,0.721,606,0.735,607,0.735,608,0.735,609,0.735,610,0.735,611,0.721,612,0.721,613,0.735,614,0.735,615,0.735,616,0.721,617,0.721,618,0.735,619,0.735,620,0.721,621,0.735,622,0.735,623,0.735,624,0.735,625,0.721,626,0.735,627,0.721,628,0.735,629,0.735,630,0.721,631,0.735,632,0.735,1380,3.142]],["title/classes/LocalizedAttributesFactory.html",[0,0.221,1381,4.233]],["body/classes/LocalizedAttributesFactory.html",[0,0.331,2,1.329,3,0.061,4,0.061,5,0.061,7,0.084,12,1.228,14,1.204,18,0.947,26,0.908,29,0.007,33,0.266,41,1.029,51,0.814,61,1.254,67,0.084,76,1.434,79,1.15,190,1.38,191,0.005,192,0.006,193,0.005,249,0.691,252,1.467,296,1.584,300,1.461,455,1.843,557,1.636,558,1.614,559,1.636,560,1.636,700,2.766,809,3.796,1031,6.33,1381,7.404,1382,7.128,1383,7.128,1384,8.337,1385,7.128]],["title/interfaces/MergeObjectType.html",[247,0.151,1386,4.233]],["body/interfaces/MergeObjectType.html",[3,0.059,4,0.059,5,0.059,7,0.081,8,0.664,24,4.031,25,0.737,29,0.008,31,0.204,32,1.15,51,0.936,55,3.067,57,1.387,58,1.36,59,2.211,61,1.218,67,0.102,76,1.756,79,1.136,154,5.595,191,0.005,192,0.006,193,0.005,247,0.219,249,0.671,548,0.978,643,3.574,697,3.76,699,3.854,911,4.881,1386,7.753,1387,6.921,1388,6.921,1389,9.024,1390,6.921,1391,8.194,1392,6.921,1393,6.921]],["title/interfaces/MessageGroup.html",[247,0.151,449,1.074]],["body/interfaces/MessageGroup.html",[0,0.145,3,0.027,4,0.041,5,0.027,7,0.037,8,0.386,12,0.852,25,0.282,29,0.008,30,0.526,31,0.242,32,0.608,33,0.303,45,0.382,67,0.116,81,0.654,84,0.666,89,0.679,109,0.876,133,0.978,161,1.849,184,0.318,191,0.002,192,0.004,193,0.002,220,0.718,247,0.304,249,0.463,252,0.551,260,0.399,295,1.095,296,0.595,297,0.718,298,0.666,299,2.217,300,0.641,301,1.095,302,1.483,303,0.718,304,1.095,305,0.718,306,1.328,307,0.718,308,1.328,309,0.718,310,0.718,311,0.718,312,1.055,313,1.095,314,0.718,315,0.718,316,0.718,317,0.718,318,0.718,319,1.43,320,1.095,321,0.718,322,0.718,323,0.705,324,0.718,325,0.718,326,1.095,327,1.075,328,1.075,329,0.732,330,1.513,331,1.095,332,0.718,333,0.718,334,0.732,335,1.095,336,0.705,337,0.718,338,1.328,339,0.718,340,1.075,341,1.328,342,0.718,343,0.692,344,0.718,345,0.718,346,0.732,347,0.718,348,1.303,349,0.705,350,0.718,351,0.718,352,0.705,353,0.718,354,1.719,355,1.328,356,0.718,357,0.718,358,0.718,359,0.718,360,0.705,361,1.095,362,0.997,363,0.718,364,1.457,365,0.718,366,0.732,367,0.732,368,1.353,369,0.732,370,0.732,371,0.718,372,1.095,373,0.718,374,0.732,375,0.732,376,0.705,377,1.457,378,0.732,379,0.732,380,0.732,381,0.732,382,0.732,383,1.075,384,0.718,385,0.718,386,0.718,387,0.718,388,0.718,389,0.718,390,1.095,391,0.718,392,1.075,393,0.718,394,0.718,395,0.718,396,0.718,397,0.718,398,0.718,399,0.718,400,0.718,401,0.718,402,0.718,403,0.718,404,0.718,405,0.718,406,0.718,407,0.718,408,0.718,409,1.095,410,0.718,411,0.718,412,0.718,413,0.718,414,0.718,415,0.718,416,0.718,417,1.303,418,0.718,419,0.718,420,1.095,421,0.718,422,0.718,423,0.718,424,0.718,425,1.457,426,0.718,427,0.732,428,0.718,429,0.718,430,0.718,431,1.457,432,0.718,433,1.095,434,0.718,435,1.328,436,0.718,437,1.095,438,0.718,439,1.485,440,0.718,441,1.075,442,0.718,443,1.095,444,0.718,445,0.718,446,0.718,447,1.485,448,0.718,449,1.303,450,1.513,451,1.353,452,1.485,453,1.485,454,1.075,455,1.055,456,1.016,457,0.718,458,0.679,459,1.501,460,1.754,461,0.718,462,0.718,463,0.718,464,0.718,465,0.718,466,0.718,467,0.718,468,0.718,469,0.718,470,0.718,471,0.718,472,0.718,473,0.718,474,0.718,475,0.718,476,0.718,477,1.328,478,1.328,479,1.717,480,0.718,481,0.718,482,1.095,483,0.718,484,0.732,485,1.328,486,1.328,487,0.718,488,0.732,489,0.718,490,0.732,491,1.095,492,0.718,493,0.998,494,0.732,495,0.732,496,0.718,497,0.732,498,0.718,499,0.718,500,1.095,501,0.732,502,1.095,503,1.095,504,1.095,505,1.513,506,0.718,507,0.732,508,0.732,509,1.095,510,0.718,511,0.732,512,0.732,513,0.583,514,0.718,515,1.303,516,1.303,517,1.095,518,0.705,519,0.705,520,0.705,521,1.095,522,0.718,523,0.718,524,0.718,525,1.016,526,1.328,527,0.705,528,0.705,529,0.718,530,0.732,531,0.732,532,0.718,533,0.718,534,0.732,535,0.732,536,0.732,537,0.732,538,1.095,539,0.705,540,0.705,541,1.303,542,1.095,543,0.705,544,0.718,545,0.718,546,1.095,547,0.732,548,0.374,549,0.718,550,0.629,551,1.596,552,1.622,553,1.583,554,1.773,555,1.035,556,0.732,557,0.718,558,0.606,559,0.718,560,0.718,561,1.328,562,0.732,563,0.732,564,1.095,565,0.732,566,0.732,567,0.718,568,0.732,569,1.583,570,0.732,571,1.717,572,0.732,573,0.732,574,0.732,575,0.732,576,0.732,577,1.328,578,0.732,579,0.732,580,0.732,581,0.732,582,0.732,583,0.718,584,0.732,585,0.732,586,0.732,587,0.732,588,0.732,589,0.732,590,0.732,591,0.732,592,0.732,593,0.732,594,0.732,595,0.718,596,0.732,597,1.301,598,0.732,599,0.732,600,0.732,601,0.732,602,0.732,603,1.095,604,0.732,605,0.718,606,0.732,607,0.732,608,0.732,609,0.732,610,0.732,611,0.718,612,0.718,613,0.732,614,0.732,615,0.732,616,0.718,617,0.718,618,0.732,619,0.732,620,0.718,621,0.732,622,0.732,623,0.732,624,0.732,625,0.718,626,0.732,627,0.718,628,0.732,629,0.732,630,0.718,631,0.732,632,0.732]],["title/interfaces/MessageState.html",[247,0.151,440,1.094]],["body/interfaces/MessageState.html",[0,0.146,3,0.027,4,0.041,5,0.027,7,0.037,8,0.387,12,0.854,25,0.282,29,0.008,30,0.526,31,0.242,32,0.609,33,0.303,45,0.383,67,0.116,81,0.656,84,0.668,89,0.681,109,0.877,133,1.43,161,1.784,184,0.319,191,0.002,192,0.004,193,0.002,220,0.721,247,0.304,249,0.464,252,0.552,260,0.4,295,1.098,296,0.596,297,0.721,298,0.668,299,2.217,300,0.643,301,1.098,302,1.485,303,0.721,304,1.098,305,0.721,306,1.33,307,0.721,308,1.33,309,0.721,310,0.721,311,0.721,312,1.057,313,1.098,314,0.721,315,0.721,316,0.721,317,0.721,318,0.721,319,1.432,320,1.098,321,0.721,322,0.721,323,0.707,324,0.721,325,0.721,326,1.098,327,1.077,328,1.077,329,0.734,330,1.516,331,1.098,332,0.721,333,0.721,334,0.734,335,1.098,336,0.707,337,0.721,338,1.33,339,0.721,340,1.077,341,1.33,342,0.721,343,0.694,344,0.721,345,0.721,346,0.734,347,0.721,348,1.305,349,0.707,350,0.721,351,0.721,352,0.707,353,0.721,354,1.721,355,1.33,356,0.721,357,0.721,358,0.721,359,0.721,360,0.707,361,1.098,362,0.999,363,0.721,364,1.46,365,0.721,366,0.734,367,0.734,368,1.356,369,0.734,370,0.734,371,0.721,372,1.098,373,0.721,374,0.734,375,0.734,376,0.707,377,1.46,378,0.734,379,0.734,380,0.734,381,0.734,382,0.734,383,1.077,384,0.721,385,0.721,386,0.721,387,0.721,388,0.721,389,0.721,390,1.098,391,0.721,392,1.077,393,0.721,394,0.721,395,0.721,396,0.721,397,0.721,398,0.721,399,0.721,400,0.721,401,0.721,402,0.721,403,0.721,404,0.721,405,0.721,406,0.721,407,0.721,408,0.721,409,1.098,410,0.721,411,0.721,412,0.721,413,0.721,414,0.721,415,0.721,416,0.721,417,1.305,418,0.721,419,0.721,420,1.098,421,0.721,422,0.721,423,0.721,424,0.721,425,1.46,426,0.721,427,0.734,428,0.721,429,0.721,430,0.721,431,1.46,432,0.721,433,1.098,434,0.721,435,1.33,436,0.721,437,1.098,438,0.721,439,1.488,440,1.098,441,1.46,442,1.488,443,1.488,444,0.721,445,0.721,446,0.721,447,1.098,448,0.721,449,1.077,450,0.734,451,0.734,452,0.721,453,0.721,454,1.077,455,1.057,456,1.018,457,0.721,458,0.681,459,1.502,460,1.755,461,0.721,462,0.721,463,0.721,464,0.721,465,0.721,466,0.721,467,0.721,468,0.721,469,0.721,470,0.721,471,0.721,472,0.721,473,0.721,474,0.721,475,0.721,476,0.721,477,1.33,478,1.33,479,1.719,480,0.721,481,0.721,482,1.098,483,0.721,484,0.734,485,1.33,486,1.33,487,0.721,488,0.734,489,0.721,490,0.734,491,1.098,492,0.721,493,1,494,0.734,495,0.734,496,0.721,497,0.734,498,0.721,499,0.721,500,1.098,501,0.734,502,1.098,503,1.098,504,1.098,505,1.516,506,0.721,507,0.734,508,0.734,509,1.098,510,0.721,511,0.734,512,0.734,513,0.585,514,0.721,515,1.305,516,1.305,517,1.098,518,0.707,519,0.707,520,0.707,521,1.098,522,0.721,523,0.721,524,0.721,525,1.018,526,1.33,527,0.707,528,0.707,529,0.721,530,0.734,531,0.734,532,0.721,533,0.721,534,0.734,535,0.734,536,0.734,537,0.734,538,1.098,539,0.707,540,0.707,541,1.305,542,1.098,543,0.707,544,0.721,545,0.721,546,1.098,547,0.734,548,0.375,549,0.721,550,0.631,551,1.597,552,1.623,553,1.584,554,1.774,555,1.038,556,0.734,557,0.721,558,0.608,559,0.721,560,0.721,561,1.33,562,0.734,563,0.734,564,1.098,565,0.734,566,0.734,567,0.721,568,0.734,569,1.584,570,0.734,571,1.719,572,0.734,573,0.734,574,0.734,575,0.734,576,0.734,577,1.33,578,0.734,579,0.734,580,0.734,581,0.734,582,0.734,583,0.721,584,0.734,585,0.734,586,0.734,587,0.734,588,0.734,589,0.734,590,0.734,591,0.734,592,0.734,593,0.734,594,0.734,595,0.721,596,0.734,597,1.303,598,0.734,599,0.734,600,0.734,601,0.734,602,0.734,603,1.098,604,0.734,605,0.721,606,0.734,607,0.734,608,0.734,609,0.734,610,0.734,611,0.721,612,0.721,613,0.734,614,0.734,615,0.734,616,0.721,617,0.721,618,0.734,619,0.734,620,0.721,621,0.734,622,0.734,623,0.734,624,0.734,625,0.721,626,0.734,627,0.721,628,0.734,629,0.734,630,0.721,631,0.734,632,0.734]],["title/classes/MockAttributeManager.html",[0,0.221,258,3.881]],["body/classes/MockAttributeManager.html",[0,0.245,2,0.983,3,0.045,4,0.045,5,0.045,7,0.062,8,0.56,9,3.463,14,0.998,18,1.28,26,1.182,28,1.522,29,0.008,30,0.478,31,0.222,32,0.983,33,0.168,41,1.284,51,0.79,55,2.961,56,4.832,57,0.892,58,0.875,68,3.466,76,1.814,79,1.107,90,2.251,91,2.251,92,1.755,93,2.251,94,2.144,95,2.251,96,2.251,124,4.783,125,4.119,184,0.536,190,1.586,191,0.006,192,0.005,193,0.004,203,2.512,247,0.167,248,7.824,250,4.681,252,0.928,254,4.681,255,4.681,256,7.551,257,4.681,258,6.282,259,3.828,260,0.983,261,6.851,262,6.851,263,7.273,264,4.946,265,4.946,266,7.273,267,4.681,268,6.851,269,8.103,270,6.851,271,6.851,272,6.14,273,7.273,274,4.681,275,4.681,276,6.851,277,4.681,278,4.681,279,4.681,280,7.273,281,6.851,282,7.749,283,6.453,284,6.851,285,6.14,286,6.14,287,7.273,288,3.88,289,4.681,290,4.681,291,4.681,292,4.681,293,6.14,294,6.14,712,4.994,1394,5.271,1395,5.271,1396,5.271,1397,5.271,1398,5.271,1399,5.271,1400,5.271,1401,5.271,1402,5.271,1403,5.271,1404,5.271,1405,5.271,1406,5.271,1407,5.271]],["title/interfaces/Occasion.html",[247,0.151,364,1.074]],["body/interfaces/Occasion.html",[0,0.144,3,0.027,4,0.041,5,0.027,7,0.036,8,0.385,12,0.849,25,0.28,29,0.008,30,0.525,31,0.242,32,0.605,33,0.303,45,0.379,67,0.116,81,0.65,84,0.662,89,0.675,109,0.874,133,0.973,161,1.779,184,0.316,191,0.002,192,0.004,193,0.002,220,0.714,247,0.304,249,0.46,252,0.547,260,0.396,295,1.09,296,0.591,297,0.714,298,0.662,299,2.216,300,0.637,301,1.09,302,1.478,303,0.714,304,1.09,305,0.714,306,1.322,307,0.714,308,1.322,309,0.714,310,0.714,311,0.714,312,1.05,313,1.09,314,0.714,315,0.714,316,0.714,317,0.714,318,0.714,319,1.425,320,1.09,321,0.714,322,0.714,323,0.7,324,0.714,325,0.714,326,1.09,327,1.07,328,1.07,329,0.727,330,1.713,331,1.594,332,0.714,333,0.714,334,0.727,335,1.09,336,0.7,337,0.714,338,1.322,339,0.714,340,1.07,341,1.322,342,0.714,343,0.687,344,0.714,345,0.714,346,0.727,347,0.714,348,1.298,349,0.7,350,0.714,351,0.714,352,0.7,353,0.714,354,1.716,355,1.803,356,0.714,357,0.714,358,0.714,359,0.714,360,0.7,361,1.48,362,1.347,363,0.714,364,1.565,365,1.48,366,0.727,367,1.509,368,1.348,369,0.727,370,0.727,371,1.48,372,1.09,373,0.714,374,0.727,375,0.727,376,0.7,377,1.453,378,0.727,379,0.727,380,0.727,381,0.727,382,0.727,383,1.07,384,0.714,385,0.714,386,0.714,387,0.714,388,0.714,389,0.714,390,1.09,391,0.714,392,1.07,393,0.714,394,0.714,395,0.714,396,0.714,397,0.714,398,0.714,399,0.714,400,0.714,401,0.714,402,0.714,403,0.714,404,0.714,405,0.714,406,0.714,407,0.714,408,0.714,409,1.09,410,0.714,411,0.714,412,0.714,413,0.714,414,0.714,415,0.714,416,0.714,417,1.298,418,0.714,419,0.714,420,1.09,421,0.714,422,0.714,423,0.714,424,0.714,425,1.453,426,0.714,427,0.727,428,0.714,429,0.714,430,0.714,431,1.453,432,0.714,433,1.09,434,0.714,435,1.322,436,0.714,437,1.09,438,0.714,439,1.48,440,0.714,441,1.07,442,0.714,443,1.09,444,0.714,445,0.714,446,0.714,447,1.09,448,0.714,449,1.07,450,0.727,451,0.727,452,0.714,453,0.714,454,1.07,455,1.05,456,1.011,457,0.714,458,0.675,459,1.5,460,1.752,461,0.714,462,0.714,463,0.714,464,0.714,465,0.714,466,0.714,467,0.714,468,0.714,469,0.714,470,0.714,471,0.714,472,0.714,473,0.714,474,0.714,475,0.714,476,0.714,477,1.322,478,1.322,479,1.713,480,0.714,481,0.714,482,1.09,483,0.714,484,0.727,485,1.322,486,1.322,487,0.714,488,0.727,489,0.714,490,0.727,491,1.09,492,0.714,493,0.994,494,0.727,495,0.727,496,0.714,497,0.727,498,0.714,499,0.714,500,1.09,501,0.727,502,1.09,503,1.09,504,1.09,505,1.509,506,0.714,507,0.727,508,0.727,509,1.09,510,0.714,511,0.727,512,0.727,513,0.58,514,0.714,515,1.298,516,1.298,517,1.09,518,0.7,519,0.7,520,0.7,521,1.09,522,0.714,523,0.714,524,0.714,525,1.011,526,1.322,527,0.7,528,0.7,529,0.714,530,0.727,531,0.727,532,0.714,533,0.714,534,0.727,535,0.727,536,0.727,537,0.727,538,1.09,539,0.7,540,0.7,541,1.298,542,1.09,543,0.7,544,0.714,545,0.714,546,1.09,547,0.727,548,0.371,549,0.714,550,0.625,551,1.596,552,1.619,553,1.58,554,1.769,555,1.03,556,0.727,557,0.714,558,0.602,559,0.714,560,0.714,561,1.322,562,0.727,563,0.727,564,1.09,565,0.727,566,0.727,567,0.714,568,0.727,569,1.58,570,0.727,571,1.713,572,0.727,573,0.727,574,0.727,575,0.727,576,0.727,577,1.322,578,0.727,579,0.727,580,0.727,581,0.727,582,0.727,583,0.714,584,0.727,585,0.727,586,0.727,587,0.727,588,0.727,589,0.727,590,0.727,591,0.727,592,0.727,593,0.727,594,0.727,595,0.714,596,0.727,597,1.297,598,0.727,599,0.727,600,0.727,601,0.727,602,0.727,603,1.09,604,0.727,605,0.714,606,0.727,607,0.727,608,0.727,609,0.727,610,0.727,611,0.714,612,0.714,613,0.727,614,0.727,615,0.727,616,0.714,617,0.714,618,0.727,619,0.727,620,0.714,621,0.727,622,0.727,623,0.727,624,0.727,625,0.714,626,0.727,627,0.714,628,0.727,629,0.727,630,0.714,631,0.727,632,0.727]],["title/interfaces/Ogranization.html",[247,0.151,361,1.094]],["body/interfaces/Ogranization.html",[0,0.146,3,0.027,4,0.041,5,0.027,7,0.037,8,0.389,12,0.856,25,0.284,29,0.008,30,0.544,31,0.241,33,0.304,45,0.385,67,0.116,81,0.658,84,0.671,89,0.684,109,0.879,133,0.983,161,1.786,184,0.321,191,0.002,192,0.004,193,0.002,220,0.724,247,0.304,249,0.465,252,0.555,260,0.402,295,1.101,296,0.599,297,0.724,298,0.671,299,2.218,300,0.646,301,1.101,302,1.487,303,0.724,304,1.101,305,0.724,306,1.334,307,0.724,308,1.334,309,0.724,310,0.724,311,0.724,312,1.061,313,1.101,314,0.724,315,0.724,316,0.724,317,0.724,318,0.724,319,1.435,320,1.101,321,0.724,322,0.724,323,0.71,324,0.724,325,0.724,326,1.101,327,1.081,328,1.081,329,0.737,330,1.519,331,1.101,332,0.724,333,0.724,334,0.737,335,1.101,336,0.71,337,0.724,338,1.334,339,0.724,340,1.081,341,1.334,342,0.724,343,0.697,344,0.724,345,0.724,346,0.737,347,0.724,348,1.309,349,0.71,350,0.724,351,0.724,352,0.71,353,0.724,354,1.724,355,1.334,356,0.724,357,0.724,358,0.724,359,0.724,360,0.71,361,1.334,362,1.002,363,0.724,364,1.463,365,0.724,366,0.737,367,0.737,368,1.359,369,0.737,370,0.737,371,0.724,372,1.101,373,0.724,374,0.737,375,0.737,376,0.71,377,1.463,378,0.737,379,0.737,380,0.737,381,0.737,382,0.737,383,1.081,384,0.724,385,0.724,386,0.724,387,0.724,388,0.724,389,0.724,390,1.101,391,0.724,392,1.081,393,0.724,394,0.724,395,0.724,396,0.724,397,0.724,398,0.724,399,0.724,400,0.724,401,0.724,402,0.724,403,0.724,404,0.724,405,0.724,406,0.724,407,0.724,408,0.724,409,1.101,410,0.724,411,0.724,412,0.724,413,0.724,414,0.724,415,0.724,416,0.724,417,1.309,418,0.724,419,0.724,420,1.101,421,0.724,422,0.724,423,0.724,424,0.724,425,1.463,426,0.724,427,0.737,428,0.724,429,0.724,430,0.724,431,1.463,432,0.724,433,1.101,434,0.724,435,1.334,436,0.724,437,1.101,438,0.724,439,1.491,440,0.724,441,1.081,442,0.724,443,1.101,444,0.724,445,0.724,446,0.724,447,1.101,448,0.724,449,1.081,450,0.737,451,0.737,452,0.724,453,0.724,454,1.081,455,1.061,456,1.021,457,0.724,458,0.684,459,1.503,460,1.756,461,0.724,462,0.724,463,0.724,464,0.724,465,0.724,466,0.724,467,0.724,468,0.724,469,0.724,470,0.724,471,0.724,472,0.724,473,0.724,474,0.724,475,0.724,476,0.724,477,1.334,478,1.334,479,1.722,480,0.724,481,0.724,482,1.101,483,0.724,484,0.737,485,1.334,486,1.334,487,0.724,488,0.737,489,0.724,490,0.737,491,1.101,492,0.724,493,1.003,494,0.737,495,0.737,496,0.724,497,0.737,498,0.724,499,0.724,500,1.101,501,0.737,502,1.101,503,1.101,504,1.101,505,1.519,506,0.724,507,0.737,508,0.737,509,1.101,510,0.724,511,0.737,512,0.737,513,0.588,514,0.724,515,1.309,516,1.309,517,1.101,518,0.71,519,0.71,520,0.71,521,1.101,522,0.724,523,0.724,524,0.724,525,1.021,526,1.334,527,0.71,528,0.71,529,0.724,530,0.737,531,0.737,532,0.724,533,0.724,534,0.737,535,0.737,536,0.737,537,0.737,538,1.101,539,0.71,540,0.71,541,1.309,542,1.101,543,0.71,544,0.724,545,0.724,546,1.101,547,0.737,548,0.376,549,0.724,550,0.634,551,1.597,552,1.625,553,1.586,554,1.777,555,1.041,556,0.737,557,0.724,558,0.61,559,0.724,560,0.724,561,1.334,562,0.737,563,0.737,564,1.101,565,0.737,566,0.737,567,0.724,568,0.737,569,1.586,570,0.737,571,1.722,572,0.737,573,0.737,574,0.737,575,0.737,576,0.737,577,1.334,578,0.737,579,0.737,580,0.737,581,0.737,582,0.737,583,0.724,584,0.737,585,0.737,586,0.737,587,0.737,588,0.737,589,0.737,590,0.737,591,0.737,592,0.737,593,0.737,594,0.737,595,0.724,596,0.737,597,1.306,598,0.737,599,0.737,600,0.737,601,0.737,602,0.737,603,1.101,604,0.737,605,0.724,606,0.737,607,0.737,608,0.737,609,0.737,610,0.737,611,0.724,612,0.724,613,0.737,614,0.737,615,0.737,616,0.724,617,0.724,618,0.737,619,0.737,620,0.724,621,0.737,622,0.737,623,0.737,624,0.737,625,0.724,626,0.737,627,0.724,628,0.737,629,0.737,630,0.724,631,0.737,632,0.737]],["title/interfaces/Order.html",[247,0.151,383,1.074]],["body/interfaces/Order.html",[0,0.146,3,0.027,4,0.041,5,0.027,7,0.037,8,0.388,12,0.855,25,0.283,29,0.008,30,0.527,31,0.242,33,0.303,45,0.384,67,0.116,81,0.658,84,0.67,89,0.683,109,0.878,133,0.983,161,1.786,184,0.32,191,0.002,192,0.004,193,0.002,220,0.723,247,0.304,249,0.465,252,0.554,260,0.401,295,1.101,296,0.598,297,0.723,298,0.67,299,2.218,300,0.645,301,1.101,302,1.487,303,0.723,304,1.101,305,0.723,306,1.333,307,0.723,308,1.333,309,0.723,310,0.723,311,0.723,312,1.06,313,1.101,314,0.723,315,0.723,316,0.723,317,0.723,318,0.723,319,1.435,320,1.101,321,0.723,322,0.723,323,0.709,324,0.723,325,0.723,326,1.101,327,1.08,328,1.08,329,0.737,330,1.518,331,1.101,332,0.723,333,0.723,334,0.737,335,1.101,336,0.709,337,0.723,338,1.333,339,0.723,340,1.08,341,1.333,342,0.723,343,0.696,344,0.723,345,0.723,346,0.737,347,0.723,348,1.308,349,0.709,350,0.723,351,0.723,352,0.709,353,0.723,354,1.723,355,1.333,356,0.723,357,0.723,358,0.723,359,0.723,360,0.709,361,1.101,362,1.002,363,0.723,364,1.462,365,0.723,366,0.737,367,0.737,368,1.358,369,0.737,370,0.737,371,0.723,372,1.101,373,0.723,374,0.737,375,0.737,376,0.709,377,1.462,378,0.737,379,0.737,380,0.737,381,0.737,382,0.737,383,1.308,384,1.49,385,0.723,386,0.723,387,0.723,388,0.723,389,0.723,390,1.101,391,0.723,392,1.08,393,0.723,394,0.723,395,0.723,396,0.723,397,0.723,398,0.723,399,0.723,400,0.723,401,0.723,402,0.723,403,0.723,404,0.723,405,0.723,406,0.723,407,0.723,408,0.723,409,1.101,410,0.723,411,0.723,412,0.723,413,0.723,414,0.723,415,0.723,416,0.723,417,1.308,418,0.723,419,0.723,420,1.101,421,0.723,422,0.723,423,0.723,424,0.723,425,1.462,426,0.723,427,0.737,428,0.723,429,0.723,430,0.723,431,1.462,432,0.723,433,1.101,434,0.723,435,1.333,436,0.723,437,1.101,438,0.723,439,1.49,440,0.723,441,1.08,442,0.723,443,1.101,444,0.723,445,0.723,446,0.723,447,1.101,448,0.723,449,1.08,450,0.737,451,0.737,452,0.723,453,0.723,454,1.08,455,1.06,456,1.021,457,0.723,458,0.683,459,1.502,460,1.756,461,0.723,462,0.723,463,0.723,464,0.723,465,0.723,466,0.723,467,0.723,468,0.723,469,0.723,470,0.723,471,0.723,472,0.723,473,0.723,474,0.723,475,0.723,476,0.723,477,1.333,478,1.333,479,1.721,480,0.723,481,0.723,482,1.101,483,0.723,484,0.737,485,1.333,486,1.333,487,0.723,488,0.737,489,0.723,490,0.737,491,1.101,492,0.723,493,1.002,494,0.737,495,0.737,496,0.723,497,0.737,498,0.723,499,0.723,500,1.101,501,0.737,502,1.101,503,1.101,504,1.101,505,1.518,506,0.723,507,0.737,508,0.737,509,1.101,510,0.723,511,0.737,512,0.737,513,0.587,514,0.723,515,1.308,516,1.308,517,1.101,518,0.709,519,0.709,520,0.709,521,1.101,522,0.723,523,0.723,524,0.723,525,1.021,526,1.333,527,0.709,528,0.709,529,0.723,530,0.737,531,0.737,532,0.723,533,0.723,534,0.737,535,0.737,536,0.737,537,0.737,538,1.101,539,0.709,540,0.709,541,1.308,542,1.101,543,0.709,544,0.723,545,0.723,546,1.101,547,0.737,548,0.376,549,0.723,550,0.633,551,1.597,552,1.625,553,1.586,554,1.776,555,1.04,556,0.737,557,0.723,558,0.61,559,0.723,560,0.723,561,1.333,562,0.737,563,0.737,564,1.101,565,0.737,566,0.737,567,0.723,568,0.737,569,1.586,570,0.737,571,1.721,572,0.737,573,0.737,574,0.737,575,0.737,576,0.737,577,1.333,578,0.737,579,0.737,580,0.737,581,0.737,582,0.737,583,0.723,584,0.737,585,0.737,586,0.737,587,0.737,588,0.737,589,0.737,590,0.737,591,0.737,592,0.737,593,0.737,594,0.737,595,0.723,596,0.737,597,1.305,598,0.737,599,0.737,600,0.737,601,0.737,602,0.737,603,1.101,604,0.737,605,0.723,606,0.737,607,0.737,608,0.737,609,0.737,610,0.737,611,0.723,612,0.723,613,0.737,614,0.737,615,0.737,616,0.723,617,0.723,618,0.737,619,0.737,620,0.723,621,0.737,622,0.737,623,0.737,624,0.737,625,0.723,626,0.737,627,0.723,628,0.737,629,0.737,630,0.723,631,0.737,632,0.737,1208,3.104]],["title/interfaces/OrderState.html",[247,0.151,376,1.074]],["body/interfaces/OrderState.html",[0,0.145,3,0.027,4,0.041,5,0.027,7,0.037,8,0.386,12,0.852,25,0.281,29,0.008,30,0.526,31,0.242,32,0.824,33,0.303,45,0.382,67,0.116,81,0.653,84,0.666,89,0.678,109,0.876,133,1.427,161,1.782,184,0.318,191,0.002,192,0.004,193,0.002,220,0.718,247,0.304,249,0.462,252,0.55,260,0.398,295,1.095,296,0.594,297,0.718,298,0.666,299,2.217,300,0.641,301,1.095,302,1.482,303,0.718,304,1.095,305,0.718,306,1.327,307,0.718,308,1.327,309,0.718,310,0.718,311,0.718,312,1.054,313,1.095,314,0.718,315,0.718,316,0.718,317,0.718,318,0.718,319,1.429,320,1.095,321,0.718,322,0.718,323,0.704,324,0.718,325,0.718,326,1.095,327,1.074,328,1.074,329,0.731,330,1.716,331,1.095,332,0.718,333,0.718,334,0.731,335,1.095,336,0.704,337,0.718,338,1.327,339,0.718,340,1.074,341,1.327,342,0.718,343,0.691,344,0.718,345,0.718,346,0.731,347,0.718,348,1.302,349,0.704,350,0.718,351,0.718,352,0.704,353,0.718,354,1.719,355,1.327,356,0.718,357,0.718,358,0.718,359,0.718,360,0.704,361,1.095,362,0.996,363,0.718,364,1.457,365,0.718,366,0.731,367,0.731,368,1.352,369,0.731,370,0.731,371,0.718,372,1.484,373,0.718,374,0.731,375,0.731,376,1.074,377,1.653,378,1.513,379,0.731,380,0.731,381,0.731,382,1.513,383,1.074,384,0.718,385,0.718,386,0.718,387,0.718,388,0.718,389,0.718,390,1.095,391,0.718,392,1.074,393,0.718,394,0.718,395,0.718,396,0.718,397,0.718,398,0.718,399,0.718,400,0.718,401,0.718,402,0.718,403,0.718,404,0.718,405,0.718,406,0.718,407,0.718,408,0.718,409,1.095,410,0.718,411,0.718,412,0.718,413,0.718,414,0.718,415,0.718,416,0.718,417,1.302,418,0.718,419,0.718,420,1.095,421,0.718,422,0.718,423,0.718,424,0.718,425,1.457,426,0.718,427,0.731,428,0.718,429,0.718,430,0.718,431,1.457,432,0.718,433,1.095,434,0.718,435,1.327,436,0.718,437,1.095,438,0.718,439,1.484,440,0.718,441,1.074,442,0.718,443,1.095,444,0.718,445,0.718,446,0.718,447,1.095,448,0.718,449,1.074,450,0.731,451,0.731,452,0.718,453,0.718,454,1.074,455,1.054,456,1.015,457,0.718,458,0.678,459,1.501,460,1.754,461,0.718,462,0.718,463,0.718,464,0.718,465,0.718,466,0.718,467,0.718,468,0.718,469,0.718,470,0.718,471,0.718,472,0.718,473,0.718,474,0.718,475,0.718,476,0.718,477,1.327,478,1.327,479,1.716,480,0.718,481,0.718,482,1.095,483,0.718,484,0.731,485,1.327,486,1.327,487,0.718,488,0.731,489,0.718,490,0.731,491,1.095,492,0.718,493,0.998,494,0.731,495,0.731,496,0.718,497,0.731,498,0.718,499,0.718,500,1.095,501,0.731,502,1.095,503,1.095,504,1.095,505,1.513,506,0.718,507,0.731,508,0.731,509,1.095,510,0.718,511,0.731,512,0.731,513,0.583,514,0.718,515,1.302,516,1.302,517,1.095,518,0.704,519,0.704,520,0.704,521,1.095,522,0.718,523,0.718,524,0.718,525,1.015,526,1.327,527,0.704,528,0.704,529,0.718,530,0.731,531,0.731,532,0.718,533,0.718,534,0.731,535,0.731,536,0.731,537,0.731,538,1.095,539,0.704,540,0.704,541,1.302,542,1.095,543,0.704,544,0.718,545,0.718,546,1.095,547,0.731,548,0.373,549,0.718,550,0.629,551,1.596,552,1.621,553,1.582,554,1.772,555,1.034,556,0.731,557,0.718,558,0.605,559,0.718,560,0.718,561,1.327,562,0.731,563,0.731,564,1.095,565,0.731,566,0.731,567,0.718,568,0.731,569,1.582,570,0.731,571,1.716,572,0.731,573,0.731,574,0.731,575,0.731,576,0.731,577,1.327,578,0.731,579,0.731,580,0.731,581,0.731,582,0.731,583,0.718,584,0.731,585,0.731,586,0.731,587,0.731,588,0.731,589,0.731,590,0.731,591,0.731,592,0.731,593,0.731,594,0.731,595,0.718,596,0.731,597,1.301,598,0.731,599,0.731,600,0.731,601,0.731,602,0.731,603,1.095,604,0.731,605,0.718,606,0.731,607,0.731,608,0.731,609,0.731,610,0.731,611,0.718,612,0.718,613,0.731,614,0.731,615,0.731,616,0.718,617,0.718,618,0.731,619,0.731,620,0.718,621,0.731,622,0.731,623,0.731,624,0.731,625,0.718,626,0.731,627,0.718,628,0.731,629,0.731,630,0.718,631,0.731,632,0.731]],["title/classes/ParameterFactory.html",[0,0.221,1408,2.262]],["body/classes/ParameterFactory.html",[0,0.298,2,1.196,3,0.055,4,0.055,5,0.055,7,0.075,14,1.13,18,0.853,26,0.817,29,0.008,30,0.559,31,0.195,33,0.25,41,0.926,51,1.03,61,1.129,67,0.075,76,1.699,79,1.23,81,1.635,84,1.666,90,3.343,91,3.343,92,2.607,93,3.343,94,3.184,95,3.343,96,3.343,190,1.242,191,0.005,192,0.006,193,0.005,249,0.622,296,1.487,300,1.315,327,1.445,328,1.764,333,1.473,456,1.365,459,1.065,460,1.667,502,1.473,506,1.473,551,1.523,552,1.29,553,1.29,569,1.29,597,1.574,616,1.473,617,1.473,620,1.473,700,2.645,729,3.327,809,3.666,1408,3.716,1409,6.414,1410,6.414,1411,5.944,1412,4.153,1413,6.414,1414,6.414,1415,6.414,1416,6.414,1417,5.697,1418,6.414,1419,5.697,1420,6.414,1421,5.697,1422,6.414,1423,4.871,1424,5.697,1425,6.414,1426,5.697,1427,6.952,1428,6.414,1429,6.414,1430,6.414,1431,6.414,1432,3.977]],["title/classes/ParameterFactory-1.html",[0,0.186,194,2.142,1408,1.899]],["body/classes/ParameterFactory-1.html",[0,0.294,2,1.179,3,0.054,4,0.054,5,0.054,7,0.074,14,1.121,18,0.841,26,0.806,29,0.008,30,0.575,31,0.194,33,0.268,41,0.913,51,1.026,61,1.113,67,0.074,76,1.689,79,1.246,90,2.702,91,2.702,92,2.107,93,2.702,94,2.573,95,2.702,96,2.702,133,1.591,190,1.225,191,0.005,192,0.006,193,0.005,249,0.613,296,1.475,300,1.297,327,1.425,331,1.452,348,1.425,349,1.425,360,1.892,363,1.452,364,1.892,365,1.782,371,1.452,459,1.05,460,1.657,493,1.092,499,1.452,500,1.782,551,1.394,552,1.272,553,1.272,569,1.272,597,1.561,603,1.782,605,1.452,611,1.452,612,1.452,700,2.629,729,3.281,809,3.648,1408,3.684,1411,5.894,1412,4.096,1423,4.804,1432,3.922,1433,6.326,1434,6.326,1435,6.326,1436,6.326,1437,6.326,1438,5.618,1439,7.762,1440,5.618,1441,6.326,1442,5.618,1443,6.326,1444,5.618,1445,6.326,1446,5.618,1447,6.326,1448,5.618,1449,6.326,1450,6.326]],["title/classes/ParameterFactory-2.html",[0,0.186,1408,1.899,1451,3.258]],["body/classes/ParameterFactory-2.html",[0,0.304,2,1.222,3,0.056,4,0.056,5,0.056,7,0.077,14,1.145,18,0.871,26,0.835,29,0.008,30,0.55,33,0.209,41,0.946,51,1.037,61,1.153,67,0.077,76,1.715,79,1.225,90,2.799,91,2.799,92,2.182,93,2.799,94,2.666,95,2.799,96,2.799,133,1.626,190,1.269,191,0.005,192,0.006,193,0.005,249,0.636,296,1.507,300,1.343,373,1.505,376,1.476,377,1.476,383,1.787,384,1.505,385,1.505,459,1.088,460,1.683,493,1.131,496,1.505,498,1.505,551,1.416,552,1.318,553,1.318,569,1.318,595,1.505,597,1.783,700,2.67,729,3.399,809,3.693,1408,3.765,1411,6.022,1412,4.243,1423,6.022,1432,4.063,1452,6.554,1453,6.554,1454,6.554,1455,6.554,1456,6.554,1457,5.821,1458,6.554,1459,5.821,1460,6.554,1461,5.821,1462,6.554,1463,5.821,1464,6.554,1465,6.554]],["title/classes/ParameterFactory-3.html",[0,0.186,1408,1.899,1466,3.258]],["body/classes/ParameterFactory-3.html",[0,0.302,2,1.212,3,0.055,4,0.055,5,0.055,7,0.076,14,1.14,18,0.865,26,0.829,29,0.008,30,0.527,41,0.939,51,1.01,61,1.145,67,0.076,76,1.778,79,1.232,90,3.372,91,3.372,92,2.629,93,3.372,94,3.211,95,3.372,96,3.372,190,1.26,191,0.005,192,0.006,193,0.005,249,0.631,296,1.5,312,1.745,441,1.779,442,1.813,448,1.493,449,1.465,452,1.813,453,1.813,459,1.08,460,1.678,491,1.493,492,1.493,493,1.363,551,1.411,552,1.308,553,1.308,569,1.308,700,2.661,729,3.373,809,3.683,1408,3.747,1412,4.211,1432,4.033,1467,6.505,1468,6.505,1469,6.505,1470,6.505,1471,6.505,1472,6.505,1473,6.505,1474,5.777,1475,6.505,1476,5.777,1477,6.505,1478,5.777,1479,6.505,1480,5.777,1481,6.505,1482,5.777,1483,6.505,1484,6.505,1485,6.505]],["title/classes/ParameterFactory-4.html",[0,0.186,1408,1.899,1486,3.258]],["body/classes/ParameterFactory-4.html",[0,0.3,2,1.205,3,0.055,4,0.055,5,0.055,7,0.076,14,1.135,18,0.859,26,0.823,29,0.008,30,0.587,31,0.196,33,0.251,41,0.933,51,1.007,61,1.137,67,0.076,76,1.705,79,1.231,90,3.359,91,3.359,92,2.618,93,3.359,94,3.198,95,3.359,96,3.359,190,1.251,191,0.005,192,0.006,193,0.005,249,0.627,296,1.494,300,1.325,319,1.738,340,1.772,345,1.484,347,1.484,459,1.073,460,1.673,509,1.484,510,1.484,551,1.407,552,1.3,553,1.3,569,1.3,625,1.484,627,1.484,630,1.484,700,2.654,729,3.351,809,3.675,1408,3.733,1412,4.184,1432,4.006,1487,6.462,1488,6.462,1489,6.462,1490,6.462,1491,6.462,1492,6.462,1493,5.739,1494,6.462,1495,5.739,1496,6.984,1497,6.462,1498,5.739,1499,6.462,1500,5.739,1501,6.462,1502,5.739,1503,6.462,1504,6.462,1505,6.462]],["title/classes/ParameterFactory-5.html",[0,0.186,1408,1.899,1506,3.258]],["body/classes/ParameterFactory-5.html",[0,0.288,2,1.156,3,0.053,4,0.053,5,0.053,7,0.073,14,1.107,18,0.824,26,0.79,29,0.008,30,0.564,33,0.277,41,0.895,51,0.951,61,1.091,67,0.073,76,1.797,79,1.213,90,2.649,91,2.649,92,2.065,93,2.649,94,2.522,95,2.649,96,2.649,141,5.822,161,1.84,165,5.902,190,1.201,191,0.005,192,0.006,193,0.005,249,0.601,296,1.457,300,1.271,354,2.013,429,1.424,430,2.118,431,1.727,432,1.76,434,1.76,436,1.76,438,1.76,439,2.157,456,1.32,459,1.382,460,1.643,487,1.424,489,1.424,551,1.382,552,1.247,553,1.247,569,1.247,583,1.424,700,2.606,809,3.623,1408,3.64,1412,4.015,1432,3.845,1507,6.202,1508,6.202,1509,6.202,1510,6.202,1511,6.202,1512,6.202,1513,7.668,1514,5.508,1515,6.202,1516,6.202,1517,5.508,1518,6.202,1519,5.508,1520,6.202,1521,6.202,1522,5.508,1523,6.202,1524,6.202,1525,6.202,1526,6.202,1527,6.202]],["title/classes/ParameterFactory-6.html",[0,0.186,1408,1.899,1528,3.258]],["body/classes/ParameterFactory-6.html",[0,0.307,2,1.233,3,0.056,4,0.056,5,0.056,7,0.078,14,1.152,18,0.88,26,0.843,29,0.008,30,0.41,41,0.955,51,0.978,61,1.164,67,0.078,76,1.331,79,1.228,90,2.826,91,2.826,92,2.203,93,2.826,94,2.691,95,2.826,96,2.826,141,5.024,190,1.281,191,0.005,192,0.006,193,0.005,249,0.642,296,1.516,300,1.356,392,1.797,417,1.491,418,1.831,419,1.831,456,1.409,459,1.098,460,1.69,480,1.519,481,1.966,482,1.519,551,1.552,552,1.331,553,1.331,554,1.491,564,1.831,567,1.519,569,1.331,700,2.681,809,3.705,1408,3.786,1432,4.102,1529,6.617,1530,6.617,1531,6.617,1532,6.617,1533,5.876,1534,7.977,1535,5.876,1536,8.564,1537,5.876,1538,6.617,1539,6.617,1540,5.876,1541,6.617,1542,6.617]],["title/classes/ParameterFactory-7.html",[0,0.186,1408,1.899,1543,3.258]],["body/classes/ParameterFactory-7.html",[0,0.315,2,1.265,3,0.058,4,0.074,5,0.058,7,0.08,14,1.169,18,0.902,26,0.865,29,0.008,30,0.421,31,0.202,33,0.216,41,0.98,51,1.024,61,1.194,67,0.08,76,1.629,79,1.21,90,2.898,91,2.898,92,2.259,93,2.898,94,2.76,95,2.898,96,2.898,190,1.314,191,0.005,192,0.006,193,0.005,249,0.658,296,1.539,425,1.95,426,1.558,459,1.126,460,1.708,483,1.558,551,1.437,552,1.365,553,1.365,569,1.365,700,2.71,729,3.519,809,3.736,1408,3.844,1412,4.393,1432,4.207,1544,6.785,1545,6.785,1546,6.785,1547,6.785,1548,6.785,1549,6.026,1550,6.785,1551,6.026,1552,6.785,1553,6.785]],["title/interfaces/ParcelDelivery.html",[247,0.151,372,1.094]],["body/interfaces/ParcelDelivery.html",[0,0.146,3,0.027,4,0.041,5,0.027,7,0.037,8,0.389,12,0.856,25,0.284,29,0.008,30,0.527,31,0.241,33,0.303,45,0.385,67,0.116,81,0.658,84,0.671,89,0.684,109,0.879,133,0.983,161,1.786,184,0.321,191,0.002,192,0.004,193,0.002,220,0.724,247,0.304,249,0.465,252,0.555,260,0.402,295,1.101,296,0.599,297,0.724,298,0.671,299,2.218,300,0.646,301,1.101,302,1.487,303,0.724,304,1.101,305,0.724,306,1.334,307,0.724,308,1.334,309,0.724,310,0.724,311,0.724,312,1.061,313,1.101,314,0.724,315,0.724,316,0.724,317,0.724,318,0.724,319,1.435,320,1.101,321,0.724,322,0.724,323,0.71,324,0.724,325,0.724,326,1.101,327,1.081,328,1.081,329,0.737,330,1.722,331,1.101,332,0.724,333,0.724,334,0.737,335,1.101,336,0.71,337,0.724,338,1.334,339,0.724,340,1.081,341,1.334,342,0.724,343,0.697,344,0.724,345,0.724,346,0.737,347,0.724,348,1.309,349,0.71,350,0.724,351,0.724,352,0.71,353,0.724,354,1.724,355,1.334,356,0.724,357,0.724,358,0.724,359,0.724,360,0.71,361,1.101,362,1.002,363,0.724,364,1.463,365,0.724,366,0.737,367,0.737,368,1.359,369,0.737,370,0.737,371,0.724,372,1.334,373,1.491,374,0.737,375,0.737,376,0.71,377,1.463,378,0.737,379,0.737,380,0.737,381,0.737,382,0.737,383,1.081,384,0.724,385,0.724,386,0.724,387,0.724,388,0.724,389,0.724,390,1.101,391,0.724,392,1.081,393,0.724,394,0.724,395,0.724,396,0.724,397,0.724,398,0.724,399,0.724,400,0.724,401,0.724,402,0.724,403,0.724,404,0.724,405,0.724,406,0.724,407,0.724,408,0.724,409,1.101,410,0.724,411,0.724,412,0.724,413,0.724,414,0.724,415,0.724,416,0.724,417,1.309,418,0.724,419,0.724,420,1.101,421,0.724,422,0.724,423,0.724,424,0.724,425,1.463,426,0.724,427,0.737,428,0.724,429,0.724,430,0.724,431,1.463,432,0.724,433,1.101,434,0.724,435,1.334,436,0.724,437,1.101,438,0.724,439,1.491,440,0.724,441,1.081,442,0.724,443,1.101,444,0.724,445,0.724,446,0.724,447,1.101,448,0.724,449,1.081,450,0.737,451,0.737,452,0.724,453,0.724,454,1.081,455,1.061,456,1.021,457,0.724,458,0.684,459,1.503,460,1.756,461,0.724,462,0.724,463,0.724,464,0.724,465,0.724,466,0.724,467,0.724,468,0.724,469,0.724,470,0.724,471,0.724,472,0.724,473,0.724,474,0.724,475,0.724,476,0.724,477,1.334,478,1.334,479,1.722,480,0.724,481,0.724,482,1.101,483,0.724,484,0.737,485,1.334,486,1.334,487,0.724,488,0.737,489,0.724,490,0.737,491,1.101,492,0.724,493,1.003,494,0.737,495,0.737,496,0.724,497,0.737,498,0.724,499,0.724,500,1.101,501,0.737,502,1.101,503,1.101,504,1.101,505,1.519,506,0.724,507,0.737,508,0.737,509,1.101,510,0.724,511,0.737,512,0.737,513,0.588,514,0.724,515,1.309,516,1.309,517,1.101,518,0.71,519,0.71,520,0.71,521,1.101,522,0.724,523,0.724,524,0.724,525,1.021,526,1.334,527,0.71,528,0.71,529,0.724,530,0.737,531,0.737,532,0.724,533,0.724,534,0.737,535,0.737,536,0.737,537,0.737,538,1.101,539,0.71,540,0.71,541,1.309,542,1.101,543,0.71,544,0.724,545,0.724,546,1.101,547,0.737,548,0.376,549,0.724,550,0.634,551,1.597,552,1.625,553,1.586,554,1.777,555,1.041,556,0.737,557,0.724,558,0.61,559,0.724,560,0.724,561,1.334,562,0.737,563,0.737,564,1.101,565,0.737,566,0.737,567,0.724,568,0.737,569,1.586,570,0.737,571,1.722,572,0.737,573,0.737,574,0.737,575,0.737,576,0.737,577,1.334,578,0.737,579,0.737,580,0.737,581,0.737,582,0.737,583,0.724,584,0.737,585,0.737,586,0.737,587,0.737,588,0.737,589,0.737,590,0.737,591,0.737,592,0.737,593,0.737,594,0.737,595,0.724,596,0.737,597,1.306,598,0.737,599,0.737,600,0.737,601,0.737,602,0.737,603,1.101,604,0.737,605,0.724,606,0.737,607,0.737,608,0.737,609,0.737,610,0.737,611,0.724,612,0.724,613,0.737,614,0.737,615,0.737,616,0.724,617,0.724,618,0.737,619,0.737,620,0.724,621,0.737,622,0.737,623,0.737,624,0.737,625,0.724,626,0.737,627,0.724,628,0.737,629,0.737,630,0.724,631,0.737,632,0.737]],["title/interfaces/Payload.html",[247,0.151,459,0.791]],["body/interfaces/Payload.html",[0,0.146,3,0.027,4,0.041,5,0.027,7,0.037,8,0.389,12,0.856,25,0.284,29,0.008,30,0.527,31,0.241,33,0.303,45,0.385,67,0.116,81,0.658,84,0.671,89,0.684,109,0.879,133,0.983,161,1.786,184,0.321,191,0.002,192,0.004,193,0.002,220,0.724,247,0.304,249,0.465,252,0.555,260,0.402,295,1.101,296,0.599,297,0.724,298,0.671,299,2.218,300,0.646,301,1.101,302,1.487,303,0.724,304,1.101,305,0.724,306,1.334,307,0.724,308,1.334,309,0.724,310,0.724,311,0.724,312,1.061,313,1.101,314,0.724,315,0.724,316,0.724,317,0.724,318,0.724,319,1.435,320,1.101,321,0.724,322,0.724,323,0.71,324,0.724,325,0.724,326,1.101,327,1.081,328,1.081,329,0.737,330,1.519,331,1.101,332,0.724,333,0.724,334,0.737,335,1.101,336,0.71,337,0.724,338,1.334,339,0.724,340,1.081,341,1.334,342,0.724,343,0.697,344,0.724,345,0.724,346,0.737,347,0.724,348,1.309,349,0.71,350,0.724,351,0.724,352,0.71,353,0.724,354,1.724,355,1.334,356,0.724,357,0.724,358,0.724,359,0.724,360,0.71,361,1.101,362,1.002,363,0.724,364,1.463,365,0.724,366,0.737,367,0.737,368,1.359,369,0.737,370,0.737,371,0.724,372,1.101,373,0.724,374,0.737,375,0.737,376,0.71,377,1.463,378,0.737,379,0.737,380,0.737,381,0.737,382,0.737,383,1.081,384,0.724,385,0.724,386,0.724,387,0.724,388,0.724,389,0.724,390,1.101,391,0.724,392,1.081,393,0.724,394,0.724,395,0.724,396,0.724,397,0.724,398,0.724,399,0.724,400,0.724,401,0.724,402,0.724,403,0.724,404,0.724,405,0.724,406,0.724,407,0.724,408,0.724,409,1.101,410,0.724,411,0.724,412,0.724,413,0.724,414,0.724,415,0.724,416,0.724,417,1.309,418,0.724,419,0.724,420,1.101,421,0.724,422,0.724,423,0.724,424,0.724,425,1.463,426,0.724,427,0.737,428,0.724,429,0.724,430,0.724,431,1.463,432,0.724,433,1.101,434,0.724,435,1.334,436,0.724,437,1.101,438,0.724,439,1.491,440,0.724,441,1.081,442,0.724,443,1.101,444,0.724,445,0.724,446,0.724,447,1.101,448,0.724,449,1.081,450,0.737,451,0.737,452,0.724,453,0.724,454,1.081,455,1.061,456,1.021,457,0.724,458,0.684,459,1.51,460,1.756,461,0.724,462,0.724,463,0.724,464,0.724,465,0.724,466,0.724,467,0.724,468,0.724,469,0.724,470,0.724,471,0.724,472,0.724,473,0.724,474,0.724,475,0.724,476,0.724,477,1.334,478,1.334,479,1.722,480,0.724,481,1.491,482,1.491,483,0.724,484,0.737,485,1.334,486,1.334,487,0.724,488,0.737,489,0.724,490,0.737,491,1.101,492,0.724,493,1.003,494,0.737,495,0.737,496,0.724,497,0.737,498,0.724,499,0.724,500,1.101,501,0.737,502,1.101,503,1.101,504,1.101,505,1.519,506,0.724,507,0.737,508,0.737,509,1.101,510,0.724,511,0.737,512,0.737,513,0.588,514,0.724,515,1.309,516,1.309,517,1.101,518,0.71,519,0.71,520,0.71,521,1.101,522,0.724,523,0.724,524,0.724,525,1.021,526,1.334,527,0.71,528,0.71,529,0.724,530,0.737,531,0.737,532,0.724,533,0.724,534,0.737,535,0.737,536,0.737,537,0.737,538,1.101,539,0.71,540,0.71,541,1.309,542,1.101,543,0.71,544,0.724,545,0.724,546,1.101,547,0.737,548,0.376,549,0.724,550,0.634,551,1.597,552,1.625,553,1.586,554,1.777,555,1.041,556,0.737,557,0.724,558,0.61,559,0.724,560,0.724,561,1.334,562,0.737,563,0.737,564,1.101,565,0.737,566,0.737,567,0.724,568,0.737,569,1.586,570,0.737,571,1.722,572,0.737,573,0.737,574,0.737,575,0.737,576,0.737,577,1.334,578,0.737,579,0.737,580,0.737,581,0.737,582,0.737,583,0.724,584,0.737,585,0.737,586,0.737,587,0.737,588,0.737,589,0.737,590,0.737,591,0.737,592,0.737,593,0.737,594,0.737,595,0.724,596,0.737,597,1.306,598,0.737,599,0.737,600,0.737,601,0.737,602,0.737,603,1.101,604,0.737,605,0.724,606,0.737,607,0.737,608,0.737,609,0.737,610,0.737,611,0.724,612,0.724,613,0.737,614,0.737,615,0.737,616,0.724,617,0.724,618,0.737,619,0.737,620,0.724,621,0.737,622,0.737,623,0.737,624,0.737,625,0.724,626,0.737,627,0.724,628,0.737,629,0.737,630,0.724,631,0.737,632,0.737]],["title/interfaces/Payload-1.html",[194,2.142,247,0.127,459,0.664]],["body/interfaces/Payload-1.html",[0,0.146,3,0.027,4,0.041,5,0.027,7,0.037,8,0.389,12,0.856,25,0.284,29,0.008,30,0.527,31,0.241,33,0.303,45,0.385,67,0.116,81,0.658,84,0.671,89,0.684,109,0.879,133,0.983,161,1.786,184,0.321,191,0.002,192,0.004,193,0.002,220,0.724,247,0.304,249,0.465,252,0.555,260,0.402,295,1.101,296,0.599,297,0.724,298,0.671,299,2.218,300,0.646,301,1.101,302,1.487,303,0.724,304,1.101,305,0.724,306,1.334,307,0.724,308,1.334,309,0.724,310,0.724,311,0.724,312,1.061,313,1.101,314,0.724,315,0.724,316,0.724,317,0.724,318,0.724,319,1.435,320,1.101,321,0.724,322,0.724,323,0.71,324,0.724,325,0.724,326,1.101,327,1.081,328,1.081,329,0.737,330,1.519,331,1.101,332,0.724,333,0.724,334,0.737,335,1.101,336,0.71,337,0.724,338,1.334,339,0.724,340,1.081,341,1.334,342,0.724,343,0.697,344,0.724,345,0.724,346,0.737,347,0.724,348,1.309,349,0.71,350,0.724,351,0.724,352,0.71,353,0.724,354,1.724,355,1.334,356,0.724,357,0.724,358,0.724,359,0.724,360,0.71,361,1.101,362,1.002,363,0.724,364,1.463,365,0.724,366,0.737,367,0.737,368,1.359,369,0.737,370,0.737,371,0.724,372,1.101,373,0.724,374,0.737,375,0.737,376,0.71,377,1.463,378,0.737,379,0.737,380,0.737,381,0.737,382,0.737,383,1.081,384,0.724,385,0.724,386,0.724,387,0.724,388,0.724,389,0.724,390,1.101,391,0.724,392,1.081,393,0.724,394,0.724,395,0.724,396,0.724,397,0.724,398,0.724,399,0.724,400,0.724,401,0.724,402,0.724,403,0.724,404,0.724,405,0.724,406,0.724,407,0.724,408,0.724,409,1.101,410,0.724,411,0.724,412,0.724,413,0.724,414,0.724,415,0.724,416,0.724,417,1.309,418,0.724,419,0.724,420,1.101,421,0.724,422,0.724,423,0.724,424,0.724,425,1.724,426,0.724,427,0.737,428,0.724,429,0.724,430,0.724,431,1.463,432,0.724,433,1.101,434,0.724,435,1.334,436,0.724,437,1.101,438,0.724,439,1.491,440,0.724,441,1.081,442,0.724,443,1.101,444,0.724,445,0.724,446,0.724,447,1.101,448,0.724,449,1.081,450,0.737,451,0.737,452,0.724,453,0.724,454,1.081,455,1.061,456,1.021,457,0.724,458,0.684,459,1.51,460,1.756,461,0.724,462,0.724,463,0.724,464,0.724,465,0.724,466,0.724,467,0.724,468,0.724,469,0.724,470,0.724,471,0.724,472,0.724,473,0.724,474,0.724,475,0.724,476,0.724,477,1.334,478,1.334,479,1.722,480,0.724,481,0.724,482,1.101,483,0.724,484,1.359,485,1.334,486,1.334,487,0.724,488,0.737,489,0.724,490,0.737,491,1.101,492,0.724,493,1.003,494,0.737,495,0.737,496,0.724,497,0.737,498,0.724,499,0.724,500,1.101,501,0.737,502,1.101,503,1.101,504,1.101,505,1.519,506,0.724,507,0.737,508,0.737,509,1.101,510,0.724,511,0.737,512,0.737,513,0.588,514,0.724,515,1.309,516,1.309,517,1.101,518,0.71,519,0.71,520,0.71,521,1.101,522,0.724,523,0.724,524,0.724,525,1.021,526,1.334,527,0.71,528,0.71,529,0.724,530,0.737,531,0.737,532,0.724,533,0.724,534,0.737,535,0.737,536,0.737,537,0.737,538,1.101,539,0.71,540,0.71,541,1.309,542,1.101,543,0.71,544,0.724,545,0.724,546,1.101,547,0.737,548,0.376,549,0.724,550,0.634,551,1.597,552,1.625,553,1.586,554,1.777,555,1.041,556,0.737,557,0.724,558,0.61,559,0.724,560,0.724,561,1.334,562,0.737,563,0.737,564,1.101,565,0.737,566,0.737,567,0.724,568,0.737,569,1.586,570,0.737,571,1.722,572,0.737,573,0.737,574,0.737,575,0.737,576,0.737,577,1.334,578,0.737,579,0.737,580,0.737,581,0.737,582,0.737,583,0.724,584,0.737,585,0.737,586,0.737,587,0.737,588,0.737,589,0.737,590,0.737,591,0.737,592,0.737,593,0.737,594,0.737,595,0.724,596,0.737,597,1.306,598,0.737,599,0.737,600,0.737,601,0.737,602,0.737,603,1.101,604,0.737,605,0.724,606,0.737,607,0.737,608,0.737,609,0.737,610,0.737,611,0.724,612,0.724,613,0.737,614,0.737,615,0.737,616,0.724,617,0.724,618,0.737,619,0.737,620,0.724,621,0.737,622,0.737,623,0.737,624,0.737,625,0.724,626,0.737,627,0.724,628,0.737,629,0.737,630,0.724,631,0.737,632,0.737]],["title/interfaces/Payload-2.html",[247,0.127,459,0.664,1451,3.258]],["body/interfaces/Payload-2.html",[0,0.146,3,0.027,4,0.041,5,0.027,7,0.037,8,0.387,12,0.854,25,0.282,29,0.008,30,0.526,31,0.242,32,0.609,33,0.303,45,0.383,67,0.116,81,0.656,84,0.668,89,0.681,109,0.877,133,0.98,161,1.784,184,0.319,191,0.002,192,0.004,193,0.002,220,0.721,247,0.304,249,0.464,252,0.552,260,0.4,295,1.098,296,0.596,297,0.721,298,0.668,299,2.217,300,0.643,301,1.098,302,1.485,303,0.721,304,1.098,305,0.721,306,1.33,307,0.721,308,1.33,309,0.721,310,0.721,311,0.721,312,1.057,313,1.098,314,0.721,315,0.721,316,0.721,317,0.721,318,0.721,319,1.432,320,1.098,321,0.721,322,0.721,323,0.707,324,0.721,325,0.721,326,1.098,327,1.077,328,1.077,329,0.734,330,1.516,331,1.098,332,0.721,333,0.721,334,0.734,335,1.098,336,0.707,337,0.721,338,1.33,339,0.721,340,1.077,341,1.33,342,0.721,343,0.694,344,0.721,345,0.721,346,0.734,347,0.721,348,1.305,349,0.707,350,0.721,351,0.721,352,0.707,353,0.721,354,1.721,355,1.33,356,0.721,357,0.721,358,0.721,359,0.721,360,0.707,361,1.098,362,0.999,363,0.721,364,1.46,365,0.721,366,0.734,367,0.734,368,1.356,369,0.734,370,0.734,371,0.721,372,1.098,373,0.721,374,0.734,375,0.734,376,0.707,377,1.46,378,0.734,379,0.734,380,0.734,381,0.734,382,0.734,383,1.077,384,0.721,385,0.721,386,0.721,387,0.721,388,0.721,389,0.721,390,1.098,391,0.721,392,1.077,393,0.721,394,0.721,395,0.721,396,0.721,397,0.721,398,0.721,399,0.721,400,0.721,401,0.721,402,0.721,403,0.721,404,0.721,405,0.721,406,0.721,407,0.721,408,0.721,409,1.098,410,0.721,411,0.721,412,0.721,413,0.721,414,0.721,415,0.721,416,0.721,417,1.305,418,0.721,419,0.721,420,1.098,421,0.721,422,0.721,423,0.721,424,0.721,425,1.46,426,0.721,427,0.734,428,0.721,429,0.721,430,0.721,431,1.721,432,0.721,433,1.098,434,0.721,435,1.33,436,0.721,437,1.098,438,0.721,439,1.488,440,0.721,441,1.077,442,0.721,443,1.098,444,0.721,445,0.721,446,0.721,447,1.098,448,0.721,449,1.077,450,0.734,451,0.734,452,0.721,453,0.721,454,1.077,455,1.057,456,1.018,457,0.721,458,0.681,459,1.509,460,1.755,461,0.721,462,0.721,463,0.721,464,0.721,465,0.721,466,0.721,467,0.721,468,0.721,469,0.721,470,0.721,471,0.721,472,0.721,473,0.721,474,0.721,475,0.721,476,0.721,477,1.33,478,1.33,479,1.719,480,0.721,481,0.721,482,1.098,483,0.721,484,0.734,485,1.33,486,1.33,487,0.721,488,1.516,489,1.33,490,1.356,491,1.098,492,0.721,493,1,494,0.734,495,0.734,496,0.721,497,0.734,498,0.721,499,0.721,500,1.098,501,0.734,502,1.098,503,1.098,504,1.098,505,1.516,506,0.721,507,0.734,508,0.734,509,1.098,510,0.721,511,0.734,512,0.734,513,0.585,514,0.721,515,1.305,516,1.305,517,1.098,518,0.707,519,0.707,520,0.707,521,1.098,522,0.721,523,0.721,524,0.721,525,1.018,526,1.33,527,0.707,528,0.707,529,0.721,530,0.734,531,0.734,532,0.721,533,0.721,534,0.734,535,0.734,536,0.734,537,0.734,538,1.098,539,0.707,540,0.707,541,1.305,542,1.098,543,0.707,544,0.721,545,0.721,546,1.098,547,0.734,548,0.375,549,0.721,550,0.631,551,1.597,552,1.623,553,1.584,554,1.774,555,1.038,556,0.734,557,0.721,558,0.608,559,0.721,560,0.721,561,1.33,562,0.734,563,0.734,564,1.098,565,0.734,566,0.734,567,0.721,568,0.734,569,1.584,570,0.734,571,1.719,572,0.734,573,0.734,574,0.734,575,0.734,576,0.734,577,1.33,578,0.734,579,0.734,580,0.734,581,0.734,582,0.734,583,0.721,584,0.734,585,0.734,586,0.734,587,0.734,588,0.734,589,0.734,590,0.734,591,0.734,592,0.734,593,0.734,594,0.734,595,0.721,596,0.734,597,1.303,598,0.734,599,0.734,600,0.734,601,0.734,602,0.734,603,1.098,604,0.734,605,0.721,606,0.734,607,0.734,608,0.734,609,0.734,610,0.734,611,0.721,612,0.721,613,0.734,614,0.734,615,0.734,616,0.721,617,0.721,618,0.734,619,0.734,620,0.721,621,0.734,622,0.734,623,0.734,624,0.734,625,0.721,626,0.734,627,0.721,628,0.734,629,0.734,630,0.721,631,0.734,632,0.734]],["title/interfaces/Payload-3.html",[247,0.127,459,0.664,1466,3.258]],["body/interfaces/Payload-3.html",[0,0.146,3,0.027,4,0.041,5,0.027,7,0.037,8,0.388,12,0.854,25,0.283,29,0.008,30,0.526,31,0.242,33,0.303,45,0.383,67,0.116,81,0.656,84,0.669,89,0.682,109,0.878,133,0.981,161,1.784,184,0.32,191,0.002,192,0.004,193,0.002,220,0.721,247,0.304,249,0.464,252,0.553,260,0.4,295,1.099,296,0.597,297,0.721,298,0.669,299,2.218,300,0.644,301,1.099,302,1.485,303,0.721,304,1.099,305,0.721,306,1.331,307,0.721,308,1.331,309,0.721,310,0.721,311,0.721,312,1.058,313,1.099,314,0.721,315,0.721,316,0.721,317,0.721,318,0.721,319,1.433,320,1.099,321,0.721,322,0.721,323,0.708,324,0.721,325,0.721,326,1.099,327,1.078,328,1.078,329,0.735,330,1.517,331,1.099,332,0.721,333,0.721,334,0.735,335,1.099,336,0.708,337,0.721,338,1.331,339,0.721,340,1.078,341,1.331,342,0.721,343,0.695,344,0.721,345,0.721,346,0.735,347,0.721,348,1.306,349,0.708,350,0.721,351,0.721,352,0.708,353,0.721,354,1.722,355,1.331,356,0.721,357,0.721,358,0.721,359,0.721,360,0.708,361,1.099,362,1,363,0.721,364,1.46,365,0.721,366,0.735,367,0.735,368,1.356,369,0.735,370,0.735,371,0.721,372,1.099,373,0.721,374,0.735,375,0.735,376,0.708,377,1.46,378,0.735,379,0.735,380,0.735,381,0.735,382,0.735,383,1.078,384,0.721,385,0.721,386,0.721,387,0.721,388,0.721,389,0.721,390,1.099,391,0.721,392,1.078,393,0.721,394,0.721,395,0.721,396,0.721,397,0.721,398,0.721,399,0.721,400,0.721,401,0.721,402,0.721,403,0.721,404,0.721,405,0.721,406,0.721,407,0.721,408,0.721,409,1.099,410,0.721,411,0.721,412,0.721,413,0.721,414,0.721,415,0.721,416,0.721,417,1.306,418,0.721,419,0.721,420,1.099,421,0.721,422,0.721,423,0.721,424,0.721,425,1.46,426,0.721,427,0.735,428,0.721,429,0.721,430,0.721,431,1.46,432,0.721,433,1.099,434,0.721,435,1.331,436,0.721,437,1.099,438,0.721,439,1.488,440,0.721,441,1.078,442,0.721,443,1.099,444,0.721,445,0.721,446,0.721,447,1.099,448,0.721,449,1.572,450,0.735,451,0.735,452,0.721,453,0.721,454,1.078,455,1.058,456,1.019,457,0.721,458,0.682,459,1.509,460,1.755,461,0.721,462,0.721,463,0.721,464,0.721,465,0.721,466,0.721,467,0.721,468,0.721,469,0.721,470,0.721,471,0.721,472,0.721,473,0.721,474,0.721,475,0.721,476,0.721,477,1.331,478,1.331,479,1.72,480,0.721,481,0.721,482,1.099,483,0.721,484,0.735,485,1.331,486,1.331,487,0.721,488,0.735,489,0.721,490,0.735,491,1.099,492,0.721,493,1.269,494,1.356,495,1.356,496,0.721,497,0.735,498,0.721,499,0.721,500,1.099,501,0.735,502,1.099,503,1.099,504,1.099,505,1.517,506,0.721,507,0.735,508,0.735,509,1.099,510,0.721,511,0.735,512,0.735,513,0.586,514,0.721,515,1.306,516,1.306,517,1.099,518,0.708,519,0.708,520,0.708,521,1.099,522,0.721,523,0.721,524,0.721,525,1.019,526,1.331,527,0.708,528,0.708,529,0.721,530,0.735,531,0.735,532,0.721,533,0.721,534,0.735,535,0.735,536,0.735,537,0.735,538,1.099,539,0.708,540,0.708,541,1.306,542,1.099,543,0.708,544,0.721,545,0.721,546,1.099,547,0.735,548,0.375,549,0.721,550,0.632,551,1.597,552,1.624,553,1.585,554,1.775,555,1.038,556,0.735,557,0.721,558,0.608,559,0.721,560,0.721,561,1.331,562,0.735,563,0.735,564,1.099,565,0.735,566,0.735,567,0.721,568,0.735,569,1.585,570,0.735,571,1.72,572,0.735,573,0.735,574,0.735,575,0.735,576,0.735,577,1.331,578,0.735,579,0.735,580,0.735,581,0.735,582,0.735,583,0.721,584,0.735,585,0.735,586,0.735,587,0.735,588,0.735,589,0.735,590,0.735,591,0.735,592,0.735,593,0.735,594,0.735,595,0.721,596,0.735,597,1.304,598,0.735,599,0.735,600,0.735,601,0.735,602,0.735,603,1.099,604,0.735,605,0.721,606,0.735,607,0.735,608,0.735,609,0.735,610,0.735,611,0.721,612,0.721,613,0.735,614,0.735,615,0.735,616,0.721,617,0.721,618,0.735,619,0.735,620,0.721,621,0.735,622,0.735,623,0.735,624,0.735,625,0.721,626,0.735,627,0.721,628,0.735,629,0.735,630,0.721,631,0.735,632,0.735]],["title/interfaces/Payload-4.html",[247,0.127,459,0.664,1486,3.258]],["body/interfaces/Payload-4.html",[0,0.146,3,0.027,4,0.041,5,0.027,7,0.037,8,0.388,12,0.854,25,0.283,29,0.008,30,0.526,31,0.242,33,0.303,45,0.383,67,0.116,81,0.656,84,0.669,89,0.682,109,0.878,133,0.981,161,1.784,184,0.32,191,0.002,192,0.004,193,0.002,220,0.721,247,0.304,249,0.464,252,0.553,260,0.4,295,1.099,296,0.597,297,0.721,298,0.669,299,2.218,300,0.644,301,1.099,302,1.485,303,0.721,304,1.099,305,0.721,306,1.331,307,0.721,308,1.331,309,0.721,310,0.721,311,0.721,312,1.058,313,1.099,314,0.721,315,0.721,316,0.721,317,0.721,318,0.721,319,1.433,320,1.099,321,0.721,322,0.721,323,0.708,324,0.721,325,0.721,326,1.099,327,1.078,328,1.078,329,0.735,330,1.517,331,1.099,332,0.721,333,0.721,334,0.735,335,1.099,336,0.708,337,0.721,338,1.331,339,0.721,340,1.078,341,1.331,342,0.721,343,0.695,344,0.721,345,0.721,346,0.735,347,0.721,348,1.306,349,0.708,350,0.721,351,0.721,352,0.708,353,0.721,354,1.722,355,1.331,356,0.721,357,0.721,358,0.721,359,0.721,360,0.708,361,1.099,362,1,363,0.721,364,1.46,365,0.721,366,0.735,367,0.735,368,1.356,369,0.735,370,0.735,371,0.721,372,1.099,373,0.721,374,0.735,375,0.735,376,0.708,377,1.46,378,0.735,379,0.735,380,0.735,381,0.735,382,0.735,383,1.572,384,0.721,385,0.721,386,0.721,387,0.721,388,0.721,389,0.721,390,1.099,391,0.721,392,1.078,393,0.721,394,0.721,395,0.721,396,0.721,397,0.721,398,0.721,399,0.721,400,0.721,401,0.721,402,0.721,403,0.721,404,0.721,405,0.721,406,0.721,407,0.721,408,0.721,409,1.099,410,0.721,411,0.721,412,0.721,413,0.721,414,0.721,415,0.721,416,0.721,417,1.306,418,0.721,419,0.721,420,1.099,421,0.721,422,0.721,423,0.721,424,0.721,425,1.46,426,0.721,427,0.735,428,0.721,429,0.721,430,0.721,431,1.46,432,0.721,433,1.099,434,0.721,435,1.331,436,0.721,437,1.099,438,0.721,439,1.488,440,0.721,441,1.078,442,0.721,443,1.099,444,0.721,445,0.721,446,0.721,447,1.099,448,0.721,449,1.078,450,0.735,451,0.735,452,0.721,453,0.721,454,1.078,455,1.058,456,1.019,457,0.721,458,0.682,459,1.509,460,1.755,461,0.721,462,0.721,463,0.721,464,0.721,465,0.721,466,0.721,467,0.721,468,0.721,469,0.721,470,0.721,471,0.721,472,0.721,473,0.721,474,0.721,475,0.721,476,0.721,477,1.331,478,1.331,479,1.72,480,0.721,481,0.721,482,1.099,483,0.721,484,0.735,485,1.331,486,1.331,487,0.721,488,0.735,489,0.721,490,0.735,491,1.099,492,0.721,493,1.269,494,0.735,495,0.735,496,0.721,497,1.356,498,1.331,499,0.721,500,1.099,501,0.735,502,1.099,503,1.099,504,1.099,505,1.517,506,0.721,507,0.735,508,0.735,509,1.099,510,0.721,511,0.735,512,0.735,513,0.586,514,0.721,515,1.306,516,1.306,517,1.099,518,0.708,519,0.708,520,0.708,521,1.099,522,0.721,523,0.721,524,0.721,525,1.019,526,1.331,527,0.708,528,0.708,529,0.721,530,0.735,531,0.735,532,0.721,533,0.721,534,0.735,535,0.735,536,0.735,537,0.735,538,1.099,539,0.708,540,0.708,541,1.306,542,1.099,543,0.708,544,0.721,545,0.721,546,1.099,547,0.735,548,0.375,549,0.721,550,0.632,551,1.597,552,1.624,553,1.585,554,1.775,555,1.038,556,0.735,557,0.721,558,0.608,559,0.721,560,0.721,561,1.331,562,0.735,563,0.735,564,1.099,565,0.735,566,0.735,567,0.721,568,0.735,569,1.585,570,0.735,571,1.72,572,0.735,573,0.735,574,0.735,575,0.735,576,0.735,577,1.331,578,0.735,579,0.735,580,0.735,581,0.735,582,0.735,583,0.721,584,0.735,585,0.735,586,0.735,587,0.735,588,0.735,589,0.735,590,0.735,591,0.735,592,0.735,593,0.735,594,0.735,595,0.721,596,0.735,597,1.304,598,0.735,599,0.735,600,0.735,601,0.735,602,0.735,603,1.099,604,0.735,605,0.721,606,0.735,607,0.735,608,0.735,609,0.735,610,0.735,611,0.721,612,0.721,613,0.735,614,0.735,615,0.735,616,0.721,617,0.721,618,0.735,619,0.735,620,0.721,621,0.735,622,0.735,623,0.735,624,0.735,625,0.721,626,0.735,627,0.721,628,0.735,629,0.735,630,0.721,631,0.735,632,0.735]],["title/interfaces/Payload-5.html",[247,0.127,459,0.664,1506,3.258]],["body/interfaces/Payload-5.html",[0,0.146,3,0.027,4,0.041,5,0.027,7,0.037,8,0.388,12,0.854,25,0.283,29,0.008,30,0.526,31,0.242,33,0.303,45,0.383,67,0.116,81,0.656,84,0.669,89,0.682,109,0.878,133,0.981,161,1.784,184,0.32,191,0.002,192,0.004,193,0.002,220,0.721,247,0.304,249,0.464,252,0.553,260,0.4,295,1.099,296,0.597,297,0.721,298,0.669,299,2.218,300,0.644,301,1.099,302,1.485,303,0.721,304,1.099,305,0.721,306,1.331,307,0.721,308,1.331,309,0.721,310,0.721,311,0.721,312,1.058,313,1.099,314,0.721,315,0.721,316,0.721,317,0.721,318,0.721,319,1.433,320,1.099,321,0.721,322,0.721,323,0.708,324,0.721,325,0.721,326,1.099,327,1.078,328,1.078,329,0.735,330,1.517,331,1.099,332,0.721,333,0.721,334,0.735,335,1.099,336,0.708,337,0.721,338,1.331,339,0.721,340,1.078,341,1.331,342,0.721,343,0.695,344,0.721,345,0.721,346,0.735,347,0.721,348,1.306,349,0.708,350,0.721,351,0.721,352,0.708,353,0.721,354,1.722,355,1.331,356,0.721,357,0.721,358,0.721,359,0.721,360,0.708,361,1.099,362,1,363,0.721,364,1.722,365,0.721,366,0.735,367,0.735,368,1.356,369,0.735,370,0.735,371,0.721,372,1.099,373,0.721,374,0.735,375,0.735,376,0.708,377,1.46,378,0.735,379,0.735,380,0.735,381,0.735,382,0.735,383,1.078,384,0.721,385,0.721,386,0.721,387,0.721,388,0.721,389,0.721,390,1.099,391,0.721,392,1.078,393,0.721,394,0.721,395,0.721,396,0.721,397,0.721,398,0.721,399,0.721,400,0.721,401,0.721,402,0.721,403,0.721,404,0.721,405,0.721,406,0.721,407,0.721,408,0.721,409,1.099,410,0.721,411,0.721,412,0.721,413,0.721,414,0.721,415,0.721,416,0.721,417,1.306,418,0.721,419,0.721,420,1.099,421,0.721,422,0.721,423,0.721,424,0.721,425,1.46,426,0.721,427,0.735,428,0.721,429,0.721,430,0.721,431,1.46,432,0.721,433,1.099,434,0.721,435,1.331,436,0.721,437,1.099,438,0.721,439,1.488,440,0.721,441,1.078,442,0.721,443,1.099,444,0.721,445,0.721,446,0.721,447,1.099,448,0.721,449,1.078,450,0.735,451,0.735,452,0.721,453,0.721,454,1.078,455,1.058,456,1.019,457,0.721,458,0.682,459,1.509,460,1.755,461,0.721,462,0.721,463,0.721,464,0.721,465,0.721,466,0.721,467,0.721,468,0.721,469,0.721,470,0.721,471,0.721,472,0.721,473,0.721,474,0.721,475,0.721,476,0.721,477,1.331,478,1.331,479,1.72,480,0.721,481,0.721,482,1.099,483,0.721,484,0.735,485,1.331,486,1.331,487,0.721,488,0.735,489,0.721,490,0.735,491,1.099,492,0.721,493,1.269,494,0.735,495,0.735,496,0.721,497,0.735,498,0.721,499,0.721,500,1.488,501,1.356,502,1.099,503,1.099,504,1.099,505,1.517,506,0.721,507,0.735,508,0.735,509,1.099,510,0.721,511,0.735,512,0.735,513,0.586,514,0.721,515,1.306,516,1.306,517,1.099,518,0.708,519,0.708,520,0.708,521,1.099,522,0.721,523,0.721,524,0.721,525,1.019,526,1.331,527,0.708,528,0.708,529,0.721,530,0.735,531,0.735,532,0.721,533,0.721,534,0.735,535,0.735,536,0.735,537,0.735,538,1.099,539,0.708,540,0.708,541,1.306,542,1.099,543,0.708,544,0.721,545,0.721,546,1.099,547,0.735,548,0.375,549,0.721,550,0.632,551,1.597,552,1.624,553,1.585,554,1.775,555,1.038,556,0.735,557,0.721,558,0.608,559,0.721,560,0.721,561,1.331,562,0.735,563,0.735,564,1.099,565,0.735,566,0.735,567,0.721,568,0.735,569,1.585,570,0.735,571,1.72,572,0.735,573,0.735,574,0.735,575,0.735,576,0.735,577,1.331,578,0.735,579,0.735,580,0.735,581,0.735,582,0.735,583,0.721,584,0.735,585,0.735,586,0.735,587,0.735,588,0.735,589,0.735,590,0.735,591,0.735,592,0.735,593,0.735,594,0.735,595,0.721,596,0.735,597,1.304,598,0.735,599,0.735,600,0.735,601,0.735,602,0.735,603,1.099,604,0.735,605,0.721,606,0.735,607,0.735,608,0.735,609,0.735,610,0.735,611,0.721,612,0.721,613,0.735,614,0.735,615,0.735,616,0.721,617,0.721,618,0.735,619,0.735,620,0.721,621,0.735,622,0.735,623,0.735,624,0.735,625,0.721,626,0.735,627,0.721,628,0.735,629,0.735,630,0.721,631,0.735,632,0.735]],["title/interfaces/Payload-6.html",[247,0.127,459,0.664,1528,3.258]],["body/interfaces/Payload-6.html",[0,0.146,3,0.027,4,0.041,5,0.027,7,0.037,8,0.388,12,0.854,25,0.283,29,0.008,30,0.526,31,0.242,33,0.303,45,0.383,67,0.116,81,0.656,84,1.38,89,0.682,109,0.878,133,0.981,161,1.784,184,0.32,191,0.002,192,0.004,193,0.002,220,0.721,247,0.304,249,0.464,252,0.553,260,0.4,295,1.099,296,0.597,297,0.721,298,0.669,299,2.218,300,0.644,301,1.099,302,1.485,303,0.721,304,1.099,305,0.721,306,1.331,307,0.721,308,1.331,309,0.721,310,0.721,311,0.721,312,1.058,313,1.099,314,0.721,315,0.721,316,0.721,317,0.721,318,0.721,319,1.433,320,1.099,321,0.721,322,0.721,323,0.708,324,0.721,325,0.721,326,1.099,327,1.078,328,1.572,329,0.735,330,1.517,331,1.099,332,0.721,333,0.721,334,0.735,335,1.099,336,0.708,337,0.721,338,1.331,339,0.721,340,1.078,341,1.331,342,0.721,343,0.695,344,0.721,345,0.721,346,0.735,347,0.721,348,1.306,349,0.708,350,0.721,351,0.721,352,0.708,353,0.721,354,1.722,355,1.331,356,0.721,357,0.721,358,0.721,359,0.721,360,0.708,361,1.099,362,1,363,0.721,364,1.46,365,0.721,366,0.735,367,0.735,368,1.356,369,0.735,370,0.735,371,0.721,372,1.099,373,0.721,374,0.735,375,0.735,376,0.708,377,1.46,378,0.735,379,0.735,380,0.735,381,0.735,382,0.735,383,1.078,384,0.721,385,0.721,386,0.721,387,0.721,388,0.721,389,0.721,390,1.099,391,0.721,392,1.078,393,0.721,394,0.721,395,0.721,396,0.721,397,0.721,398,0.721,399,0.721,400,0.721,401,0.721,402,0.721,403,0.721,404,0.721,405,0.721,406,0.721,407,0.721,408,0.721,409,1.099,410,0.721,411,0.721,412,0.721,413,0.721,414,0.721,415,0.721,416,0.721,417,1.306,418,0.721,419,0.721,420,1.099,421,0.721,422,0.721,423,0.721,424,0.721,425,1.46,426,0.721,427,0.735,428,0.721,429,0.721,430,0.721,431,1.46,432,0.721,433,1.099,434,0.721,435,1.331,436,0.721,437,1.099,438,0.721,439,1.488,440,0.721,441,1.078,442,0.721,443,1.099,444,0.721,445,0.721,446,0.721,447,1.099,448,0.721,449,1.078,450,0.735,451,0.735,452,0.721,453,0.721,454,1.078,455,1.058,456,1.019,457,0.721,458,0.682,459,1.509,460,1.755,461,0.721,462,0.721,463,0.721,464,0.721,465,0.721,466,0.721,467,0.721,468,0.721,469,0.721,470,0.721,471,0.721,472,0.721,473,0.721,474,0.721,475,0.721,476,0.721,477,1.331,478,1.331,479,1.72,480,0.721,481,0.721,482,1.099,483,0.721,484,0.735,485,1.331,486,1.331,487,0.721,488,0.735,489,0.721,490,0.735,491,1.099,492,0.721,493,1.001,494,0.735,495,0.735,496,0.721,497,0.735,498,0.721,499,0.721,500,1.099,501,0.735,502,1.099,503,1.099,504,1.099,505,1.517,506,0.721,507,1.356,508,1.356,509,1.099,510,0.721,511,0.735,512,0.735,513,0.586,514,0.721,515,1.306,516,1.306,517,1.099,518,0.708,519,0.708,520,0.708,521,1.099,522,0.721,523,0.721,524,0.721,525,1.019,526,1.331,527,0.708,528,0.708,529,0.721,530,0.735,531,0.735,532,0.721,533,0.721,534,0.735,535,0.735,536,0.735,537,0.735,538,1.099,539,0.708,540,0.708,541,1.306,542,1.099,543,0.708,544,0.721,545,0.721,546,1.099,547,0.735,548,0.375,549,0.721,550,0.632,551,1.597,552,1.624,553,1.585,554,1.775,555,1.038,556,0.735,557,0.721,558,0.608,559,0.721,560,0.721,561,1.331,562,0.735,563,0.735,564,1.099,565,0.735,566,0.735,567,0.721,568,0.735,569,1.585,570,0.735,571,1.72,572,0.735,573,0.735,574,0.735,575,0.735,576,0.735,577,1.331,578,0.735,579,0.735,580,0.735,581,0.735,582,0.735,583,0.721,584,0.735,585,0.735,586,0.735,587,0.735,588,0.735,589,0.735,590,0.735,591,0.735,592,0.735,593,0.735,594,0.735,595,0.721,596,0.735,597,1.304,598,0.735,599,0.735,600,0.735,601,0.735,602,0.735,603,1.099,604,0.735,605,0.721,606,0.735,607,0.735,608,0.735,609,0.735,610,0.735,611,0.721,612,0.721,613,0.735,614,0.735,615,0.735,616,0.721,617,0.721,618,0.735,619,0.735,620,0.721,621,0.735,622,0.735,623,0.735,624,0.735,625,0.721,626,0.735,627,0.721,628,0.735,629,0.735,630,0.721,631,0.735,632,0.735]],["title/interfaces/Payload-7.html",[247,0.127,459,0.664,1543,3.258]],["body/interfaces/Payload-7.html",[0,0.146,3,0.027,4,0.041,5,0.027,7,0.037,8,0.388,12,0.854,25,0.283,29,0.008,30,0.526,31,0.242,33,0.303,45,0.383,67,0.116,81,0.656,84,0.669,89,0.682,109,0.878,133,0.981,161,1.784,184,0.32,191,0.002,192,0.004,193,0.002,220,0.721,247,0.304,249,0.464,252,0.553,260,0.4,295,1.099,296,0.597,297,0.721,298,0.669,299,2.218,300,0.644,301,1.099,302,1.485,303,0.721,304,1.099,305,0.721,306,1.331,307,0.721,308,1.331,309,0.721,310,0.721,311,0.721,312,1.058,313,1.099,314,0.721,315,0.721,316,0.721,317,0.721,318,0.721,319,1.69,320,1.099,321,0.721,322,0.721,323,0.708,324,0.721,325,0.721,326,1.099,327,1.078,328,1.078,329,0.735,330,1.517,331,1.099,332,0.721,333,0.721,334,0.735,335,1.099,336,0.708,337,0.721,338,1.331,339,0.721,340,1.572,341,1.331,342,0.721,343,0.695,344,0.721,345,0.721,346,0.735,347,0.721,348,1.306,349,0.708,350,0.721,351,0.721,352,0.708,353,0.721,354,1.722,355,1.331,356,0.721,357,0.721,358,0.721,359,0.721,360,0.708,361,1.099,362,1,363,0.721,364,1.46,365,0.721,366,0.735,367,0.735,368,1.356,369,0.735,370,0.735,371,0.721,372,1.099,373,0.721,374,0.735,375,0.735,376,0.708,377,1.46,378,0.735,379,0.735,380,0.735,381,0.735,382,0.735,383,1.078,384,0.721,385,0.721,386,0.721,387,0.721,388,0.721,389,0.721,390,1.099,391,0.721,392,1.078,393,0.721,394,0.721,395,0.721,396,0.721,397,0.721,398,0.721,399,0.721,400,0.721,401,0.721,402,0.721,403,0.721,404,0.721,405,0.721,406,0.721,407,0.721,408,0.721,409,1.099,410,0.721,411,0.721,412,0.721,413,0.721,414,0.721,415,0.721,416,0.721,417,1.306,418,0.721,419,0.721,420,1.099,421,0.721,422,0.721,423,0.721,424,0.721,425,1.46,426,0.721,427,0.735,428,0.721,429,0.721,430,0.721,431,1.46,432,0.721,433,1.099,434,0.721,435,1.331,436,0.721,437,1.099,438,0.721,439,1.488,440,0.721,441,1.078,442,0.721,443,1.099,444,0.721,445,0.721,446,0.721,447,1.099,448,0.721,449,1.078,450,0.735,451,0.735,452,0.721,453,0.721,454,1.078,455,1.058,456,1.019,457,0.721,458,0.682,459,1.509,460,1.755,461,0.721,462,0.721,463,0.721,464,0.721,465,0.721,466,0.721,467,0.721,468,0.721,469,0.721,470,0.721,471,0.721,472,0.721,473,0.721,474,0.721,475,0.721,476,0.721,477,1.331,478,1.331,479,1.72,480,0.721,481,0.721,482,1.099,483,0.721,484,0.735,485,1.331,486,1.331,487,0.721,488,0.735,489,0.721,490,0.735,491,1.099,492,0.721,493,1.001,494,0.735,495,0.735,496,0.721,497,0.735,498,0.721,499,0.721,500,1.099,501,0.735,502,1.099,503,1.099,504,1.099,505,1.517,506,0.721,507,0.735,508,0.735,509,1.099,510,0.721,511,1.356,512,1.356,513,0.586,514,0.721,515,1.306,516,1.306,517,1.099,518,0.708,519,0.708,520,0.708,521,1.099,522,0.721,523,0.721,524,0.721,525,1.019,526,1.331,527,0.708,528,0.708,529,0.721,530,0.735,531,0.735,532,0.721,533,0.721,534,0.735,535,0.735,536,0.735,537,0.735,538,1.099,539,0.708,540,0.708,541,1.306,542,1.099,543,0.708,544,0.721,545,0.721,546,1.099,547,0.735,548,0.375,549,0.721,550,0.632,551,1.597,552,1.624,553,1.585,554,1.775,555,1.038,556,0.735,557,0.721,558,0.608,559,0.721,560,0.721,561,1.331,562,0.735,563,0.735,564,1.099,565,0.735,566,0.735,567,0.721,568,0.735,569,1.585,570,0.735,571,1.72,572,0.735,573,0.735,574,0.735,575,0.735,576,0.735,577,1.331,578,0.735,579,0.735,580,0.735,581,0.735,582,0.735,583,0.721,584,0.735,585,0.735,586,0.735,587,0.735,588,0.735,589,0.735,590,0.735,591,0.735,592,0.735,593,0.735,594,0.735,595,0.721,596,0.735,597,1.304,598,0.735,599,0.735,600,0.735,601,0.735,602,0.735,603,1.099,604,0.735,605,0.721,606,0.735,607,0.735,608,0.735,609,0.735,610,0.735,611,0.721,612,0.721,613,0.735,614,0.735,615,0.735,616,0.721,617,0.721,618,0.735,619,0.735,620,0.721,621,0.735,622,0.735,623,0.735,624,0.735,625,0.721,626,0.735,627,0.721,628,0.735,629,0.735,630,0.721,631,0.735,632,0.735]],["title/interfaces/PayloadBuilder.html",[247,0.151,551,0.791]],["body/interfaces/PayloadBuilder.html",[0,0.146,3,0.027,4,0.041,5,0.027,7,0.037,12,0.853,14,0.69,25,0.282,26,0.609,29,0.008,30,0.526,31,0.241,33,0.303,41,0.69,45,0.383,67,0.116,81,0.655,84,0.668,89,0.68,109,0.877,133,0.98,161,1.783,184,0.319,191,0.002,192,0.004,193,0.002,220,0.72,247,0.304,249,0.463,252,0.552,260,0.4,295,1.097,296,1.1,297,0.72,298,0.668,299,2.217,300,0.643,301,1.097,302,1.484,303,0.72,304,1.097,305,0.72,306,1.329,307,0.72,308,1.329,309,0.72,310,0.72,311,0.72,312,1.057,313,1.097,314,0.72,315,0.72,316,0.72,317,0.72,318,0.72,319,1.432,320,1.097,321,0.72,322,0.72,323,0.707,324,0.72,325,0.72,326,1.097,327,1.077,328,1.077,329,0.734,330,1.515,331,1.097,332,0.72,333,0.72,334,0.734,335,1.097,336,0.707,337,0.72,338,1.329,339,0.72,340,1.077,341,1.329,342,0.72,343,0.693,344,0.72,345,0.72,346,0.734,347,0.72,348,1.305,349,0.707,350,0.72,351,0.72,352,0.707,353,0.72,354,1.721,355,1.329,356,0.72,357,0.72,358,0.72,359,0.72,360,0.707,361,1.097,362,0.998,363,0.72,364,1.459,365,0.72,366,0.734,367,0.734,368,1.355,369,0.734,370,0.734,371,0.72,372,1.097,373,0.72,374,0.734,375,0.734,376,0.707,377,1.459,378,0.734,379,0.734,380,0.734,381,0.734,382,0.734,383,1.077,384,0.72,385,0.72,386,0.72,387,0.72,388,0.72,389,0.72,390,1.097,391,0.72,392,1.077,393,0.72,394,0.72,395,0.72,396,0.72,397,0.72,398,0.72,399,0.72,400,0.72,401,0.72,402,0.72,403,0.72,404,0.72,405,0.72,406,0.72,407,0.72,408,0.72,409,1.097,410,0.72,411,0.72,412,0.72,413,0.72,414,0.72,415,0.72,416,0.72,417,1.305,418,0.72,419,0.72,420,1.097,421,0.72,422,0.72,423,0.72,424,0.72,425,1.459,426,0.72,427,0.734,428,0.72,429,0.72,430,0.72,431,1.459,432,0.72,433,1.097,434,0.72,435,1.329,436,0.72,437,1.097,438,0.72,439,1.487,440,0.72,441,1.077,442,0.72,443,1.097,444,0.72,445,0.72,446,0.72,447,1.097,448,0.72,449,1.077,450,0.734,451,0.734,452,0.72,453,0.72,454,1.077,455,1.057,456,1.017,457,0.72,458,0.68,459,1.502,460,1.754,461,0.72,462,0.72,463,0.72,464,0.72,465,0.72,466,0.72,467,0.72,468,0.72,469,0.72,470,0.72,471,0.72,472,0.72,473,0.72,474,0.72,475,0.72,476,0.72,477,1.329,478,1.329,479,1.719,480,0.72,481,0.72,482,1.097,483,0.72,484,0.734,485,1.329,486,1.329,487,0.72,488,0.734,489,0.72,490,0.734,491,1.097,492,0.72,493,1,494,0.734,495,0.734,496,0.72,497,0.734,498,0.72,499,0.72,500,1.097,501,0.734,502,1.097,503,1.097,504,1.097,505,1.515,506,0.72,507,0.734,508,0.734,509,1.097,510,0.72,511,0.734,512,0.734,513,0.585,514,0.72,515,1.305,516,1.305,517,1.097,518,0.707,519,0.707,520,0.707,521,1.097,522,0.72,523,0.72,524,0.72,525,1.017,526,1.329,527,0.707,528,0.707,529,0.72,530,0.734,531,0.734,532,0.72,533,0.72,534,0.734,535,0.734,536,0.734,537,0.734,538,1.097,539,0.707,540,0.707,541,1.305,542,1.097,543,0.707,544,0.72,545,0.72,546,1.329,547,0.734,548,0.374,549,0.72,550,0.631,551,1.598,552,1.707,553,1.683,554,1.817,555,1.037,556,0.734,557,0.72,558,0.607,559,0.72,560,0.72,561,1.329,562,0.734,563,0.734,564,1.097,565,0.734,566,0.734,567,0.72,568,0.734,569,1.584,570,0.734,571,1.719,572,0.734,573,0.734,574,0.734,575,0.734,576,0.734,577,1.329,578,0.734,579,0.734,580,0.734,581,0.734,582,0.734,583,0.72,584,0.734,585,0.734,586,0.734,587,0.734,588,0.734,589,0.734,590,0.734,591,0.734,592,0.734,593,0.734,594,0.734,595,0.72,596,0.734,597,1.303,598,0.734,599,0.734,600,0.734,601,0.734,602,0.734,603,1.097,604,0.734,605,0.72,606,0.734,607,0.734,608,0.734,609,0.734,610,0.734,611,0.72,612,0.72,613,0.734,614,0.734,615,0.734,616,0.72,617,0.72,618,0.734,619,0.734,620,0.72,621,0.734,622,0.734,623,0.734,624,0.734,625,0.72,626,0.734,627,0.72,628,0.734,629,0.734,630,0.72,631,0.734,632,0.734,1554,3.136,1555,3.136]],["title/interfaces/PayloadBuilder-1.html",[194,2.142,247,0.127,551,0.664]],["body/interfaces/PayloadBuilder-1.html",[0,0.141,3,0.026,4,0.04,5,0.026,7,0.036,12,0.835,14,0.672,25,0.273,26,0.962,28,1.256,29,0.008,30,0.544,31,0.241,32,0.811,33,0.302,41,1.09,45,0.37,67,0.116,81,0.633,84,0.645,89,0.657,109,0.865,133,0.954,161,1.766,184,0.308,191,0.002,192,0.004,193,0.002,220,0.696,247,0.304,249,0.451,252,0.533,260,0.386,295,1.069,296,1.48,297,0.696,298,0.645,299,2.211,300,0.621,301,1.069,302,1.461,303,0.696,304,1.069,305,0.696,306,1.302,307,0.696,308,1.302,309,0.696,310,0.696,311,0.696,312,1.029,313,1.069,314,0.696,315,0.696,316,0.696,317,0.696,318,0.696,319,1.406,320,1.069,321,0.696,322,0.696,323,0.683,324,0.696,325,0.696,326,1.069,327,1.049,328,1.049,329,0.709,330,1.488,331,1.069,332,0.696,333,0.696,334,0.709,335,1.069,336,0.683,337,0.696,338,1.302,339,0.696,340,1.049,341,1.302,342,0.696,343,0.67,344,0.696,345,0.696,346,0.709,347,0.696,348,1.277,349,0.683,350,0.696,351,0.696,352,0.683,353,0.696,354,1.7,355,1.302,356,0.696,357,0.696,358,0.696,359,0.696,360,0.683,361,1.069,362,0.973,363,0.696,364,1.433,365,0.696,366,0.709,367,0.709,368,1.326,369,0.709,370,0.709,371,0.696,372,1.069,373,0.696,374,0.709,375,0.709,376,0.683,377,1.433,378,0.709,379,0.709,380,0.709,381,0.709,382,0.709,383,1.049,384,0.696,385,0.696,386,0.696,387,0.696,388,0.696,389,0.696,390,1.069,391,0.696,392,1.277,393,0.696,394,0.696,395,0.696,396,0.696,397,0.696,398,0.696,399,0.696,400,0.696,401,0.696,402,0.696,403,0.696,404,0.696,405,0.696,406,0.696,407,0.696,408,0.696,409,1.069,410,0.696,411,0.696,412,0.696,413,0.696,414,0.696,415,0.696,416,0.696,417,1.277,418,1.069,419,1.069,420,1.069,421,0.696,422,0.696,423,0.696,424,0.696,425,1.433,426,0.696,427,0.709,428,0.696,429,0.696,430,0.696,431,1.433,432,0.696,433,1.069,434,0.696,435,1.302,436,0.696,437,1.069,438,0.696,439,1.461,440,0.696,441,1.049,442,0.696,443,1.069,444,0.696,445,0.696,446,0.696,447,1.069,448,0.696,449,1.049,450,0.709,451,0.709,452,0.696,453,0.696,454,1.049,455,1.029,456,0.991,457,0.696,458,0.657,459,1.494,460,1.744,461,0.696,462,0.696,463,0.696,464,0.696,465,0.696,466,0.696,467,0.696,468,0.696,469,0.696,470,0.696,471,0.696,472,0.696,473,0.696,474,0.696,475,0.696,476,0.696,477,1.302,478,1.302,479,1.695,480,0.696,481,1.069,482,1.461,483,0.696,484,0.709,485,1.302,486,1.302,487,0.696,488,0.709,489,0.696,490,0.709,491,1.069,492,0.696,493,0.979,494,0.709,495,0.709,496,0.696,497,0.709,498,0.696,499,0.696,500,1.069,501,0.709,502,1.069,503,1.069,504,1.069,505,1.488,506,0.696,507,0.709,508,0.709,509,1.069,510,0.696,511,0.709,512,0.709,513,0.565,514,0.696,515,1.277,516,1.277,517,1.069,518,0.683,519,0.683,520,0.683,521,1.069,522,0.696,523,0.696,524,0.696,525,0.991,526,1.302,527,0.683,528,0.683,529,0.696,530,0.709,531,0.709,532,0.696,533,0.696,534,0.709,535,0.709,536,0.709,537,0.709,538,1.069,539,0.683,540,0.683,541,1.277,542,1.069,543,0.683,544,0.696,545,0.696,546,1.069,547,0.709,548,0.362,549,0.696,550,0.61,551,1.6,552,1.693,553,1.669,554,1.8,555,1.01,556,0.709,557,0.696,558,0.587,559,0.696,560,0.696,561,1.302,562,1.089,563,1.089,564,1.664,565,1.089,566,1.089,567,1.302,568,1.089,569,1.669,570,1.089,571,1.695,572,0.709,573,0.709,574,0.709,575,0.709,576,0.709,577,1.302,578,0.709,579,0.709,580,0.709,581,0.709,582,0.709,583,0.696,584,0.709,585,0.709,586,0.709,587,0.709,588,0.709,589,0.709,590,0.709,591,0.709,592,0.709,593,0.709,594,0.709,595,0.696,596,0.709,597,1.28,598,0.709,599,0.709,600,0.709,601,0.709,602,0.709,603,1.069,604,0.709,605,0.696,606,0.709,607,0.709,608,0.709,609,0.709,610,0.709,611,0.696,612,0.696,613,0.709,614,0.709,615,0.709,616,0.696,617,0.696,618,0.709,619,0.709,620,0.696,621,0.709,622,0.709,623,0.709,624,0.709,625,0.696,626,0.709,627,0.696,628,0.709,629,0.709,630,0.696,631,0.709,632,0.709,1533,4.135,1535,4.135,1537,4.135,1540,4.135,1556,3.031,1557,3.031,1558,3.031,1559,3.031,1560,3.031,1561,3.031,1562,3.031]],["title/interfaces/PayloadBuilder-2.html",[247,0.127,551,0.664,1451,3.258]],["body/interfaces/PayloadBuilder-2.html",[0,0.143,3,0.026,4,0.049,5,0.026,7,0.036,12,0.843,14,0.68,25,0.277,26,0.88,28,0.929,29,0.008,30,0.536,31,0.241,32,0.6,33,0.303,40,1.42,41,0.998,45,0.375,67,0.116,81,0.642,84,0.655,89,0.667,109,0.87,133,0.965,161,1.773,184,0.313,191,0.002,192,0.004,193,0.002,220,0.706,247,0.304,249,0.457,252,0.541,260,0.392,295,1.081,296,1.385,297,0.706,298,0.655,299,2.214,300,0.63,301,1.081,302,1.471,303,0.706,304,1.081,305,0.706,306,1.313,307,0.706,308,1.313,309,0.706,310,0.706,311,0.706,312,1.041,313,1.081,314,0.706,315,0.706,316,0.706,317,0.706,318,0.706,319,1.417,320,1.081,321,0.706,322,0.706,323,0.693,324,0.706,325,0.706,326,1.081,327,1.061,328,1.061,329,0.719,330,1.5,331,1.081,332,0.706,333,0.706,334,0.719,335,1.081,336,0.693,337,0.706,338,1.313,339,0.706,340,1.061,341,1.313,342,0.706,343,0.68,344,0.706,345,0.706,346,0.719,347,0.706,348,1.289,349,0.693,350,0.706,351,0.706,352,0.693,353,0.706,354,1.709,355,1.313,356,0.706,357,0.706,358,0.706,359,0.706,360,0.693,361,1.081,362,0.983,363,0.706,364,1.444,365,0.706,366,0.719,367,0.719,368,1.338,369,0.719,370,0.719,371,0.706,372,1.081,373,0.706,374,0.719,375,0.719,376,0.693,377,1.444,378,0.719,379,0.719,380,0.719,381,0.719,382,0.719,383,1.061,384,0.706,385,0.706,386,0.706,387,0.706,388,0.706,389,0.706,390,1.081,391,0.706,392,1.061,393,0.706,394,0.706,395,0.706,396,0.706,397,0.706,398,0.706,399,0.706,400,0.706,401,0.706,402,0.706,403,0.706,404,0.706,405,0.706,406,0.706,407,0.706,408,0.706,409,1.081,410,0.706,411,0.706,412,0.706,413,0.706,414,0.706,415,0.706,416,0.706,417,1.289,418,0.706,419,0.706,420,1.081,421,0.706,422,0.706,423,0.706,424,0.706,425,1.444,426,0.706,427,0.719,428,0.706,429,0.706,430,0.706,431,1.444,432,0.706,433,1.081,434,0.706,435,1.313,436,0.706,437,1.081,438,0.706,439,1.472,440,0.706,441,1.061,442,0.706,443,1.081,444,0.706,445,0.706,446,0.706,447,1.081,448,0.706,449,1.061,450,0.719,451,0.719,452,0.706,453,0.706,454,1.061,455,1.041,456,1.002,457,0.706,458,0.667,459,1.497,460,1.749,461,0.706,462,0.706,463,0.706,464,0.706,465,0.706,466,0.706,467,0.706,468,0.706,469,0.706,470,0.706,471,0.706,472,0.706,473,0.706,474,0.706,475,0.706,476,0.706,477,1.313,478,1.313,479,1.705,480,0.706,481,0.706,482,1.081,483,0.706,484,0.719,485,1.313,486,1.313,487,0.706,488,0.719,489,0.706,490,0.719,491,1.081,492,0.706,493,0.987,494,0.719,495,0.719,496,0.706,497,0.719,498,0.706,499,0.706,500,1.081,501,0.719,502,1.081,503,1.081,504,1.081,505,1.5,506,0.706,507,0.719,508,0.719,509,1.081,510,0.706,511,0.719,512,0.719,513,0.573,514,0.706,515,1.289,516,1.289,517,1.081,518,0.693,519,0.693,520,0.693,521,1.081,522,0.706,523,0.706,524,0.706,525,1.002,526,1.313,527,0.693,528,0.693,529,0.706,530,0.719,531,0.719,532,0.706,533,0.706,534,0.719,535,0.719,536,0.719,537,0.719,538,1.081,539,0.693,540,0.693,541,1.289,542,1.081,543,0.693,544,0.706,545,0.706,546,1.081,547,0.719,548,0.367,549,0.706,550,0.618,551,1.599,552,1.699,553,1.675,554,1.807,555,1.021,556,0.719,557,0.706,558,0.595,559,0.706,560,0.706,561,1.313,562,0.719,563,0.719,564,1.081,565,0.719,566,0.719,567,0.706,568,0.719,569,1.675,570,0.719,571,1.705,572,1.101,573,1.101,574,1.338,575,1.101,576,1.101,577,1.313,578,0.719,579,0.719,580,0.719,581,0.719,582,0.719,583,0.706,584,0.719,585,0.719,586,0.719,587,0.719,588,0.719,589,0.719,590,0.719,591,0.719,592,0.719,593,0.719,594,0.719,595,0.706,596,0.719,597,1.289,598,0.719,599,0.719,600,0.719,601,0.719,602,0.719,603,1.081,604,0.719,605,0.706,606,0.719,607,0.719,608,0.719,609,0.719,610,0.719,611,0.706,612,0.706,613,0.719,614,0.719,615,0.719,616,0.706,617,0.706,618,0.719,619,0.719,620,0.706,621,0.719,622,0.719,623,0.719,624,0.719,625,0.706,626,0.719,627,0.706,628,0.719,629,0.719,630,0.706,631,0.719,632,0.719,1549,4.181,1551,4.181,1563,3.075,1564,3.075,1565,3.075,1566,3.075,1567,3.075]],["title/interfaces/PayloadBuilder-3.html",[247,0.127,551,0.664,1466,3.258]],["body/interfaces/PayloadBuilder-3.html",[0,0.14,3,0.026,4,0.04,5,0.026,7,0.035,12,0.833,14,0.67,25,0.271,26,0.96,28,1.252,29,0.008,30,0.548,31,0.241,32,0.808,33,0.305,41,1.088,45,0.368,67,0.116,81,0.63,84,0.642,89,0.654,109,0.863,133,0.951,161,1.921,184,0.307,191,0.002,192,0.004,193,0.002,220,0.692,247,0.303,249,0.45,252,0.53,260,0.384,295,1.065,296,1.477,297,0.692,298,0.642,299,2.21,300,0.618,301,1.065,302,1.458,303,0.692,304,1.065,305,0.692,306,1.297,307,0.692,308,1.297,309,0.692,310,0.692,311,0.692,312,1.025,313,1.065,314,0.692,315,0.692,316,0.692,317,0.692,318,0.692,319,1.403,320,1.065,321,0.692,322,0.692,323,0.679,324,0.692,325,0.692,326,1.065,327,1.045,328,1.045,329,0.705,330,1.484,331,1.065,332,0.692,333,0.692,334,0.705,335,1.065,336,0.679,337,0.692,338,1.297,339,0.692,340,1.045,341,1.297,342,0.692,343,0.666,344,0.692,345,0.692,346,0.705,347,0.692,348,1.273,349,0.679,350,0.692,351,0.692,352,0.679,353,0.692,354,1.697,355,1.297,356,0.692,357,0.692,358,0.692,359,0.692,360,0.679,361,1.065,362,0.969,363,0.692,364,1.429,365,0.692,366,0.705,367,0.705,368,1.322,369,0.705,370,0.705,371,0.692,372,1.065,373,0.692,374,0.705,375,0.705,376,0.679,377,1.429,378,0.705,379,0.705,380,0.705,381,0.705,382,0.705,383,1.045,384,0.692,385,0.692,386,0.692,387,0.692,388,0.692,389,0.692,390,1.065,391,0.692,392,1.045,393,0.692,394,0.692,395,0.692,396,0.692,397,0.692,398,0.692,399,0.692,400,0.692,401,0.692,402,0.692,403,0.692,404,0.692,405,0.692,406,0.692,407,0.692,408,0.692,409,1.065,410,0.692,411,0.692,412,0.692,413,0.692,414,0.692,415,0.692,416,0.692,417,1.273,418,0.692,419,0.692,420,1.065,421,0.692,422,0.692,423,0.692,424,0.692,425,1.429,426,0.692,427,0.705,428,0.692,429,0.692,430,1.457,431,1.429,432,0.692,433,1.065,434,0.692,435,1.297,436,0.692,437,1.065,438,0.692,439,1.869,440,0.692,441,1.045,442,0.692,443,1.065,444,0.692,445,0.692,446,0.692,447,1.065,448,0.692,449,1.045,450,0.705,451,0.705,452,0.692,453,0.692,454,1.045,455,1.025,456,0.987,457,0.692,458,0.654,459,1.493,460,1.743,461,0.692,462,0.692,463,0.692,464,0.692,465,0.692,466,0.692,467,0.692,468,0.692,469,0.692,470,0.692,471,0.692,472,0.692,473,0.692,474,0.692,475,0.692,476,0.692,477,1.297,478,1.297,479,1.692,480,0.692,481,0.692,482,1.065,483,0.692,484,0.705,485,1.297,486,1.297,487,0.692,488,0.705,489,0.692,490,0.705,491,1.065,492,0.692,493,0.975,494,0.705,495,0.705,496,0.692,497,0.705,498,0.692,499,0.692,500,1.065,501,0.705,502,1.065,503,1.065,504,1.065,505,1.484,506,0.692,507,0.705,508,0.705,509,1.065,510,0.692,511,0.705,512,0.705,513,0.562,514,0.692,515,1.273,516,1.273,517,1.065,518,0.679,519,0.679,520,0.679,521,1.065,522,0.692,523,0.692,524,0.692,525,0.987,526,1.297,527,0.679,528,0.679,529,0.692,530,0.705,531,0.705,532,0.692,533,0.692,534,0.705,535,0.705,536,0.705,537,0.705,538,1.065,539,0.679,540,0.679,541,1.273,542,1.065,543,0.679,544,0.692,545,0.692,546,1.065,547,0.705,548,0.36,549,0.692,550,0.606,551,1.599,552,1.691,553,1.667,554,1.797,555,1.006,556,0.705,557,0.692,558,0.584,559,0.692,560,0.692,561,1.297,562,0.705,563,0.705,564,1.065,565,0.705,566,0.705,567,0.692,568,0.705,569,1.667,570,0.705,571,1.692,572,0.705,573,0.705,574,0.705,575,0.705,576,0.705,577,1.297,578,1.085,579,1.085,580,1.085,581,1.085,582,1.085,583,1.065,584,0.705,585,0.705,586,0.705,587,0.705,588,0.705,589,0.705,590,0.705,591,0.705,592,0.705,593,0.705,594,0.705,595,0.692,596,0.705,597,1.276,598,0.705,599,0.705,600,0.705,601,0.705,602,0.705,603,1.065,604,0.705,605,0.692,606,0.705,607,0.705,608,0.705,609,0.705,610,0.705,611,0.692,612,0.692,613,0.705,614,0.705,615,0.705,616,0.692,617,0.692,618,0.705,619,0.705,620,0.692,621,0.705,622,0.705,623,0.705,624,0.705,625,0.692,626,0.705,627,0.692,628,0.705,629,0.705,630,0.692,631,0.705,632,0.705,1514,4.118,1517,4.118,1519,4.118,1522,4.118,1568,3.015,1569,3.015,1570,3.015,1571,3.015,1572,3.015,1573,3.015,1574,3.015]],["title/interfaces/PayloadBuilder-4.html",[247,0.127,551,0.664,1486,3.258]],["body/interfaces/PayloadBuilder-4.html",[0,0.14,3,0.026,4,0.039,5,0.026,7,0.035,12,0.831,14,0.668,25,0.271,26,0.99,28,1.35,29,0.008,30,0.551,31,0.241,32,0.872,33,0.302,40,1.388,41,1.122,45,0.367,67,0.116,81,0.628,84,0.64,89,0.652,109,0.863,133,0.949,161,1.83,184,0.306,191,0.002,192,0.004,193,0.002,220,0.69,247,0.303,249,0.449,252,0.529,260,0.383,295,1.062,296,1.514,297,0.69,298,0.64,299,2.21,300,0.616,301,1.062,302,1.456,303,0.69,304,1.062,305,0.69,306,1.295,307,0.69,308,1.295,309,0.69,310,0.69,311,0.69,312,1.023,313,1.062,314,0.69,315,0.69,316,0.69,317,0.69,318,0.69,319,1.401,320,1.062,321,0.69,322,0.69,323,0.677,324,0.69,325,0.69,326,1.062,327,1.043,328,1.043,329,0.703,330,1.482,331,1.062,332,0.69,333,0.69,334,0.703,335,1.062,336,0.677,337,0.69,338,1.295,339,0.69,340,1.043,341,1.295,342,0.69,343,0.665,344,0.69,345,0.69,346,0.703,347,0.69,348,1.271,349,0.677,350,0.69,351,0.69,352,0.677,353,0.69,354,1.695,355,1.295,356,0.69,357,0.69,358,0.69,359,0.69,360,0.677,361,1.062,362,0.967,363,0.69,364,1.427,365,0.69,366,0.703,367,0.703,368,1.32,369,0.703,370,0.703,371,0.69,372,1.062,373,0.69,374,0.703,375,0.703,376,0.677,377,1.427,378,0.703,379,0.703,380,0.703,381,0.703,382,0.703,383,1.043,384,0.69,385,0.69,386,0.69,387,0.69,388,0.69,389,0.69,390,1.062,391,0.69,392,1.043,393,0.69,394,0.69,395,0.69,396,0.69,397,0.69,398,0.69,399,0.69,400,0.69,401,0.69,402,0.69,403,0.69,404,0.69,405,0.69,406,0.69,407,0.69,408,0.69,409,1.062,410,0.69,411,0.69,412,0.69,413,0.69,414,0.69,415,0.69,416,0.69,417,1.271,418,0.69,419,0.69,420,1.062,421,0.69,422,0.69,423,0.69,424,0.69,425,1.427,426,0.69,427,0.703,428,0.69,429,0.69,430,0.69,431,1.427,432,0.69,433,1.062,434,0.69,435,1.295,436,0.69,437,1.062,438,0.69,439,1.455,440,0.69,441,1.271,442,1.062,443,1.062,444,0.69,445,0.69,446,0.69,447,1.062,448,0.69,449,1.043,450,0.703,451,0.703,452,1.062,453,1.062,454,1.043,455,1.023,456,0.985,457,0.69,458,0.652,459,1.492,460,1.742,461,0.69,462,0.69,463,0.69,464,0.69,465,0.69,466,0.69,467,0.69,468,0.69,469,0.69,470,0.69,471,0.69,472,0.69,473,0.69,474,0.69,475,0.69,476,0.69,477,1.295,478,1.295,479,1.69,480,0.69,481,0.69,482,1.062,483,0.69,484,0.703,485,1.295,486,1.295,487,0.69,488,0.703,489,0.69,490,0.703,491,1.062,492,0.69,493,0.974,494,0.703,495,0.703,496,0.69,497,0.703,498,0.69,499,0.69,500,1.062,501,0.703,502,1.062,503,1.062,504,1.062,505,1.482,506,0.69,507,0.703,508,0.703,509,1.062,510,0.69,511,0.703,512,0.703,513,0.56,514,0.69,515,1.271,516,1.271,517,1.062,518,0.677,519,0.677,520,0.677,521,1.062,522,0.69,523,0.69,524,0.69,525,0.985,526,1.295,527,0.677,528,0.677,529,0.69,530,0.703,531,0.703,532,0.69,533,0.69,534,0.703,535,0.703,536,0.703,537,0.703,538,1.062,539,0.677,540,0.677,541,1.271,542,1.062,543,0.677,544,0.69,545,0.69,546,1.062,547,0.703,548,0.359,549,0.69,550,0.605,551,1.6,552,1.69,553,1.665,554,1.795,555,1.004,556,0.703,557,0.69,558,0.582,559,0.69,560,0.69,561,1.295,562,0.703,563,0.703,564,1.062,565,0.703,566,0.703,567,0.69,568,0.703,569,1.665,570,0.703,571,1.69,572,0.703,573,0.703,574,0.703,575,0.703,576,0.703,577,1.295,578,0.703,579,0.703,580,0.703,581,0.703,582,0.703,583,0.69,584,1.083,585,1.083,586,1.083,587,1.32,588,1.083,589,1.32,590,1.083,591,1.32,592,1.083,593,1.083,594,0.703,595,0.69,596,0.703,597,1.274,598,0.703,599,0.703,600,0.703,601,0.703,602,0.703,603,1.062,604,0.703,605,0.69,606,0.703,607,0.703,608,0.703,609,0.703,610,0.703,611,0.69,612,0.69,613,0.703,614,0.703,615,0.703,616,0.69,617,0.69,618,0.703,619,0.703,620,0.69,621,0.703,622,0.703,623,0.703,624,0.703,625,0.69,626,0.703,627,0.69,628,0.703,629,0.703,630,0.69,631,0.703,632,0.703,1474,4.11,1476,4.11,1478,4.11,1480,4.11,1482,4.11,1575,3.007,1576,3.007,1577,3.007,1578,3.007,1579,3.007,1580,3.007,1581,3.007,1582,3.007]],["title/interfaces/PayloadBuilder-5.html",[247,0.127,551,0.664,1506,3.258]],["body/interfaces/PayloadBuilder-5.html",[0,0.141,3,0.026,4,0.04,5,0.026,7,0.036,12,0.835,14,0.672,25,0.273,26,0.962,28,1.256,29,0.008,30,0.548,31,0.241,32,0.811,33,0.303,41,1.09,45,0.37,67,0.116,81,0.633,84,0.645,89,0.657,109,0.865,133,1.162,161,1.766,184,0.308,191,0.002,192,0.004,193,0.002,220,0.696,247,0.304,249,0.451,252,0.533,260,0.386,295,1.069,296,1.48,297,0.696,298,0.645,299,2.211,300,0.621,301,1.069,302,1.461,303,0.696,304,1.069,305,0.696,306,1.302,307,0.696,308,1.302,309,0.696,310,0.696,311,0.696,312,1.029,313,1.069,314,0.696,315,0.696,316,0.696,317,0.696,318,0.696,319,1.406,320,1.069,321,0.696,322,0.696,323,0.683,324,0.696,325,0.696,326,1.069,327,1.049,328,1.049,329,0.709,330,1.488,331,1.069,332,0.696,333,0.696,334,0.709,335,1.069,336,0.683,337,0.696,338,1.302,339,0.696,340,1.049,341,1.302,342,0.696,343,0.67,344,0.696,345,0.696,346,0.709,347,0.696,348,1.277,349,0.683,350,0.696,351,0.696,352,0.683,353,0.696,354,1.7,355,1.302,356,0.696,357,0.696,358,0.696,359,0.696,360,0.683,361,1.069,362,0.973,363,0.696,364,1.433,365,0.696,366,0.709,367,0.709,368,1.326,369,0.709,370,0.709,371,0.696,372,1.069,373,0.696,374,0.709,375,0.709,376,0.683,377,1.433,378,0.709,379,0.709,380,0.709,381,0.709,382,0.709,383,1.049,384,0.696,385,0.696,386,0.696,387,0.696,388,0.696,389,0.696,390,1.069,391,0.696,392,1.049,393,0.696,394,0.696,395,0.696,396,0.696,397,0.696,398,0.696,399,0.696,400,0.696,401,0.696,402,0.696,403,0.696,404,0.696,405,0.696,406,0.696,407,0.696,408,0.696,409,1.069,410,0.696,411,0.696,412,0.696,413,0.696,414,0.696,415,0.696,416,0.696,417,1.277,418,0.696,419,0.696,420,1.069,421,0.696,422,0.696,423,0.696,424,0.696,425,1.433,426,0.696,427,0.709,428,0.696,429,0.696,430,0.696,431,1.433,432,0.696,433,1.069,434,0.696,435,1.302,436,0.696,437,1.069,438,0.696,439,1.461,440,0.696,441,1.049,442,0.696,443,1.069,444,0.696,445,0.696,446,0.696,447,1.069,448,0.696,449,1.049,450,0.709,451,0.709,452,0.696,453,0.696,454,1.049,455,1.029,456,0.991,457,0.696,458,0.657,459,1.494,460,1.744,461,0.696,462,0.696,463,0.696,464,0.696,465,0.696,466,0.696,467,0.696,468,0.696,469,0.696,470,0.696,471,0.696,472,0.696,473,0.696,474,0.696,475,0.696,476,0.696,477,1.302,478,1.302,479,1.695,480,0.696,481,0.696,482,1.069,483,0.696,484,0.709,485,1.302,486,1.302,487,0.696,488,0.709,489,0.696,490,0.709,491,1.069,492,0.696,493,0.979,494,0.709,495,0.709,496,0.696,497,0.709,498,0.696,499,0.696,500,1.069,501,0.709,502,1.069,503,1.069,504,1.069,505,1.488,506,0.696,507,0.709,508,0.709,509,1.069,510,0.696,511,0.709,512,0.709,513,0.565,514,0.696,515,1.277,516,1.277,517,1.069,518,0.683,519,0.683,520,0.683,521,1.069,522,0.696,523,0.696,524,0.696,525,0.991,526,1.302,527,0.683,528,0.683,529,0.696,530,0.709,531,0.709,532,0.696,533,0.696,534,0.709,535,0.709,536,0.709,537,0.709,538,1.069,539,0.683,540,0.683,541,1.277,542,1.069,543,0.683,544,0.696,545,0.696,546,1.069,547,0.709,548,0.362,549,0.696,550,0.61,551,1.6,552,1.693,553,1.669,554,1.8,555,1.01,556,0.709,557,0.696,558,0.587,559,0.696,560,0.696,561,1.302,562,0.709,563,0.709,564,1.069,565,0.709,566,0.709,567,0.696,568,0.709,569,1.669,570,0.709,571,1.695,572,0.709,573,0.709,574,0.709,575,0.709,576,0.709,577,1.302,578,0.709,579,0.709,580,0.709,581,0.709,582,0.709,583,0.696,584,0.709,585,0.709,586,0.709,587,0.709,588,0.709,589,0.709,590,0.709,591,0.709,592,0.709,593,0.709,594,1.089,595,1.302,596,1.089,597,1.64,598,1.089,599,1.089,600,1.089,601,1.089,602,0.709,603,1.069,604,0.709,605,0.696,606,0.709,607,0.709,608,0.709,609,0.709,610,0.709,611,0.696,612,0.696,613,0.709,614,0.709,615,0.709,616,0.696,617,0.696,618,0.709,619,0.709,620,0.696,621,0.709,622,0.709,623,0.709,624,0.709,625,0.696,626,0.709,627,0.696,628,0.709,629,0.709,630,0.696,631,0.709,632,0.709,1457,4.135,1459,4.135,1461,4.135,1463,4.135,1583,3.031,1584,3.031,1585,3.031,1586,3.031,1587,3.031,1588,3.031,1589,3.031]],["title/interfaces/PayloadBuilder-6.html",[247,0.127,551,0.664,1528,3.258]],["body/interfaces/PayloadBuilder-6.html",[0,0.138,3,0.025,4,0.039,5,0.025,7,0.035,12,0.824,14,0.661,25,0.267,26,1.051,28,1.417,29,0.008,30,0.556,31,0.242,32,0.915,33,0.304,41,1.191,45,0.362,67,0.116,81,0.619,84,0.631,89,0.643,109,0.858,133,1.146,161,1.754,184,0.302,191,0.002,192,0.003,193,0.002,220,0.68,247,0.303,249,0.444,252,0.521,260,0.378,295,1.05,296,1.591,297,0.68,298,0.631,299,2.207,300,0.607,301,1.05,302,1.446,303,0.68,304,1.05,305,0.68,306,1.283,307,0.68,308,1.283,309,0.68,310,0.68,311,0.68,312,1.012,313,1.05,314,0.68,315,0.68,316,0.68,317,0.68,318,0.68,319,1.39,320,1.05,321,0.68,322,0.68,323,0.668,324,0.68,325,0.68,326,1.05,327,1.031,328,1.031,329,0.693,330,1.471,331,1.05,332,0.68,333,0.68,334,0.693,335,1.05,336,0.668,337,0.68,338,1.283,339,0.68,340,1.031,341,1.283,342,0.68,343,0.655,344,0.68,345,0.68,346,0.693,347,0.68,348,1.259,349,0.668,350,0.68,351,0.68,352,0.668,353,0.68,354,1.687,355,1.283,356,0.68,357,0.68,358,0.68,359,0.68,360,0.668,361,1.05,362,0.956,363,0.68,364,1.416,365,1.05,366,0.693,367,0.693,368,1.308,369,0.693,370,0.693,371,0.68,372,1.05,373,0.68,374,0.693,375,0.693,376,0.668,377,1.416,378,0.693,379,0.693,380,0.693,381,0.693,382,0.693,383,1.031,384,0.68,385,0.68,386,0.68,387,0.68,388,0.68,389,0.68,390,1.05,391,0.68,392,1.031,393,0.68,394,0.68,395,0.68,396,0.68,397,0.68,398,0.68,399,0.68,400,0.68,401,0.68,402,0.68,403,0.68,404,0.68,405,0.68,406,0.68,407,0.68,408,0.68,409,1.05,410,0.68,411,0.68,412,0.68,413,0.68,414,0.68,415,0.68,416,0.68,417,1.259,418,0.68,419,0.68,420,1.05,421,0.68,422,0.68,423,0.68,424,0.68,425,1.416,426,0.68,427,0.693,428,0.68,429,0.68,430,0.68,431,1.416,432,0.68,433,1.05,434,0.68,435,1.283,436,0.68,437,1.05,438,0.68,439,1.443,440,0.68,441,1.031,442,0.68,443,1.05,444,0.68,445,0.68,446,0.68,447,1.05,448,0.68,449,1.031,450,0.693,451,0.693,452,0.68,453,0.68,454,1.031,455,1.012,456,0.974,457,0.68,458,0.643,459,1.489,460,1.738,461,0.68,462,0.68,463,0.68,464,0.68,465,0.68,466,0.68,467,0.68,468,0.68,469,0.68,470,0.68,471,0.68,472,0.68,473,0.68,474,0.68,475,0.68,476,0.68,477,1.283,478,1.283,479,1.68,480,0.68,481,0.68,482,1.05,483,0.68,484,0.693,485,1.283,486,1.283,487,0.68,488,0.693,489,0.68,490,0.693,491,1.05,492,0.68,493,0.965,494,0.693,495,0.693,496,0.68,497,0.693,498,0.68,499,0.68,500,1.283,501,0.693,502,1.05,503,1.05,504,1.05,505,1.471,506,0.68,507,0.693,508,0.693,509,1.05,510,0.68,511,0.693,512,0.693,513,0.552,514,0.68,515,1.259,516,1.259,517,1.05,518,0.668,519,0.668,520,0.668,521,1.05,522,0.68,523,0.68,524,0.68,525,0.974,526,1.283,527,0.668,528,0.668,529,0.68,530,0.693,531,0.693,532,0.68,533,0.68,534,0.693,535,0.693,536,0.693,537,0.693,538,1.05,539,0.668,540,0.668,541,1.259,542,1.05,543,0.668,544,0.68,545,0.68,546,1.05,547,0.693,548,0.354,549,0.68,550,0.596,551,1.6,552,1.684,553,1.659,554,1.788,555,0.993,556,0.693,557,0.68,558,0.574,559,0.68,560,0.68,561,1.283,562,0.693,563,0.693,564,1.05,565,0.693,566,0.693,567,0.68,568,0.693,569,1.659,570,0.693,571,1.68,572,0.693,573,0.693,574,0.693,575,0.693,576,0.693,577,1.283,578,0.693,579,0.693,580,0.693,581,0.693,582,0.693,583,0.68,584,0.693,585,0.693,586,0.693,587,0.693,588,0.693,589,0.693,590,0.693,591,0.693,592,0.693,593,0.693,594,0.693,595,0.68,596,0.693,597,1.506,598,0.693,599,0.693,600,0.693,601,0.693,602,1.071,603,1.56,604,1.071,605,1.283,606,1.071,607,1.071,608,1.071,609,1.071,610,1.071,611,1.443,612,1.443,613,1.071,614,0.693,615,0.693,616,0.68,617,0.68,618,0.693,619,0.693,620,0.68,621,0.693,622,0.693,623,0.693,624,0.693,625,0.68,626,0.693,627,0.68,628,0.693,629,0.693,630,0.68,631,0.693,632,0.693,1438,4.064,1440,4.064,1442,4.064,1444,4.064,1446,4.064,1448,4.064,1590,2.963,1591,2.963,1592,2.963,1593,2.963,1594,2.963,1595,2.963,1596,2.963,1597,2.963,1598,2.963,1599,2.963,1600,2.963]],["title/interfaces/PayloadBuilder-7.html",[247,0.127,551,0.664,1543,3.258]],["body/interfaces/PayloadBuilder-7.html",[0,0.14,3,0.026,4,0.039,5,0.026,7,0.035,12,0.831,14,0.668,25,0.271,26,0.99,28,1.35,29,0.008,30,0.551,31,0.242,32,0.872,33,0.303,40,1.388,41,1.122,45,0.367,67,0.116,81,0.967,84,0.64,89,0.652,109,0.863,133,0.949,161,1.762,184,0.306,191,0.002,192,0.004,193,0.002,220,0.69,247,0.303,249,0.449,252,0.529,260,0.383,295,1.062,296,1.514,297,0.69,298,0.64,299,2.21,300,0.616,301,1.062,302,1.456,303,0.69,304,1.062,305,0.69,306,1.295,307,0.69,308,1.295,309,0.69,310,0.69,311,0.69,312,1.023,313,1.062,314,0.69,315,0.69,316,0.69,317,0.69,318,0.69,319,1.401,320,1.062,321,0.69,322,0.69,323,0.677,324,0.69,325,0.69,326,1.062,327,1.043,328,1.043,329,0.703,330,1.482,331,1.062,332,0.69,333,0.69,334,0.703,335,1.062,336,0.677,337,0.69,338,1.295,339,0.69,340,1.043,341,1.295,342,0.69,343,0.665,344,0.69,345,0.69,346,0.703,347,0.69,348,1.271,349,0.677,350,0.69,351,0.69,352,0.677,353,0.69,354,1.695,355,1.295,356,0.69,357,0.69,358,0.69,359,0.69,360,0.677,361,1.062,362,0.967,363,0.69,364,1.427,365,0.69,366,0.703,367,0.703,368,1.32,369,0.703,370,0.703,371,0.69,372,1.062,373,0.69,374,0.703,375,0.703,376,0.677,377,1.427,378,0.703,379,0.703,380,0.703,381,0.703,382,0.703,383,1.043,384,0.69,385,0.69,386,0.69,387,0.69,388,0.69,389,0.69,390,1.062,391,0.69,392,1.043,393,0.69,394,0.69,395,0.69,396,0.69,397,0.69,398,0.69,399,0.69,400,0.69,401,0.69,402,0.69,403,0.69,404,0.69,405,0.69,406,0.69,407,0.69,408,0.69,409,1.062,410,0.69,411,0.69,412,0.69,413,0.69,414,0.69,415,0.69,416,0.69,417,1.271,418,0.69,419,0.69,420,1.062,421,0.69,422,0.69,423,0.69,424,0.69,425,1.427,426,0.69,427,0.703,428,0.69,429,0.69,430,0.69,431,1.427,432,0.69,433,1.062,434,0.69,435,1.295,436,0.69,437,1.062,438,0.69,439,1.455,440,0.69,441,1.043,442,0.69,443,1.062,444,0.69,445,0.69,446,0.69,447,1.062,448,0.69,449,1.043,450,0.703,451,0.703,452,0.69,453,0.69,454,1.043,455,1.023,456,0.985,457,0.69,458,0.652,459,1.492,460,1.742,461,0.69,462,0.69,463,0.69,464,0.69,465,0.69,466,0.69,467,0.69,468,0.69,469,0.69,470,0.69,471,0.69,472,0.69,473,0.69,474,0.69,475,0.69,476,0.69,477,1.295,478,1.295,479,1.69,480,0.69,481,0.69,482,1.062,483,0.69,484,0.703,485,1.295,486,1.295,487,0.69,488,0.703,489,0.69,490,0.703,491,1.062,492,0.69,493,0.974,494,0.703,495,0.703,496,0.69,497,0.703,498,0.69,499,0.69,500,1.062,501,0.703,502,1.062,503,1.062,504,1.062,505,1.482,506,0.69,507,0.703,508,0.703,509,1.062,510,0.69,511,0.703,512,0.703,513,0.56,514,0.69,515,1.271,516,1.271,517,1.062,518,0.677,519,0.677,520,0.677,521,1.062,522,0.69,523,0.69,524,0.69,525,0.985,526,1.295,527,0.677,528,0.677,529,0.69,530,0.703,531,0.703,532,0.69,533,0.69,534,0.703,535,0.703,536,0.703,537,0.703,538,1.062,539,0.677,540,0.677,541,1.271,542,1.062,543,0.677,544,0.69,545,0.69,546,1.062,547,0.703,548,0.359,549,0.69,550,0.605,551,1.6,552,1.69,553,1.665,554,1.795,555,1.004,556,0.703,557,0.69,558,0.582,559,0.69,560,0.69,561,1.295,562,0.703,563,0.703,564,1.062,565,0.703,566,0.703,567,0.69,568,0.703,569,1.665,570,0.703,571,1.69,572,0.703,573,0.703,574,0.703,575,0.703,576,0.703,577,1.295,578,0.703,579,0.703,580,0.703,581,0.703,582,0.703,583,0.69,584,0.703,585,0.703,586,0.703,587,0.703,588,0.703,589,0.703,590,0.703,591,0.703,592,0.703,593,0.703,594,0.703,595,0.69,596,0.703,597,1.514,598,0.703,599,0.703,600,0.703,601,0.703,602,0.703,603,1.062,604,0.703,605,0.69,606,0.703,607,0.703,608,0.703,609,0.703,610,0.703,611,0.69,612,0.69,613,0.703,614,1.083,615,1.083,616,1.295,617,1.062,618,1.083,619,1.083,620,1.295,621,1.083,622,1.083,623,0.703,624,0.703,625,0.69,626,0.703,627,0.69,628,0.703,629,0.703,630,0.69,631,0.703,632,0.703,1417,4.11,1419,4.11,1421,4.11,1424,4.11,1426,4.11,1427,2.67,1601,3.007,1602,3.007,1603,3.007,1604,3.007,1605,3.007,1606,3.007,1607,3.007,1608,3.007]],["title/interfaces/PayloadBuilder-8.html",[247,0.127,551,0.664,1609,4]],["body/interfaces/PayloadBuilder-8.html",[0,0.14,3,0.026,4,0.04,5,0.026,7,0.035,12,0.834,14,0.67,25,0.272,26,0.96,28,1.353,29,0.008,30,0.558,31,0.242,32,0.873,33,0.303,41,1.088,45,0.369,67,0.116,81,0.631,84,0.643,89,0.655,109,0.864,133,0.952,161,1.764,184,0.307,191,0.002,192,0.004,193,0.002,220,0.693,247,0.303,249,0.45,252,0.531,260,0.385,295,1.066,296,1.478,297,0.693,298,0.643,299,2.21,300,0.619,301,1.066,302,1.459,303,0.693,304,1.066,305,0.693,306,1.299,307,0.693,308,1.299,309,0.693,310,0.693,311,0.693,312,1.026,313,1.066,314,0.693,315,0.693,316,0.693,317,0.693,318,0.693,319,1.404,320,1.066,321,0.693,322,0.693,323,0.68,324,0.693,325,0.693,326,1.066,327,1.046,328,1.046,329,0.707,330,1.486,331,1.066,332,0.693,333,0.693,334,0.707,335,1.066,336,0.68,337,0.693,338,1.299,339,0.693,340,1.046,341,1.299,342,0.693,343,0.668,344,0.693,345,0.693,346,0.707,347,0.693,348,1.274,349,0.68,350,0.693,351,0.693,352,0.68,353,0.693,354,1.698,355,1.299,356,0.693,357,0.693,358,0.693,359,0.693,360,0.68,361,1.066,362,0.97,363,0.693,364,1.431,365,0.693,366,0.707,367,0.707,368,1.324,369,0.707,370,0.707,371,0.693,372,1.066,373,0.693,374,0.707,375,0.707,376,0.68,377,1.431,378,0.707,379,0.707,380,0.707,381,0.707,382,0.707,383,1.046,384,0.693,385,0.693,386,0.693,387,0.693,388,0.693,389,0.693,390,1.066,391,0.693,392,1.046,393,0.693,394,0.693,395,0.693,396,0.693,397,0.693,398,0.693,399,0.693,400,0.693,401,0.693,402,0.693,403,0.693,404,0.693,405,0.693,406,0.693,407,0.693,408,0.693,409,1.066,410,0.693,411,0.693,412,0.693,413,0.693,414,0.693,415,0.693,416,0.693,417,1.274,418,0.693,419,0.693,420,1.066,421,0.693,422,0.693,423,0.693,424,0.693,425,1.431,426,0.693,427,0.707,428,0.693,429,0.693,430,0.693,431,1.431,432,0.693,433,1.066,434,0.693,435,1.299,436,0.693,437,1.066,438,0.693,439,1.458,440,0.693,441,1.046,442,0.693,443,1.066,444,0.693,445,0.693,446,0.693,447,1.066,448,0.693,449,1.046,450,0.707,451,0.707,452,0.693,453,0.693,454,1.046,455,1.026,456,0.988,457,0.693,458,0.655,459,1.493,460,1.743,461,0.693,462,0.693,463,0.693,464,0.693,465,0.693,466,0.693,467,0.693,468,0.693,469,0.693,470,0.693,471,0.693,472,0.693,473,0.693,474,0.693,475,0.693,476,0.693,477,1.299,478,1.299,479,1.693,480,0.693,481,0.693,482,1.066,483,0.693,484,0.707,485,1.299,486,1.299,487,0.693,488,0.707,489,0.693,490,0.707,491,1.066,492,0.693,493,0.976,494,0.707,495,0.707,496,0.693,497,0.707,498,0.693,499,0.693,500,1.066,501,0.707,502,1.066,503,1.066,504,1.066,505,1.486,506,0.693,507,0.707,508,0.707,509,1.066,510,0.693,511,0.707,512,0.707,513,0.563,514,0.693,515,1.274,516,1.274,517,1.066,518,0.68,519,0.68,520,0.68,521,1.066,522,0.693,523,0.693,524,0.693,525,0.988,526,1.299,527,0.68,528,0.68,529,0.693,530,0.707,531,0.707,532,0.693,533,0.693,534,0.707,535,0.707,536,0.707,537,0.707,538,1.066,539,0.68,540,0.68,541,1.274,542,1.066,543,0.68,544,0.693,545,0.693,546,1.066,547,0.707,548,0.361,549,0.693,550,0.607,551,1.6,552,1.692,553,1.565,554,1.753,555,1.007,556,0.707,557,0.693,558,0.585,559,0.693,560,0.693,561,1.299,562,0.707,563,0.707,564,1.066,565,0.707,566,0.707,567,0.693,568,0.707,569,1.667,570,0.707,571,1.693,572,0.707,573,0.707,574,0.707,575,0.707,576,0.707,577,1.299,578,0.707,579,0.707,580,0.707,581,0.707,582,0.707,583,0.693,584,0.707,585,0.707,586,0.707,587,0.707,588,0.707,589,0.707,590,0.707,591,0.707,592,0.707,593,0.707,594,0.707,595,0.693,596,0.707,597,1.277,598,0.707,599,0.707,600,0.707,601,0.707,602,0.707,603,1.066,604,0.707,605,0.693,606,0.707,607,0.707,608,0.707,609,0.707,610,0.707,611,0.693,612,0.693,613,0.707,614,0.707,615,0.707,616,0.693,617,0.693,618,0.707,619,0.707,620,0.693,621,0.707,622,0.707,623,1.086,624,1.086,625,1.299,626,1.086,627,1.299,628,1.086,629,1.086,630,1.299,631,1.086,632,1.086,1493,4.124,1495,4.124,1496,2.682,1498,4.124,1500,4.124,1502,4.124,1610,3.02,1611,3.02,1612,3.02,1613,3.02,1614,3.02,1615,3.02,1616,3.02]],["title/interfaces/Person.html",[247,0.151,312,1.054]],["body/interfaces/Person.html",[0,0.146,3,0.027,4,0.041,5,0.027,7,0.037,8,0.389,12,0.856,25,0.284,29,0.008,30,0.544,31,0.241,33,0.304,45,0.385,67,0.116,81,0.658,84,0.671,89,0.684,109,0.879,133,0.983,161,1.786,184,0.321,191,0.002,192,0.004,193,0.002,220,0.724,247,0.304,249,0.465,252,0.555,260,0.402,295,1.101,296,0.599,297,0.724,298,0.671,299,2.218,300,0.646,301,1.101,302,1.487,303,0.724,304,1.101,305,0.724,306,1.334,307,0.724,308,1.334,309,0.724,310,0.724,311,0.724,312,1.284,313,1.101,314,0.724,315,0.724,316,0.724,317,0.724,318,0.724,319,1.435,320,1.101,321,0.724,322,0.724,323,0.71,324,0.724,325,0.724,326,1.101,327,1.081,328,1.081,329,0.737,330,1.519,331,1.101,332,0.724,333,0.724,334,0.737,335,1.101,336,0.71,337,0.724,338,1.334,339,0.724,340,1.081,341,1.334,342,0.724,343,0.697,344,0.724,345,0.724,346,0.737,347,0.724,348,1.309,349,0.71,350,0.724,351,0.724,352,0.71,353,0.724,354,1.724,355,1.334,356,0.724,357,0.724,358,0.724,359,0.724,360,0.71,361,1.101,362,1.002,363,0.724,364,1.463,365,0.724,366,0.737,367,0.737,368,1.359,369,0.737,370,0.737,371,0.724,372,1.101,373,0.724,374,0.737,375,0.737,376,0.71,377,1.463,378,0.737,379,0.737,380,0.737,381,0.737,382,0.737,383,1.081,384,0.724,385,0.724,386,0.724,387,0.724,388,0.724,389,0.724,390,1.101,391,0.724,392,1.081,393,0.724,394,0.724,395,0.724,396,0.724,397,0.724,398,0.724,399,0.724,400,0.724,401,0.724,402,0.724,403,0.724,404,0.724,405,0.724,406,0.724,407,0.724,408,0.724,409,1.101,410,0.724,411,0.724,412,0.724,413,0.724,414,0.724,415,0.724,416,0.724,417,1.309,418,0.724,419,0.724,420,1.101,421,0.724,422,0.724,423,0.724,424,0.724,425,1.463,426,0.724,427,0.737,428,0.724,429,0.724,430,0.724,431,1.463,432,0.724,433,1.101,434,0.724,435,1.334,436,0.724,437,1.101,438,0.724,439,1.491,440,0.724,441,1.081,442,0.724,443,1.101,444,0.724,445,0.724,446,0.724,447,1.101,448,0.724,449,1.081,450,0.737,451,0.737,452,0.724,453,0.724,454,1.081,455,1.061,456,1.021,457,0.724,458,0.684,459,1.503,460,1.756,461,0.724,462,0.724,463,0.724,464,0.724,465,0.724,466,0.724,467,0.724,468,0.724,469,0.724,470,0.724,471,0.724,472,0.724,473,0.724,474,0.724,475,0.724,476,0.724,477,1.334,478,1.334,479,1.722,480,0.724,481,0.724,482,1.101,483,0.724,484,0.737,485,1.334,486,1.334,487,0.724,488,0.737,489,0.724,490,0.737,491,1.101,492,0.724,493,1.003,494,0.737,495,0.737,496,0.724,497,0.737,498,0.724,499,0.724,500,1.101,501,0.737,502,1.101,503,1.101,504,1.101,505,1.519,506,0.724,507,0.737,508,0.737,509,1.101,510,0.724,511,0.737,512,0.737,513,0.588,514,0.724,515,1.309,516,1.309,517,1.101,518,0.71,519,0.71,520,0.71,521,1.101,522,0.724,523,0.724,524,0.724,525,1.021,526,1.334,527,0.71,528,0.71,529,0.724,530,0.737,531,0.737,532,0.724,533,0.724,534,0.737,535,0.737,536,0.737,537,0.737,538,1.101,539,0.71,540,0.71,541,1.309,542,1.101,543,0.71,544,0.724,545,0.724,546,1.101,547,0.737,548,0.376,549,0.724,550,0.634,551,1.597,552,1.625,553,1.586,554,1.777,555,1.041,556,0.737,557,0.724,558,0.61,559,0.724,560,0.724,561,1.334,562,0.737,563,0.737,564,1.101,565,0.737,566,0.737,567,0.724,568,0.737,569,1.586,570,0.737,571,1.722,572,0.737,573,0.737,574,0.737,575,0.737,576,0.737,577,1.334,578,0.737,579,0.737,580,0.737,581,0.737,582,0.737,583,0.724,584,0.737,585,0.737,586,0.737,587,0.737,588,0.737,589,0.737,590,0.737,591,0.737,592,0.737,593,0.737,594,0.737,595,0.724,596,0.737,597,1.306,598,0.737,599,0.737,600,0.737,601,0.737,602,0.737,603,1.101,604,0.737,605,0.724,606,0.737,607,0.737,608,0.737,609,0.737,610,0.737,611,0.724,612,0.724,613,0.737,614,0.737,615,0.737,616,0.724,617,0.724,618,0.737,619,0.737,620,0.724,621,0.737,622,0.737,623,0.737,624,0.737,625,0.724,626,0.737,627,0.724,628,0.737,629,0.737,630,0.724,631,0.737,632,0.737]],["title/classes/ProactiveClient.html",[0,0.221,1617,4.233]],["body/classes/ProactiveClient.html",[0,0.2,2,0.804,3,0.037,4,0.037,5,0.037,7,0.051,8,0.489,9,2.581,13,2.927,14,0.871,16,2.631,17,3.796,18,1.296,22,2.341,26,1.196,28,1.768,29,0.008,30,0.569,31,0.237,32,1.142,33,0.286,40,1.991,41,1.145,42,5.284,45,0.92,51,0.861,52,5.284,61,0.759,67,0.088,68,1.713,76,1.783,77,5.116,79,1.238,81,1.26,83,4.581,84,1.284,85,3.274,88,3.274,89,0.935,90,2.577,91,2.577,92,2.009,93,2.577,94,2.454,95,2.577,96,2.577,97,2.309,103,4.581,104,3.854,105,3.274,135,2.569,152,4.552,183,3.389,184,0.614,190,1.348,191,0.003,192,0.005,193,0.003,198,4.914,203,1.323,216,6.181,260,0.549,288,3.035,296,1.789,455,1.539,456,1.689,458,1.309,459,1.401,513,0.804,514,1.731,515,1.568,516,1.568,518,0.971,519,0.971,520,0.971,525,1.481,527,0.971,528,0.971,533,0.99,539,0.971,540,0.971,541,1.568,543,0.971,544,0.99,545,1.598,546,1.598,548,0.72,549,1.385,550,1.214,554,1.568,597,1.783,762,3.085,792,2.569,801,3.741,924,5.724,1208,3.906,1411,4.581,1423,4.581,1617,5.358,1618,4.312,1619,7.538,1620,7.538,1621,6.96,1622,7.538,1623,6.96,1624,6.96,1625,6.96,1626,6.96,1627,6.96,1628,6.96,1629,6.96,1630,6.96,1631,6.96,1632,4.312,1633,7.934,1634,6.034,1635,7.538,1636,4.312,1637,6.034,1638,4.312,1639,6.034,1640,4.312,1641,4.312,1642,4.312,1643,6.034,1644,4.312,1645,4.312,1646,4.312,1647,6.181,1648,4.312,1649,4.312,1650,4.312,1651,4.312,1652,4.312,1653,4.312,1654,4.312,1655,4.312,1656,4.312,1657,4.312,1658,4.312,1659,4.312,1660,4.312,1661,4.312,1662,6.96,1663,6.96,1664,4.312,1665,4.312,1666,4.312,1667,4.312,1668,4.312,1669,4.095,1670,4.312,1671,6.034,1672,4.312,1673,4.312,1674,6.96,1675,4.312,1676,4.312,1677,4.312,1678,4.312,1679,4.312,1680,4.312,1681,6.96,1682,4.312,1683,4.312,1684,4.312,1685,4.312,1686,4.312,1687,4.312,1688,4.312,1689,4.312,1690,4.312,1691,6.034,1692,4.312,1693,6.034,1694,4.312,1695,4.312,1696,4.312,1697,4.312,1698,4.312,1699,6.96,1700,4.312,1701,4.312,1702,4.312,1703,4.312,1704,4.312,1705,4.312,1706,4.312,1707,4.312,1708,4.312,1709,4.312,1710,4.312,1711,3.83,1712,4.312,1713,4.312,1714,4.312,1715,4.312,1716,4.312,1717,4.312,1718,4.312,1719,4.312,1720,4.312,1721,4.312,1722,6.034,1723,4.312,1724,4.312,1725,4.312,1726,4.312,1727,4.312,1728,4.312,1729,4.312,1730,4.312,1731,6.034,1732,4.312,1733,4.312,1734,4.312,1735,4.312,1736,6.034,1737,4.312,1738,6.034,1739,4.312,1740,6.034,1741,4.312]],["title/classes/ProductDetailResponseContentBuilder.html",[0,0.221,1742,4.233]],["body/classes/ProductDetailResponseContentBuilder.html",[0,0.286,2,1.148,3,0.053,4,0.053,5,0.053,7,0.072,8,0.618,9,3.077,12,1.125,14,1.102,16,2.799,18,1.273,25,0.554,26,1.21,28,1.712,29,0.008,30,0.538,31,0.23,32,1.105,33,0.284,41,1.198,51,0.703,67,0.072,76,1.238,79,1.08,101,4.942,109,0.911,190,1.192,191,0.005,192,0.006,193,0.005,203,1.889,548,0.735,558,1.478,661,4.948,662,4.227,663,4.303,665,4.173,666,4.594,667,4.547,668,4.547,669,4.547,670,4.547,671,4.498,672,4.867,673,3.986,674,3.986,675,3.986,678,3.986,679,3.986,680,3.818,681,4.938,682,3.986,683,3.818,684,3.986,685,3.667,686,3.818,687,3.986,688,3.818,689,3.986,691,3.41,741,4.942,787,5.015,788,5.015,789,5.015,790,3.818,791,4.088,792,4.547,793,4.088,796,3.532,1742,6.78,1743,6.158,1744,8.674,1745,8.674,1746,6.158,1747,6.158,1748,6.78,1749,6.158]],["title/classes/ProductListResponseContentBuilder.html",[0,0.221,1750,4.233]],["body/classes/ProductListResponseContentBuilder.html",[0,0.258,2,1.034,3,0.047,4,0.047,5,0.047,7,0.065,8,0.579,9,3.416,12,1.053,14,1.032,16,2.742,18,1.27,21,6.438,25,0.499,26,1.209,28,1.705,29,0.008,30,0.536,31,0.23,32,1.101,33,0.287,41,1.206,51,0.903,57,0.939,58,0.921,60,2.97,61,0.976,64,5.903,65,3.764,67,0.065,76,1.437,79,1.199,109,0.853,113,3.764,126,4.79,160,6.438,174,5.111,190,1.384,191,0.004,192,0.005,193,0.004,194,4.233,203,2.192,548,0.662,558,1.384,661,4.878,662,3.957,663,4.1,665,3.976,666,4.378,667,4.256,668,4.256,669,4.256,670,4.256,671,4.33,672,4.777,673,3.59,674,3.59,675,3.59,678,3.59,679,3.59,680,3.438,681,4.785,682,3.59,683,3.438,684,3.59,685,3.303,686,3.438,687,3.59,688,3.438,689,3.59,691,3.071,741,5.405,790,4.43,791,4.471,792,5.146,793,4.471,796,3.182,1748,6.346,1750,6.346,1751,5.546,1752,8.349,1753,8.349,1754,8.349,1755,7.905,1756,5.546,1757,5.546,1758,5.546,1759,5.546,1760,5.546,1761,5.546,1762,7.145,1763,5.546,1764,5.546,1765,7.905,1766,5.546,1767,5.546,1768,7.145,1769,5.546,1770,5.546,1771,5.546]],["title/interfaces/Props.html",[247,0.151,457,1.094]],["body/interfaces/Props.html",[0,0.146,3,0.027,4,0.041,5,0.027,7,0.037,8,0.388,12,0.854,25,0.283,29,0.008,30,0.543,31,0.242,33,0.303,45,0.383,67,0.116,81,0.656,84,0.669,89,0.682,109,0.878,133,0.981,161,1.784,184,0.32,191,0.002,192,0.004,193,0.002,220,1.331,247,0.304,249,0.464,252,0.553,260,0.4,295,1.099,296,0.597,297,0.721,298,0.669,299,2.218,300,0.644,301,1.099,302,1.485,303,0.721,304,1.099,305,0.721,306,1.331,307,0.721,308,1.331,309,0.721,310,0.721,311,0.721,312,1.058,313,1.099,314,0.721,315,0.721,316,0.721,317,0.721,318,0.721,319,1.433,320,1.099,321,0.721,322,0.721,323,0.708,324,0.721,325,0.721,326,1.099,327,1.078,328,1.078,329,0.735,330,1.517,331,1.099,332,0.721,333,0.721,334,0.735,335,1.099,336,0.708,337,0.721,338,1.331,339,0.721,340,1.078,341,1.331,342,0.721,343,0.695,344,0.721,345,0.721,346,0.735,347,0.721,348,1.306,349,0.708,350,0.721,351,0.721,352,0.708,353,0.721,354,1.722,355,1.331,356,0.721,357,0.721,358,0.721,359,0.721,360,0.708,361,1.099,362,1,363,0.721,364,1.46,365,0.721,366,0.735,367,0.735,368,1.356,369,0.735,370,0.735,371,0.721,372,1.099,373,0.721,374,0.735,375,0.735,376,0.708,377,1.46,378,0.735,379,0.735,380,0.735,381,0.735,382,0.735,383,1.078,384,0.721,385,0.721,386,0.721,387,0.721,388,0.721,389,0.721,390,1.099,391,0.721,392,1.078,393,0.721,394,0.721,395,0.721,396,0.721,397,0.721,398,0.721,399,0.721,400,0.721,401,0.721,402,0.721,403,0.721,404,0.721,405,0.721,406,0.721,407,0.721,408,0.721,409,1.099,410,0.721,411,0.721,412,0.721,413,0.721,414,0.721,415,0.721,416,0.721,417,1.306,418,0.721,419,0.721,420,1.099,421,0.721,422,0.721,423,0.721,424,0.721,425,1.46,426,0.721,427,0.735,428,0.721,429,0.721,430,0.721,431,1.46,432,0.721,433,1.099,434,0.721,435,1.331,436,0.721,437,1.099,438,0.721,439,1.488,440,0.721,441,1.078,442,0.721,443,1.099,444,0.721,445,0.721,446,0.721,447,1.099,448,0.721,449,1.078,450,0.735,451,0.735,452,0.721,453,0.721,454,1.078,455,1.058,456,1.019,457,1.099,458,1.258,459,1.522,460,1.755,461,0.721,462,0.721,463,0.721,464,0.721,465,0.721,466,0.721,467,0.721,468,0.721,469,0.721,470,0.721,471,0.721,472,0.721,473,0.721,474,0.721,475,0.721,476,0.721,477,1.331,478,1.331,479,1.72,480,0.721,481,0.721,482,1.099,483,0.721,484,0.735,485,1.331,486,1.331,487,0.721,488,0.735,489,0.721,490,0.735,491,1.099,492,0.721,493,1.001,494,0.735,495,0.735,496,0.721,497,0.735,498,0.721,499,0.721,500,1.099,501,0.735,502,1.099,503,1.099,504,1.099,505,1.517,506,0.721,507,0.735,508,0.735,509,1.099,510,0.721,511,0.735,512,0.735,513,0.586,514,0.721,515,1.306,516,1.306,517,1.099,518,0.708,519,0.708,520,0.708,521,1.099,522,0.721,523,0.721,524,0.721,525,1.019,526,1.331,527,0.708,528,0.708,529,0.721,530,0.735,531,0.735,532,0.721,533,0.721,534,0.735,535,0.735,536,0.735,537,0.735,538,1.099,539,0.708,540,0.708,541,1.306,542,1.099,543,0.708,544,0.721,545,0.721,546,1.099,547,0.735,548,0.375,549,0.721,550,0.632,551,1.597,552,1.624,553,1.585,554,1.775,555,1.038,556,0.735,557,0.721,558,0.608,559,0.721,560,0.721,561,1.331,562,0.735,563,0.735,564,1.099,565,0.735,566,0.735,567,0.721,568,0.735,569,1.585,570,0.735,571,1.72,572,0.735,573,0.735,574,0.735,575,0.735,576,0.735,577,1.331,578,0.735,579,0.735,580,0.735,581,0.735,582,0.735,583,0.721,584,0.735,585,0.735,586,0.735,587,0.735,588,0.735,589,0.735,590,0.735,591,0.735,592,0.735,593,0.735,594,0.735,595,0.721,596,0.735,597,1.304,598,0.735,599,0.735,600,0.735,601,0.735,602,0.735,603,1.099,604,0.735,605,0.721,606,0.735,607,0.735,608,0.735,609,0.735,610,0.735,611,0.721,612,0.721,613,0.735,614,0.735,615,0.735,616,0.721,617,0.721,618,0.735,619,0.735,620,0.721,621,0.735,622,0.735,623,0.735,624,0.735,625,0.721,626,0.735,627,0.721,628,0.735,629,0.735,630,0.721,631,0.735,632,0.735]],["title/classes/RefundContentBuilder.html",[0,0.221,1772,4.233]],["body/classes/RefundContentBuilder.html",[0,0.277,2,1.113,3,0.051,4,0.051,5,0.051,7,0.088,8,0.607,12,1.104,14,1.081,16,2.782,18,1.289,25,0.537,26,1.211,28,1.744,29,0.008,30,0.548,31,0.231,32,1.126,33,0.295,39,5.687,41,1.181,51,0.855,67,0.07,76,1.201,79,1.117,92,2.494,101,4.874,109,0.894,174,5.358,190,1.156,191,0.005,192,0.006,193,0.005,203,1.832,548,0.713,558,1.45,661,4.928,662,4.147,663,4.244,665,4.116,666,4.531,667,4.461,668,4.461,669,4.461,670,4.461,671,4.45,672,4.841,673,3.866,674,3.866,675,3.866,678,3.866,679,3.866,680,3.702,681,4.893,682,3.866,683,3.702,684,3.866,685,3.557,686,3.702,687,3.866,688,3.702,689,3.866,691,3.307,692,5.303,789,4.863,790,3.702,791,4.01,792,4.461,793,4.01,796,3.426,799,5.853,859,4.534,1772,6.651,1773,5.972,1774,8.58,1775,8.183,1776,8.58,1777,5.972,1778,5.972,1779,5.972,1780,5.972,1781,5.972,1782,5.303,1783,5.972,1784,5.972]],["title/classes/RefundResponseContentBuilder.html",[0,0.221,1785,4.233]],["body/classes/RefundResponseContentBuilder.html",[0,0.259,2,1.039,3,0.048,4,0.048,5,0.048,7,0.065,8,0.58,9,3.419,12,1.056,14,1.035,16,2.744,18,1.281,25,0.501,26,1.214,28,1.651,29,0.008,30,0.519,31,0.225,32,1.066,33,0.276,41,1.249,51,0.636,67,0.065,79,1.2,92,2.785,109,0.856,135,3.319,190,1.079,191,0.004,192,0.005,193,0.004,203,1.71,260,0.71,343,1.232,548,0.665,558,1.388,661,4.881,662,3.969,663,4.109,665,3.985,666,4.388,667,4.269,668,4.269,669,4.269,670,4.269,671,4.733,672,4.782,673,3.608,674,3.608,675,3.608,678,3.608,679,3.608,680,3.455,681,4.792,682,3.608,683,3.455,684,3.608,685,3.319,686,3.455,687,3.608,688,3.455,689,3.608,691,3.086,759,3.455,787,5.837,788,4.538,790,4.912,791,4.743,792,5.276,793,4.479,794,4.949,796,4.546,798,4.949,801,3.455,802,4.949,804,3.608,805,4.949,1782,4.949,1785,6.365,1786,5.573,1787,8.365,1788,8.365,1789,8.365,1790,8.365,1791,8.365,1792,8.365,1793,5.573,1794,5.573,1795,5.573,1796,5.573,1797,5.573,1798,5.573,1799,5.573,1800,5.573,1801,5.573,1802,5.573,1803,5.573,1804,5.573]],["title/interfaces/RelevantAudience.html",[247,0.151,541,1.074]],["body/interfaces/RelevantAudience.html",[0,0.146,3,0.027,4,0.041,5,0.027,7,0.037,8,0.387,12,0.854,25,0.282,29,0.008,30,0.526,31,0.242,32,0.609,33,0.303,45,0.383,67,0.116,81,0.656,84,0.668,89,0.681,109,0.877,133,0.98,161,1.784,184,0.319,191,0.002,192,0.004,193,0.002,220,0.721,247,0.304,249,0.464,252,0.552,260,0.4,295,1.488,296,0.596,297,0.721,298,0.668,299,2.217,300,0.643,301,1.098,302,1.485,303,0.721,304,1.098,305,0.721,306,1.33,307,0.721,308,1.33,309,0.721,310,0.721,311,0.721,312,1.057,313,1.098,314,0.721,315,0.721,316,0.721,317,0.721,318,0.721,319,1.432,320,1.098,321,0.721,322,0.721,323,0.707,324,0.721,325,0.721,326,1.098,327,1.077,328,1.077,329,0.734,330,1.516,331,1.098,332,0.721,333,0.721,334,0.734,335,1.098,336,0.707,337,0.721,338,1.33,339,0.721,340,1.077,341,1.33,342,0.721,343,0.694,344,0.721,345,0.721,346,0.734,347,0.721,348,1.305,349,0.707,350,0.721,351,0.721,352,0.707,353,0.721,354,1.721,355,1.33,356,0.721,357,0.721,358,0.721,359,0.721,360,0.707,361,1.098,362,0.999,363,0.721,364,1.46,365,0.721,366,0.734,367,0.734,368,1.356,369,0.734,370,0.734,371,0.721,372,1.098,373,0.721,374,0.734,375,0.734,376,0.707,377,1.46,378,0.734,379,0.734,380,0.734,381,0.734,382,0.734,383,1.077,384,0.721,385,0.721,386,0.721,387,0.721,388,0.721,389,0.721,390,1.098,391,0.721,392,1.077,393,0.721,394,0.721,395,0.721,396,0.721,397,0.721,398,0.721,399,0.721,400,0.721,401,0.721,402,0.721,403,0.721,404,0.721,405,0.721,406,0.721,407,0.721,408,0.721,409,1.098,410,0.721,411,0.721,412,0.721,413,0.721,414,0.721,415,0.721,416,0.721,417,1.305,418,0.721,419,0.721,420,1.098,421,0.721,422,0.721,423,0.721,424,0.721,425,1.46,426,0.721,427,0.734,428,0.721,429,0.721,430,0.721,431,1.46,432,0.721,433,1.098,434,0.721,435,1.33,436,0.721,437,1.098,438,0.721,439,1.488,440,0.721,441,1.077,442,0.721,443,1.098,444,0.721,445,0.721,446,0.721,447,1.098,448,0.721,449,1.077,450,0.734,451,0.734,452,0.721,453,0.721,454,1.077,455,1.057,456,1.018,457,0.721,458,0.681,459,1.521,460,1.755,461,0.721,462,0.721,463,0.721,464,0.721,465,0.721,466,0.721,467,0.721,468,0.721,469,0.721,470,0.721,471,0.721,472,0.721,473,0.721,474,0.721,475,0.721,476,0.721,477,1.33,478,1.33,479,1.719,480,0.721,481,0.721,482,1.098,483,0.721,484,0.734,485,1.33,486,1.33,487,0.721,488,0.734,489,0.721,490,0.734,491,1.098,492,0.721,493,1,494,0.734,495,0.734,496,0.721,497,0.734,498,0.721,499,0.721,500,1.098,501,0.734,502,1.098,503,1.098,504,1.098,505,1.516,506,0.721,507,0.734,508,0.734,509,1.098,510,0.721,511,0.734,512,0.734,513,0.585,514,0.721,515,1.305,516,1.305,517,1.098,518,0.707,519,0.707,520,0.707,521,1.098,522,0.721,523,0.721,524,0.721,525,1.018,526,1.33,527,0.707,528,0.707,529,0.721,530,0.734,531,0.734,532,0.721,533,0.721,534,0.734,535,0.734,536,0.734,537,0.734,538,1.488,539,0.707,540,0.707,541,1.46,542,1.098,543,0.707,544,0.721,545,0.721,546,1.098,547,0.734,548,0.375,549,0.721,550,0.631,551,1.597,552,1.623,553,1.584,554,1.774,555,1.038,556,0.734,557,0.721,558,0.608,559,0.721,560,0.721,561,1.33,562,0.734,563,0.734,564,1.098,565,0.734,566,0.734,567,0.721,568,0.734,569,1.584,570,0.734,571,1.719,572,0.734,573,0.734,574,0.734,575,0.734,576,0.734,577,1.33,578,0.734,579,0.734,580,0.734,581,0.734,582,0.734,583,0.721,584,0.734,585,0.734,586,0.734,587,0.734,588,0.734,589,0.734,590,0.734,591,0.734,592,0.734,593,0.734,594,0.734,595,0.721,596,0.734,597,1.303,598,0.734,599,0.734,600,0.734,601,0.734,602,0.734,603,1.098,604,0.734,605,0.721,606,0.734,607,0.734,608,0.734,609,0.734,610,0.734,611,0.721,612,0.721,613,0.734,614,0.734,615,0.734,616,0.721,617,0.721,618,0.734,619,0.734,620,0.721,621,0.734,622,0.734,623,0.734,624,0.734,625,0.721,626,0.734,627,0.721,628,0.734,629,0.734,630,0.721,631,0.734,632,0.734]],["title/classes/ReminderAPIClient.html",[0,0.221,1805,4.233]],["body/classes/ReminderAPIClient.html",[0,0.285,2,1.143,3,0.052,4,0.052,5,0.052,7,0.072,8,0.617,14,1.099,16,2.49,17,4.448,18,1.28,26,1.156,28,1.709,29,0.008,30,0.537,31,0.222,32,1.103,33,0.304,41,1.286,45,1.152,51,0.946,57,1.038,58,1.018,60,3.283,61,1.079,67,0.072,79,1.159,97,4.637,106,4.655,109,0.909,190,1.187,191,0.005,192,0.006,193,0.005,196,5.62,203,1.881,513,1.614,1805,6.761,1806,6.13,1807,8.281,1808,8.281,1809,8.281,1810,8.66,1811,8.281,1812,7.613,1813,6.13,1814,6.13,1815,9.3,1816,6.13,1817,9.203,1818,6.13,1819,6.13,1820,9.377,1821,6.13,1822,6.13,1823,6.13,1824,6.13,1825,6.13,1826,6.13,1827,6.13,1828,6.13,1829,6.13,1830,6.13,1831,6.13]],["title/classes/RequestEnvelopeFactory.html",[0,0.221,1126,3.881]],["body/classes/RequestEnvelopeFactory.html",[0,0.244,2,0.979,3,0.045,4,0.045,5,0.045,7,0.062,8,0.559,9,2.856,13,4.681,14,0.996,18,1.306,22,2.676,24,3.556,26,1.206,28,1.036,29,0.008,30,0.326,31,0.234,32,0.669,33,0.299,41,0.758,51,1.015,57,0.889,58,1.357,61,0.924,67,0.062,76,1.549,79,0.898,124,5.653,184,0.887,190,1.745,191,0.004,192,0.005,193,0.004,203,2.765,232,4.277,234,6.128,236,4.664,238,4.275,239,5.849,244,2.361,260,1.148,264,3.757,265,3.757,298,1.941,525,1.741,597,1.645,639,3.818,880,7.235,882,6.923,893,4.664,1019,5.294,1126,5.616,1159,7.262,1262,3.564,1263,6.209,1267,5.849,1669,6.246,1832,5.251,1833,7.7,1834,7.098,1835,7.262,1836,8.177,1837,5.251,1838,6.746,1839,7.235,1840,6.896,1841,5.251,1842,6.124,1843,5.251,1844,6.659,1845,6.124,1846,5.251,1847,5.251,1848,5.251,1849,5.251,1850,6.124,1851,5.251,1852,5.251,1853,5.251,1854,5.251,1855,6.124,1856,5.251,1857,6.896,1858,5.251,1859,5.251,1860,3.757,1861,4.664,1862,5.251,1863,5.251,1864,5.251,1865,5.251,1866,5.251,1867,5.251,1868,5.251,1869,5.236,1870,5.251,1871,4.664,1872,5.251,1873,5.251,1874,5.251,1875,5.251,1876,5.251]],["title/classes/RequestFactory.html",[0,0.221,1262,3.235]],["body/classes/RequestFactory.html",[0,0.239,2,0.96,3,0.044,4,0.044,5,0.044,7,0.06,8,0.551,9,3.451,12,1.362,14,0.983,16,2.889,18,1.274,22,2.642,26,1.215,28,1.745,29,0.008,30,0.548,31,0.237,32,1.157,33,0.307,40,2.378,41,1.252,51,0.778,53,5.253,57,0.872,58,1.13,61,0.906,67,0.06,71,4.542,76,1.036,79,1.211,97,4.084,126,2.954,152,4.223,175,4.87,183,2.315,184,0.776,185,3.495,190,1.318,191,0.004,192,0.005,193,0.004,203,2.489,244,2.315,260,1.192,264,6.036,283,4.87,302,1.096,543,1.534,597,1.882,639,3.429,712,4.407,715,4.673,1105,3.77,1121,5.612,1130,5.791,1262,4.621,1263,6.161,1266,6.161,1267,5.805,1268,6.608,1269,6.608,1270,6.608,1271,6.211,1272,6.211,1273,6.211,1274,6.211,1275,6.211,1293,4.194,1295,4.194,1297,4.194,1299,4.194,1301,4.194,1303,4.194,1306,5.169,1311,3.91,1669,5.177,1844,4.194,1850,4.573,1860,3.684,1877,5.15,1878,5.15,1879,6.808,1880,5.15,1881,5.15,1882,5.15,1883,5.15,1884,5.15,1885,5.15,1886,5.15,1887,5.15,1888,5.15,1889,5.15,1890,5.15,1891,5.15,1892,5.15,1893,5.15,1894,5.15,1895,5.15,1896,6.808,1897,7.627,1898,7.627,1899,5.15,1900,5.15,1901,5.15,1902,5.15,1903,5.15,1904,5.15,1905,5.15,1906,5.15,1907,5.15,1908,5.15]],["title/interfaces/RequestHandlerBuilder.html",[247,0.151,905,2.839]],["body/interfaces/RequestHandlerBuilder.html",[0,0.401,3,0.052,4,0.052,5,0.052,7,0.071,14,1.093,18,0.808,24,3.808,25,0.681,26,0.774,28,1.199,29,0.008,30,0.377,31,0.222,32,0.774,33,0.194,41,0.877,45,1.054,51,0.986,55,2.875,57,1.396,58,1.257,59,1.941,61,1.069,67,0.11,68,3.007,76,1.523,79,1.219,109,0.985,166,4.343,184,0.839,190,1.177,191,0.005,192,0.006,193,0.005,247,0.281,249,0.734,259,4.193,260,0.965,548,0.726,643,2.938,697,3.597,699,3.923,700,1.902,701,3.151,717,3.683,854,4.193,894,3.619,895,3.619,896,4.51,897,5.113,898,3.619,899,3.365,900,5.576,901,4.534,902,4.694,903,5.29,904,3.767,905,5.142,906,3.767,907,4.694,908,3.767,909,4.694,910,3.767,911,3.619,912,4.51,913,3.927,914,4.193,915,4.51,916,4.51,917,3.767,918,4.694,919,3.619,1909,6.077]],["title/classes/RequestHandlerFactory.html",[0,0.221,914,2.639]],["body/classes/RequestHandlerFactory.html",[0,0.4,2,1.127,3,0.052,4,0.052,5,0.052,7,0.071,14,1.09,18,0.803,24,3.799,25,0.679,26,0.77,28,1.193,29,0.008,30,0.375,31,0.226,32,0.77,33,0.193,41,0.873,45,1.052,51,0.984,55,2.869,57,1.393,58,1.253,59,1.931,61,1.064,67,0.11,68,2.997,76,1.518,79,1.217,109,0.982,166,4.329,184,0.837,190,1.17,191,0.005,192,0.006,193,0.005,247,0.281,249,0.586,259,4.179,260,0.962,548,0.722,643,2.928,697,3.59,699,3.788,700,2.576,701,4.267,717,3.731,854,4.179,894,3.6,895,3.6,896,4.495,897,5.101,898,3.6,899,3.347,900,5.571,901,4.529,902,4.679,903,5.282,904,3.748,905,4.901,906,3.748,907,3.748,908,3.748,909,4.679,910,3.748,911,3.6,912,5.132,913,3.914,914,4.556,915,4.495,916,4.495,917,3.748,918,4.679,919,3.6,1910,6.045,1911,6.045]],["title/classes/RequestHandlerFactory-1.html",[0,0.186,194,2.142,914,2.215]],["body/classes/RequestHandlerFactory-1.html",[0,0.273,2,1.097,3,0.05,4,0.05,5,0.05,7,0.069,8,0.601,9,3.014,14,1.071,17,2.718,18,1.212,26,1.087,28,1.604,29,0.008,30,0.46,31,0.213,32,0.946,41,1.071,45,0.906,51,1.005,55,1.96,57,1.376,58,1.349,61,1.306,67,0.069,76,1.886,79,1.212,92,2.471,104,3.259,184,0.755,190,1.14,191,0.006,192,0.006,193,0.004,203,1.806,244,2.646,493,1.281,548,0.886,639,2.646,643,3.486,697,2.452,699,2.514,700,2.545,701,4.215,901,2.874,914,4.109,1112,4.352,1113,3.995,1114,6.189,1116,6.263,1119,5.039,1138,7.814,1215,5.814,1912,5.885,1913,8.128,1914,8.535,1915,5.885,1916,5.885,1917,5.885,1918,8.128,1919,5.885,1920,5.885,1921,8.984,1922,5.885,1923,4.793,1924,6.591,1925,5.885,1926,5.885,1927,7.421,1928,7.421,1929,7.421,1930,5.885,1931,5.885,1932,8.535,1933,5.885,1934,5.885,1935,5.885,1936,5.885,1937,5.227,1938,5.885,1939,5.885,1940,5.885,1941,5.885,1942,5.885,1943,5.885]],["title/interfaces/RequstBody.html",[247,0.151,542,1.094]],["body/interfaces/RequstBody.html",[0,0.145,3,0.027,4,0.041,5,0.027,7,0.037,8,0.386,12,0.852,25,0.282,29,0.008,30,0.526,31,0.242,33,0.304,45,0.382,67,0.116,81,0.654,84,0.666,89,0.679,109,0.876,133,0.978,161,1.782,184,0.318,191,0.002,192,0.004,193,0.002,220,0.718,247,0.304,249,0.463,252,0.551,260,0.399,295,1.095,296,0.595,297,0.718,298,0.666,299,2.217,300,0.641,301,1.095,302,1.483,303,0.718,304,1.095,305,0.718,306,1.328,307,0.718,308,1.328,309,0.718,310,0.718,311,0.718,312,1.055,313,1.095,314,0.718,315,0.718,316,0.718,317,0.718,318,0.718,319,1.43,320,1.095,321,0.718,322,0.718,323,0.705,324,0.718,325,0.718,326,1.095,327,1.075,328,1.075,329,0.732,330,1.513,331,1.095,332,0.718,333,0.718,334,0.732,335,1.095,336,0.705,337,0.718,338,1.328,339,0.718,340,1.075,341,1.328,342,0.718,343,0.692,344,0.718,345,0.718,346,0.732,347,0.718,348,1.303,349,0.705,350,0.718,351,0.718,352,0.705,353,0.718,354,1.719,355,1.328,356,0.718,357,0.718,358,0.718,359,0.718,360,0.705,361,1.095,362,0.997,363,0.718,364,1.457,365,0.718,366,0.732,367,0.732,368,1.353,369,0.732,370,0.732,371,0.718,372,1.095,373,0.718,374,0.732,375,0.732,376,0.705,377,1.457,378,0.732,379,0.732,380,0.732,381,0.732,382,0.732,383,1.075,384,0.718,385,0.718,386,0.718,387,0.718,388,0.718,389,0.718,390,1.095,391,0.718,392,1.075,393,0.718,394,0.718,395,0.718,396,0.718,397,0.718,398,0.718,399,0.718,400,0.718,401,0.718,402,0.718,403,0.718,404,0.718,405,0.718,406,0.718,407,0.718,408,0.718,409,1.095,410,0.718,411,0.718,412,0.718,413,0.718,414,0.718,415,0.718,416,0.718,417,1.303,418,0.718,419,0.718,420,1.095,421,0.718,422,0.718,423,0.718,424,0.718,425,1.457,426,0.718,427,0.732,428,0.718,429,0.718,430,0.718,431,1.457,432,0.718,433,1.095,434,0.718,435,1.328,436,0.718,437,1.095,438,0.718,439,1.485,440,0.718,441,1.075,442,0.718,443,1.095,444,0.718,445,0.718,446,0.718,447,1.095,448,0.718,449,1.075,450,0.732,451,0.732,452,0.718,453,0.718,454,1.075,455,1.055,456,1.483,457,0.718,458,0.679,459,1.501,460,1.754,461,0.718,462,0.718,463,0.718,464,0.718,465,0.718,466,0.718,467,0.718,468,0.718,469,0.718,470,0.718,471,0.718,472,0.718,473,0.718,474,0.718,475,0.718,476,0.718,477,1.328,478,1.328,479,1.717,480,0.718,481,0.718,482,1.095,483,0.718,484,0.732,485,1.328,486,1.328,487,0.718,488,0.732,489,0.718,490,0.732,491,1.095,492,0.718,493,0.998,494,0.732,495,0.732,496,0.718,497,0.732,498,0.718,499,0.718,500,1.095,501,0.732,502,1.095,503,1.095,504,1.095,505,1.513,506,0.718,507,0.732,508,0.732,509,1.095,510,0.718,511,0.732,512,0.732,513,0.583,514,0.718,515,1.303,516,1.303,517,1.095,518,0.705,519,0.705,520,0.705,521,1.095,522,0.718,523,0.718,524,0.718,525,1.016,526,1.328,527,0.705,528,0.705,529,0.718,530,0.732,531,0.732,532,0.718,533,0.718,534,0.732,535,0.732,536,0.732,537,0.732,538,1.095,539,0.705,540,0.705,541,1.303,542,1.328,543,1.457,544,1.485,545,0.718,546,1.095,547,0.732,548,0.374,549,0.718,550,0.629,551,1.596,552,1.622,553,1.583,554,1.773,555,1.035,556,0.732,557,0.718,558,0.606,559,0.718,560,0.718,561,1.328,562,0.732,563,0.732,564,1.095,565,0.732,566,0.732,567,0.718,568,0.732,569,1.583,570,0.732,571,1.717,572,0.732,573,0.732,574,0.732,575,0.732,576,0.732,577,1.328,578,0.732,579,0.732,580,0.732,581,0.732,582,0.732,583,0.718,584,0.732,585,0.732,586,0.732,587,0.732,588,0.732,589,0.732,590,0.732,591,0.732,592,0.732,593,0.732,594,0.732,595,0.718,596,0.732,597,1.301,598,0.732,599,0.732,600,0.732,601,0.732,602,0.732,603,1.095,604,0.732,605,0.718,606,0.732,607,0.732,608,0.732,609,0.732,610,0.732,611,0.718,612,0.718,613,0.732,614,0.732,615,0.732,616,0.718,617,0.718,618,0.732,619,0.732,620,0.718,621,0.732,622,0.732,623,0.732,624,0.732,625,0.718,626,0.732,627,0.718,628,0.732,629,0.732,630,0.718,631,0.732,632,0.732,1208,3.089]],["title/interfaces/Response.html",[247,0.151,548,0.569]],["body/interfaces/Response.html",[0,0.145,3,0.027,4,0.041,5,0.027,7,0.037,8,0.387,12,0.853,25,0.282,29,0.008,30,0.526,31,0.242,33,0.303,45,0.382,67,0.116,81,0.654,84,0.667,89,0.679,109,0.877,133,0.979,161,1.849,184,0.319,191,0.002,192,0.004,193,0.002,220,0.719,247,0.304,249,0.463,252,0.551,260,0.825,295,1.096,296,0.595,297,0.719,298,0.667,299,2.217,300,0.642,301,1.096,302,1.483,303,0.719,304,1.096,305,0.719,306,1.328,307,0.719,308,1.328,309,0.719,310,0.719,311,0.719,312,1.056,313,1.096,314,0.719,315,0.719,316,0.719,317,0.719,318,0.719,319,1.431,320,1.096,321,0.719,322,0.719,323,0.706,324,0.719,325,0.719,326,1.096,327,1.076,328,1.076,329,0.733,330,1.514,331,1.096,332,0.719,333,0.719,334,0.733,335,1.096,336,0.706,337,0.719,338,1.328,339,0.719,340,1.076,341,1.328,342,0.719,343,0.692,344,0.719,345,0.719,346,0.733,347,0.719,348,1.304,349,0.706,350,0.719,351,0.719,352,0.706,353,0.719,354,1.72,355,1.328,356,0.719,357,0.719,358,0.719,359,0.719,360,0.706,361,1.096,362,0.997,363,0.719,364,1.458,365,0.719,366,0.733,367,0.733,368,1.354,369,0.733,370,0.733,371,0.719,372,1.096,373,0.719,374,0.733,375,0.733,376,0.706,377,1.458,378,0.733,379,0.733,380,0.733,381,0.733,382,0.733,383,1.076,384,0.719,385,0.719,386,0.719,387,0.719,388,0.719,389,0.719,390,1.096,391,0.719,392,1.076,393,0.719,394,0.719,395,0.719,396,0.719,397,0.719,398,0.719,399,0.719,400,0.719,401,0.719,402,0.719,403,0.719,404,0.719,405,0.719,406,0.719,407,0.719,408,0.719,409,1.096,410,0.719,411,0.719,412,0.719,413,0.719,414,0.719,415,0.719,416,0.719,417,1.304,418,0.719,419,0.719,420,1.096,421,0.719,422,0.719,423,0.719,424,0.719,425,1.458,426,0.719,427,0.733,428,0.719,429,0.719,430,0.719,431,1.458,432,0.719,433,1.096,434,0.719,435,1.328,436,0.719,437,1.096,438,0.719,439,1.486,440,0.719,441,1.076,442,0.719,443,1.096,444,0.719,445,0.719,446,0.719,447,1.096,448,0.719,449,1.076,450,0.733,451,0.733,452,0.719,453,0.719,454,1.076,455,1.056,456,1.016,457,0.719,458,0.679,459,1.501,460,1.754,461,0.719,462,0.719,463,0.719,464,0.719,465,0.719,466,0.719,467,0.719,468,0.719,469,0.719,470,0.719,471,0.719,472,0.719,473,0.719,474,0.719,475,0.719,476,0.719,477,1.328,478,1.328,479,1.718,480,0.719,481,0.719,482,1.096,483,0.719,484,0.733,485,1.328,486,1.328,487,0.719,488,0.733,489,0.719,490,0.733,491,1.096,492,0.719,493,0.999,494,0.733,495,0.733,496,0.719,497,0.733,498,0.719,499,0.719,500,1.096,501,0.733,502,1.096,503,1.096,504,1.096,505,1.514,506,0.719,507,0.733,508,0.733,509,1.096,510,0.719,511,0.733,512,0.733,513,0.584,514,0.719,515,1.304,516,1.304,517,1.096,518,0.706,519,0.706,520,0.706,521,1.096,522,0.719,523,0.719,524,0.719,525,1.016,526,1.328,527,0.706,528,0.706,529,0.719,530,0.733,531,0.733,532,0.719,533,0.719,534,0.733,535,0.733,536,0.733,537,0.733,538,1.096,539,0.706,540,0.706,541,1.304,542,1.486,543,0.706,544,0.719,545,0.719,546,1.096,547,0.733,548,0.57,549,1.486,550,1.302,551,1.596,552,1.622,553,1.583,554,1.773,555,1.036,556,0.733,557,0.719,558,0.606,559,0.719,560,0.719,561,1.328,562,0.733,563,0.733,564,1.096,565,0.733,566,0.733,567,0.719,568,0.733,569,1.583,570,0.733,571,1.718,572,0.733,573,0.733,574,0.733,575,0.733,576,0.733,577,1.328,578,0.733,579,0.733,580,0.733,581,0.733,582,0.733,583,0.719,584,0.733,585,0.733,586,0.733,587,0.733,588,0.733,589,0.733,590,0.733,591,0.733,592,0.733,593,0.733,594,0.733,595,0.719,596,0.733,597,1.302,598,0.733,599,0.733,600,0.733,601,0.733,602,0.733,603,1.096,604,0.733,605,0.719,606,0.733,607,0.733,608,0.733,609,0.733,610,0.733,611,0.719,612,0.719,613,0.733,614,0.733,615,0.733,616,0.719,617,0.719,618,0.733,619,0.733,620,0.719,621,0.733,622,0.733,623,0.733,624,0.733,625,0.719,626,0.733,627,0.719,628,0.733,629,0.733,630,0.719,631,0.733,632,0.733]],["title/interfaces/ResponseContent.html",[247,0.151,671,2.472]],["body/interfaces/ResponseContent.html",[0,0.297,3,0.055,4,0.055,5,0.055,7,0.075,8,0.633,12,1.243,16,2.643,18,1.219,22,2.482,25,0.576,29,0.008,31,0.211,32,1.168,33,0.303,51,0.893,57,1.323,58,1.297,59,2.044,61,1.126,67,0.099,71,3.81,76,1.287,79,1.22,190,1.239,191,0.005,192,0.006,193,0.005,247,0.202,249,0.62,548,0.933,558,1.702,661,4.053,662,3.542,663,4.816,665,3.217,666,3.542,667,3.81,668,3.81,669,3.81,670,3.81,671,4.376,681,5.191,685,5.583,791,4.911,793,4.911,796,3.67,816,5.681,827,4.576,828,4.576,829,5.681,830,5.681,831,8.005,832,5.681,833,5.681,834,4.576,835,4.576,836,5.681,837,4.576,838,4.576]],["title/interfaces/ResponseContent-1.html",[194,2.142,247,0.127,671,2.074]],["body/interfaces/ResponseContent-1.html",[0,0.31,3,0.043,4,0.043,5,0.043,7,0.059,8,0.54,9,2.974,12,1.181,16,2.681,18,1.223,19,3.392,22,2.59,25,0.45,29,0.008,30,0.497,31,0.187,32,1.095,33,0.297,51,0.858,57,1.13,58,1.108,59,1.597,60,2.676,61,0.879,64,5.409,65,3.392,67,0.094,71,2.976,76,1.511,79,1.25,92,2.862,100,3.392,101,5.626,109,0.597,113,4.53,126,3.828,131,3.392,135,4.475,159,3.575,172,6.525,183,3,184,0.679,185,4.53,190,0.968,191,0.004,192,0.005,193,0.004,235,3.392,238,3.098,247,0.158,249,0.485,362,1.044,458,1.084,548,0.957,661,3.461,662,2.767,663,4.683,665,2.513,666,2.767,671,4.624,681,5.051,741,3.235,757,3.795,758,3.795,759,4.137,761,3.795,762,4.774,790,5.18,791,5.058,792,5.12,793,5.058,796,4.931,799,3.575,803,3.795,804,4.32,827,3.575,828,3.575,834,3.575,835,3.575,837,3.575,838,3.575,839,4.07,845,5.067,846,4.07,847,6.53,848,5.435,849,4.07,850,4.07,851,4.07,852,5.705,853,4.07,854,2.767,855,4.07,856,4.07,857,4.07,858,3.575,859,6.344,860,5.435,861,4.07,862,4.07,863,6.119,864,4.07,865,4.07,866,4.07,867,5.435,868,4.07,869,4.07,870,4.07,871,4.07,872,4.07,873,4.07,874,4.07,875,5.435,876,4.07,877,4.07,878,4.07,879,4.07]],["title/classes/RouteMatcher.html",[0,0.221,1923,3.881]],["body/classes/RouteMatcher.html",[0,0.263,2,1.055,3,0.048,4,0.048,5,0.048,7,0.066,8,0.586,9,3.57,14,1.045,17,4.107,18,1.217,22,2.809,25,0.757,26,1.178,28,1.117,29,0.008,30,0.449,31,0.226,32,0.721,41,1.152,45,1.027,51,1.016,55,2.961,57,1.424,58,1.325,59,1.808,61,1.274,67,0.066,68,2.248,76,1.456,79,1.095,104,4.008,131,4.913,154,3.509,184,0.576,190,1.096,191,0.004,192,0.006,193,0.004,203,1.736,234,6.107,244,2.544,260,1.202,264,4.048,288,4.231,336,1.895,352,1.275,493,1.378,639,2.544,697,3.325,726,4.609,729,2.935,901,4.343,981,4.686,1006,4.609,1071,6.753,1101,5.417,1112,4.762,1113,3.841,1114,5.758,1267,4.048,1306,4.297,1923,5.895,1924,5.026,1937,5.026,1944,5.659,1945,9.32,1946,8.413,1947,8.413,1948,5.659,1949,7.239,1950,5.659,1951,5.659,1952,5.659,1953,5.659,1954,5.659,1955,5.659,1956,5.659,1957,5.659,1958,5.659,1959,5.659,1960,5.659,1961,5.659,1962,5.659,1963,5.659,1964,7.239,1965,5.659,1966,5.659,1967,5.659,1968,5.659,1969,5.659,1970,5.659,1971,5.659,1972,5.659,1973,5.659,1974,7.239,1975,5.659,1976,5.659,1977,5.659,1978,5.659]],["title/interfaces/Router.html",[247,0.151,1114,3.085]],["body/interfaces/Router.html",[3,0.058,4,0.058,5,0.058,7,0.079,8,0.654,25,0.727,29,0.008,31,0.223,32,1.141,33,0.292,45,0.985,51,0.987,55,2.981,57,1.515,58,1.486,61,1.188,67,0.105,92,2.248,191,0.005,192,0.006,193,0.005,244,3.036,247,0.283,249,0.655,260,0.86,493,1.394,548,0.964,717,3.641,729,3.502,901,3.297,981,4.371,1098,5.55,1110,5.776,1111,4.83,1112,4.626,1113,4.583,1114,5.593,1115,5.127,1116,6.424,1117,5.776,1118,5.127,1119,4.186,1120,6.403,1121,5.795,1122,5.127]],["title/interfaces/S3SkillConfig.html",[247,0.151,648,3.235]],["body/interfaces/S3SkillConfig.html",[3,0.059,4,0.059,5,0.059,7,0.081,8,0.661,25,0.619,29,0.007,31,0.225,33,0.3,51,0.933,57,1.382,58,1.142,67,0.106,109,1.04,191,0.005,192,0.006,193,0.005,247,0.285,249,0.667,633,6.443,634,4.454,635,4.921,636,4.67,637,5.224,638,6.793,639,3.093,640,4.684,641,5.542,642,5.062,643,3.168,644,4.454,645,4.921,646,5.062,647,5.841,648,5.91,649,6.839,650,6.839,651,5.542,652,4.454,653,4.921,654,4.454,655,4.67,656,4.67,657,4.67,658,4.67]],["title/classes/SentryErrorHandlerFactory.html",[0,0.221,994,3.881]],["body/classes/SentryErrorHandlerFactory.html",[0,0.246,2,0.986,3,0.045,4,0.045,5,0.045,7,0.062,14,1.001,18,0.703,24,2.443,26,0.674,29,0.008,31,0.132,33,0.284,41,0.764,45,0.646,51,0.972,55,2.908,57,1.388,58,1.283,59,1.691,61,0.931,67,0.102,68,2.102,76,1.879,79,1.188,94,3.552,191,0.004,192,0.005,193,0.004,247,0.167,252,0.931,260,0.674,548,0.828,550,1.064,555,1.503,640,3.976,642,5.823,665,4.125,697,2.205,699,3.301,700,2.42,702,5.202,704,3.152,717,3.462,718,3.281,755,6.679,759,4.792,771,6.679,791,2.833,793,3.711,801,5.278,804,5.004,809,3.417,813,4.018,858,3.785,883,4.018,964,6.933,965,5.644,966,4.309,967,4.699,969,4.699,971,6.679,973,6.864,974,4.699,975,4.699,976,4.699,977,4.699,978,6.933,979,6.155,980,6.864,981,5.309,982,6.155,983,7.283,984,6.155,985,7.283,986,6.155,987,6.864,988,6.864,989,6.864,990,7.757,991,6.864,992,6.864,993,6.864,994,5.644,995,6.294,996,4.699,997,4.699,998,4.699,999,4.699,1000,4.699,1001,4.699,1002,4.699,1003,4.699,1004,4.699,1005,6.155,1006,4.309,1007,4.699,1008,4.699,1009,4.699,1010,6.155,1011,4.309,1012,3.785,1013,4.699,1014,4.699,1015,4.699,1016,4.699,1017,4.699,1018,4.699,1019,3.426,1020,4.699,1021,4.699,1022,4.699,1023,4.699,1024,4.699,1025,4.699,1026,4.699,1027,4.699,1028,4.699,1029,4.699,1030,4.699,1038,3.592,1979,5.292]],["title/interfaces/SessionAttribute.html",[247,0.151,1980,3.881]],["body/interfaces/SessionAttribute.html",[0,0.311,3,0.057,4,0.057,5,0.057,16,2.017,18,1.246,25,0.603,26,0.854,29,0.008,33,0.275,51,0.918,57,1.135,58,1.335,61,1.18,67,0.094,68,2.664,79,1.22,124,5.813,125,4.045,133,1.648,184,0.682,191,0.005,192,0.006,193,0.005,235,5.458,238,5.34,239,4.797,244,3.015,247,0.212,249,0.65,251,4.797,252,1.415,265,5.753,298,1.944,639,3.015,1019,4.342,1669,5.846,1834,7.273,1838,5.092,1860,4.797,1980,6.549,1981,5.956,1982,6.707,1983,5.462,1984,5.956,1985,5.956,1986,5.956,1987,5.092,1988,5.956,1989,5.956,1990,5.956,1991,5.956,1992,5.956,1993,5.956,1994,5.956]],["title/classes/SessionFactory.html",[0,0.221,1838,3.619]],["body/classes/SessionFactory.html",[0,0.276,2,1.106,3,0.051,4,0.051,5,0.051,7,0.07,8,0.604,14,1.077,16,2.454,18,1.292,25,0.734,26,1.178,28,1.804,29,0.008,30,0.558,31,0.231,32,1.147,33,0.273,41,0.857,51,0.852,57,1.005,58,1.239,61,1.044,67,0.087,68,2.963,79,1.189,124,5.932,125,4.104,133,1.673,184,0.759,190,1.149,191,0.005,192,0.006,193,0.005,203,1.821,235,5.539,238,5.582,239,5.337,244,2.669,247,0.188,252,1.044,265,5.337,298,1.985,639,3.849,1019,4.83,1669,5.811,1834,7.442,1838,5.665,1860,4.246,1869,4.507,1980,4.834,1981,5.272,1983,6.645,1984,5.272,1985,7.247,1986,5.272,1987,6.196,1988,5.272,1989,7.247,1990,5.272,1991,7.247,1992,5.272,1993,7.247,1994,7.603,1995,5.936,1996,5.936,1997,5.936,1998,5.936,1999,5.936,2000,5.936,2001,5.936,2002,5.936,2003,5.936,2004,5.936,2005,5.936,2006,5.936,2007,5.936]],["title/classes/SettingAPIClient.html",[0,0.221,2008,4.233]],["body/classes/SettingAPIClient.html",[0,0.309,2,1.242,3,0.057,4,0.057,5,0.057,7,0.078,8,0.649,14,1.156,16,2.583,17,4.389,18,1.264,26,1.135,28,1.695,29,0.007,30,0.533,31,0.222,32,1.094,33,0.305,41,1.24,45,1.13,51,0.915,57,1.128,58,1.106,60,3.567,61,1.172,67,0.078,79,1.118,109,0.956,190,1.29,191,0.005,192,0.006,193,0.005,196,5.83,203,2.044,513,1.661,959,8.222,2008,7.113,2009,6.661,2010,8.589,2011,8.589,2012,8.589,2013,8.009,2014,6.661,2015,6.661,2016,6.661,2017,6.661,2018,6.661,2019,6.661,2020,6.661,2021,6.661,2022,6.661,2023,6.661]],["title/interfaces/Situation.html",[247,0.151,1116,3.235]],["body/interfaces/Situation.html",[3,0.057,4,0.057,5,0.057,7,0.079,8,0.652,25,0.804,29,0.008,31,0.223,32,1.182,33,0.275,45,0.983,51,0.985,55,2.977,57,1.547,58,1.517,61,1.184,67,0.105,92,2.24,154,4.994,191,0.005,192,0.006,193,0.005,244,3.024,247,0.283,249,0.652,260,0.857,493,1.578,548,0.962,717,2.735,729,3.488,901,3.285,981,5.788,1038,4.565,1098,4.17,1110,5.763,1111,4.811,1112,4.618,1113,4.565,1114,5.583,1115,6.117,1116,6.068,1117,6.395,1118,6.788,1119,4.17,1120,5.763,1121,4.354,1122,5.107]],["title/interfaces/SituationState.html",[247,0.151,1117,3.409]],["body/interfaces/SituationState.html",[3,0.058,4,0.058,5,0.058,7,0.08,8,0.658,25,0.731,29,0.008,31,0.216,32,1.144,33,0.3,45,0.991,51,0.991,55,2.99,57,1.52,58,1.491,61,1.2,67,0.105,92,2.99,191,0.005,192,0.006,193,0.005,244,3.066,247,0.284,249,0.661,260,0.869,493,1.402,548,0.97,717,2.773,729,3.536,901,3.33,981,4.414,1098,4.227,1110,5.81,1111,4.878,1112,4.645,1113,4.628,1114,5.258,1115,5.178,1116,5.888,1117,6.206,1118,5.178,1119,5.568,1120,5.81,1121,4.414,1122,5.178]],["title/interfaces/Skill.html",[247,0.151,362,0.996]],["body/interfaces/Skill.html",[0,0.146,3,0.027,4,0.041,5,0.027,7,0.037,8,0.389,12,0.856,25,0.284,29,0.008,30,0.544,31,0.241,33,0.304,45,0.385,67,0.116,81,0.658,84,0.671,89,0.684,109,0.879,133,0.983,161,1.786,184,0.321,191,0.002,192,0.004,193,0.002,220,0.724,247,0.304,249,0.465,252,0.555,260,0.402,295,1.101,296,0.599,297,0.724,298,0.671,299,2.218,300,0.646,301,1.101,302,1.487,303,0.724,304,1.101,305,0.724,306,1.334,307,0.724,308,1.334,309,0.724,310,0.724,311,0.724,312,1.061,313,1.101,314,0.724,315,0.724,316,0.724,317,0.724,318,0.724,319,1.435,320,1.101,321,0.724,322,0.724,323,0.71,324,0.724,325,0.724,326,1.101,327,1.081,328,1.081,329,0.737,330,1.519,331,1.101,332,0.724,333,0.724,334,0.737,335,1.101,336,0.71,337,0.724,338,1.334,339,0.724,340,1.081,341,1.334,342,0.724,343,0.697,344,0.724,345,0.724,346,0.737,347,0.724,348,1.309,349,0.71,350,0.724,351,0.724,352,0.71,353,0.724,354,1.724,355,1.334,356,0.724,357,0.724,358,0.724,359,0.724,360,0.71,361,1.101,362,1.213,363,0.724,364,1.463,365,0.724,366,0.737,367,0.737,368,1.359,369,0.737,370,0.737,371,0.724,372,1.101,373,0.724,374,0.737,375,0.737,376,0.71,377,1.463,378,0.737,379,0.737,380,0.737,381,0.737,382,0.737,383,1.081,384,0.724,385,0.724,386,0.724,387,0.724,388,0.724,389,0.724,390,1.101,391,0.724,392,1.081,393,0.724,394,0.724,395,0.724,396,0.724,397,0.724,398,0.724,399,0.724,400,0.724,401,0.724,402,0.724,403,0.724,404,0.724,405,0.724,406,0.724,407,0.724,408,0.724,409,1.101,410,0.724,411,0.724,412,0.724,413,0.724,414,0.724,415,0.724,416,0.724,417,1.309,418,0.724,419,0.724,420,1.101,421,0.724,422,0.724,423,0.724,424,0.724,425,1.463,426,0.724,427,0.737,428,0.724,429,0.724,430,0.724,431,1.463,432,0.724,433,1.101,434,0.724,435,1.334,436,0.724,437,1.101,438,0.724,439,1.491,440,0.724,441,1.081,442,0.724,443,1.101,444,0.724,445,0.724,446,0.724,447,1.101,448,0.724,449,1.081,450,0.737,451,0.737,452,0.724,453,0.724,454,1.081,455,1.061,456,1.021,457,0.724,458,0.684,459,1.503,460,1.756,461,0.724,462,0.724,463,0.724,464,0.724,465,0.724,466,0.724,467,0.724,468,0.724,469,0.724,470,0.724,471,0.724,472,0.724,473,0.724,474,0.724,475,0.724,476,0.724,477,1.334,478,1.334,479,1.722,480,0.724,481,0.724,482,1.101,483,0.724,484,0.737,485,1.334,486,1.334,487,0.724,488,0.737,489,0.724,490,0.737,491,1.101,492,0.724,493,1.003,494,0.737,495,0.737,496,0.724,497,0.737,498,0.724,499,0.724,500,1.101,501,0.737,502,1.101,503,1.101,504,1.101,505,1.519,506,0.724,507,0.737,508,0.737,509,1.101,510,0.724,511,0.737,512,0.737,513,0.588,514,0.724,515,1.309,516,1.309,517,1.101,518,0.71,519,0.71,520,0.71,521,1.101,522,0.724,523,0.724,524,0.724,525,1.021,526,1.334,527,0.71,528,0.71,529,0.724,530,0.737,531,0.737,532,0.724,533,0.724,534,0.737,535,0.737,536,0.737,537,0.737,538,1.101,539,0.71,540,0.71,541,1.309,542,1.101,543,0.71,544,0.724,545,0.724,546,1.101,547,0.737,548,0.376,549,0.724,550,0.634,551,1.597,552,1.625,553,1.586,554,1.777,555,1.041,556,0.737,557,0.724,558,0.61,559,0.724,560,0.724,561,1.334,562,0.737,563,0.737,564,1.101,565,0.737,566,0.737,567,0.724,568,0.737,569,1.586,570,0.737,571,1.722,572,0.737,573,0.737,574,0.737,575,0.737,576,0.737,577,1.334,578,0.737,579,0.737,580,0.737,581,0.737,582,0.737,583,0.724,584,0.737,585,0.737,586,0.737,587,0.737,588,0.737,589,0.737,590,0.737,591,0.737,592,0.737,593,0.737,594,0.737,595,0.724,596,0.737,597,1.306,598,0.737,599,0.737,600,0.737,601,0.737,602,0.737,603,1.101,604,0.737,605,0.724,606,0.737,607,0.737,608,0.737,609,0.737,610,0.737,611,0.724,612,0.724,613,0.737,614,0.737,615,0.737,616,0.724,617,0.724,618,0.737,619,0.737,620,0.724,621,0.737,622,0.737,623,0.737,624,0.737,625,0.724,626,0.737,627,0.724,628,0.737,629,0.737,630,0.724,631,0.737,632,0.737]],["title/interfaces/SkillConstants.html",[247,0.151,644,3.085]],["body/interfaces/SkillConstants.html",[0,0.331,3,0.061,4,0.061,5,0.061,17,3.295,18,0.948,26,0.909,29,0.007,33,0.266,51,0.953,55,2.778,56,3.951,57,1.412,58,1.385,59,2.28,67,0.104,76,1.435,79,0.929,145,5.968,190,1.382,191,0.005,192,0.006,193,0.005,247,0.226,249,0.692,251,5.104,252,1.468,636,6.001,639,3.208,640,4.786,644,5.401,700,2.234,807,6.794,808,6.337,809,2.973,812,6.337,813,5.418,814,6.337,815,6.337,2024,7.135]],["title/interfaces/SkillHandlers.html",[247,0.151,654,3.085]],["body/interfaces/SkillHandlers.html",[3,0.058,4,0.058,5,0.058,7,0.079,8,0.655,25,0.61,29,0.007,31,0.232,32,1.184,33,0.276,51,0.924,57,1.37,58,1.125,67,0.105,109,0.966,191,0.005,192,0.006,193,0.005,247,0.284,249,0.657,633,6.19,634,4.388,635,4.849,636,4.601,637,5.147,638,6.552,639,3.048,640,5.142,641,6.084,642,5.557,643,3.478,644,4.388,645,4.849,646,5.018,647,5.79,648,5.494,649,5.147,650,5.147,651,5.494,652,4.388,653,4.849,654,5.24,655,6.084,656,6.084,657,6.084,658,6.084]],["title/interfaces/SkillHandlersBuilder.html",[247,0.151,2025,3.881]],["body/interfaces/SkillHandlersBuilder.html",[0,0.29,3,0.053,4,0.053,5,0.053,7,0.073,14,1.112,18,0.83,26,1.141,28,1.72,29,0.008,30,0.541,31,0.218,32,1.111,41,1.293,51,0.88,57,1.057,58,1.037,67,0.09,76,1.256,79,1.187,191,0.005,192,0.006,193,0.005,247,0.198,249,0.606,634,5.903,640,5.136,641,6.077,642,5.551,643,3.474,654,5.644,655,5.668,656,5.668,657,5.668,658,5.668,700,1.955,701,3.24,1012,5.51,1105,3.459,2025,7.859,2026,5.547,2027,7.416,2028,7.416,2029,7.416,2030,7.416,2031,7.952,2032,6.84,2033,6.247,2034,6.84,2035,6.247,2036,6.84,2037,6.247,2038,6.247,2039,6.247,2040,6.247,2041,5.547,2042,5.547,2043,5.087,2044,5.547,2045,5.547,2046,6.84,2047,5.547,2048,5.547,2049,6.84,2050,5.547,2051,5.547,2052,6.84,2053,5.547]],["title/classes/SkillHandlersFactory.html",[0,0.221,2043,3.881]],["body/classes/SkillHandlersFactory.html",[0,0.308,2,1.238,3,0.057,4,0.057,5,0.057,7,0.078,14,1.154,18,0.883,26,0.846,29,0.008,41,0.959,51,0.913,57,1.124,58,1.103,67,0.094,76,1.336,79,1.204,191,0.005,192,0.006,193,0.005,247,0.21,634,5.176,640,4.921,641,5.822,642,5.318,643,3.329,654,5.553,655,5.427,656,5.427,657,5.427,658,5.427,700,2.685,701,4.617,1012,5.72,1105,3.678,2025,7.814,2026,5.899,2027,5.899,2028,5.899,2029,5.899,2030,5.899,2031,7.101,2032,5.899,2034,5.899,2036,5.899,2041,5.899,2042,5.899,2043,6.511,2044,5.899,2045,5.899,2046,7.101,2047,5.899,2048,5.899,2049,7.101,2050,5.899,2051,5.899,2052,7.101,2053,5.899,2054,6.642]],["title/interfaces/SkillState.html",[247,0.151,1217,3.619]],["body/interfaces/SkillState.html",[0,0.267,3,0.049,4,0.049,5,0.049,7,0.067,8,0.593,9,3.14,18,1.25,22,2.234,25,0.762,29,0.008,31,0.211,32,1.079,33,0.233,51,0.658,56,4.456,57,0.975,58,0.956,59,1.84,67,0.099,76,1.88,79,1.236,90,2.459,91,2.459,92,3.088,93,2.459,94,2.342,95,2.459,96,2.459,110,5.933,118,4.119,125,3.681,191,0.004,192,0.006,193,0.004,234,3.728,247,0.232,249,0.558,288,2.896,493,1.639,639,4.353,1112,3.083,1119,5.696,1215,6.253,1216,4.372,1217,6.637,1218,7.275,1219,6.895,1220,4.689,1221,5.961,1222,5.961,1223,5.961,1224,4.689,1225,5.961,1226,4.689,1227,6.11,1228,4.689,1229,4.689,1230,5.961,1231,4.372,1232,7.118,1233,4.689,1234,4.689,1235,4.689,1236,4.689,1237,4.689,1238,6.895,1239,4.372,1240,4.689,1241,4.689,1242,4.689,1243,4.689,1244,4.689,1245,4.689,1246,4.689,1247,4.689,1248,4.689,1249,4.689,1250,4.689]],["title/interfaces/Soccer.html",[247,0.151,433,1.094]],["body/interfaces/Soccer.html",[0,0.146,3,0.027,4,0.041,5,0.027,7,0.037,8,0.389,12,0.856,25,0.284,29,0.008,30,0.544,31,0.241,33,0.304,45,0.385,67,0.116,81,0.658,84,0.671,89,0.684,109,0.879,133,0.983,161,1.786,184,0.321,191,0.002,192,0.004,193,0.002,220,0.724,247,0.304,249,0.465,252,0.555,260,0.402,295,1.101,296,0.599,297,0.724,298,0.671,299,2.218,300,0.646,301,1.101,302,1.487,303,0.724,304,1.101,305,0.724,306,1.334,307,0.724,308,1.334,309,0.724,310,0.724,311,0.724,312,1.061,313,1.101,314,0.724,315,0.724,316,0.724,317,0.724,318,0.724,319,1.435,320,1.101,321,0.724,322,0.724,323,0.71,324,0.724,325,0.724,326,1.101,327,1.081,328,1.081,329,0.737,330,1.519,331,1.101,332,0.724,333,0.724,334,0.737,335,1.101,336,0.71,337,0.724,338,1.334,339,0.724,340,1.081,341,1.334,342,0.724,343,0.697,344,0.724,345,0.724,346,0.737,347,0.724,348,1.309,349,0.71,350,0.724,351,0.724,352,0.71,353,0.724,354,1.724,355,1.334,356,0.724,357,0.724,358,0.724,359,0.724,360,0.71,361,1.101,362,1.002,363,0.724,364,1.463,365,0.724,366,0.737,367,0.737,368,1.359,369,0.737,370,0.737,371,0.724,372,1.101,373,0.724,374,0.737,375,0.737,376,0.71,377,1.463,378,0.737,379,0.737,380,0.737,381,0.737,382,0.737,383,1.081,384,0.724,385,0.724,386,0.724,387,0.724,388,0.724,389,0.724,390,1.101,391,0.724,392,1.081,393,0.724,394,0.724,395,0.724,396,0.724,397,0.724,398,0.724,399,0.724,400,0.724,401,0.724,402,0.724,403,0.724,404,0.724,405,0.724,406,0.724,407,0.724,408,0.724,409,1.101,410,0.724,411,0.724,412,0.724,413,0.724,414,0.724,415,0.724,416,0.724,417,1.309,418,0.724,419,0.724,420,1.101,421,0.724,422,0.724,423,0.724,424,0.724,425,1.463,426,0.724,427,0.737,428,0.724,429,0.724,430,0.724,431,1.463,432,0.724,433,1.334,434,0.724,435,1.334,436,0.724,437,1.101,438,0.724,439,1.491,440,0.724,441,1.081,442,0.724,443,1.101,444,0.724,445,0.724,446,0.724,447,1.101,448,0.724,449,1.081,450,0.737,451,0.737,452,0.724,453,0.724,454,1.081,455,1.061,456,1.021,457,0.724,458,0.684,459,1.503,460,1.756,461,0.724,462,0.724,463,0.724,464,0.724,465,0.724,466,0.724,467,0.724,468,0.724,469,0.724,470,0.724,471,0.724,472,0.724,473,0.724,474,0.724,475,0.724,476,0.724,477,1.334,478,1.334,479,1.722,480,0.724,481,0.724,482,1.101,483,0.724,484,0.737,485,1.334,486,1.334,487,0.724,488,0.737,489,0.724,490,0.737,491,1.101,492,0.724,493,1.003,494,0.737,495,0.737,496,0.724,497,0.737,498,0.724,499,0.724,500,1.101,501,0.737,502,1.101,503,1.101,504,1.101,505,1.519,506,0.724,507,0.737,508,0.737,509,1.101,510,0.724,511,0.737,512,0.737,513,0.588,514,0.724,515,1.309,516,1.309,517,1.101,518,0.71,519,0.71,520,0.71,521,1.101,522,0.724,523,0.724,524,0.724,525,1.021,526,1.334,527,0.71,528,0.71,529,0.724,530,0.737,531,0.737,532,0.724,533,0.724,534,0.737,535,0.737,536,0.737,537,0.737,538,1.101,539,0.71,540,0.71,541,1.309,542,1.101,543,0.71,544,0.724,545,0.724,546,1.101,547,0.737,548,0.376,549,0.724,550,0.634,551,1.597,552,1.625,553,1.586,554,1.777,555,1.041,556,0.737,557,0.724,558,0.61,559,0.724,560,0.724,561,1.334,562,0.737,563,0.737,564,1.101,565,0.737,566,0.737,567,0.724,568,0.737,569,1.586,570,0.737,571,1.722,572,0.737,573,0.737,574,0.737,575,0.737,576,0.737,577,1.334,578,0.737,579,0.737,580,0.737,581,0.737,582,0.737,583,0.724,584,0.737,585,0.737,586,0.737,587,0.737,588,0.737,589,0.737,590,0.737,591,0.737,592,0.737,593,0.737,594,0.737,595,0.724,596,0.737,597,1.306,598,0.737,599,0.737,600,0.737,601,0.737,602,0.737,603,1.101,604,0.737,605,0.724,606,0.737,607,0.737,608,0.737,609,0.737,610,0.737,611,0.724,612,0.724,613,0.737,614,0.737,615,0.737,616,0.724,617,0.724,618,0.737,619,0.737,620,0.724,621,0.737,622,0.737,623,0.737,624,0.737,625,0.724,626,0.737,627,0.724,628,0.737,629,0.737,630,0.724,631,0.737,632,0.737]],["title/interfaces/SportsEvent.html",[247,0.151,431,1.074]],["body/interfaces/SportsEvent.html",[0,0.145,3,0.027,4,0.041,5,0.027,7,0.037,8,0.387,12,0.853,25,0.282,29,0.008,30,0.526,31,0.242,33,0.303,45,0.382,67,0.116,81,0.654,84,0.667,89,0.679,109,0.877,133,0.979,161,1.783,184,0.319,191,0.002,192,0.004,193,0.002,220,0.719,247,0.304,249,0.463,252,0.551,260,0.399,295,1.096,296,0.595,297,0.719,298,0.667,299,2.217,300,0.642,301,1.096,302,1.483,303,0.719,304,1.096,305,0.719,306,1.328,307,0.719,308,1.328,309,0.719,310,0.719,311,0.719,312,1.056,313,1.096,314,0.719,315,0.719,316,0.719,317,0.719,318,0.719,319,1.431,320,1.096,321,0.719,322,0.719,323,0.706,324,0.719,325,0.719,326,1.096,327,1.076,328,1.076,329,0.733,330,1.514,331,1.096,332,0.719,333,0.719,334,0.733,335,1.096,336,0.706,337,0.719,338,1.328,339,0.719,340,1.076,341,1.328,342,0.719,343,0.692,344,0.719,345,0.719,346,0.733,347,0.719,348,1.304,349,0.706,350,0.719,351,0.719,352,0.706,353,0.719,354,1.72,355,1.328,356,0.719,357,0.719,358,0.719,359,0.719,360,0.706,361,1.096,362,0.997,363,0.719,364,1.458,365,0.719,366,0.733,367,0.733,368,1.354,369,0.733,370,0.733,371,0.719,372,1.096,373,0.719,374,0.733,375,0.733,376,0.706,377,1.458,378,0.733,379,0.733,380,0.733,381,0.733,382,0.733,383,1.076,384,0.719,385,0.719,386,0.719,387,0.719,388,0.719,389,0.719,390,1.096,391,0.719,392,1.076,393,0.719,394,0.719,395,0.719,396,0.719,397,0.719,398,0.719,399,0.719,400,0.719,401,0.719,402,0.719,403,0.719,404,0.719,405,0.719,406,0.719,407,0.719,408,0.719,409,1.096,410,0.719,411,0.719,412,0.719,413,0.719,414,0.719,415,0.719,416,0.719,417,1.304,418,0.719,419,0.719,420,1.096,421,0.719,422,0.719,423,0.719,424,0.719,425,1.458,426,0.719,427,0.733,428,0.719,429,0.719,430,0.719,431,1.57,432,1.486,433,1.486,434,1.486,435,1.753,436,1.486,437,1.096,438,0.719,439,1.486,440,0.719,441,1.076,442,0.719,443,1.096,444,0.719,445,0.719,446,0.719,447,1.096,448,0.719,449,1.076,450,0.733,451,0.733,452,0.719,453,0.719,454,1.076,455,1.056,456,1.016,457,0.719,458,0.679,459,1.501,460,1.754,461,0.719,462,0.719,463,0.719,464,0.719,465,0.719,466,0.719,467,0.719,468,0.719,469,0.719,470,0.719,471,0.719,472,0.719,473,0.719,474,0.719,475,0.719,476,0.719,477,1.328,478,1.328,479,1.718,480,0.719,481,0.719,482,1.096,483,0.719,484,0.733,485,1.328,486,1.328,487,0.719,488,0.733,489,0.719,490,0.733,491,1.096,492,0.719,493,0.999,494,0.733,495,0.733,496,0.719,497,0.733,498,0.719,499,0.719,500,1.096,501,0.733,502,1.096,503,1.096,504,1.096,505,1.514,506,0.719,507,0.733,508,0.733,509,1.096,510,0.719,511,0.733,512,0.733,513,0.584,514,0.719,515,1.304,516,1.304,517,1.096,518,0.706,519,0.706,520,0.706,521,1.096,522,0.719,523,0.719,524,0.719,525,1.016,526,1.328,527,0.706,528,0.706,529,0.719,530,0.733,531,0.733,532,0.719,533,0.719,534,0.733,535,0.733,536,0.733,537,0.733,538,1.096,539,0.706,540,0.706,541,1.304,542,1.096,543,0.706,544,0.719,545,0.719,546,1.096,547,0.733,548,0.374,549,0.719,550,0.63,551,1.596,552,1.622,553,1.583,554,1.773,555,1.036,556,0.733,557,0.719,558,0.606,559,0.719,560,0.719,561,1.328,562,0.733,563,0.733,564,1.096,565,0.733,566,0.733,567,0.719,568,0.733,569,1.583,570,0.733,571,1.718,572,0.733,573,0.733,574,0.733,575,0.733,576,0.733,577,1.328,578,0.733,579,0.733,580,0.733,581,0.733,582,0.733,583,0.719,584,0.733,585,0.733,586,0.733,587,0.733,588,0.733,589,0.733,590,0.733,591,0.733,592,0.733,593,0.733,594,0.733,595,0.719,596,0.733,597,1.302,598,0.733,599,0.733,600,0.733,601,0.733,602,0.733,603,1.096,604,0.733,605,0.719,606,0.733,607,0.733,608,0.733,609,0.733,610,0.733,611,0.719,612,0.719,613,0.733,614,0.733,615,0.733,616,0.719,617,0.719,618,0.733,619,0.733,620,0.719,621,0.733,622,0.733,623,0.733,624,0.733,625,0.719,626,0.733,627,0.719,628,0.733,629,0.733,630,0.719,631,0.733,632,0.733]],["title/interfaces/SportsTeam.html",[247,0.151,437,1.094]],["body/interfaces/SportsTeam.html",[0,0.146,3,0.027,4,0.041,5,0.027,7,0.037,8,0.389,12,0.856,25,0.284,29,0.008,30,0.544,31,0.241,33,0.304,45,0.385,67,0.116,81,0.658,84,0.671,89,0.684,109,0.879,133,0.983,161,1.786,184,0.321,191,0.002,192,0.004,193,0.002,220,0.724,247,0.304,249,0.465,252,0.555,260,0.402,295,1.101,296,0.599,297,0.724,298,0.671,299,2.218,300,0.646,301,1.101,302,1.487,303,0.724,304,1.101,305,0.724,306,1.334,307,0.724,308,1.334,309,0.724,310,0.724,311,0.724,312,1.061,313,1.101,314,0.724,315,0.724,316,0.724,317,0.724,318,0.724,319,1.435,320,1.101,321,0.724,322,0.724,323,0.71,324,0.724,325,0.724,326,1.101,327,1.081,328,1.081,329,0.737,330,1.519,331,1.101,332,0.724,333,0.724,334,0.737,335,1.101,336,0.71,337,0.724,338,1.334,339,0.724,340,1.081,341,1.334,342,0.724,343,0.697,344,0.724,345,0.724,346,0.737,347,0.724,348,1.309,349,0.71,350,0.724,351,0.724,352,0.71,353,0.724,354,1.724,355,1.334,356,0.724,357,0.724,358,0.724,359,0.724,360,0.71,361,1.101,362,1.002,363,0.724,364,1.463,365,0.724,366,0.737,367,0.737,368,1.359,369,0.737,370,0.737,371,0.724,372,1.101,373,0.724,374,0.737,375,0.737,376,0.71,377,1.463,378,0.737,379,0.737,380,0.737,381,0.737,382,0.737,383,1.081,384,0.724,385,0.724,386,0.724,387,0.724,388,0.724,389,0.724,390,1.101,391,0.724,392,1.081,393,0.724,394,0.724,395,0.724,396,0.724,397,0.724,398,0.724,399,0.724,400,0.724,401,0.724,402,0.724,403,0.724,404,0.724,405,0.724,406,0.724,407,0.724,408,0.724,409,1.101,410,0.724,411,0.724,412,0.724,413,0.724,414,0.724,415,0.724,416,0.724,417,1.309,418,0.724,419,0.724,420,1.101,421,0.724,422,0.724,423,0.724,424,0.724,425,1.463,426,0.724,427,0.737,428,0.724,429,0.724,430,0.724,431,1.463,432,0.724,433,1.101,434,0.724,435,1.334,436,0.724,437,1.334,438,0.724,439,1.491,440,0.724,441,1.081,442,0.724,443,1.101,444,0.724,445,0.724,446,0.724,447,1.101,448,0.724,449,1.081,450,0.737,451,0.737,452,0.724,453,0.724,454,1.081,455,1.061,456,1.021,457,0.724,458,0.684,459,1.503,460,1.756,461,0.724,462,0.724,463,0.724,464,0.724,465,0.724,466,0.724,467,0.724,468,0.724,469,0.724,470,0.724,471,0.724,472,0.724,473,0.724,474,0.724,475,0.724,476,0.724,477,1.334,478,1.334,479,1.722,480,0.724,481,0.724,482,1.101,483,0.724,484,0.737,485,1.334,486,1.334,487,0.724,488,0.737,489,0.724,490,0.737,491,1.101,492,0.724,493,1.003,494,0.737,495,0.737,496,0.724,497,0.737,498,0.724,499,0.724,500,1.101,501,0.737,502,1.101,503,1.101,504,1.101,505,1.519,506,0.724,507,0.737,508,0.737,509,1.101,510,0.724,511,0.737,512,0.737,513,0.588,514,0.724,515,1.309,516,1.309,517,1.101,518,0.71,519,0.71,520,0.71,521,1.101,522,0.724,523,0.724,524,0.724,525,1.021,526,1.334,527,0.71,528,0.71,529,0.724,530,0.737,531,0.737,532,0.724,533,0.724,534,0.737,535,0.737,536,0.737,537,0.737,538,1.101,539,0.71,540,0.71,541,1.309,542,1.101,543,0.71,544,0.724,545,0.724,546,1.101,547,0.737,548,0.376,549,0.724,550,0.634,551,1.597,552,1.625,553,1.586,554,1.777,555,1.041,556,0.737,557,0.724,558,0.61,559,0.724,560,0.724,561,1.334,562,0.737,563,0.737,564,1.101,565,0.737,566,0.737,567,0.724,568,0.737,569,1.586,570,0.737,571,1.722,572,0.737,573,0.737,574,0.737,575,0.737,576,0.737,577,1.334,578,0.737,579,0.737,580,0.737,581,0.737,582,0.737,583,0.724,584,0.737,585,0.737,586,0.737,587,0.737,588,0.737,589,0.737,590,0.737,591,0.737,592,0.737,593,0.737,594,0.737,595,0.724,596,0.737,597,1.306,598,0.737,599,0.737,600,0.737,601,0.737,602,0.737,603,1.101,604,0.737,605,0.724,606,0.737,607,0.737,608,0.737,609,0.737,610,0.737,611,0.724,612,0.724,613,0.737,614,0.737,615,0.737,616,0.724,617,0.724,618,0.737,619,0.737,620,0.724,621,0.737,622,0.737,623,0.737,624,0.737,625,0.724,626,0.737,627,0.724,628,0.737,629,0.737,630,0.724,631,0.737,632,0.737]],["title/classes/StateManager.html",[0,0.221,1112,2.552]],["body/classes/StateManager.html",[0,0.367,2,1.03,3,0.047,4,0.047,5,0.047,7,0.065,14,1.03,18,1.109,25,0.75,26,1.063,28,1.775,29,0.008,30,0.517,31,0.232,32,1.063,33,0.176,41,1.204,51,0.631,56,5.331,57,0.936,58,0.918,59,1.766,67,0.107,76,1.88,79,1.186,110,6.44,191,0.004,192,0.005,193,0.004,288,3.586,493,1.638,639,4.203,643,2.767,700,2.943,712,5.722,913,3.698,978,5.807,1038,3.752,1112,3.818,1227,5.414,1231,5.414,1239,5.994,2055,4.91,2056,7.131,2057,8.339,2058,7.131,2059,8.839,2060,8.632,2061,7.131,2062,7.131,2063,7.131,2064,7.131,2065,7.131,2066,7.131,2067,7.131,2068,7.131,2069,7.131,2070,7.893,2071,7.893,2072,5.528,2073,5.528,2074,5.528,2075,5.528,2076,5.528,2077,5.528,2078,5.528,2079,5.528,2080,4.91,2081,5.528,2082,5.528,2083,5.528,2084,5.528,2085,5.528]],["title/classes/StateManager-1.html",[0,0.186,194,2.142,1112,2.142]],["body/classes/StateManager-1.html",[0,0.233,2,0.935,3,0.043,4,0.043,5,0.043,7,0.059,8,0.542,9,3.437,14,0.966,18,1.294,22,2.596,25,0.803,26,1.199,28,1.698,29,0.008,30,0.534,31,0.228,32,1.096,33,0.24,40,3.476,41,1.305,51,0.573,56,4.765,57,0.849,58,0.833,59,1.602,67,0.094,76,1.836,79,1.213,90,2.142,91,2.142,92,2.971,93,2.142,94,2.04,95,2.142,96,2.142,110,6.057,118,3.588,125,3.365,190,0.971,191,0.004,192,0.005,193,0.004,203,1.539,234,4.873,247,0.212,288,2.523,493,1.646,639,4.364,1112,3.582,1119,5.334,1215,6.463,1216,3.808,1217,6.67,1218,6.812,1219,7.007,1220,5.448,1221,5.448,1222,5.448,1223,5.448,1224,6.13,1225,5.448,1226,6.539,1227,5.715,1228,4.084,1229,6.13,1230,5.448,1231,6.097,1232,6.812,1233,4.084,1234,4.084,1235,4.084,1236,4.084,1237,6.539,1238,6.539,1239,6.097,1240,4.084,1241,6.539,1242,4.084,1243,6.539,1244,4.084,1245,6.13,1246,4.084,1247,6.13,1248,4.084,1249,6.13,1250,4.084,2086,5.016,2087,6.69,2088,5.016,2089,5.016,2090,5.016,2091,5.016,2092,5.016,2093,5.016,2094,5.016,2095,5.016,2096,5.016,2097,5.016,2098,5.016,2099,5.016,2100,5.016,2101,5.016,2102,5.016,2103,5.016,2104,5.016,2105,5.016]],["title/classes/SystemFactory.html",[0,0.221,888,3.881]],["body/classes/SystemFactory.html",[0,0.238,2,0.954,3,0.044,4,0.044,5,0.044,7,0.06,8,0.549,9,2.819,10,6.57,13,5.873,14,0.979,18,1.287,22,2.63,26,1.167,28,1.769,29,0.008,30,0.556,31,0.226,32,1.142,33,0.306,40,3.51,41,0.739,51,0.868,57,1.425,58,1.262,61,0.9,67,0.06,77,4.601,79,1.167,97,4.944,125,4.508,142,6.805,152,5.177,190,1.313,191,0.004,192,0.005,193,0.004,199,6.377,238,5.763,239,5.789,244,2.3,249,0.496,260,0.864,298,1.879,312,1.498,362,1.691,525,1.089,555,1.47,715,4.209,852,6.888,882,5.147,883,6.955,888,5.52,1019,5.451,1038,3.472,1309,5.52,1647,7.478,1669,5.493,1711,6.02,1842,4.543,1844,4.166,1845,4.543,1855,4.543,1860,3.659,1869,3.884,1871,4.543,1983,6.19,1987,5.772,2106,5.116,2107,8.093,2108,7.602,2109,7.602,2110,7.602,2111,7.602,2112,7.602,2113,5.116,2114,6.778,2115,5.116,2116,5.116,2117,5.116,2118,5.116,2119,5.116,2120,6.778,2121,5.116,2122,5.116,2123,5.116,2124,5.116,2125,5.116,2126,8.093,2127,5.116,2128,5.116,2129,5.116,2130,5.116,2131,6.778,2132,5.116,2133,5.116,2134,5.116,2135,5.116,2136,5.116,2137,5.116,2138,5.116,2139,6.778,2140,5.116,2141,5.116,2142,5.116,2143,5.116]],["title/interfaces/TMergeTargetHandler.html",[247,0.151,900,2.839]],["body/interfaces/TMergeTargetHandler.html",[0,0.401,3,0.052,4,0.052,5,0.052,7,0.071,8,0.613,18,0.806,24,3.805,25,0.681,29,0.008,31,0.226,32,1.099,33,0.193,45,1.053,51,0.985,55,2.873,57,1.395,58,1.255,59,1.938,61,1.067,67,0.11,68,3.004,76,1.521,79,1.218,109,0.984,154,5.349,166,4.339,184,0.839,190,1.175,191,0.005,192,0.006,193,0.005,247,0.281,249,0.733,259,4.188,260,0.964,548,0.724,643,2.935,697,3.826,699,3.964,700,1.899,701,3.146,717,3.611,854,4.188,894,3.613,895,3.613,896,4.505,897,5.109,898,3.613,899,3.359,900,5.528,901,4.532,902,4.689,903,5.139,904,3.761,905,4.908,906,3.761,907,3.761,908,3.761,909,4.689,910,3.761,911,3.613,912,4.505,913,3.922,914,4.188,915,4.505,916,4.505,917,3.761,918,4.689,919,3.613]],["title/interfaces/TRequestHandler.html",[247,0.151,903,2.839]],["body/interfaces/TRequestHandler.html",[0,0.401,3,0.052,4,0.052,5,0.052,7,0.071,8,0.614,18,0.809,24,3.811,25,0.682,29,0.008,31,0.226,33,0.194,45,1.054,51,0.987,55,2.876,57,1.397,58,1.258,59,1.945,61,1.071,67,0.11,68,3.01,76,1.525,79,1.219,109,0.986,154,5.356,166,4.348,184,0.84,190,1.179,191,0.005,192,0.006,193,0.005,247,0.281,249,0.735,259,4.197,260,0.966,548,0.727,643,2.941,697,3.829,699,3.967,700,1.906,701,3.157,717,3.614,854,4.197,894,3.626,895,3.626,896,4.514,897,5.117,898,3.626,899,3.371,900,5.473,901,4.535,902,4.699,903,5.293,904,3.774,905,4.916,906,3.774,907,3.774,908,3.774,909,4.699,910,3.774,911,3.626,912,4.514,913,3.931,914,4.197,915,4.514,916,4.514,917,3.774,918,4.699,919,3.626]],["title/interfaces/Thing.html",[247,0.151,326,1.094]],["body/interfaces/Thing.html",[0,0.147,3,0.027,4,0.041,5,0.027,7,0.037,8,0.389,12,0.857,25,0.284,29,0.008,30,0.544,31,0.241,33,0.303,45,0.385,67,0.116,81,0.66,84,0.672,89,0.685,109,0.879,133,0.985,161,1.787,184,0.321,191,0.002,192,0.004,193,0.002,220,0.725,247,0.304,249,0.466,252,0.556,260,0.402,295,1.103,296,0.6,297,0.725,298,0.672,299,2.219,300,0.647,301,1.103,302,1.489,303,0.725,304,1.103,305,0.725,306,1.335,307,0.725,308,1.335,309,0.725,310,0.725,311,0.725,312,1.062,313,1.103,314,0.725,315,0.725,316,0.725,317,0.725,318,0.725,319,1.437,320,1.103,321,0.725,322,0.725,323,0.711,324,0.725,325,0.725,326,1.335,327,1.082,328,1.082,329,0.739,330,1.521,331,1.103,332,0.725,333,0.725,334,0.739,335,1.103,336,0.711,337,0.725,338,1.335,339,0.725,340,1.082,341,1.335,342,0.725,343,0.698,344,0.725,345,0.725,346,0.739,347,0.725,348,1.31,349,0.711,350,0.725,351,0.725,352,0.711,353,0.725,354,1.725,355,1.335,356,0.725,357,0.725,358,0.725,359,0.725,360,0.711,361,1.103,362,1.004,363,0.725,364,1.464,365,0.725,366,0.739,367,0.739,368,1.361,369,0.739,370,0.739,371,0.725,372,1.103,373,0.725,374,0.739,375,0.739,376,0.711,377,1.464,378,0.739,379,0.739,380,0.739,381,0.739,382,0.739,383,1.082,384,0.725,385,0.725,386,0.725,387,0.725,388,0.725,389,0.725,390,1.103,391,0.725,392,1.082,393,0.725,394,0.725,395,0.725,396,0.725,397,0.725,398,0.725,399,0.725,400,0.725,401,0.725,402,0.725,403,0.725,404,0.725,405,0.725,406,0.725,407,0.725,408,0.725,409,1.103,410,0.725,411,0.725,412,0.725,413,0.725,414,0.725,415,0.725,416,0.725,417,1.31,418,0.725,419,0.725,420,1.103,421,0.725,422,0.725,423,0.725,424,0.725,425,1.464,426,0.725,427,0.739,428,0.725,429,0.725,430,0.725,431,1.464,432,0.725,433,1.103,434,0.725,435,1.335,436,0.725,437,1.103,438,0.725,439,1.492,440,0.725,441,1.082,442,0.725,443,1.103,444,0.725,445,0.725,446,0.725,447,1.103,448,0.725,449,1.082,450,0.739,451,0.739,452,0.725,453,0.725,454,1.082,455,1.062,456,1.023,457,0.725,458,0.685,459,1.503,460,1.756,461,0.725,462,0.725,463,0.725,464,0.725,465,0.725,466,0.725,467,0.725,468,0.725,469,0.725,470,0.725,471,0.725,472,0.725,473,0.725,474,0.725,475,0.725,476,0.725,477,1.335,478,1.335,479,1.723,480,0.725,481,0.725,482,1.103,483,0.725,484,0.739,485,1.335,486,1.335,487,0.725,488,0.739,489,0.725,490,0.739,491,1.103,492,0.725,493,1.004,494,0.739,495,0.739,496,0.725,497,0.739,498,0.725,499,0.725,500,1.103,501,0.739,502,1.103,503,1.103,504,1.103,505,1.521,506,0.725,507,0.739,508,0.739,509,1.103,510,0.725,511,0.739,512,0.739,513,0.589,514,0.725,515,1.31,516,1.31,517,1.103,518,0.711,519,0.711,520,0.711,521,1.103,522,0.725,523,0.725,524,0.725,525,1.023,526,1.335,527,0.711,528,0.711,529,0.725,530,0.739,531,0.739,532,0.725,533,0.725,534,0.739,535,0.739,536,0.739,537,0.739,538,1.103,539,0.711,540,0.711,541,1.31,542,1.103,543,0.711,544,0.725,545,0.725,546,1.103,547,0.739,548,0.377,549,0.725,550,0.635,551,1.597,552,1.626,553,1.587,554,1.778,555,1.042,556,0.739,557,0.725,558,0.611,559,0.725,560,0.725,561,1.335,562,0.739,563,0.739,564,1.103,565,0.739,566,0.739,567,0.725,568,0.739,569,1.587,570,0.739,571,1.723,572,0.739,573,0.739,574,0.739,575,0.739,576,0.739,577,1.335,578,0.739,579,0.739,580,0.739,581,0.739,582,0.739,583,0.725,584,0.739,585,0.739,586,0.739,587,0.739,588,0.739,589,0.739,590,0.739,591,0.739,592,0.739,593,0.739,594,0.739,595,0.725,596,0.739,597,1.307,598,0.739,599,0.739,600,0.739,601,0.739,602,0.739,603,1.103,604,0.739,605,0.725,606,0.739,607,0.739,608,0.739,609,0.739,610,0.739,611,0.725,612,0.725,613,0.739,614,0.739,615,0.739,616,0.725,617,0.725,618,0.739,619,0.739,620,0.725,621,0.739,622,0.739,623,0.739,624,0.739,625,0.725,626,0.739,627,0.725,628,0.739,629,0.739,630,0.725,631,0.739,632,0.739]],["title/interfaces/TranslationBuilder.html",[247,0.151,2144,3.619]],["body/interfaces/TranslationBuilder.html",[0,0.299,3,0.055,4,0.055,5,0.055,7,0.075,12,1.353,14,1.132,18,0.855,26,1.122,28,1.669,29,0.008,30,0.525,31,0.22,32,1.078,33,0.313,41,1.271,67,0.099,76,1.577,79,1.101,165,5.322,183,2.892,184,0.655,191,0.005,192,0.006,193,0.005,247,0.248,249,0.624,252,1.55,550,1.701,700,2.014,809,2.68,1105,3.562,1208,4.164,2144,7.255,2145,5.238,2146,6.889,2147,7.842,2148,7.172,2149,6.889,2150,6.386,2151,6.432,2152,6.386,2153,6.432,2154,6.432,2155,7.125,2156,6.386,2157,7.352,2158,6.432,2159,5.238,2160,5.238,2161,4.884,2162,5.238,2163,5.238,2164,6.386,2165,5.238,2166,5.238]],["title/classes/TranslationFactory.html",[0,0.221,2161,3.619]],["body/classes/TranslationFactory.html",[0,0.317,2,1.271,3,0.058,4,0.058,5,0.058,7,0.08,12,1.278,14,1.173,18,0.906,26,0.869,29,0.008,33,0.308,41,0.985,67,0.102,76,1.634,79,1.129,165,5.513,183,3.066,184,0.694,191,0.005,192,0.006,193,0.005,247,0.257,252,1.429,550,1.371,700,2.716,809,3.742,1105,3.776,2144,7.199,2145,5.553,2146,5.553,2148,5.553,2149,5.553,2150,5.553,2152,5.553,2155,7.142,2156,5.553,2157,7.065,2159,5.553,2160,5.553,2161,6.167,2162,5.553,2163,5.553,2164,6.614,2165,5.553,2166,5.553,2167,6.819]],["title/interfaces/TranslationObject.html",[247,0.151,2155,3.619]],["body/interfaces/TranslationObject.html",[0,0.317,3,0.058,4,0.058,5,0.058,7,0.08,8,0.658,12,1.279,18,0.907,29,0.008,31,0.217,33,0.308,67,0.102,76,1.635,79,1.13,165,5.516,183,3.069,184,0.695,191,0.005,192,0.006,193,0.005,247,0.257,249,0.662,252,1.43,550,1.373,700,2.137,809,2.844,1105,3.78,1208,5.261,2144,7.144,2145,5.558,2146,5.558,2148,5.558,2149,5.558,2150,5.558,2152,5.558,2155,7.201,2156,5.558,2157,7.068,2159,7.316,2160,5.558,2161,5.183,2162,5.558,2163,5.558,2164,6.618,2165,5.558,2166,5.558]],["title/interfaces/TrashCollectionAlert.html",[247,0.151,417,1.074]],["body/interfaces/TrashCollectionAlert.html",[0,0.146,3,0.027,4,0.041,5,0.027,7,0.037,8,0.388,12,0.854,25,0.283,29,0.008,30,0.526,31,0.242,33,0.303,45,0.383,67,0.116,81,0.656,84,0.669,89,0.682,109,0.878,133,0.981,161,1.784,184,0.32,191,0.002,192,0.004,193,0.002,220,0.721,247,0.304,249,0.464,252,0.553,260,0.4,295,1.099,296,0.597,297,0.721,298,0.669,299,2.218,300,0.644,301,1.099,302,1.485,303,0.721,304,1.099,305,0.721,306,1.331,307,0.721,308,1.331,309,0.721,310,0.721,311,0.721,312,1.058,313,1.099,314,0.721,315,0.721,316,0.721,317,0.721,318,0.721,319,1.433,320,1.099,321,0.721,322,0.721,323,0.708,324,0.721,325,0.721,326,1.099,327,1.078,328,1.078,329,0.735,330,1.517,331,1.099,332,0.721,333,0.721,334,0.735,335,1.099,336,0.708,337,0.721,338,1.331,339,0.721,340,1.078,341,1.331,342,0.721,343,0.695,344,0.721,345,0.721,346,0.735,347,0.721,348,1.306,349,0.708,350,0.721,351,0.721,352,0.708,353,0.721,354,1.722,355,1.331,356,0.721,357,0.721,358,0.721,359,0.721,360,0.708,361,1.099,362,1,363,0.721,364,1.46,365,0.721,366,0.735,367,0.735,368,1.356,369,0.735,370,0.735,371,0.721,372,1.099,373,0.721,374,0.735,375,0.735,376,0.708,377,1.46,378,0.735,379,0.735,380,0.735,381,0.735,382,0.735,383,1.078,384,0.721,385,0.721,386,0.721,387,0.721,388,0.721,389,0.721,390,1.099,391,0.721,392,1.46,393,0.721,394,0.721,395,0.721,396,0.721,397,0.721,398,0.721,399,0.721,400,0.721,401,0.721,402,0.721,403,0.721,404,0.721,405,0.721,406,0.721,407,0.721,408,0.721,409,1.488,410,0.721,411,0.721,412,0.721,413,0.721,414,0.721,415,0.721,416,0.721,417,1.46,418,1.488,419,1.488,420,1.099,421,0.721,422,0.721,423,0.721,424,0.721,425,1.46,426,0.721,427,0.735,428,0.721,429,0.721,430,0.721,431,1.46,432,0.721,433,1.099,434,0.721,435,1.331,436,0.721,437,1.099,438,0.721,439,1.488,440,0.721,441,1.078,442,0.721,443,1.099,444,0.721,445,0.721,446,0.721,447,1.099,448,0.721,449,1.078,450,0.735,451,0.735,452,0.721,453,0.721,454,1.078,455,1.058,456,1.019,457,0.721,458,0.682,459,1.502,460,1.755,461,0.721,462,0.721,463,0.721,464,0.721,465,0.721,466,0.721,467,0.721,468,0.721,469,0.721,470,0.721,471,0.721,472,0.721,473,0.721,474,0.721,475,0.721,476,0.721,477,1.331,478,1.331,479,1.72,480,0.721,481,0.721,482,1.099,483,0.721,484,0.735,485,1.331,486,1.331,487,0.721,488,0.735,489,0.721,490,0.735,491,1.099,492,0.721,493,1.001,494,0.735,495,0.735,496,0.721,497,0.735,498,0.721,499,0.721,500,1.099,501,0.735,502,1.099,503,1.099,504,1.099,505,1.517,506,0.721,507,0.735,508,0.735,509,1.099,510,0.721,511,0.735,512,0.735,513,0.586,514,0.721,515,1.306,516,1.306,517,1.099,518,0.708,519,0.708,520,0.708,521,1.099,522,0.721,523,0.721,524,0.721,525,1.019,526,1.331,527,0.708,528,0.708,529,0.721,530,0.735,531,0.735,532,0.721,533,0.721,534,0.735,535,0.735,536,0.735,537,0.735,538,1.099,539,0.708,540,0.708,541,1.306,542,1.099,543,0.708,544,0.721,545,0.721,546,1.099,547,0.735,548,0.375,549,0.721,550,0.632,551,1.597,552,1.624,553,1.585,554,1.775,555,1.038,556,0.735,557,0.721,558,0.608,559,0.721,560,0.721,561,1.331,562,0.735,563,0.735,564,1.099,565,0.735,566,0.735,567,0.721,568,0.735,569,1.585,570,0.735,571,1.72,572,0.735,573,0.735,574,0.735,575,0.735,576,0.735,577,1.331,578,0.735,579,0.735,580,0.735,581,0.735,582,0.735,583,0.721,584,0.735,585,0.735,586,0.735,587,0.735,588,0.735,589,0.735,590,0.735,591,0.735,592,0.735,593,0.735,594,0.735,595,0.721,596,0.735,597,1.304,598,0.735,599,0.735,600,0.735,601,0.735,602,0.735,603,1.099,604,0.735,605,0.721,606,0.735,607,0.735,608,0.735,609,0.735,610,0.735,611,0.721,612,0.721,613,0.735,614,0.735,615,0.735,616,0.721,617,0.721,618,0.735,619,0.735,620,0.721,621,0.735,622,0.735,623,0.735,624,0.735,625,0.721,626,0.735,627,0.721,628,0.735,629,0.735,630,0.721,631,0.735,632,0.735]],["title/classes/UserFactory.html",[0,0.221,1839,3.881]],["body/classes/UserFactory.html",[0,0.315,2,1.266,3,0.058,4,0.058,5,0.058,7,0.08,8,0.656,9,3.212,14,1.17,18,1.267,26,1.143,28,1.599,29,0.008,30,0.503,31,0.216,32,1.032,33,0.276,41,0.981,51,0.776,57,1.15,58,1.345,61,1.195,67,0.08,79,1.127,190,1.315,191,0.005,192,0.006,193,0.005,203,2.084,244,3.054,298,2.067,1019,5.933,1839,6.599,1861,7.196,1869,5.157,1987,6.576,2168,6.792,2169,8.969,2170,8.66,2171,6.792,2172,6.792,2173,6.792,2174,6.792,2175,6.792,2176,6.792]],["title/classes/UserProfileAPIClient.html",[0,0.221,2177,4.233]],["body/classes/UserProfileAPIClient.html",[0,0.311,2,1.249,3,0.057,4,0.057,5,0.057,7,0.079,8,0.651,14,1.16,16,2.589,17,4.452,18,1.282,26,1.163,29,0.008,31,0.167,33,0.214,41,1.289,45,1.154,51,0.918,57,1.134,58,1.112,60,3.588,61,1.179,67,0.079,79,1.162,109,0.96,190,1.297,191,0.005,192,0.006,193,0.005,196,5.844,203,2.055,513,1.664,1337,7.929,1371,5.95,2177,7.138,2178,6.7,2179,8.928,2180,8.928,2181,8.928,2182,8.037,2183,6.7,2184,6.7,2185,6.7,2186,6.7,2187,6.7,2188,6.7,2189,6.7,2190,6.7]],["title/interfaces/WeatherAlert.html",[247,0.151,425,1.074]],["body/interfaces/WeatherAlert.html",[0,0.146,3,0.027,4,0.06,5,0.027,7,0.037,8,0.387,12,0.854,25,0.282,29,0.008,30,0.526,31,0.242,32,0.609,33,0.303,45,0.383,67,0.116,81,0.656,84,0.668,89,0.681,109,0.877,133,0.98,161,1.784,184,0.319,191,0.002,192,0.004,193,0.002,220,0.721,247,0.304,249,0.464,252,0.552,260,0.4,295,1.098,296,0.596,297,0.721,298,0.668,299,2.217,300,0.643,301,1.098,302,1.485,303,0.721,304,1.098,305,0.721,306,1.33,307,0.721,308,1.33,309,0.721,310,0.721,311,0.721,312,1.057,313,1.098,314,0.721,315,0.721,316,0.721,317,0.721,318,0.721,319,1.432,320,1.098,321,0.721,322,0.721,323,0.707,324,0.721,325,0.721,326,1.098,327,1.077,328,1.077,329,0.734,330,1.516,331,1.098,332,0.721,333,0.721,334,0.734,335,1.098,336,0.707,337,0.721,338,1.33,339,0.721,340,1.077,341,1.33,342,0.721,343,0.694,344,0.721,345,0.721,346,0.734,347,0.721,348,1.305,349,0.707,350,0.721,351,0.721,352,0.707,353,0.721,354,1.721,355,1.33,356,0.721,357,0.721,358,0.721,359,0.721,360,0.707,361,1.098,362,0.999,363,0.721,364,1.46,365,0.721,366,0.734,367,0.734,368,1.356,369,0.734,370,0.734,371,0.721,372,1.098,373,0.721,374,0.734,375,0.734,376,0.707,377,1.46,378,0.734,379,0.734,380,0.734,381,0.734,382,0.734,383,1.077,384,0.721,385,0.721,386,0.721,387,0.721,388,0.721,389,0.721,390,1.098,391,0.721,392,1.077,393,0.721,394,0.721,395,0.721,396,0.721,397,0.721,398,0.721,399,0.721,400,0.721,401,0.721,402,0.721,403,0.721,404,0.721,405,0.721,406,0.721,407,0.721,408,0.721,409,1.098,410,0.721,411,0.721,412,0.721,413,0.721,414,0.721,415,0.721,416,0.721,417,1.305,418,0.721,419,0.721,420,1.488,421,0.721,422,0.721,423,0.721,424,0.721,425,1.571,426,0.721,427,1.516,428,0.721,429,0.721,430,0.721,431,1.46,432,0.721,433,1.098,434,0.721,435,1.33,436,0.721,437,1.098,438,0.721,439,1.488,440,0.721,441,1.077,442,0.721,443,1.098,444,0.721,445,0.721,446,0.721,447,1.098,448,0.721,449,1.077,450,0.734,451,0.734,452,0.721,453,0.721,454,1.077,455,1.057,456,1.018,457,0.721,458,0.681,459,1.502,460,1.755,461,0.721,462,0.721,463,0.721,464,0.721,465,0.721,466,0.721,467,0.721,468,0.721,469,0.721,470,0.721,471,0.721,472,0.721,473,0.721,474,0.721,475,0.721,476,0.721,477,1.33,478,1.33,479,1.719,480,0.721,481,0.721,482,1.098,483,0.721,484,0.734,485,1.33,486,1.33,487,0.721,488,0.734,489,0.721,490,0.734,491,1.098,492,0.721,493,1,494,0.734,495,0.734,496,0.721,497,0.734,498,0.721,499,0.721,500,1.098,501,0.734,502,1.098,503,1.098,504,1.098,505,1.516,506,0.721,507,0.734,508,0.734,509,1.098,510,0.721,511,0.734,512,0.734,513,0.585,514,0.721,515,1.305,516,1.305,517,1.098,518,0.707,519,0.707,520,0.707,521,1.098,522,0.721,523,0.721,524,0.721,525,1.018,526,1.33,527,0.707,528,0.707,529,0.721,530,0.734,531,0.734,532,0.721,533,0.721,534,0.734,535,0.734,536,0.734,537,0.734,538,1.098,539,0.707,540,0.707,541,1.305,542,1.098,543,0.707,544,0.721,545,0.721,546,1.098,547,0.734,548,0.375,549,0.721,550,0.631,551,1.597,552,1.623,553,1.584,554,1.774,555,1.038,556,0.734,557,0.721,558,0.608,559,0.721,560,0.721,561,1.33,562,0.734,563,0.734,564,1.098,565,0.734,566,0.734,567,0.721,568,0.734,569,1.584,570,0.734,571,1.719,572,0.734,573,0.734,574,0.734,575,0.734,576,0.734,577,1.33,578,0.734,579,0.734,580,0.734,581,0.734,582,0.734,583,0.721,584,0.734,585,0.734,586,0.734,587,0.734,588,0.734,589,0.734,590,0.734,591,0.734,592,0.734,593,0.734,594,0.734,595,0.721,596,0.734,597,1.303,598,0.734,599,0.734,600,0.734,601,0.734,602,0.734,603,1.098,604,0.734,605,0.721,606,0.734,607,0.734,608,0.734,609,0.734,610,0.734,611,0.721,612,0.721,613,0.734,614,0.734,615,0.734,616,0.721,617,0.721,618,0.734,619,0.734,620,0.721,621,0.734,622,0.734,623,0.734,624,0.734,625,0.721,626,0.734,627,0.721,628,0.734,629,0.734,630,0.721,631,0.734,632,0.734]],["title/dependencies.html",[2191,4,2192,5.081]],["body/dependencies.html",[29,0.007,57,1.289,58,1.264,61,1.34,191,0.006,192,0.007,193,0.006,2192,6.762,2193,7.614,2194,7.614]],["title/index.html",[7,0.047,2195,3.552,2196,3.552]],["body/index.html",[29,0.007,30,0.5,57,1.621,58,1.12,59,2.155,77,4.579,100,4.579,191,0.005,192,0.006,193,0.005,260,0.859,323,1.52,456,1.905,513,1.61,645,5.773,717,3.282,726,6.572,729,4.185,801,4.182,899,4.469,1011,6.572,1012,6.177,1073,5.493,1835,5.991,2195,5.991,2196,5.991,2197,8.07,2198,6.746,2199,6.746,2200,6.746,2201,9.148,2202,8.07,2203,6.746,2204,6.746,2205,6.746,2206,9.285,2207,9.285,2208,9.285,2209,6.746,2210,6.746,2211,8.07,2212,6.746,2213,6.746,2214,6.746,2215,8.07,2216,6.746,2217,6.746,2218,6.746,2219,6.746,2220,8.07,2221,6.746,2222,6.746,2223,6.746,2224,6.746,2225,6.746,2226,6.746,2227,6.746,2228,6.746,2229,6.746,2230,8.07,2231,6.746,2232,6.746,2233,8.07,2234,8.07,2235,6.746,2236,6.746,2237,6.746,2238,6.746,2239,6.746]],["title/modules.html",[2240,5.741]],["body/modules.html",[29,0.007,191,0.006,192,0.007,193,0.006,2240,6.807]],["title/overview.html",[2241,5.741]],["body/overview.html",[2,1.422,29,0.007,191,0.006,192,0.007,193,0.006,249,0.74,2241,6.777,2242,7.631,2243,7.631]],["title/miscellaneous/typealiases.html",[2244,3.552,2245,5.721]],["body/miscellaneous/typealiases.html",[6,3.845,7,0.055,12,0.946,25,0.425,29,0.008,31,0.16,33,0.261,45,0.784,64,5.072,66,6.683,81,1.342,154,5.362,184,0.48,191,0.004,192,0.005,193,0.004,195,4.193,197,4.193,198,3.845,199,3.205,296,0.897,297,1.084,301,1.799,302,1.921,303,1.474,304,1.676,305,1.474,306,1.881,307,1.084,308,1.881,309,1.474,310,1.474,311,1.474,313,1.474,314,1.084,315,1.084,316,1.084,317,1.084,318,1.084,319,1.42,320,1.474,321,1.084,322,1.084,323,1.064,324,1.084,325,1.084,335,1.474,336,1.064,337,1.084,338,1.474,339,1.084,340,1.064,341,1.474,342,1.084,343,1.044,348,1.447,349,1.064,350,1.084,351,1.084,352,1.064,353,1.084,354,1.064,355,1.474,356,1.084,357,1.084,358,1.084,359,1.084,377,1.447,386,1.084,387,1.084,388,1.084,389,1.084,390,1.474,391,1.084,392,1.447,393,1.084,394,1.084,395,1.084,396,1.084,397,1.084,398,1.084,399,1.084,400,1.084,401,1.084,402,1.084,403,1.084,404,1.084,405,1.084,406,1.084,407,1.084,408,1.084,409,1.474,410,1.084,411,1.084,412,1.084,413,1.084,414,1.084,415,1.084,416,1.084,420,1.474,421,1.084,422,1.084,423,1.084,424,1.084,441,1.447,443,1.474,444,1.084,445,1.084,446,1.084,447,1.474,454,1.064,455,1.42,459,1.569,460,1.918,461,1.084,462,1.084,463,1.084,464,1.084,465,1.084,466,1.084,467,1.084,468,1.084,469,1.084,470,1.084,471,1.084,472,1.084,473,1.084,474,1.084,475,1.084,476,1.084,477,1.676,478,1.676,485,1.676,486,1.676,493,1.109,503,1.474,504,1.474,515,1.447,516,1.447,517,1.676,518,1.064,519,1.064,520,1.064,521,1.676,522,1.084,523,1.084,524,1.084,525,1.367,526,1.474,527,1.064,528,1.064,538,1.474,539,1.064,540,1.064,548,0.564,551,1.524,561,1.676,577,1.676,634,3.057,635,3.377,638,4.594,646,2.927,647,3.377,648,3.205,651,3.205,653,4.594,697,3.264,699,3.346,741,3.057,895,2.812,912,3.825,965,3.845,966,3.845,971,5.23,1036,3.845,1037,4.193,1051,5.704,1052,3.845,1085,4.594,1086,5.23,1089,4.193,1111,3.377,1120,4.594,1208,3.057,1216,3.585,1329,4.193,1355,5.704,1369,4.193,1370,4.193,2055,4.193,2080,5.704,2244,4.193,2246,4.721,2247,9.859,2248,6.423,2249,6.423,2250,4.721,2251,4.721,2252,6.423,2253,4.721,2254,4.721,2255,4.721,2256,6.423,2257,4.721,2258,4.721,2259,6.423,2260,6.423,2261,4.721,2262,6.423,2263,4.721,2264,6.423,2265,4.721,2266,4.721,2267,4.721,2268,4.721,2269,4.721,2270,4.721,2271,4.721,2272,4.721,2273,4.721,2274,4.721,2275,4.721]]],"invertedIndex":[["",{"_index":29,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ApplicationFactory.html":{},"interfaces/AttributeType.html":{},"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/BaseSkillConfig.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ContextFactory.html":{},"interfaces/CreativeWork.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/DeviceAPIClient.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/ErrorHandlerBuilder.html":{},"interfaces/Factory.html":{},"classes/FallbackIntentFactory.html":{},"interfaces/FlashBriefingContent.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"classes/HandlerFactory-1.html":{},"interfaces/HandlerHelpers.html":{},"classes/HandlerInputFactory.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"interfaces/InitialState.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentHandlerFactory.html":{},"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestFactory-1.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/ListManagementAPIClient.html":{},"interfaces/LocalizedAttribute.html":{},"classes/LocalizedAttributesFactory.html":{},"interfaces/MergeObjectType.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"classes/MockAttributeManager.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"interfaces/Props.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/RelevantAudience.html":{},"classes/ReminderAPIClient.html":{},"classes/RequestEnvelopeFactory.html":{},"classes/RequestFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"classes/RequestHandlerFactory-1.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"classes/RouteMatcher.html":{},"interfaces/Router.html":{},"interfaces/S3SkillConfig.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{},"classes/SettingAPIClient.html":{},"interfaces/Situation.html":{},"interfaces/SituationState.html":{},"interfaces/Skill.html":{},"interfaces/SkillConstants.html":{},"interfaces/SkillHandlers.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{},"interfaces/SkillState.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"classes/StateManager.html":{},"classes/StateManager-1.html":{},"classes/SystemFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"interfaces/Thing.html":{},"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{},"interfaces/TrashCollectionAlert.html":{},"classes/UserFactory.html":{},"classes/UserProfileAPIClient.html":{},"interfaces/WeatherAlert.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":141,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{}}}],["09",{"_index":380,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["1",{"_index":194,"title":{"classes/APIClient-1.html":{},"classes/ContentBuilder-1.html":{},"classes/HandlerBuilder-1.html":{},"classes/HandlerFactory-1.html":{},"classes/LaunchRequestFactory-1.html":{},"classes/ParameterFactory-1.html":{},"interfaces/Payload-1.html":{},"interfaces/PayloadBuilder-1.html":{},"classes/RequestHandlerFactory-1.html":{},"interfaces/ResponseContent-1.html":{},"classes/StateManager-1.html":{}},"body":{"classes/ProductListResponseContentBuilder.html":{}}}],["1.0",{"_index":1857,"title":{},"body":{"classes/RequestEnvelopeFactory.html":{}}}],["1.9.0",{"_index":2194,"title":{},"body":{"dependencies.html":{}}}],["11",{"_index":369,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["12",{"_index":374,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["14t23:32:00.463z",{"_index":375,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["16t03:00:00.463z",{"_index":381,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["19",{"_index":1902,"title":{},"body":{"classes/RequestFactory.html":{}}}],["2",{"_index":1451,"title":{"classes/ParameterFactory-2.html":{},"interfaces/Payload-2.html":{},"interfaces/PayloadBuilder-2.html":{}},"body":{}}],["2018",{"_index":368,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["20180916t030000z",{"_index":379,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["20t19:16:31z",{"_index":370,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["3",{"_index":1466,"title":{"classes/ParameterFactory-3.html":{},"interfaces/Payload-3.html":{},"interfaces/PayloadBuilder-3.html":{}},"body":{}}],["4",{"_index":1486,"title":{"classes/ParameterFactory-4.html":{},"interfaces/Payload-4.html":{},"interfaces/PayloadBuilder-4.html":{}},"body":{}}],["5",{"_index":1506,"title":{"classes/ParameterFactory-5.html":{},"interfaces/Payload-5.html":{},"interfaces/PayloadBuilder-5.html":{}},"body":{}}],["500",{"_index":1732,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["6",{"_index":1528,"title":{"classes/ParameterFactory-6.html":{},"interfaces/Payload-6.html":{},"interfaces/PayloadBuilder-6.html":{}},"body":{}}],["60",{"_index":2242,"title":{},"body":{"overview.html":{}}}],["7",{"_index":1543,"title":{"classes/ParameterFactory-7.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder-7.html":{}},"body":{}}],["78",{"_index":2243,"title":{},"body":{"overview.html":{}}}],["8",{"_index":1609,"title":{"interfaces/PayloadBuilder-8.html":{}},"body":{}}],["__state",{"_index":1220,"title":{},"body":{"interfaces/InitialState.html":{},"interfaces/SkillState.html":{},"classes/StateManager-1.html":{}}}],["abstract",{"_index":219,"title":{},"body":{"classes/APIClient-1.html":{}}}],["acccesstoken",{"_index":2134,"title":{},"body":{"classes/SystemFactory.html":{}}}],["accept",{"_index":86,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ISPProductClient.html":{}}}],["accepted",{"_index":798,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{}}}],["access",{"_index":1711,"title":{},"body":{"classes/ProactiveClient.html":{},"classes/SystemFactory.html":{}}}],["access_token",{"_index":533,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["accessibility",{"_index":116,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["accesstoken",{"_index":1647,"title":{},"body":{"classes/ProactiveClient.html":{},"classes/SystemFactory.html":{}}}],["account",{"_index":853,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["activated",{"_index":479,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["activated.eventname",{"_index":477,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["activated.payload",{"_index":478,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["activated.payloadbuilder",{"_index":561,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["active",{"_index":1369,"title":{},"body":{"classes/ListManagementAPIClient.html":{},"miscellaneous/typealiases.html":{}}}],["adapter",{"_index":1143,"title":{},"body":{"classes/HandlerInputFactory.html":{}}}],["add",{"_index":286,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["adddirective(getbuyproductdirective(product.productid",{"_index":772,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["adderrorhandlers",{"_index":2027,"title":{},"body":{"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{}}}],["adderrorhandlers(...errorhandlers",{"_index":2032,"title":{},"body":{"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{}}}],["adderrorhandlers(sentrydefaulterrorhandler",{"_index":1014,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["addgarbagetype",{"_index":1537,"title":{},"body":{"classes/ParameterFactory-6.html":{},"interfaces/PayloadBuilder-1.html":{}}}],["addgarbagetype(garbagetype",{"_index":565,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["additional",{"_index":1007,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["addlocale",{"_index":2146,"title":{},"body":{"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{}}}],["addlocale(locale",{"_index":2150,"title":{},"body":{"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{}}}],["addlocalestrings",{"_index":2147,"title":{},"body":{"interfaces/TranslationBuilder.html":{}}}],["addlocalestrings(locale",{"_index":2152,"title":{},"body":{"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{}}}],["addrequesthandlers",{"_index":2028,"title":{},"body":{"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{}}}],["addrequesthandlers(...requesthandlers",{"_index":2034,"title":{},"body":{"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{}}}],["addrequestinterceptors",{"_index":2029,"title":{},"body":{"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{}}}],["addrequestinterceptors(...requestinterceptors",{"_index":2036,"title":{},"body":{"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{}}}],["addrequestinterceptors(seterrortrackerinterceptor",{"_index":1015,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["addresponseinterceptors",{"_index":2030,"title":{},"body":{"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{}}}],["addresponseinterceptors(...responseinterceptors",{"_index":2042,"title":{},"body":{"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{}}}],["addresponseinterceptors(responseinterceptors",{"_index":2038,"title":{},"body":{"interfaces/SkillHandlersBuilder.html":{}}}],["addroutes",{"_index":1913,"title":{},"body":{"classes/RequestHandlerFactory-1.html":{}}}],["addroutes(routers",{"_index":1916,"title":{},"body":{"classes/RequestHandlerFactory-1.html":{}}}],["again",{"_index":759,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"interfaces/ErrorHandlerBuilder.html":{},"classes/ISPContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/ResponseContent-1.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["air",{"_index":322,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["album",{"_index":316,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["alert",{"_index":481,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-6.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["alert.collectiondayofweek",{"_index":1541,"title":{},"body":{"classes/ParameterFactory-6.html":{}}}],["alert.garbagetypes",{"_index":1536,"title":{},"body":{"classes/ParameterFactory-6.html":{}}}],["alert.garbagetypes.length",{"_index":1538,"title":{},"body":{"classes/ParameterFactory-6.html":{}}}],["alert.garbagetypes.push(garbagetype",{"_index":1539,"title":{},"body":{"classes/ParameterFactory-6.html":{}}}],["alertid",{"_index":1820,"title":{},"body":{"classes/ReminderAPIClient.html":{}}}],["alertitem",{"_index":1534,"title":{},"body":{"classes/ParameterFactory-6.html":{}}}],["alerttype",{"_index":427,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["alexa",{"_index":858,"title":{},"body":{"classes/ContentBuilder-1.html":{},"interfaces/ErrorHandlerBuilder.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["alexa.skillbuilders.standard",{"_index":1013,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["alexa::proactive_events",{"_index":536,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["alexaskillevent/.test(requestenvelope.request.type",{"_index":1393,"title":{},"body":{"interfaces/MergeObjectType.html":{}}}],["aliases",{"_index":2246,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allow",{"_index":129,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["already",{"_index":875,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["alternative",{"_index":2223,"title":{},"body":{"index.html":{}}}],["always",{"_index":1968,"title":{},"body":{"classes/RouteMatcher.html":{}}}],["amazon.mediacontent.available",{"_index":506,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["amazon.messagealert.activated",{"_index":492,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-3.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["amazon.occasion.updated",{"_index":499,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-1.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["amazon.orderstatus.updated",{"_index":496,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-2.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["amazon.socialgameinvite.available",{"_index":510,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-4.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["amazon.sportsevent.updated",{"_index":487,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-5.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["amazon.trashcollectionalert.activated",{"_index":480,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-6.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["amazon.weatheralert.activated",{"_index":483,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-7.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["ams.app",{"_index":1845,"title":{},"body":{"classes/RequestEnvelopeFactory.html":{},"classes/SystemFactory.html":{}}}],["amzn1.ask.account",{"_index":1855,"title":{},"body":{"classes/RequestEnvelopeFactory.html":{},"classes/SystemFactory.html":{}}}],["amzn1.echo",{"_index":1844,"title":{},"body":{"classes/RequestEnvelopeFactory.html":{},"classes/RequestFactory.html":{},"classes/SystemFactory.html":{}}}],["api",{"_index":142,"title":{},"body":{"classes/APIClient.html":{},"interfaces/FlashBriefingContent.html":{},"classes/ISPProductClient.html":{},"classes/SystemFactory.html":{}}}],["apiaccesstoken",{"_index":1159,"title":{},"body":{"classes/HandlerInputFactory.html":{},"classes/RequestEnvelopeFactory.html":{}}}],["apiclient",{"_index":1,"title":{"classes/APIClient.html":{},"classes/APIClient-1.html":{}},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/HandlerInputFactory.html":{},"classes/ISPProductClient.html":{}}}],["apiclient:10",{"_index":1190,"title":{},"body":{"classes/ISPProductClient.html":{}}}],["apiclient:11",{"_index":1188,"title":{},"body":{"classes/ISPProductClient.html":{}}}],["apiclient:12",{"_index":1189,"title":{},"body":{"classes/ISPProductClient.html":{}}}],["apiclient:19",{"_index":1213,"title":{},"body":{"classes/ISPProductClient.html":{}}}],["apiclient:24",{"_index":1210,"title":{},"body":{"classes/ISPProductClient.html":{}}}],["apiclient:36",{"_index":1211,"title":{},"body":{"classes/ISPProductClient.html":{}}}],["apiclient:43",{"_index":1214,"title":{},"body":{"classes/ISPProductClient.html":{}}}],["apiclient:46",{"_index":1212,"title":{},"body":{"classes/ISPProductClient.html":{}}}],["apiclient:9",{"_index":1191,"title":{},"body":{"classes/ISPProductClient.html":{}}}],["apiendpoint",{"_index":525,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/HandlerInputFactory.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"classes/RequestEnvelopeFactory.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"classes/SystemFactory.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["apiendpont",{"_index":530,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["apiregion",{"_index":526,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["apiurl",{"_index":517,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["app",{"_index":235,"title":{},"body":{"classes/ApplicationFactory.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{},"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{}}}],["application",{"_index":238,"title":{},"body":{"classes/ApplicationFactory.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"classes/RequestEnvelopeFactory.html":{},"interfaces/ResponseContent-1.html":{},"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{},"classes/SystemFactory.html":{}}}],["application/json",{"_index":85,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ISPProductClient.html":{},"classes/ProactiveClient.html":{}}}],["application/x",{"_index":1701,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["applicationfactory",{"_index":232,"title":{"classes/ApplicationFactory.html":{}},"body":{"classes/ApplicationFactory.html":{},"classes/RequestEnvelopeFactory.html":{}}}],["applicationfactory()).putid(applicationid",{"_index":1862,"title":{},"body":{"classes/RequestEnvelopeFactory.html":{}}}],["applicationid",{"_index":239,"title":{},"body":{"classes/ApplicationFactory.html":{},"classes/RequestEnvelopeFactory.html":{},"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{},"classes/SystemFactory.html":{}}}],["appointment",{"_index":359,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["appointment_request",{"_index":358,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["artskydj",{"_index":2238,"title":{},"body":{"index.html":{}}}],["ask",{"_index":57,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ApplicationFactory.html":{},"interfaces/AttributeType.html":{},"interfaces/BaseSkillConfig.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ContextFactory.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/DeviceAPIClient.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/ErrorHandlerBuilder.html":{},"classes/FallbackIntentFactory.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"interfaces/HandlerHelpers.html":{},"classes/HandlerInputFactory.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"interfaces/InitialState.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/ListManagementAPIClient.html":{},"interfaces/MergeObjectType.html":{},"classes/MockAttributeManager.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/ReminderAPIClient.html":{},"classes/RequestEnvelopeFactory.html":{},"classes/RequestFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"classes/RequestHandlerFactory-1.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"classes/RouteMatcher.html":{},"interfaces/Router.html":{},"interfaces/S3SkillConfig.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{},"classes/SettingAPIClient.html":{},"interfaces/Situation.html":{},"interfaces/SituationState.html":{},"interfaces/SkillConstants.html":{},"interfaces/SkillHandlers.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{},"interfaces/SkillState.html":{},"classes/StateManager.html":{},"classes/StateManager-1.html":{},"classes/SystemFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"classes/UserFactory.html":{},"classes/UserProfileAPIClient.html":{},"dependencies.html":{},"index.html":{}}}],["async",{"_index":17,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/DeviceAPIClient.html":{},"classes/ISPProductClient.html":{},"classes/ListManagementAPIClient.html":{},"classes/ProactiveClient.html":{},"classes/ReminderAPIClient.html":{},"classes/RequestHandlerFactory-1.html":{},"classes/RouteMatcher.html":{},"classes/SettingAPIClient.html":{},"interfaces/SkillConstants.html":{},"classes/UserProfileAPIClient.html":{}}}],["att",{"_index":2082,"title":{},"body":{"classes/StateManager.html":{}}}],["att.state",{"_index":2083,"title":{},"body":{"classes/StateManager.html":{}}}],["attribute",{"_index":269,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["attributemanager",{"_index":110,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{},"interfaces/InitialState.html":{},"interfaces/SkillState.html":{},"classes/StateManager.html":{},"classes/StateManager-1.html":{}}}],["attributemanager.getsessionattributes",{"_index":1227,"title":{},"body":{"interfaces/InitialState.html":{},"interfaces/SkillState.html":{},"classes/StateManager.html":{},"classes/StateManager-1.html":{}}}],["attributemanager.setsessionattributes",{"_index":2081,"title":{},"body":{"classes/StateManager.html":{}}}],["attributemanager.setsessionattributes(attributes",{"_index":1228,"title":{},"body":{"interfaces/InitialState.html":{},"interfaces/SkillState.html":{},"classes/StateManager-1.html":{}}}],["attributes",{"_index":125,"title":{},"body":{"classes/APIClient.html":{},"interfaces/AttributeType.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/ISPProductClient.html":{},"interfaces/InitialState.html":{},"classes/MockAttributeManager.html":{},"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{},"interfaces/SkillState.html":{},"classes/StateManager-1.html":{},"classes/SystemFactory.html":{}}}],["attributes[statekey",{"_index":1233,"title":{},"body":{"interfaces/InitialState.html":{},"interfaces/SkillState.html":{},"classes/StateManager-1.html":{}}}],["attributesmanager",{"_index":56,"title":{},"body":{"classes/APIClient.html":{},"interfaces/AttributeType.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/HandlerInputFactory.html":{},"classes/ISPProductClient.html":{},"interfaces/InitialState.html":{},"classes/MockAttributeManager.html":{},"interfaces/SkillConstants.html":{},"interfaces/SkillState.html":{},"classes/StateManager.html":{},"classes/StateManager-1.html":{}}}],["attributesmanager.getrequestattributes",{"_index":814,"title":{},"body":{"classes/ConstantsInterceptorFactory.html":{},"interfaces/SkillConstants.html":{}}}],["attributesmanager.setrequestattributes",{"_index":815,"title":{},"body":{"classes/ConstantsInterceptorFactory.html":{},"interfaces/SkillConstants.html":{}}}],["attributesmanagerfactory",{"_index":1146,"title":{},"body":{"classes/HandlerInputFactory.html":{}}}],["attributesmanagerfactory.init",{"_index":1162,"title":{},"body":{"classes/HandlerInputFactory.html":{}}}],["attributetype",{"_index":248,"title":{"interfaces/AttributeType.html":{}},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["atts",{"_index":145,"title":{},"body":{"classes/APIClient.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/ISPProductClient.html":{},"interfaces/SkillConstants.html":{}}}],["au",{"_index":303,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["audiencepayload",{"_index":295,"title":{"interfaces/AudiencePayload.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["audiencetype",{"_index":538,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["authorization",{"_index":88,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ISPProductClient.html":{},"classes/ProactiveClient.html":{}}}],["authorizationvalue",{"_index":1161,"title":{},"body":{"classes/HandlerInputFactory.html":{}}}],["authresponse",{"_index":532,"title":{"interfaces/AuthResponse.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["authresult",{"_index":1723,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["authresult.access_token",{"_index":1725,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["auto",{"_index":1938,"title":{},"body":{"classes/RequestHandlerFactory-1.html":{}}}],["availability",{"_index":328,"title":{"interfaces/Availability.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["availability.method",{"_index":1425,"title":{},"body":{"classes/ParameterFactory.html":{}}}],["availability.provider",{"_index":1428,"title":{},"body":{"classes/ParameterFactory.html":{}}}],["availability.starttime",{"_index":1422,"title":{},"body":{"classes/ParameterFactory.html":{}}}],["available",{"_index":505,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["available.eventname",{"_index":503,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["available.payload",{"_index":504,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["avaliable",{"_index":132,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["await",{"_index":104,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/ISPProductClient.html":{},"classes/ListManagementAPIClient.html":{},"classes/ProactiveClient.html":{},"classes/RequestHandlerFactory-1.html":{},"classes/RouteMatcher.html":{}}}],["awayteamstatistic",{"_index":436,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-5.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["awayteamstatistic.score",{"_index":1523,"title":{},"body":{"classes/ParameterFactory-5.html":{}}}],["awayteamstatistic.team.name",{"_index":1524,"title":{},"body":{"classes/ParameterFactory-5.html":{}}}],["aws",{"_index":936,"title":{},"body":{"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{}}}],["axios",{"_index":52,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ISPProductClient.html":{},"classes/ProactiveClient.html":{}}}],["axios(param",{"_index":105,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ISPProductClient.html":{},"classes/ProactiveClient.html":{}}}],["axiosrequestconfig",{"_index":42,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ISPProductClient.html":{},"classes/ProactiveClient.html":{}}}],["base",{"_index":691,"title":{},"body":{"classes/BuyContentBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/HandlerFactory-1.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentHandlerFactory.html":{},"classes/LaunchRequestFactory-1.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{}}}],["baseskillconfig",{"_index":633,"title":{"interfaces/BaseSkillConfig.html":{}},"body":{"interfaces/BaseSkillConfig.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/S3SkillConfig.html":{},"interfaces/SkillHandlers.html":{}}}],["basic",{"_index":979,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["bearer",{"_index":89,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/ISPProductClient.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["before",{"_index":1218,"title":{},"body":{"interfaces/InitialState.html":{},"interfaces/SkillState.html":{},"classes/StateManager-1.html":{}}}],["beforeeach",{"_index":278,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["beta",{"_index":2160,"title":{},"body":{"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{}}}],["body",{"_index":216,"title":{},"body":{"classes/APIClient-1.html":{},"classes/ProactiveClient.html":{}}}],["book",{"_index":314,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["bookingtime",{"_index":367,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["boolean",{"_index":25,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/BaseSkillConfig.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"interfaces/CreativeWork.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/Factory.html":{},"classes/FallbackIntentFactory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/HandlerBuilder.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"interfaces/HandlerHelpers.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"interfaces/InitialState.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MergeObjectType.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"interfaces/Props.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"classes/RouteMatcher.html":{},"interfaces/Router.html":{},"interfaces/S3SkillConfig.html":{},"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{},"interfaces/Situation.html":{},"interfaces/SituationState.html":{},"interfaces/Skill.html":{},"interfaces/SkillHandlers.html":{},"interfaces/SkillState.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"classes/StateManager.html":{},"classes/StateManager-1.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["bootstraptest",{"_index":2231,"title":{},"body":{"index.html":{}}}],["bottles",{"_index":393,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["briefing",{"_index":1043,"title":{},"body":{"interfaces/FlashBriefingContent.html":{}}}],["broker",{"_index":371,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-1.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["bucketname",{"_index":649,"title":{},"body":{"interfaces/BaseSkillConfig.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/S3SkillConfig.html":{},"interfaces/SkillHandlers.html":{}}}],["bucketpathprefix",{"_index":650,"title":{},"body":{"interfaces/BaseSkillConfig.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/S3SkillConfig.html":{},"interfaces/SkillHandlers.html":{}}}],["builder",{"_index":1073,"title":{},"body":{"classes/HandlerBuilder.html":{},"classes/HandlerFactory.html":{},"index.html":{}}}],["bulky",{"_index":394,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["burnable",{"_index":395,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["buy",{"_index":741,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"interfaces/ResponseContent-1.html":{},"miscellaneous/typealiases.html":{}}}],["buycontentbuilder",{"_index":659,"title":{"classes/BuyContentBuilder.html":{}},"body":{"classes/BuyContentBuilder.html":{}}}],["buyintent",{"_index":738,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["buyintenthandler",{"_index":736,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["buyintenthandlerbuilder",{"_index":694,"title":{"classes/BuyIntentHandlerBuilder.html":{}},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["buyresponsecontentbuilder",{"_index":773,"title":{"classes/BuyResponseContentBuilder.html":{}},"body":{"classes/BuyResponseContentBuilder.html":{}}}],["bye",{"_index":2058,"title":{},"body":{"classes/StateManager.html":{}}}],["ca",{"_index":304,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["cache.productid",{"_index":156,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["cachedproducts",{"_index":147,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["cachedproducts.find(cache",{"_index":155,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["cachedproducts.length",{"_index":149,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["cacheusage",{"_index":111,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["can't",{"_index":865,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["cancel",{"_index":2271,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["canceled",{"_index":350,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["canhandle",{"_index":697,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"interfaces/ErrorHandlerBuilder.html":{},"classes/FallbackIntentFactory.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"classes/IntentHandlerBuilder.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"interfaces/MergeObjectType.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"classes/RequestHandlerFactory-1.html":{},"classes/RouteMatcher.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"miscellaneous/typealiases.html":{}}}],["canhandle(handlerinput",{"_index":2066,"title":{},"body":{"classes/StateManager.html":{}}}],["canhandlefilter",{"_index":698,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"classes/HandlerFactory.html":{},"classes/IntentHandlerBuilder.html":{},"classes/LaunchRequestrBuilder.html":{}}}],["canhandleresponse",{"_index":1085,"title":{},"body":{"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/IntentHandlerBuilder.html":{},"classes/LaunchRequestrBuilder.html":{},"miscellaneous/typealiases.html":{}}}],["cans",{"_index":396,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["case",{"_index":1674,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["catch",{"_index":762,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ProactiveClient.html":{},"interfaces/ResponseContent-1.html":{}}}],["cd",{"_index":2229,"title":{},"body":{"index.html":{}}}],["challenge",{"_index":339,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["check",{"_index":131,"title":{},"body":{"classes/APIClient.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"interfaces/ResponseContent-1.html":{},"classes/RouteMatcher.html":{}}}],["class",{"_index":0,"title":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ApplicationFactory.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"interfaces/Class.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ContextFactory.html":{},"classes/DBClient.html":{},"classes/DeviceAPIClient.html":{},"classes/FallbackIntentFactory.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"classes/HandlerFactory.html":{},"classes/HandlerFactory-1.html":{},"classes/HandlerInputFactory.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentHandlerFactory.html":{},"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestFactory-1.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/ListManagementAPIClient.html":{},"classes/LocalizedAttributesFactory.html":{},"classes/MockAttributeManager.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"classes/ProactiveClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"classes/ReminderAPIClient.html":{},"classes/RequestEnvelopeFactory.html":{},"classes/RequestFactory.html":{},"classes/RequestHandlerFactory.html":{},"classes/RequestHandlerFactory-1.html":{},"classes/RouteMatcher.html":{},"classes/SentryErrorHandlerFactory.html":{},"classes/SessionFactory.html":{},"classes/SettingAPIClient.html":{},"classes/SkillHandlersFactory.html":{},"classes/StateManager.html":{},"classes/StateManager-1.html":{},"classes/SystemFactory.html":{},"classes/TranslationFactory.html":{},"classes/UserFactory.html":{},"classes/UserProfileAPIClient.html":{}},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ApplicationFactory.html":{},"interfaces/AttributeType.html":{},"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ContextFactory.html":{},"interfaces/CreativeWork.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/DeviceAPIClient.html":{},"interfaces/ErrorHandlerBuilder.html":{},"interfaces/Factory.html":{},"classes/FallbackIntentFactory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"classes/HandlerFactory.html":{},"classes/HandlerFactory-1.html":{},"classes/HandlerInputFactory.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"interfaces/InitialState.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentHandlerFactory.html":{},"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestFactory-1.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/ListManagementAPIClient.html":{},"interfaces/LocalizedAttribute.html":{},"classes/LocalizedAttributesFactory.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"classes/MockAttributeManager.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"interfaces/Props.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/RelevantAudience.html":{},"classes/ReminderAPIClient.html":{},"classes/RequestEnvelopeFactory.html":{},"classes/RequestFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"classes/RequestHandlerFactory-1.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"classes/RouteMatcher.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{},"classes/SettingAPIClient.html":{},"interfaces/Skill.html":{},"interfaces/SkillConstants.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{},"interfaces/SkillState.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"classes/StateManager.html":{},"classes/StateManager-1.html":{},"classes/SystemFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"interfaces/Thing.html":{},"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{},"interfaces/TrashCollectionAlert.html":{},"classes/UserFactory.html":{},"classes/UserProfileAPIClient.html":{},"interfaces/WeatherAlert.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ApplicationFactory.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ContextFactory.html":{},"classes/DBClient.html":{},"classes/DeviceAPIClient.html":{},"classes/FallbackIntentFactory.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"classes/HandlerFactory.html":{},"classes/HandlerFactory-1.html":{},"classes/HandlerInputFactory.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentHandlerFactory.html":{},"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestFactory-1.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/ListManagementAPIClient.html":{},"classes/LocalizedAttributesFactory.html":{},"classes/MockAttributeManager.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"classes/ProactiveClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"classes/ReminderAPIClient.html":{},"classes/RequestEnvelopeFactory.html":{},"classes/RequestFactory.html":{},"classes/RequestHandlerFactory.html":{},"classes/RequestHandlerFactory-1.html":{},"classes/RouteMatcher.html":{},"classes/SentryErrorHandlerFactory.html":{},"classes/SessionFactory.html":{},"classes/SettingAPIClient.html":{},"classes/SkillHandlersFactory.html":{},"classes/StateManager.html":{},"classes/StateManager-1.html":{},"classes/SystemFactory.html":{},"classes/TranslationFactory.html":{},"classes/UserFactory.html":{},"classes/UserProfileAPIClient.html":{},"overview.html":{}}}],["client",{"_index":513,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"classes/BuyIntentHandlerBuilder.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/DeviceAPIClient.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/HandlerInputFactory.html":{},"classes/ListManagementAPIClient.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"classes/ReminderAPIClient.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"classes/SettingAPIClient.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"classes/UserProfileAPIClient.html":{},"interfaces/WeatherAlert.html":{},"index.html":{}}}],["client.apiendpoint",{"_index":1635,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["client.audiencepayload",{"_index":1663,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["client.audiencetype",{"_index":1662,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["client.authresponse",{"_index":1682,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["client.clientconfig",{"_index":1633,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["client.clientid",{"_index":1637,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["client.clientsecret",{"_index":1639,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["client.devapiurl",{"_index":1679,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["client.listproducts",{"_index":749,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["client.relevantaudience",{"_index":1719,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["client.requstbody",{"_index":1643,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["client_id=${this.clientid",{"_index":1707,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["client_secret=${this.clientsecret",{"_index":1708,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["clientconfig",{"_index":529,"title":{"interfaces/ClientConfig.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["clientid",{"_index":515,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["clientsecret",{"_index":516,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["clone",{"_index":2226,"title":{},"body":{"index.html":{}}}],["clonehandler",{"_index":1388,"title":{},"body":{"interfaces/MergeObjectType.html":{}}}],["clonetarget",{"_index":1389,"title":{},"body":{"interfaces/MergeObjectType.html":{}}}],["clothing",{"_index":397,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["collectiondayofweek",{"_index":419,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-6.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["completed",{"_index":1370,"title":{},"body":{"classes/ListManagementAPIClient.html":{},"miscellaneous/typealiases.html":{}}}],["compostable",{"_index":398,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["condition",{"_index":176,"title":{},"body":{"classes/APIClient.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"classes/ISPProductClient.html":{},"classes/IntentHandlerBuilder.html":{},"classes/LaunchRequestrBuilder.html":{}}}],["condition.productid",{"_index":182,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["condition.productname",{"_index":180,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["condition.userinputno",{"_index":181,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["conditions",{"_index":178,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["conf",{"_index":223,"title":{},"body":{"classes/APIClient-1.html":{}}}],["conf.data",{"_index":225,"title":{},"body":{"classes/APIClient-1.html":{}}}],["config",{"_index":924,"title":{},"body":{"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/ProactiveClient.html":{}}}],["config.apiendpont",{"_index":1671,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["config.apiregion",{"_index":1673,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["config.client",{"_index":939,"title":{},"body":{"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{}}}],["config.clientid",{"_index":1688,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["config.clientsecret",{"_index":1690,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["config.isdebug",{"_index":940,"title":{},"body":{"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{}}}],["config.isproduction",{"_index":1677,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["config.primarykey",{"_index":942,"title":{},"body":{"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{}}}],["confirmationstate",{"_index":360,"title":{"interfaces/ConfirmationState.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-1.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["confirmationstate.confirmationstatus",{"_index":1439,"title":{},"body":{"classes/ParameterFactory-1.html":{}}}],["confirmationstatus",{"_index":348,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-1.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["confirmed",{"_index":349,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-1.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["connection",{"_index":763,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["console.log('[get",{"_index":99,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["console.log('[request",{"_index":227,"title":{},"body":{"classes/APIClient-1.html":{}}}],["console.log('[response",{"_index":228,"title":{},"body":{"classes/APIClient-1.html":{}}}],["console.log('dbclient.get",{"_index":945,"title":{},"body":{"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{}}}],["console.log('dbclient.put",{"_index":948,"title":{},"body":{"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{}}}],["const",{"_index":76,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"interfaces/AttributeType.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"interfaces/ErrorHandlerBuilder.html":{},"classes/FallbackIntentFactory.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerFactory.html":{},"classes/HandlerInputFactory.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"interfaces/InitialState.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LocalizedAttributesFactory.html":{},"interfaces/MergeObjectType.html":{},"classes/MockAttributeManager.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"classes/ProactiveClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RequestEnvelopeFactory.html":{},"classes/RequestFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"classes/RequestHandlerFactory-1.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"classes/RouteMatcher.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/SkillConstants.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{},"interfaces/SkillState.html":{},"classes/StateManager.html":{},"classes/StateManager-1.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{}}}],["constants",{"_index":636,"title":{},"body":{"interfaces/BaseSkillConfig.html":{},"classes/ConstantsInterceptorFactory.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/S3SkillConfig.html":{},"interfaces/SkillConstants.html":{},"interfaces/SkillHandlers.html":{}}}],["constantsinterceptorfactory",{"_index":807,"title":{"classes/ConstantsInterceptorFactory.html":{}},"body":{"classes/ConstantsInterceptorFactory.html":{},"interfaces/SkillConstants.html":{}}}],["constructor",{"_index":22,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/HandlerInputFactory.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"interfaces/InitialState.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{},"classes/LaunchRequestFactory.html":{},"classes/ProactiveClient.html":{},"classes/RequestEnvelopeFactory.html":{},"classes/RequestFactory.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"classes/RouteMatcher.html":{},"interfaces/SkillState.html":{},"classes/StateManager-1.html":{},"classes/SystemFactory.html":{}}}],["constructor(applicationid",{"_index":2113,"title":{},"body":{"classes/SystemFactory.html":{}}}],["constructor(attributemanager",{"_index":2086,"title":{},"body":{"classes/StateManager-1.html":{}}}],["constructor(config",{"_index":1632,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["constructor(handlerinput",{"_index":1184,"title":{},"body":{"classes/ISPProductClient.html":{}}}],["constructor(input",{"_index":1948,"title":{},"body":{"classes/RouteMatcher.html":{}}}],["constructor(intentname",{"_index":1252,"title":{},"body":{"classes/IntentHandlerBuilder.html":{}}}],["constructor(locale",{"_index":817,"title":{},"body":{"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{}}}],["constructor(request",{"_index":1837,"title":{},"body":{"classes/RequestEnvelopeFactory.html":{}}}],["constructor(requestenvelope",{"_index":23,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{}}}],["constructor(requestenvelopefactory",{"_index":1131,"title":{},"body":{"classes/HandlerInputFactory.html":{}}}],["constructor(requesttype",{"_index":1878,"title":{},"body":{"classes/RequestFactory.html":{}}}],["constructor(tablename",{"_index":923,"title":{},"body":{"classes/DBClient.html":{}}}],["contact",{"_index":343,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"classes/BuyResponseContentBuilder.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["contemts",{"_index":1041,"title":{},"body":{"interfaces/FlashBriefingContent.html":{}}}],["content",{"_index":84,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/ISPProductClient.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["content.contenttype",{"_index":1420,"title":{},"body":{"classes/ParameterFactory.html":{}}}],["content.name",{"_index":1418,"title":{},"body":{"classes/ParameterFactory.html":{}}}],["contentbuilder",{"_index":661,"title":{"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{}},"body":{"classes/BuyContentBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{}}}],["contentbuilder:10",{"_index":675,"title":{},"body":{"classes/BuyContentBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ISPContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{}}}],["contentbuilder:11",{"_index":673,"title":{},"body":{"classes/BuyContentBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ISPContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{}}}],["contentbuilder:16",{"_index":679,"title":{},"body":{"classes/BuyContentBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ISPContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{}}}],["contentbuilder:19",{"_index":689,"title":{},"body":{"classes/BuyContentBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ISPContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{}}}],["contentbuilder:23",{"_index":687,"title":{},"body":{"classes/BuyContentBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ISPContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{}}}],["contentbuilder:27",{"_index":684,"title":{},"body":{"classes/BuyContentBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ISPContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{}}}],["contentbuilder:35",{"_index":682,"title":{},"body":{"classes/BuyContentBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ISPContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{}}}],["contentbuilder:43",{"_index":678,"title":{},"body":{"classes/BuyContentBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ISPContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{}}}],["contentbuilder:9",{"_index":674,"title":{},"body":{"classes/BuyContentBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ISPContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{}}}],["contentbuilders/generalresponse",{"_index":732,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["contents",{"_index":662,"title":{},"body":{"classes/BuyContentBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{}}}],["contenttype",{"_index":334,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["context",{"_index":882,"title":{},"body":{"classes/ContextFactory.html":{},"classes/HandlerInputFactory.html":{},"classes/RequestEnvelopeFactory.html":{},"classes/SystemFactory.html":{}}}],["contextfactory",{"_index":880,"title":{"classes/ContextFactory.html":{}},"body":{"classes/ContextFactory.html":{},"classes/RequestEnvelopeFactory.html":{}}}],["contributors",{"_index":2237,"title":{},"body":{"index.html":{}}}],["core",{"_index":59,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"interfaces/ErrorHandlerBuilder.html":{},"classes/FallbackIntentFactory.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"classes/HandlerInputFactory.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"interfaces/InitialState.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/MergeObjectType.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"classes/RouteMatcher.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/SkillConstants.html":{},"interfaces/SkillState.html":{},"classes/StateManager.html":{},"classes/StateManager-1.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"index.html":{}}}],["core/node_modules/ask",{"_index":244,"title":{},"body":{"classes/ApplicationFactory.html":{},"classes/ContextFactory.html":{},"interfaces/HandlerHelpers.html":{},"classes/HandlerInputFactory.html":{},"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{},"classes/LaunchRequestFactory.html":{},"classes/RequestEnvelopeFactory.html":{},"classes/RequestFactory.html":{},"classes/RequestHandlerFactory-1.html":{},"classes/RouteMatcher.html":{},"interfaces/Router.html":{},"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{},"interfaces/Situation.html":{},"interfaces/SituationState.html":{},"classes/SystemFactory.html":{},"classes/UserFactory.html":{}}}],["coreservice",{"_index":1148,"title":{},"body":{"classes/HandlerInputFactory.html":{}}}],["coreservice.apiclient",{"_index":1151,"title":{},"body":{"classes/HandlerInputFactory.html":{}}}],["coreservice.serviceclientfactory",{"_index":1149,"title":{},"body":{"classes/HandlerInputFactory.html":{}}}],["count",{"_index":452,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-3.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["create",{"_index":701,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/FallbackIntentFactory.html":{},"classes/HandlerInputFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"classes/RequestHandlerFactory-1.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{}}}],["create(context",{"_index":1135,"title":{},"body":{"classes/HandlerInputFactory.html":{}}}],["create(route",{"_index":1919,"title":{},"body":{"classes/RequestHandlerFactory-1.html":{}}}],["create(type",{"_index":1910,"title":{},"body":{"classes/RequestHandlerFactory.html":{}}}],["createaxiosrequestobject",{"_index":15,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ISPProductClient.html":{}}}],["createaxiosrequestobject(method",{"_index":206,"title":{},"body":{"classes/APIClient-1.html":{}}}],["createaxiosrequestobject(productid",{"_index":37,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["created",{"_index":353,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["createhandlers",{"_index":1914,"title":{},"body":{"classes/RequestHandlerFactory-1.html":{}}}],["createlist",{"_index":1330,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["createlist(request",{"_index":1342,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["createlistitem",{"_index":1331,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["createlistitem(listid",{"_index":1345,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["createreminder",{"_index":1807,"title":{},"body":{"classes/ReminderAPIClient.html":{}}}],["createreminder(reminderrequest",{"_index":1814,"title":{},"body":{"classes/ReminderAPIClient.html":{}}}],["creativework",{"_index":332,"title":{"interfaces/CreativeWork.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["creator",{"_index":450,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["crushable",{"_index":399,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["current",{"_index":1119,"title":{},"body":{"interfaces/HandlerHelpers.html":{},"interfaces/InitialState.html":{},"classes/RequestHandlerFactory-1.html":{},"interfaces/Router.html":{},"interfaces/Situation.html":{},"interfaces/SituationState.html":{},"interfaces/SkillState.html":{},"classes/StateManager-1.html":{}}}],["currentstate",{"_index":1974,"title":{},"body":{"classes/RouteMatcher.html":{}}}],["custom",{"_index":981,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"interfaces/HandlerHelpers.html":{},"classes/RouteMatcher.html":{},"interfaces/Router.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/Situation.html":{},"interfaces/SituationState.html":{}}}],["customerequestenvelope",{"_index":896,"title":{"interfaces/CustomeRequestEnvelope.html":{}},"body":{"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/FallbackIntentFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{}}}],["customhandlerinput",{"_index":894,"title":{"interfaces/CustomHandlerInput.html":{}},"body":{"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/FallbackIntentFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{}}}],["customrequest",{"_index":904,"title":{},"body":{"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/FallbackIntentFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{}}}],["data",{"_index":103,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ISPProductClient.html":{},"classes/ProactiveClient.html":{}}}],["data.inskillproducts",{"_index":150,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["date",{"_index":597,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"classes/RequestEnvelopeFactory.html":{},"classes/RequestFactory.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["datetime",{"_index":311,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["dayofweek",{"_index":409,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["days').toisostring",{"_index":1696,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["db",{"_index":262,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["dbclient",{"_index":920,"title":{"classes/DBClient.html":{}},"body":{"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{}}}],["dbconfig",{"_index":925,"title":{"interfaces/DBConfig.html":{}},"body":{"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{}}}],["dbitem",{"_index":934,"title":{"interfaces/DBItem.html":{}},"body":{"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{}}}],["de",{"_index":301,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["declined",{"_index":788,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{}}}],["default",{"_index":190,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ApplicationFactory.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ContextFactory.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/DeviceAPIClient.html":{},"classes/FallbackIntentFactory.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"classes/HandlerFactory.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/ListManagementAPIClient.html":{},"classes/LocalizedAttributesFactory.html":{},"classes/MockAttributeManager.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"classes/ProactiveClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"classes/ReminderAPIClient.html":{},"classes/RequestEnvelopeFactory.html":{},"classes/RequestFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"classes/RequestHandlerFactory-1.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"classes/RouteMatcher.html":{},"classes/SessionFactory.html":{},"classes/SettingAPIClient.html":{},"interfaces/SkillConstants.html":{},"classes/StateManager-1.html":{},"classes/SystemFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"classes/UserFactory.html":{},"classes/UserProfileAPIClient.html":{}}}],["defaultstate",{"_index":2080,"title":{},"body":{"classes/StateManager.html":{},"miscellaneous/typealiases.html":{}}}],["defined",{"_index":26,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ApplicationFactory.html":{},"interfaces/AttributeType.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ContextFactory.html":{},"classes/DBClient.html":{},"interfaces/DBItem.html":{},"classes/DeviceAPIClient.html":{},"interfaces/ErrorHandlerBuilder.html":{},"interfaces/Factory.html":{},"classes/FallbackIntentFactory.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"classes/HandlerFactory-1.html":{},"classes/HandlerInputFactory.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentHandlerFactory.html":{},"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestFactory-1.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/ListManagementAPIClient.html":{},"interfaces/LocalizedAttribute.html":{},"classes/LocalizedAttributesFactory.html":{},"classes/MockAttributeManager.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"classes/ProactiveClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"classes/ReminderAPIClient.html":{},"classes/RequestEnvelopeFactory.html":{},"classes/RequestFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"classes/RequestHandlerFactory-1.html":{},"classes/RouteMatcher.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{},"classes/SettingAPIClient.html":{},"interfaces/SkillConstants.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{},"classes/StateManager.html":{},"classes/StateManager-1.html":{},"classes/SystemFactory.html":{},"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"classes/UserFactory.html":{},"classes/UserProfileAPIClient.html":{}}}],["delete",{"_index":197,"title":{},"body":{"classes/APIClient-1.html":{},"miscellaneous/typealiases.html":{}}}],["delete(path",{"_index":208,"title":{},"body":{"classes/APIClient-1.html":{}}}],["deletelist",{"_index":1332,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["deletelist(listid",{"_index":1349,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["deletelistitem",{"_index":1333,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["deletelistitem(listid",{"_index":1351,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["deletereminder",{"_index":1808,"title":{},"body":{"classes/ReminderAPIClient.html":{}}}],["deletereminder(alertid",{"_index":1818,"title":{},"body":{"classes/ReminderAPIClient.html":{}}}],["deliverydetails",{"_index":382,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["dependencies",{"_index":2192,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["describe('attributemanager.ts",{"_index":277,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["describe('getsessionattributes",{"_index":291,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["describe('updatesessionattributes",{"_index":279,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["description",{"_index":1038,"title":{},"body":{"interfaces/FlashBriefingContent.html":{},"classes/ISPProductClient.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/Situation.html":{},"classes/StateManager.html":{},"classes/SystemFactory.html":{}}}],["devapiurl",{"_index":521,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["development",{"_index":2224,"title":{},"body":{"index.html":{}}}],["device",{"_index":852,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{},"classes/SystemFactory.html":{}}}],["deviceapiclient",{"_index":951,"title":{"classes/DeviceAPIClient.html":{}},"body":{"classes/DeviceAPIClient.html":{}}}],["deviceid",{"_index":959,"title":{},"body":{"classes/DeviceAPIClient.html":{},"classes/SettingAPIClient.html":{}}}],["dialogstate",{"_index":1283,"title":{},"body":{"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{}}}],["didn't",{"_index":761,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["directive",{"_index":681,"title":{},"body":{"classes/BuyContentBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{}}}],["directivebuilders",{"_index":733,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["directives",{"_index":685,"title":{},"body":{"classes/BuyContentBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ContentBuilder.html":{},"classes/ISPContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/ResponseContent.html":{}}}],["directives.foreach((directive",{"_index":836,"title":{},"body":{"classes/ContentBuilder.html":{},"interfaces/ResponseContent.html":{}}}],["disable",{"_index":91,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"interfaces/AttributeType.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/ISPProductClient.html":{},"interfaces/InitialState.html":{},"classes/MockAttributeManager.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"classes/ProactiveClient.html":{},"interfaces/SkillState.html":{},"classes/StateManager-1.html":{}}}],["disabledcache",{"_index":128,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["disallow",{"_index":122,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["distributionmethod",{"_index":320,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["documentclient",{"_index":927,"title":{},"body":{"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{}}}],["documentclient.getiteminput",{"_index":944,"title":{},"body":{"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{}}}],["documentclient.putiteminput",{"_index":947,"title":{},"body":{"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{}}}],["don't",{"_index":757,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["drop",{"_index":325,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["dsn",{"_index":976,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["dynamodb",{"_index":646,"title":{},"body":{"interfaces/BaseSkillConfig.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/S3SkillConfig.html":{},"interfaces/SkillHandlers.html":{},"miscellaneous/typealiases.html":{}}}],["dynamodb.documentclient",{"_index":937,"title":{},"body":{"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{}}}],["dynamodbskillconfig",{"_index":651,"title":{"interfaces/DynamoDBSkillConfig.html":{}},"body":{"interfaces/BaseSkillConfig.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/S3SkillConfig.html":{},"interfaces/SkillHandlers.html":{},"miscellaneous/typealiases.html":{}}}],["e",{"_index":458,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"classes/ContentBuilder-1.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/ISPContentBuilder.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/ResponseContent-1.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["e.response",{"_index":1730,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["e.response.data",{"_index":1735,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["e.response.data.message",{"_index":1736,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["e.response.status",{"_index":1738,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["e.response.statustext",{"_index":1740,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["empty",{"_index":134,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["en",{"_index":302,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{},"classes/LaunchRequestFactory.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"classes/RequestFactory.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["enable",{"_index":112,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["enablecache",{"_index":130,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["enabled",{"_index":143,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["endpoint",{"_index":10,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ISPProductClient.html":{},"classes/SystemFactory.html":{}}}],["enjoy",{"_index":1801,"title":{},"body":{"classes/RefundResponseContentBuilder.html":{}}}],["entertimestamp",{"_index":378,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["entitled",{"_index":877,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["episode",{"_index":315,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["err",{"_index":1731,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["err.errorcode",{"_index":1741,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["err.message",{"_index":1737,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["err.statuscode",{"_index":1739,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["error",{"_index":801,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{},"interfaces/ErrorHandlerBuilder.html":{},"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{},"classes/ProactiveClient.html":{},"classes/RefundResponseContentBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{},"index.html":{}}}],["error('failed",{"_index":1710,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["error('intentname",{"_index":1104,"title":{},"body":{"classes/HandlerFactory-1.html":{},"classes/IntentHandlerFactory.html":{},"classes/LaunchRequestFactory-1.html":{}}}],["error('invalid",{"_index":189,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["error('locale",{"_index":2165,"title":{},"body":{"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{}}}],["error('missing",{"_index":1726,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["error('no",{"_index":185,"title":{},"body":{"classes/APIClient.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/RequestFactory.html":{},"interfaces/ResponseContent-1.html":{}}}],["error(`unsupported",{"_index":1061,"title":{},"body":{"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"classes/HandlerFactory.html":{}}}],["error.message",{"_index":997,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["error.stack",{"_index":1001,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["errorcode",{"_index":1733,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["errorhandle",{"_index":971,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{},"miscellaneous/typealiases.html":{}}}],["errorhandler",{"_index":642,"title":{},"body":{"interfaces/BaseSkillConfig.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/ErrorHandlerBuilder.html":{},"interfaces/S3SkillConfig.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/SkillHandlers.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{}}}],["errorhandlerbuilder",{"_index":964,"title":{"interfaces/ErrorHandlerBuilder.html":{}},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["errorhandlers",{"_index":658,"title":{},"body":{"interfaces/BaseSkillConfig.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/S3SkillConfig.html":{},"interfaces/SkillHandlers.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{}}}],["es",{"_index":306,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["eslint",{"_index":90,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"interfaces/AttributeType.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/ISPProductClient.html":{},"interfaces/InitialState.html":{},"classes/MockAttributeManager.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"classes/ProactiveClient.html":{},"interfaces/SkillState.html":{},"classes/StateManager-1.html":{}}}],["eslint/explicit",{"_index":114,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["eslint/no",{"_index":95,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"interfaces/AttributeType.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/ISPProductClient.html":{},"interfaces/InitialState.html":{},"classes/MockAttributeManager.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"classes/ProactiveClient.html":{},"interfaces/SkillState.html":{},"classes/StateManager-1.html":{}}}],["eu",{"_index":528,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["event",{"_index":456,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"index.html":{}}}],["event.eventname",{"_index":546,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["event.mediacontent.available.payload",{"_index":1429,"title":{},"body":{"classes/ParameterFactory.html":{}}}],["event.mediacontent.eventname",{"_index":617,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["event.mediacontent.payload",{"_index":622,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["event.messagealert.activated.eventname",{"_index":592,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["event.messagealert.payload",{"_index":593,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["event.occasion.payload",{"_index":613,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["event.occasion.updated.eventname",{"_index":610,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["event.orderstatus.eventname",{"_index":600,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["event.orderstatus.updated.payload",{"_index":601,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["event.payload",{"_index":545,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["event.props",{"_index":554,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-6.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["event.socialgameinvite.available.eventname",{"_index":631,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["event.socialgameinvite.available.payload",{"_index":632,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["event.sportsevent.updated.eventname",{"_index":582,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["event.sportsevent.updated.payload",{"_index":583,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-5.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["event.trashcollectionalert.activated.eventname",{"_index":568,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["event.trashcollectionalert.activated.payload",{"_index":1542,"title":{},"body":{"classes/ParameterFactory-6.html":{}}}],["event.trashcollectionalert.payload",{"_index":570,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["event.weatheralert.activated.eventname",{"_index":575,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["event.weatheralert.activated.payload",{"_index":576,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["event/libs/clients.ts",{"_index":1618,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["event/libs/clients.ts:103",{"_index":1656,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["event/libs/clients.ts:107",{"_index":1664,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["event/libs/clients.ts:115",{"_index":1642,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["event/libs/clients.ts:118",{"_index":1646,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["event/libs/clients.ts:129",{"_index":1648,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["event/libs/clients.ts:36",{"_index":1638,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["event/libs/clients.ts:37",{"_index":1640,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["event/libs/clients.ts:38",{"_index":1636,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["event/libs/clients.ts:40",{"_index":1634,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["event/libs/clients.ts:55",{"_index":1644,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["event/libs/clients.ts:58",{"_index":1668,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["event/libs/clients.ts:62",{"_index":1641,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["event/libs/clients.ts:79",{"_index":1660,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["event/libs/clients.ts:83",{"_index":1666,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["event/libs/clients.ts:87",{"_index":1654,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["event/libs/clients.ts:91",{"_index":1650,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["event/libs/clients.ts:95",{"_index":1658,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["event/libs/clients.ts:99",{"_index":1652,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["event/libs/localizedattributes/factory.ts",{"_index":1382,"title":{},"body":{"classes/LocalizedAttributesFactory.html":{}}}],["event/libs/localizedattributes/factory.ts:7",{"_index":1383,"title":{},"body":{"classes/LocalizedAttributesFactory.html":{}}}],["event/libs/mediacontent/available/payloadfactory.ts",{"_index":1409,"title":{},"body":{"classes/ParameterFactory.html":{}}}],["event/libs/mediacontent/available/payloadfactory.ts:17",{"_index":1410,"title":{},"body":{"classes/ParameterFactory.html":{}}}],["event/libs/messagealert/activated/payloadfactory.ts",{"_index":1467,"title":{},"body":{"classes/ParameterFactory-3.html":{}}}],["event/libs/messagealert/activated/payloadfactory.ts:14",{"_index":1468,"title":{},"body":{"classes/ParameterFactory-3.html":{}}}],["event/libs/model.ts",{"_index":297,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["event/libs/model.ts:113",{"_index":1380,"title":{},"body":{"interfaces/LocalizedAttribute.html":{}}}],["event/libs/model.ts:264",{"_index":1554,"title":{},"body":{"interfaces/PayloadBuilder.html":{}}}],["event/libs/model.ts:265",{"_index":1555,"title":{},"body":{"interfaces/PayloadBuilder.html":{}}}],["event/libs/model.ts:269",{"_index":1033,"title":{},"body":{"interfaces/Factory.html":{}}}],["event/libs/model.ts:270",{"_index":1032,"title":{},"body":{"interfaces/Factory.html":{}}}],["event/libs/model.ts:277",{"_index":1560,"title":{},"body":{"interfaces/PayloadBuilder-1.html":{}}}],["event/libs/model.ts:278",{"_index":1561,"title":{},"body":{"interfaces/PayloadBuilder-1.html":{}}}],["event/libs/model.ts:279",{"_index":1556,"title":{},"body":{"interfaces/PayloadBuilder-1.html":{}}}],["event/libs/model.ts:280",{"_index":1562,"title":{},"body":{"interfaces/PayloadBuilder-1.html":{}}}],["event/libs/model.ts:281",{"_index":1557,"title":{},"body":{"interfaces/PayloadBuilder-1.html":{}}}],["event/libs/model.ts:282",{"_index":1559,"title":{},"body":{"interfaces/PayloadBuilder-1.html":{}}}],["event/libs/model.ts:283",{"_index":1558,"title":{},"body":{"interfaces/PayloadBuilder-1.html":{}}}],["event/libs/model.ts:291",{"_index":1566,"title":{},"body":{"interfaces/PayloadBuilder-2.html":{}}}],["event/libs/model.ts:292",{"_index":1567,"title":{},"body":{"interfaces/PayloadBuilder-2.html":{}}}],["event/libs/model.ts:293",{"_index":1563,"title":{},"body":{"interfaces/PayloadBuilder-2.html":{}}}],["event/libs/model.ts:294",{"_index":1564,"title":{},"body":{"interfaces/PayloadBuilder-2.html":{}}}],["event/libs/model.ts:295",{"_index":1565,"title":{},"body":{"interfaces/PayloadBuilder-2.html":{}}}],["event/libs/model.ts:303",{"_index":1574,"title":{},"body":{"interfaces/PayloadBuilder-3.html":{}}}],["event/libs/model.ts:304",{"_index":1572,"title":{},"body":{"interfaces/PayloadBuilder-3.html":{}}}],["event/libs/model.ts:305",{"_index":1573,"title":{},"body":{"interfaces/PayloadBuilder-3.html":{}}}],["event/libs/model.ts:306",{"_index":1571,"title":{},"body":{"interfaces/PayloadBuilder-3.html":{}}}],["event/libs/model.ts:307",{"_index":1568,"title":{},"body":{"interfaces/PayloadBuilder-3.html":{}}}],["event/libs/model.ts:308",{"_index":1569,"title":{},"body":{"interfaces/PayloadBuilder-3.html":{}}}],["event/libs/model.ts:309",{"_index":1570,"title":{},"body":{"interfaces/PayloadBuilder-3.html":{}}}],["event/libs/model.ts:317",{"_index":1579,"title":{},"body":{"interfaces/PayloadBuilder-4.html":{}}}],["event/libs/model.ts:318",{"_index":1578,"title":{},"body":{"interfaces/PayloadBuilder-4.html":{}}}],["event/libs/model.ts:319",{"_index":1582,"title":{},"body":{"interfaces/PayloadBuilder-4.html":{}}}],["event/libs/model.ts:320",{"_index":1580,"title":{},"body":{"interfaces/PayloadBuilder-4.html":{}}}],["event/libs/model.ts:321",{"_index":1581,"title":{},"body":{"interfaces/PayloadBuilder-4.html":{}}}],["event/libs/model.ts:322",{"_index":1575,"title":{},"body":{"interfaces/PayloadBuilder-4.html":{}}}],["event/libs/model.ts:323",{"_index":1576,"title":{},"body":{"interfaces/PayloadBuilder-4.html":{}}}],["event/libs/model.ts:324",{"_index":1577,"title":{},"body":{"interfaces/PayloadBuilder-4.html":{}}}],["event/libs/model.ts:332",{"_index":1588,"title":{},"body":{"interfaces/PayloadBuilder-5.html":{}}}],["event/libs/model.ts:333",{"_index":1586,"title":{},"body":{"interfaces/PayloadBuilder-5.html":{}}}],["event/libs/model.ts:334",{"_index":1587,"title":{},"body":{"interfaces/PayloadBuilder-5.html":{}}}],["event/libs/model.ts:335",{"_index":1589,"title":{},"body":{"interfaces/PayloadBuilder-5.html":{}}}],["event/libs/model.ts:336",{"_index":1583,"title":{},"body":{"interfaces/PayloadBuilder-5.html":{}}}],["event/libs/model.ts:337",{"_index":1585,"title":{},"body":{"interfaces/PayloadBuilder-5.html":{}}}],["event/libs/model.ts:338",{"_index":1584,"title":{},"body":{"interfaces/PayloadBuilder-5.html":{}}}],["event/libs/model.ts:346",{"_index":1600,"title":{},"body":{"interfaces/PayloadBuilder-6.html":{}}}],["event/libs/model.ts:347",{"_index":1597,"title":{},"body":{"interfaces/PayloadBuilder-6.html":{}}}],["event/libs/model.ts:348",{"_index":1599,"title":{},"body":{"interfaces/PayloadBuilder-6.html":{}}}],["event/libs/model.ts:349",{"_index":1598,"title":{},"body":{"interfaces/PayloadBuilder-6.html":{}}}],["event/libs/model.ts:350",{"_index":1595,"title":{},"body":{"interfaces/PayloadBuilder-6.html":{}}}],["event/libs/model.ts:351",{"_index":1596,"title":{},"body":{"interfaces/PayloadBuilder-6.html":{}}}],["event/libs/model.ts:352",{"_index":1592,"title":{},"body":{"interfaces/PayloadBuilder-6.html":{}}}],["event/libs/model.ts:353",{"_index":1590,"title":{},"body":{"interfaces/PayloadBuilder-6.html":{}}}],["event/libs/model.ts:354",{"_index":1591,"title":{},"body":{"interfaces/PayloadBuilder-6.html":{}}}],["event/libs/model.ts:355",{"_index":1594,"title":{},"body":{"interfaces/PayloadBuilder-6.html":{}}}],["event/libs/model.ts:356",{"_index":1593,"title":{},"body":{"interfaces/PayloadBuilder-6.html":{}}}],["event/libs/model.ts:363",{"_index":1604,"title":{},"body":{"interfaces/PayloadBuilder-7.html":{}}}],["event/libs/model.ts:364",{"_index":1606,"title":{},"body":{"interfaces/PayloadBuilder-7.html":{}}}],["event/libs/model.ts:365",{"_index":1601,"title":{},"body":{"interfaces/PayloadBuilder-7.html":{}}}],["event/libs/model.ts:366",{"_index":1608,"title":{},"body":{"interfaces/PayloadBuilder-7.html":{}}}],["event/libs/model.ts:367",{"_index":1605,"title":{},"body":{"interfaces/PayloadBuilder-7.html":{}}}],["event/libs/model.ts:368",{"_index":1607,"title":{},"body":{"interfaces/PayloadBuilder-7.html":{}}}],["event/libs/model.ts:369",{"_index":1603,"title":{},"body":{"interfaces/PayloadBuilder-7.html":{}}}],["event/libs/model.ts:370",{"_index":1602,"title":{},"body":{"interfaces/PayloadBuilder-7.html":{}}}],["event/libs/model.ts:377",{"_index":1614,"title":{},"body":{"interfaces/PayloadBuilder-8.html":{}}}],["event/libs/model.ts:378",{"_index":1616,"title":{},"body":{"interfaces/PayloadBuilder-8.html":{}}}],["event/libs/model.ts:379",{"_index":1615,"title":{},"body":{"interfaces/PayloadBuilder-8.html":{}}}],["event/libs/model.ts:380",{"_index":1612,"title":{},"body":{"interfaces/PayloadBuilder-8.html":{}}}],["event/libs/model.ts:381",{"_index":1613,"title":{},"body":{"interfaces/PayloadBuilder-8.html":{}}}],["event/libs/model.ts:382",{"_index":1610,"title":{},"body":{"interfaces/PayloadBuilder-8.html":{}}}],["event/libs/model.ts:383",{"_index":1611,"title":{},"body":{"interfaces/PayloadBuilder-8.html":{}}}],["event/libs/occasion/updated/payloadfactory.ts",{"_index":1433,"title":{},"body":{"classes/ParameterFactory-1.html":{}}}],["event/libs/occasion/updated/payloadfactory.ts:15",{"_index":1434,"title":{},"body":{"classes/ParameterFactory-1.html":{}}}],["event/libs/orderstatus/updated/payloadfactory.ts",{"_index":1452,"title":{},"body":{"classes/ParameterFactory-2.html":{}}}],["event/libs/orderstatus/updated/payloadfactory.ts:15",{"_index":1453,"title":{},"body":{"classes/ParameterFactory-2.html":{}}}],["event/libs/socialgameinvite/available/payloadfactory.ts",{"_index":1487,"title":{},"body":{"classes/ParameterFactory-4.html":{}}}],["event/libs/socialgameinvite/available/payloadfactory.ts:15",{"_index":1488,"title":{},"body":{"classes/ParameterFactory-4.html":{}}}],["event/libs/sportsevent/updated/payloadfactory.ts",{"_index":1507,"title":{},"body":{"classes/ParameterFactory-5.html":{}}}],["event/libs/sportsevent/updated/payloadfactory.ts:12",{"_index":1508,"title":{},"body":{"classes/ParameterFactory-5.html":{}}}],["event/libs/trashcollectionalert/activated/payloadfactory.ts",{"_index":1529,"title":{},"body":{"classes/ParameterFactory-6.html":{}}}],["event/libs/trashcollectionalert/activated/payloadfactory.ts:10",{"_index":1530,"title":{},"body":{"classes/ParameterFactory-6.html":{}}}],["event/libs/weatheralert/activated/payloadfactory.ts",{"_index":1544,"title":{},"body":{"classes/ParameterFactory-7.html":{}}}],["event/libs/weatheralert/activated/payloadfactory.ts:13",{"_index":1545,"title":{},"body":{"classes/ParameterFactory-7.html":{}}}],["eventleague",{"_index":432,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-5.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["eventleague.name",{"_index":1518,"title":{},"body":{"classes/ParameterFactory-5.html":{}}}],["eventname",{"_index":460,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["example",{"_index":978,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{},"classes/StateManager.html":{}}}],["execute",{"_index":1977,"title":{},"body":{"classes/RouteMatcher.html":{}}}],["executecustomsituation",{"_index":1946,"title":{},"body":{"classes/RouteMatcher.html":{}}}],["execution",{"_index":2126,"title":{},"body":{"classes/SystemFactory.html":{}}}],["expect(result).toequal",{"_index":294,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["expect(result).toequal('true",{"_index":285,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["expect(result2).toequal('false",{"_index":290,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["expectedarrival",{"_index":373,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-2.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["expectedstate",{"_index":1932,"title":{},"body":{"classes/RequestHandlerFactory-1.html":{}}}],["expires_in",{"_index":534,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["expirytime",{"_index":544,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["explicit",{"_index":96,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"interfaces/AttributeType.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/ISPProductClient.html":{},"interfaces/InitialState.html":{},"classes/MockAttributeManager.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"classes/ProactiveClient.html":{},"interfaces/SkillState.html":{},"classes/StateManager-1.html":{}}}],["export",{"_index":67,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ApplicationFactory.html":{},"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/BaseSkillConfig.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ContextFactory.html":{},"interfaces/CreativeWork.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/DeviceAPIClient.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/ErrorHandlerBuilder.html":{},"interfaces/Factory.html":{},"classes/FallbackIntentFactory.html":{},"interfaces/FlashBriefingContent.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"classes/HandlerFactory-1.html":{},"interfaces/HandlerHelpers.html":{},"classes/HandlerInputFactory.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"interfaces/InitialState.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentHandlerFactory.html":{},"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestFactory-1.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/ListManagementAPIClient.html":{},"interfaces/LocalizedAttribute.html":{},"classes/LocalizedAttributesFactory.html":{},"interfaces/MergeObjectType.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"interfaces/Props.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/RelevantAudience.html":{},"classes/ReminderAPIClient.html":{},"classes/RequestEnvelopeFactory.html":{},"classes/RequestFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"classes/RequestHandlerFactory-1.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"classes/RouteMatcher.html":{},"interfaces/Router.html":{},"interfaces/S3SkillConfig.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{},"classes/SettingAPIClient.html":{},"interfaces/Situation.html":{},"interfaces/SituationState.html":{},"interfaces/Skill.html":{},"interfaces/SkillConstants.html":{},"interfaces/SkillHandlers.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{},"interfaces/SkillState.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"classes/StateManager.html":{},"classes/StateManager-1.html":{},"classes/SystemFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"interfaces/Thing.html":{},"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{},"interfaces/TrashCollectionAlert.html":{},"classes/UserFactory.html":{},"classes/UserProfileAPIClient.html":{},"interfaces/WeatherAlert.html":{}}}],["extends",{"_index":109,"title":{},"body":{"classes/APIClient.html":{},"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/BaseSkillConfig.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"classes/ContentBuilder-1.html":{},"interfaces/CreativeWork.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/DeviceAPIClient.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/Factory.html":{},"classes/FallbackIntentFactory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/ListManagementAPIClient.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"interfaces/Props.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/RelevantAudience.html":{},"classes/ReminderAPIClient.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/ResponseContent-1.html":{},"interfaces/S3SkillConfig.html":{},"classes/SettingAPIClient.html":{},"interfaces/Skill.html":{},"interfaces/SkillHandlers.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"classes/UserProfileAPIClient.html":{},"interfaces/WeatherAlert.html":{}}}],["external.request",{"_index":1850,"title":{},"body":{"classes/RequestEnvelopeFactory.html":{},"classes/RequestFactory.html":{}}}],["extra",{"_index":998,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["factory",{"_index":555,"title":{"interfaces/Factory.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/ErrorHandlerBuilder.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"classes/SystemFactory.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["fallbackhandler",{"_index":909,"title":{},"body":{"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/FallbackIntentFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{}}}],["fallbackintentfactory",{"_index":916,"title":{"classes/FallbackIntentFactory.html":{}},"body":{"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/FallbackIntentFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{}}}],["false",{"_index":288,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"interfaces/InitialState.html":{},"classes/IntentHandlerBuilder.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/MockAttributeManager.html":{},"classes/ProactiveClient.html":{},"classes/RouteMatcher.html":{},"interfaces/SkillState.html":{},"classes/StateManager.html":{},"classes/StateManager-1.html":{}}}],["fe",{"_index":527,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["feed",{"_index":1040,"title":{},"body":{"interfaces/FlashBriefingContent.html":{}}}],["fetch",{"_index":136,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["fetchlists",{"_index":144,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ApplicationFactory.html":{},"interfaces/AttributeType.html":{},"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/BaseSkillConfig.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ContextFactory.html":{},"interfaces/CreativeWork.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/DeviceAPIClient.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/ErrorHandlerBuilder.html":{},"interfaces/Factory.html":{},"classes/FallbackIntentFactory.html":{},"interfaces/FlashBriefingContent.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"classes/HandlerFactory-1.html":{},"interfaces/HandlerHelpers.html":{},"classes/HandlerInputFactory.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"interfaces/InitialState.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentHandlerFactory.html":{},"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestFactory-1.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/ListManagementAPIClient.html":{},"interfaces/LocalizedAttribute.html":{},"classes/LocalizedAttributesFactory.html":{},"interfaces/MergeObjectType.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"classes/MockAttributeManager.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"interfaces/Props.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/RelevantAudience.html":{},"classes/ReminderAPIClient.html":{},"classes/RequestEnvelopeFactory.html":{},"classes/RequestFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"classes/RequestHandlerFactory-1.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"classes/RouteMatcher.html":{},"interfaces/Router.html":{},"interfaces/S3SkillConfig.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{},"classes/SettingAPIClient.html":{},"interfaces/Situation.html":{},"interfaces/SituationState.html":{},"interfaces/Skill.html":{},"interfaces/SkillConstants.html":{},"interfaces/SkillHandlers.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{},"interfaces/SkillState.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"classes/StateManager.html":{},"classes/StateManager-1.html":{},"classes/SystemFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"interfaces/Thing.html":{},"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{},"interfaces/TrashCollectionAlert.html":{},"classes/UserFactory.html":{},"classes/UserProfileAPIClient.html":{},"interfaces/WeatherAlert.html":{}}}],["find",{"_index":159,"title":{},"body":{"classes/APIClient.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"interfaces/ResponseContent-1.html":{}}}],["findproductbyid",{"_index":169,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["findproductbyid(productid",{"_index":1195,"title":{},"body":{"classes/ISPProductClient.html":{}}}],["findproductbyname",{"_index":173,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["findproductbyname(productname",{"_index":1197,"title":{},"body":{"classes/ISPProductClient.html":{}}}],["findproductbyno",{"_index":163,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["findproductbyno(userinputno",{"_index":1199,"title":{},"body":{"classes/ISPProductClient.html":{}}}],["first",{"_index":127,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["fixhistory",{"_index":2235,"title":{},"body":{"index.html":{}}}],["fixtures",{"_index":727,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["flagged",{"_index":445,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["flashbrieding",{"_index":1039,"title":{},"body":{"interfaces/FlashBriefingContent.html":{}}}],["flashbriefingcontent",{"_index":1036,"title":{"interfaces/FlashBriefingContent.html":{}},"body":{"interfaces/FlashBriefingContent.html":{},"miscellaneous/typealiases.html":{}}}],["flashbriefings",{"_index":1051,"title":{},"body":{"interfaces/FlashBriefingContent.html":{},"miscellaneous/typealiases.html":{}}}],["fo",{"_index":2120,"title":{},"body":{"classes/SystemFactory.html":{}}}],["form",{"_index":1703,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["found",{"_index":863,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["fr",{"_index":308,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["freshness",{"_index":442,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-3.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["friday",{"_index":414,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["friend",{"_index":342,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["function",{"_index":154,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{},"interfaces/MergeObjectType.html":{},"classes/RouteMatcher.html":{},"interfaces/Situation.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"miscellaneous/typealiases.html":{}}}],["functions",{"_index":2198,"title":{},"body":{"index.html":{}}}],["game",{"_index":319,"title":{"interfaces/Game.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-4.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["game.name",{"_index":1503,"title":{},"body":{"classes/ParameterFactory-4.html":{}}}],["game.offer",{"_index":1501,"title":{},"body":{"classes/ParameterFactory-4.html":{}}}],["gameinvite",{"_index":344,"title":{"interfaces/GameInvite.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["gamestatistic",{"_index":435,"title":{"interfaces/GameStatistic.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["garbagetype",{"_index":392,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-6.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["garbagetypes",{"_index":418,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-6.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["garden_waste",{"_index":400,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["gb",{"_index":305,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["generatehandlerinput",{"_index":276,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["get(id",{"_index":931,"title":{},"body":{"classes/DBClient.html":{}}}],["get(path",{"_index":210,"title":{},"body":{"classes/APIClient-1.html":{}}}],["get(productid",{"_index":43,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["getacceptedpurchaseresult",{"_index":775,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{}}}],["getacceptedrefundresult",{"_index":1787,"title":{},"body":{"classes/RefundResponseContentBuilder.html":{}}}],["getaccesstoken",{"_index":514,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["getapiaccesstoken",{"_index":54,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ISPProductClient.html":{}}}],["getapiaccesstoken(requestenvelope",{"_index":70,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ISPProductClient.html":{}}}],["getapiendpoint",{"_index":1675,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["getapiendpoint(config",{"_index":1692,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["getapiurl",{"_index":1670,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["getapiurl(config",{"_index":1676,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["getapplication",{"_index":236,"title":{},"body":{"classes/ApplicationFactory.html":{},"classes/RequestEnvelopeFactory.html":{}}}],["getavailability",{"_index":1414,"title":{},"body":{"classes/ParameterFactory.html":{}}}],["getavailability(availability",{"_index":1430,"title":{},"body":{"classes/ParameterFactory.html":{}}}],["getbeforestate",{"_index":1243,"title":{},"body":{"interfaces/InitialState.html":{},"interfaces/SkillState.html":{},"classes/StateManager-1.html":{}}}],["getbody",{"_index":1619,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["getbuyproductdirective",{"_index":690,"title":{},"body":{"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{}}}],["getbuyproductdirective(productid",{"_index":693,"title":{},"body":{"classes/BuyContentBuilder.html":{}}}],["getcachedproducts",{"_index":1183,"title":{},"body":{"classes/ISPProductClient.html":{}}}],["getcachestatus",{"_index":120,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["getcancelproductdirective",{"_index":1781,"title":{},"body":{"classes/RefundContentBuilder.html":{}}}],["getcancelproductdirective(productid",{"_index":1784,"title":{},"body":{"classes/RefundContentBuilder.html":{}}}],["getcannotbuytheproductresponse",{"_index":872,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["getconfirmationstate",{"_index":611,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-1.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["getconfirmationstatus",{"_index":612,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-1.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["getcontext",{"_index":884,"title":{},"body":{"classes/ContextFactory.html":{}}}],["getcountryandpostalcode",{"_index":953,"title":{},"body":{"classes/DeviceAPIClient.html":{}}}],["getcountryandpostalcode(deviceid",{"_index":957,"title":{},"body":{"classes/DeviceAPIClient.html":{}}}],["getcreativework",{"_index":1413,"title":{},"body":{"classes/ParameterFactory.html":{}}}],["getcreativework(content",{"_index":1431,"title":{},"body":{"classes/ParameterFactory.html":{}}}],["getcurrentstate",{"_index":1239,"title":{},"body":{"interfaces/InitialState.html":{},"interfaces/SkillState.html":{},"classes/StateManager.html":{},"classes/StateManager-1.html":{}}}],["getcurrentstate(attributemanager",{"_index":2072,"title":{},"body":{"classes/StateManager.html":{}}}],["getdeclinedpurchaseresult",{"_index":776,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{}}}],["getdeclinedrefundresult",{"_index":1788,"title":{},"body":{"classes/RefundResponseContentBuilder.html":{}}}],["getdistanceunits",{"_index":2010,"title":{},"body":{"classes/SettingAPIClient.html":{}}}],["getdistanceunits(deviceid",{"_index":2015,"title":{},"body":{"classes/SettingAPIClient.html":{}}}],["getemail",{"_index":2179,"title":{},"body":{"classes/UserProfileAPIClient.html":{}}}],["getentitledproductresponse",{"_index":876,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["geteventname",{"_index":552,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["getfailedpurchaseresult",{"_index":777,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{}}}],["getfailedrefundresult",{"_index":1789,"title":{},"body":{"classes/RefundResponseContentBuilder.html":{}}}],["getfulladdress",{"_index":954,"title":{},"body":{"classes/DeviceAPIClient.html":{}}}],["getfulladdress(deviceid",{"_index":960,"title":{},"body":{"classes/DeviceAPIClient.html":{}}}],["getgame",{"_index":1489,"title":{},"body":{"classes/ParameterFactory-4.html":{}}}],["getgame(game",{"_index":1505,"title":{},"body":{"classes/ParameterFactory-4.html":{}}}],["getgameinvite",{"_index":1490,"title":{},"body":{"classes/ParameterFactory-4.html":{}}}],["getgameinvite(invite",{"_index":1504,"title":{},"body":{"classes/ParameterFactory-4.html":{}}}],["getgivenname",{"_index":2180,"title":{},"body":{"classes/UserProfileAPIClient.html":{}}}],["gethandler",{"_index":702,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"interfaces/ErrorHandlerBuilder.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"classes/IntentHandlerBuilder.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["gethandlers",{"_index":2031,"title":{},"body":{"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{}}}],["getlanguagestrings",{"_index":2148,"title":{},"body":{"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{}}}],["getlist",{"_index":1334,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["getlist(listid",{"_index":1354,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["getlistitem",{"_index":1335,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["getlistitem(listid",{"_index":1357,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["getlistproducts",{"_index":1752,"title":{},"body":{"classes/ProductListResponseContentBuilder.html":{}}}],["getlistsmetadata",{"_index":1336,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["getlocale",{"_index":53,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/ISPProductClient.html":{},"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/RequestFactory.html":{}}}],["getlocale(requestenvelope",{"_index":72,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/ISPProductClient.html":{}}}],["getlocalizedattributes",{"_index":559,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"classes/LocalizedAttributesFactory.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["getmatchresult",{"_index":1947,"title":{},"body":{"classes/RouteMatcher.html":{}}}],["getmessagegroup",{"_index":1470,"title":{},"body":{"classes/ParameterFactory-3.html":{}}}],["getmessagegroup(group",{"_index":1485,"title":{},"body":{"classes/ParameterFactory-3.html":{}}}],["getmessagestate",{"_index":1469,"title":{},"body":{"classes/ParameterFactory-3.html":{}}}],["getmessagestate(state",{"_index":1484,"title":{},"body":{"classes/ParameterFactory-3.html":{}}}],["getmobilenumber",{"_index":2181,"title":{},"body":{"classes/UserProfileAPIClient.html":{}}}],["getnextstate",{"_index":1241,"title":{},"body":{"interfaces/InitialState.html":{},"interfaces/SkillState.html":{},"classes/StateManager-1.html":{}}}],["getnoentitledproductresponse",{"_index":1774,"title":{},"body":{"classes/RefundContentBuilder.html":{}}}],["getoccasion",{"_index":1435,"title":{},"body":{"classes/ParameterFactory-1.html":{}}}],["getoccasion(occasion",{"_index":1450,"title":{},"body":{"classes/ParameterFactory-1.html":{}}}],["getorderstate",{"_index":1454,"title":{},"body":{"classes/ParameterFactory-2.html":{}}}],["getorderstate(orderstate",{"_index":1465,"title":{},"body":{"classes/ParameterFactory-2.html":{}}}],["getparameter",{"_index":553,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["getpayload",{"_index":569,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["getpersistentattributes",{"_index":266,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["getproduct",{"_index":19,"title":{},"body":{"classes/APIClient.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"interfaces/ResponseContent-1.html":{}}}],["getproduct(handlerinput",{"_index":747,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["getproduct(productid",{"_index":46,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["getproductbyid",{"_index":153,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["getproductbyid(productid",{"_index":1203,"title":{},"body":{"classes/ISPProductClient.html":{}}}],["getproductdetail",{"_index":1744,"title":{},"body":{"classes/ProductDetailResponseContentBuilder.html":{}}}],["getproductlists",{"_index":1753,"title":{},"body":{"classes/ProductListResponseContentBuilder.html":{}}}],["getproductname",{"_index":851,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["getproductnotfoundresponse",{"_index":868,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["getproducts",{"_index":157,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["getproductsnotfoundresponse",{"_index":864,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["getprofilename",{"_index":1337,"title":{},"body":{"classes/ListManagementAPIClient.html":{},"classes/UserProfileAPIClient.html":{}}}],["getreferenceid",{"_index":1620,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["getreminder",{"_index":1809,"title":{},"body":{"classes/ReminderAPIClient.html":{}}}],["getreminder(alertid",{"_index":1821,"title":{},"body":{"classes/ReminderAPIClient.html":{}}}],["getreminders",{"_index":1810,"title":{},"body":{"classes/ReminderAPIClient.html":{}}}],["getrequest",{"_index":1267,"title":{},"body":{"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/RequestEnvelopeFactory.html":{},"classes/RequestFactory.html":{},"classes/RouteMatcher.html":{}}}],["getrequest(input",{"_index":1961,"title":{},"body":{"classes/RouteMatcher.html":{}}}],["getrequestattributes",{"_index":263,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["getrequestid",{"_index":1268,"title":{},"body":{"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/RequestFactory.html":{}}}],["getrequestparams",{"_index":1621,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["getrequestparams(accesstoken",{"_index":1645,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["getrequesttype",{"_index":1269,"title":{},"body":{"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/RequestFactory.html":{}}}],["getresponse",{"_index":665,"title":{},"body":{"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"interfaces/ErrorHandlerBuilder.html":{},"classes/ISPContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["getserviceclientfactory",{"_index":1127,"title":{},"body":{"classes/HandlerInputFactory.html":{}}}],["getsession",{"_index":1994,"title":{},"body":{"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{}}}],["getsessionattribute",{"_index":255,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["getsessionattribute(handlerinput",{"_index":284,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["getsessionattributes",{"_index":256,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["getsessionattributes(handlerinput",{"_index":293,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["getsituation",{"_index":1925,"title":{},"body":{"classes/RequestHandlerFactory-1.html":{}}}],["getsituation(route",{"_index":1927,"title":{},"body":{"classes/RequestHandlerFactory-1.html":{}}}],["getstate",{"_index":1231,"title":{},"body":{"interfaces/InitialState.html":{},"interfaces/SkillState.html":{},"classes/StateManager.html":{},"classes/StateManager-1.html":{}}}],["getstate(attributemanager",{"_index":2064,"title":{},"body":{"classes/StateManager.html":{}}}],["getstatefromroute",{"_index":1926,"title":{},"body":{"classes/RequestHandlerFactory-1.html":{}}}],["getstatefromroute(route",{"_index":1933,"title":{},"body":{"classes/RequestHandlerFactory-1.html":{}}}],["getsystem",{"_index":2107,"title":{},"body":{"classes/SystemFactory.html":{}}}],["gettempratureunit",{"_index":2011,"title":{},"body":{"classes/SettingAPIClient.html":{}}}],["gettempratureunit(deviceid",{"_index":2017,"title":{},"body":{"classes/SettingAPIClient.html":{}}}],["gettimestamp",{"_index":1270,"title":{},"body":{"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/RequestFactory.html":{}}}],["gettimezone",{"_index":2012,"title":{},"body":{"classes/SettingAPIClient.html":{}}}],["gettimezone(deviceid",{"_index":2019,"title":{},"body":{"classes/SettingAPIClient.html":{}}}],["getting",{"_index":2195,"title":{"index.html":{}},"body":{"index.html":{}}}],["getunsupportedispresponse",{"_index":855,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["geturl",{"_index":20,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ISPProductClient.html":{}}}],["geturl(path",{"_index":212,"title":{},"body":{"classes/APIClient-1.html":{}}}],["geturl(productid",{"_index":48,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["getuser",{"_index":2169,"title":{},"body":{"classes/UserFactory.html":{}}}],["getweatheralert",{"_index":1546,"title":{},"body":{"classes/ParameterFactory-7.html":{}}}],["getweatheralert(weatheralert",{"_index":1553,"title":{},"body":{"classes/ParameterFactory-7.html":{}}}],["git",{"_index":2225,"title":{},"body":{"index.html":{}}}],["git@github.com:hideokamoto/ask",{"_index":2227,"title":{},"body":{"index.html":{}}}],["glass",{"_index":401,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["goal",{"_index":428,"title":{"interfaces/Goal.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["grant_type=client_credentials",{"_index":1706,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["group",{"_index":1473,"title":{},"body":{"classes/ParameterFactory-3.html":{}}}],["group.count",{"_index":1477,"title":{},"body":{"classes/ParameterFactory-3.html":{}}}],["group.creator",{"_index":1475,"title":{},"body":{"classes/ParameterFactory-3.html":{}}}],["group.urgency",{"_index":1479,"title":{},"body":{"classes/ParameterFactory-3.html":{}}}],["handle",{"_index":699,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"interfaces/ErrorHandlerBuilder.html":{},"classes/FallbackIntentFactory.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"classes/IntentHandlerBuilder.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"interfaces/MergeObjectType.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"classes/RequestHandlerFactory-1.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"miscellaneous/typealiases.html":{}}}],["handle(handler",{"_index":907,"title":{},"body":{"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/FallbackIntentFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{}}}],["handle(handlerinput",{"_index":2069,"title":{},"body":{"classes/StateManager.html":{}}}],["handler",{"_index":717,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"interfaces/ErrorHandlerBuilder.html":{},"classes/FallbackIntentFactory.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"interfaces/HandlerHelpers.html":{},"classes/IntentHandlerBuilder.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/Router.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/Situation.html":{},"interfaces/SituationState.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"index.html":{}}}],["handler.canhandle",{"_index":1067,"title":{},"body":{"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"classes/HandlerFactory.html":{}}}],["handler.handle",{"_index":1069,"title":{},"body":{"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"classes/HandlerFactory.html":{}}}],["handlerbuilder",{"_index":696,"title":{"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{}},"body":{"classes/BuyIntentHandlerBuilder.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"classes/HandlerFactory.html":{},"classes/HandlerFactory-1.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentHandlerFactory.html":{},"classes/LaunchRequestFactory-1.html":{},"classes/LaunchRequestrBuilder.html":{}}}],["handlerbuilder:11",{"_index":710,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"classes/IntentHandlerBuilder.html":{},"classes/LaunchRequestrBuilder.html":{}}}],["handlerbuilder:14",{"_index":721,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"classes/IntentHandlerBuilder.html":{},"classes/LaunchRequestrBuilder.html":{}}}],["handlerbuilder:18",{"_index":719,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"classes/IntentHandlerBuilder.html":{},"classes/LaunchRequestrBuilder.html":{}}}],["handlerbuilder:22",{"_index":723,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"classes/IntentHandlerBuilder.html":{},"classes/LaunchRequestrBuilder.html":{}}}],["handlerbuilder:27",{"_index":716,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"classes/IntentHandlerBuilder.html":{},"classes/LaunchRequestrBuilder.html":{}}}],["handlerbuilder:32",{"_index":713,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"classes/IntentHandlerBuilder.html":{},"classes/LaunchRequestrBuilder.html":{}}}],["handlerbuilder:7",{"_index":709,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"classes/IntentHandlerBuilder.html":{},"classes/LaunchRequestrBuilder.html":{}}}],["handlerbuilder:8",{"_index":708,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"classes/IntentHandlerBuilder.html":{},"classes/LaunchRequestrBuilder.html":{}}}],["handlerbuilderinterface",{"_index":1075,"title":{"interfaces/HandlerBuilderInterface.html":{}},"body":{"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{}}}],["handleresponse",{"_index":1086,"title":{},"body":{"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"miscellaneous/typealiases.html":{}}}],["handlerfactory",{"_index":1072,"title":{"classes/HandlerFactory.html":{},"classes/HandlerFactory-1.html":{}},"body":{"classes/HandlerBuilder.html":{},"classes/HandlerFactory.html":{},"classes/HandlerFactory-1.html":{},"classes/IntentHandlerFactory.html":{},"classes/LaunchRequestFactory-1.html":{}}}],["handlerfilter",{"_index":995,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["handlerfilter(handlerinput",{"_index":1002,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["handlerhelpers",{"_index":1110,"title":{"interfaces/HandlerHelpers.html":{}},"body":{"interfaces/HandlerHelpers.html":{},"interfaces/Router.html":{},"interfaces/Situation.html":{},"interfaces/SituationState.html":{}}}],["handlerinput",{"_index":55,"title":{},"body":{"classes/APIClient.html":{},"interfaces/AttributeType.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/ConstantsInterceptorFactory.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"interfaces/ErrorHandlerBuilder.html":{},"classes/FallbackIntentFactory.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"interfaces/HandlerHelpers.html":{},"classes/HandlerInputFactory.html":{},"classes/ISPProductClient.html":{},"classes/IntentHandlerBuilder.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"interfaces/MergeObjectType.html":{},"classes/MockAttributeManager.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"classes/RequestHandlerFactory-1.html":{},"classes/RouteMatcher.html":{},"interfaces/Router.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/Situation.html":{},"interfaces/SituationState.html":{},"interfaces/SkillConstants.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{}}}],["handlerinput.attributesmanager",{"_index":119,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["handlerinput.attributesmanager.getpersistentattributes",{"_index":765,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["handlerinput.attributesmanager.getsessionattributes",{"_index":764,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["handlerinput.attributesmanager.savepersistentattributes",{"_index":770,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["handlerinput.attributesmanager.setpersistentattributes(nextattributes",{"_index":769,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["handlerinput.requestenvelope",{"_index":999,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["handlerinput.requestenvelope.request.type",{"_index":2067,"title":{},"body":{"classes/StateManager.html":{}}}],["handlerinput.responsebuilder",{"_index":771,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["handlerinput.responsebuilder.getresponse",{"_index":910,"title":{},"body":{"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/FallbackIntentFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{}}}],["handlerinputfactory",{"_index":1123,"title":{"classes/HandlerInputFactory.html":{}},"body":{"classes/HandlerInputFactory.html":{}}}],["handlers",{"_index":1012,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{},"index.html":{}}}],["handlers.errorhandlers",{"_index":2052,"title":{},"body":{"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{}}}],["handlers.errorhandlers.concat(errorhandlers",{"_index":2053,"title":{},"body":{"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{}}}],["handlers.requesthandlers.push(handler",{"_index":2045,"title":{},"body":{"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{}}}],["handlers.requestinterceptors",{"_index":2046,"title":{},"body":{"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{}}}],["handlers.requestinterceptors.push(interceptor",{"_index":2048,"title":{},"body":{"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{}}}],["handlers.responseinterceptors",{"_index":2049,"title":{},"body":{"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{}}}],["handlers.responseinterceptors.push(interceptor",{"_index":2051,"title":{},"body":{"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{}}}],["handlers/libs/index.ts",{"_index":966,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{},"miscellaneous/typealiases.html":{}}}],["handlers/libs/index.ts:10",{"_index":970,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{}}}],["handlers/libs/index.ts:38",{"_index":1979,"title":{},"body":{"classes/SentryErrorHandlerFactory.html":{}}}],["handlers/libs/index.ts:8",{"_index":968,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{}}}],["handlers/libs/index.ts:9",{"_index":972,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{}}}],["handling",{"_index":802,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{}}}],["hasproducts",{"_index":138,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["hasstate",{"_index":1237,"title":{},"body":{"interfaces/InitialState.html":{},"interfaces/SkillState.html":{},"classes/StateManager-1.html":{}}}],["hazardous",{"_index":402,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["headers",{"_index":83,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ISPProductClient.html":{},"classes/ProactiveClient.html":{}}}],["hello",{"_index":2059,"title":{},"body":{"classes/StateManager.html":{}}}],["help",{"_index":805,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{}}}],["helper",{"_index":1412,"title":{},"body":{"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-7.html":{}}}],["helpers",{"_index":729,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"interfaces/HandlerHelpers.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-7.html":{},"classes/RouteMatcher.html":{},"interfaces/Router.html":{},"interfaces/Situation.html":{},"interfaces/SituationState.html":{},"index.html":{}}}],["home_appliances",{"_index":403,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["hometeamstatistic",{"_index":434,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-5.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["hometeamstatistic.score",{"_index":1521,"title":{},"body":{"classes/ParameterFactory-5.html":{}}}],["hometeamstatistic.team.name",{"_index":1520,"title":{},"body":{"classes/ParameterFactory-5.html":{}}}],["https://api.amazon.com/auth/o2/token",{"_index":1700,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["https://api.amazonalexa.com",{"_index":1842,"title":{},"body":{"classes/RequestEnvelopeFactory.html":{},"classes/SystemFactory.html":{}}}],["https://api.amazonalexa.com/v1/proactiveevents",{"_index":518,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["https://api.amazonalexa.com/v1/proactiveevents/stages/development",{"_index":522,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["https://api.eu.amazonalexa.com/v1/proactiveevents",{"_index":519,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["https://api.eu.amazonalexa.com/v1/proactiveevents/stages/development",{"_index":523,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["https://api.fe.amazonalexa.com/v1/proactiveevents",{"_index":520,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["https://api.fe.amazonalexa.com/v1/proactiveevents/stages/development",{"_index":524,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["https://ask",{"_index":2199,"title":{},"body":{"index.html":{}}}],["https://developer.amazon.com/docs/flashbriefing/flash",{"_index":1042,"title":{},"body":{"interfaces/FlashBriefingContent.html":{}}}],["https://github.com/ask",{"_index":2207,"title":{},"body":{"index.html":{}}}],["https://www.npmjs.com/package/@ask",{"_index":2206,"title":{},"body":{"index.html":{}}}],["hurricane",{"_index":422,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["id",{"_index":152,"title":{},"body":{"classes/APIClient.html":{},"classes/ApplicationFactory.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/ISPProductClient.html":{},"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/ProactiveClient.html":{},"classes/RequestFactory.html":{},"classes/SystemFactory.html":{}}}],["implements",{"_index":259,"title":{},"body":{"interfaces/AttributeType.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/FallbackIntentFactory.html":{},"classes/HandlerBuilder-1.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/MockAttributeManager.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{}}}],["import",{"_index":51,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ApplicationFactory.html":{},"interfaces/AttributeType.html":{},"interfaces/BaseSkillConfig.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ContextFactory.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/DeviceAPIClient.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/ErrorHandlerBuilder.html":{},"classes/FallbackIntentFactory.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"classes/HandlerFactory-1.html":{},"interfaces/HandlerHelpers.html":{},"classes/HandlerInputFactory.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"interfaces/InitialState.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentHandlerFactory.html":{},"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestFactory-1.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/ListManagementAPIClient.html":{},"classes/LocalizedAttributesFactory.html":{},"interfaces/MergeObjectType.html":{},"classes/MockAttributeManager.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"classes/ProactiveClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"classes/ReminderAPIClient.html":{},"classes/RequestEnvelopeFactory.html":{},"classes/RequestFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"classes/RequestHandlerFactory-1.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"classes/RouteMatcher.html":{},"interfaces/Router.html":{},"interfaces/S3SkillConfig.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{},"classes/SettingAPIClient.html":{},"interfaces/Situation.html":{},"interfaces/SituationState.html":{},"interfaces/SkillConstants.html":{},"interfaces/SkillHandlers.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{},"interfaces/SkillState.html":{},"classes/StateManager.html":{},"classes/StateManager-1.html":{},"classes/SystemFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"classes/UserFactory.html":{},"classes/UserProfileAPIClient.html":{}}}],["includesbeforestate",{"_index":1249,"title":{},"body":{"interfaces/InitialState.html":{},"interfaces/SkillState.html":{},"classes/StateManager-1.html":{}}}],["includesbeforestate(state",{"_index":2095,"title":{},"body":{"classes/StateManager-1.html":{}}}],["includesnextstate",{"_index":1247,"title":{},"body":{"interfaces/InitialState.html":{},"interfaces/SkillState.html":{},"classes/StateManager-1.html":{}}}],["includesnextstate(state",{"_index":2097,"title":{},"body":{"classes/StateManager-1.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ApplicationFactory.html":{},"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/BaseSkillConfig.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ContextFactory.html":{},"interfaces/CreativeWork.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"classes/DeviceAPIClient.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/ErrorHandlerBuilder.html":{},"interfaces/Factory.html":{},"classes/FallbackIntentFactory.html":{},"interfaces/FlashBriefingContent.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"classes/HandlerFactory-1.html":{},"interfaces/HandlerHelpers.html":{},"classes/HandlerInputFactory.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"interfaces/InitialState.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentHandlerFactory.html":{},"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestFactory-1.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/ListManagementAPIClient.html":{},"interfaces/LocalizedAttribute.html":{},"classes/LocalizedAttributesFactory.html":{},"interfaces/MergeObjectType.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"classes/MockAttributeManager.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"interfaces/Props.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/RelevantAudience.html":{},"classes/ReminderAPIClient.html":{},"classes/RequestEnvelopeFactory.html":{},"classes/RequestFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"classes/RequestHandlerFactory-1.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"classes/RouteMatcher.html":{},"interfaces/Router.html":{},"interfaces/S3SkillConfig.html":{},"classes/SentryErrorHandlerFactory.html":{},"classes/SessionFactory.html":{},"classes/SettingAPIClient.html":{},"interfaces/Situation.html":{},"interfaces/SituationState.html":{},"interfaces/Skill.html":{},"interfaces/SkillHandlers.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{},"interfaces/SkillState.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"classes/StateManager.html":{},"classes/StateManager-1.html":{},"classes/SystemFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"interfaces/Thing.html":{},"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{},"interfaces/TrashCollectionAlert.html":{},"classes/UserFactory.html":{},"classes/UserProfileAPIClient.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["indexable",{"_index":251,"title":{},"body":{"interfaces/AttributeType.html":{},"interfaces/DBItem.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/SessionAttribute.html":{},"interfaces/SkillConstants.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ApplicationFactory.html":{},"interfaces/AttributeType.html":{},"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/BaseSkillConfig.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ContextFactory.html":{},"interfaces/CreativeWork.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/DeviceAPIClient.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/ErrorHandlerBuilder.html":{},"interfaces/Factory.html":{},"classes/FallbackIntentFactory.html":{},"interfaces/FlashBriefingContent.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"classes/HandlerFactory-1.html":{},"interfaces/HandlerHelpers.html":{},"classes/HandlerInputFactory.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"interfaces/InitialState.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentHandlerFactory.html":{},"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestFactory-1.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/ListManagementAPIClient.html":{},"interfaces/LocalizedAttribute.html":{},"classes/LocalizedAttributesFactory.html":{},"interfaces/MergeObjectType.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"classes/MockAttributeManager.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"interfaces/Props.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/RelevantAudience.html":{},"classes/ReminderAPIClient.html":{},"classes/RequestEnvelopeFactory.html":{},"classes/RequestFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"classes/RequestHandlerFactory-1.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"classes/RouteMatcher.html":{},"interfaces/Router.html":{},"interfaces/S3SkillConfig.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{},"classes/SettingAPIClient.html":{},"interfaces/Situation.html":{},"interfaces/SituationState.html":{},"interfaces/Skill.html":{},"interfaces/SkillConstants.html":{},"interfaces/SkillHandlers.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{},"interfaces/SkillState.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"classes/StateManager.html":{},"classes/StateManager-1.html":{},"classes/SystemFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"interfaces/Thing.html":{},"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{},"interfaces/TrashCollectionAlert.html":{},"classes/UserFactory.html":{},"classes/UserProfileAPIClient.html":{},"interfaces/WeatherAlert.html":{}}}],["information",{"_index":1009,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["inherited",{"_index":672,"title":{},"body":{"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{}}}],["init",{"_index":809,"title":{},"body":{"classes/ConstantsInterceptorFactory.html":{},"interfaces/ErrorHandlerBuilder.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerFactory.html":{},"classes/HandlerFactory-1.html":{},"classes/IntentHandlerFactory.html":{},"classes/LaunchRequestFactory-1.html":{},"classes/LocalizedAttributesFactory.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/SkillConstants.html":{},"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{}}}],["init(constants",{"_index":810,"title":{},"body":{"classes/ConstantsInterceptorFactory.html":{}}}],["init(intentname",{"_index":1258,"title":{},"body":{"classes/IntentHandlerFactory.html":{}}}],["init(type",{"_index":1097,"title":{},"body":{"classes/HandlerFactory-1.html":{}}}],["initialstate",{"_index":1215,"title":{"interfaces/InitialState.html":{}},"body":{"interfaces/InitialState.html":{},"classes/RequestHandlerFactory-1.html":{},"interfaces/SkillState.html":{},"classes/StateManager-1.html":{}}}],["initialstate.current",{"_index":1222,"title":{},"body":{"interfaces/InitialState.html":{},"interfaces/SkillState.html":{},"classes/StateManager-1.html":{}}}],["initialstate.next",{"_index":1223,"title":{},"body":{"interfaces/InitialState.html":{},"interfaces/SkillState.html":{},"classes/StateManager-1.html":{}}}],["input",{"_index":901,"title":{},"body":{"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/FallbackIntentFactory.html":{},"interfaces/HandlerHelpers.html":{},"classes/HandlerInputFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"classes/RequestHandlerFactory-1.html":{},"classes/RouteMatcher.html":{},"interfaces/Router.html":{},"interfaces/Situation.html":{},"interfaces/SituationState.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{}}}],["input.responsebuilder.withshouldendsession(situation.shouldendsession",{"_index":1942,"title":{},"body":{"classes/RequestHandlerFactory-1.html":{}}}],["inskillproduct",{"_index":64,"title":{},"body":{"classes/APIClient.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/ProductListResponseContentBuilder.html":{},"interfaces/ResponseContent-1.html":{},"miscellaneous/typealiases.html":{}}}],["inskillproducts",{"_index":66,"title":{},"body":{"classes/APIClient.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/ISPProductClient.html":{},"miscellaneous/typealiases.html":{}}}],["inskillproductsresponse",{"_index":62,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["intent",{"_index":1101,"title":{},"body":{"classes/HandlerFactory-1.html":{},"classes/IntentHandlerFactory.html":{},"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{},"classes/LaunchRequestFactory-1.html":{},"classes/RouteMatcher.html":{}}}],["intenthandlerbuilder",{"_index":1100,"title":{"classes/IntentHandlerBuilder.html":{}},"body":{"classes/HandlerFactory-1.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentHandlerFactory.html":{},"classes/LaunchRequestFactory-1.html":{}}}],["intenthandlerbuilder(intentname",{"_index":1106,"title":{},"body":{"classes/HandlerFactory-1.html":{},"classes/IntentHandlerFactory.html":{},"classes/LaunchRequestFactory-1.html":{}}}],["intenthandlerfactory",{"_index":1103,"title":{"classes/IntentHandlerFactory.html":{}},"body":{"classes/HandlerFactory-1.html":{},"classes/IntentHandlerFactory.html":{},"classes/LaunchRequestFactory-1.html":{}}}],["intenthandlerfactory.init(intentname",{"_index":1108,"title":{},"body":{"classes/HandlerFactory-1.html":{},"classes/IntentHandlerFactory.html":{},"classes/LaunchRequestFactory-1.html":{}}}],["intentname",{"_index":1098,"title":{},"body":{"classes/HandlerFactory-1.html":{},"interfaces/HandlerHelpers.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentHandlerFactory.html":{},"classes/LaunchRequestFactory-1.html":{},"interfaces/Router.html":{},"interfaces/Situation.html":{},"interfaces/SituationState.html":{}}}],["intentrequest",{"_index":1107,"title":{},"body":{"classes/HandlerFactory-1.html":{},"classes/IntentHandlerFactory.html":{},"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{},"classes/LaunchRequestFactory-1.html":{}}}],["intentrequestfactory",{"_index":1260,"title":{"classes/IntentRequestFactory.html":{}},"body":{"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{}}}],["interceptors",{"_index":2218,"title":{},"body":{"index.html":{}}}],["interest",{"_index":795,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{}}}],["interface",{"_index":247,"title":{"interfaces/AttributeType.html":{},"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/BaseSkillConfig.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/ErrorHandlerBuilder.html":{},"interfaces/Factory.html":{},"interfaces/FlashBriefingContent.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/HandlerBuilderInterface.html":{},"interfaces/HandlerHelpers.html":{},"interfaces/InitialState.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MergeObjectType.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequestHandlerBuilder.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"interfaces/Router.html":{},"interfaces/S3SkillConfig.html":{},"interfaces/SessionAttribute.html":{},"interfaces/Situation.html":{},"interfaces/SituationState.html":{},"interfaces/Skill.html":{},"interfaces/SkillConstants.html":{},"interfaces/SkillHandlers.html":{},"interfaces/SkillHandlersBuilder.html":{},"interfaces/SkillState.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"interfaces/Thing.html":{},"interfaces/TranslationBuilder.html":{},"interfaces/TranslationObject.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}},"body":{"interfaces/AttributeType.html":{},"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/BaseSkillConfig.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"interfaces/CreativeWork.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/ErrorHandlerBuilder.html":{},"interfaces/Factory.html":{},"classes/FallbackIntentFactory.html":{},"interfaces/FlashBriefingContent.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/HandlerBuilderInterface.html":{},"interfaces/HandlerHelpers.html":{},"classes/ISPContentBuilder.html":{},"interfaces/InitialState.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MergeObjectType.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"classes/MockAttributeManager.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"interfaces/Router.html":{},"interfaces/S3SkillConfig.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{},"interfaces/Situation.html":{},"interfaces/SituationState.html":{},"interfaces/Skill.html":{},"interfaces/SkillConstants.html":{},"interfaces/SkillHandlers.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{},"interfaces/SkillState.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"classes/StateManager-1.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"interfaces/Thing.html":{},"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["interfaces",{"_index":249,"title":{},"body":{"interfaces/AttributeType.html":{},"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/BaseSkillConfig.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/ErrorHandlerBuilder.html":{},"interfaces/Factory.html":{},"classes/FallbackIntentFactory.html":{},"interfaces/FlashBriefingContent.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/HandlerBuilderInterface.html":{},"interfaces/HandlerHelpers.html":{},"interfaces/InitialState.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/LocalizedAttribute.html":{},"classes/LocalizedAttributesFactory.html":{},"interfaces/MergeObjectType.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"interfaces/Router.html":{},"interfaces/S3SkillConfig.html":{},"interfaces/SessionAttribute.html":{},"interfaces/Situation.html":{},"interfaces/SituationState.html":{},"interfaces/Skill.html":{},"interfaces/SkillConstants.html":{},"interfaces/SkillHandlers.html":{},"interfaces/SkillHandlersBuilder.html":{},"interfaces/SkillState.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"classes/SystemFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"interfaces/Thing.html":{},"interfaces/TranslationBuilder.html":{},"interfaces/TranslationObject.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"overview.html":{}}}],["interfaces.localizedattributes.factory",{"_index":1384,"title":{},"body":{"classes/LocalizedAttributesFactory.html":{}}}],["interfaces.mediacontent",{"_index":1415,"title":{},"body":{"classes/ParameterFactory.html":{}}}],["interfaces.messagealert",{"_index":1471,"title":{},"body":{"classes/ParameterFactory-3.html":{}}}],["interfaces.occasion",{"_index":1436,"title":{},"body":{"classes/ParameterFactory-1.html":{}}}],["interfaces.orderstatus",{"_index":1455,"title":{},"body":{"classes/ParameterFactory-2.html":{}}}],["interfaces.payloadbuilder",{"_index":571,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["interfaces.resolvetarget",{"_index":906,"title":{},"body":{"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/FallbackIntentFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{}}}],["interfaces.socialgameinvite",{"_index":1491,"title":{},"body":{"classes/ParameterFactory-4.html":{}}}],["interfaces.sportsevent",{"_index":1509,"title":{},"body":{"classes/ParameterFactory-5.html":{}}}],["interfaces.system.systemstate",{"_index":2130,"title":{},"body":{"classes/SystemFactory.html":{}}}],["interfaces.trashcollectionalert",{"_index":1531,"title":{},"body":{"classes/ParameterFactory-6.html":{}}}],["interfaces.weatheralert",{"_index":1547,"title":{},"body":{"classes/ParameterFactory-7.html":{}}}],["internal",{"_index":1734,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["invalid",{"_index":1308,"title":{},"body":{"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{}}}],["invalidintentrequestexception",{"_index":1307,"title":{"classes/InvalidIntentRequestException.html":{}},"body":{"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{}}}],["invite",{"_index":340,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-4.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["invite.inviter.name",{"_index":1494,"title":{},"body":{"classes/ParameterFactory-4.html":{}}}],["invite.invitetype",{"_index":1499,"title":{},"body":{"classes/ParameterFactory-4.html":{}}}],["invite.relationshiptoinvitee",{"_index":1497,"title":{},"body":{"classes/ParameterFactory-4.html":{}}}],["inviter",{"_index":345,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-4.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["invitetype",{"_index":338,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["isauthresponse",{"_index":1680,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["isauthresponse(response.data",{"_index":1709,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["isdebug",{"_index":11,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/ISPProductClient.html":{}}}],["ishellostate",{"_index":2063,"title":{},"body":{"classes/StateManager.html":{}}}],["ishellostate(handlerinput.attributesmanager",{"_index":2068,"title":{},"body":{"classes/StateManager.html":{}}}],["isintentrequesttype",{"_index":1957,"title":{},"body":{"classes/RouteMatcher.html":{}}}],["isintentrequesttype(this.request",{"_index":1970,"title":{},"body":{"classes/RouteMatcher.html":{}}}],["isisp",{"_index":637,"title":{},"body":{"interfaces/BaseSkillConfig.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/S3SkillConfig.html":{},"interfaces/SkillHandlers.html":{}}}],["isjp",{"_index":666,"title":{},"body":{"classes/BuyContentBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{}}}],["islaunchrequest",{"_index":898,"title":{},"body":{"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/FallbackIntentFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{}}}],["islaunchrequest(handlerinput",{"_index":919,"title":{},"body":{"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/FallbackIntentFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{}}}],["ismatchedintent",{"_index":725,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"classes/IntentHandlerBuilder.html":{}}}],["ismatchedintent(handlerinput",{"_index":737,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"classes/IntentHandlerBuilder.html":{}}}],["ismatchedispstate",{"_index":728,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["ismatchedispstate(handlerinput.attributesmanager",{"_index":740,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["ismatchedstate",{"_index":2070,"title":{},"body":{"classes/StateManager.html":{}}}],["ismatchedstate(attributemanager",{"_index":2074,"title":{},"body":{"classes/StateManager.html":{}}}],["isnewsession",{"_index":1991,"title":{},"body":{"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{}}}],["isnewsession(status",{"_index":1997,"title":{},"body":{"classes/SessionFactory.html":{}}}],["isp",{"_index":100,"title":{},"body":{"classes/APIClient.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"interfaces/ResponseContent-1.html":{},"index.html":{}}}],["ispcontentbuilder",{"_index":845,"title":{"classes/ISPContentBuilder.html":{}},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["isplastsessionattribtes",{"_index":768,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["ispproductclient",{"_index":108,"title":{"classes/ISPProductClient.html":{}},"body":{"classes/APIClient.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/ISPProductClient.html":{}}}],["ispproductclient(handlerinput",{"_index":748,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["isproduction",{"_index":531,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["ispstate",{"_index":2256,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["isskillevent",{"_index":1392,"title":{},"body":{"interfaces/MergeObjectType.html":{}}}],["isstate",{"_index":1224,"title":{},"body":{"interfaces/InitialState.html":{},"interfaces/SkillState.html":{},"classes/StateManager-1.html":{}}}],["isstate(state",{"_index":2099,"title":{},"body":{"classes/StateManager-1.html":{}}}],["isyesintent",{"_index":724,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["isyesintent(handlerinput",{"_index":739,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["it('should",{"_index":280,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["item",{"_index":126,"title":{},"body":{"classes/APIClient.html":{},"classes/ContentBuilder-1.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RequestFactory.html":{},"interfaces/ResponseContent-1.html":{}}}],["itemid",{"_index":1352,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["j",{"_index":102,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/ISPProductClient.html":{}}}],["ja",{"_index":309,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["ja/.test(locale",{"_index":753,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["ja/.test(this.locale",{"_index":828,"title":{},"body":{"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{}}}],["join",{"_index":792,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ProactiveClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["join('next",{"_index":1770,"title":{},"body":{"classes/ProductListResponseContentBuilder.html":{}}}],["jp",{"_index":310,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["json.stringify(handlerinput",{"_index":1062,"title":{},"body":{"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"classes/HandlerFactory.html":{}}}],["key",{"_index":252,"title":{},"body":{"interfaces/AttributeType.html":{},"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"classes/ConstantsInterceptorFactory.html":{},"interfaces/CreativeWork.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"interfaces/ErrorHandlerBuilder.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"classes/LocalizedAttributesFactory.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"classes/MockAttributeManager.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{},"interfaces/Skill.html":{},"interfaces/SkillConstants.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["kitchen_waste",{"_index":404,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["lambda",{"_index":1016,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["landfill",{"_index":405,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["lang",{"_index":2163,"title":{},"body":{"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{}}}],["language",{"_index":87,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ISPProductClient.html":{}}}],["languagestrings",{"_index":2162,"title":{},"body":{"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{}}}],["languagestrings[locale",{"_index":2164,"title":{},"body":{"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{}}}],["launchrequest",{"_index":913,"title":{},"body":{"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/FallbackIntentFactory.html":{},"classes/HandlerFactory-1.html":{},"classes/IntentHandlerFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestFactory-1.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"classes/StateManager.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{}}}],["launchrequestbuilder",{"_index":1102,"title":{},"body":{"classes/HandlerFactory-1.html":{},"classes/IntentHandlerFactory.html":{},"classes/LaunchRequestFactory-1.html":{}}}],["launchrequestfactory",{"_index":1109,"title":{"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestFactory-1.html":{}},"body":{"classes/HandlerFactory-1.html":{},"classes/IntentHandlerFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestFactory-1.html":{}}}],["launchrequesthandlerfactory",{"_index":915,"title":{"classes/LaunchRequestHandlerFactory.html":{}},"body":{"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/FallbackIntentFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{}}}],["launchrequestrbuilder",{"_index":1325,"title":{"classes/LaunchRequestrBuilder.html":{}},"body":{"classes/LaunchRequestrBuilder.html":{}}}],["libs/attributemanager",{"_index":257,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["line",{"_index":93,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"interfaces/AttributeType.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/ISPProductClient.html":{},"interfaces/InitialState.html":{},"classes/MockAttributeManager.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"classes/ProactiveClient.html":{},"interfaces/SkillState.html":{},"classes/StateManager-1.html":{}}}],["lint",{"_index":2234,"title":{},"body":{"index.html":{}}}],["list",{"_index":160,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{},"classes/ProductListResponseContentBuilder.html":{}}}],["listid",{"_index":1348,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["listid}/items",{"_index":1377,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["listid}/items/${itemid",{"_index":1378,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["listmanagement",{"_index":1367,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["listmanagement.createlistitemrequest",{"_index":1346,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["listmanagement.createlistrequest",{"_index":1343,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["listmanagement.updatelistitemrequest",{"_index":1365,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["listmanagement.updatelistrequest",{"_index":1362,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["listmanagementapiclient",{"_index":1328,"title":{"classes/ListManagementAPIClient.html":{}},"body":{"classes/ListManagementAPIClient.html":{}}}],["listproducts",{"_index":21,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{},"classes/ProductListResponseContentBuilder.html":{}}}],["liststatus",{"_index":1355,"title":{},"body":{"classes/ListManagementAPIClient.html":{},"miscellaneous/typealiases.html":{}}}],["literal",{"_index":1208,"title":{},"body":{"classes/ISPProductClient.html":{},"interfaces/Order.html":{},"classes/ProactiveClient.html":{},"interfaces/RequstBody.html":{},"interfaces/TranslationBuilder.html":{},"interfaces/TranslationObject.html":{},"miscellaneous/typealiases.html":{}}}],["locale",{"_index":12,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{},"classes/LaunchRequestFactory.html":{},"interfaces/LocalizedAttribute.html":{},"classes/LocalizedAttributesFactory.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"interfaces/Props.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/RelevantAudience.html":{},"classes/RequestFactory.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["localizedattribute",{"_index":454,"title":{"interfaces/LocalizedAttribute.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["localizedattribute:brokername",{"_index":363,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-1.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["localizedattribute:contentname",{"_index":333,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["localizedattribute:eventleaguename",{"_index":1512,"title":{},"body":{"classes/ParameterFactory-5.html":{}}}],["localizedattribute:gamename",{"_index":347,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-4.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["localizedattribute:providername",{"_index":327,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["localizedattribute:sellername",{"_index":385,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-2.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["localizedattribute:source",{"_index":426,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-7.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["localizedattribute:subject",{"_index":366,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["localizedattributes",{"_index":455,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"classes/LocalizedAttributesFactory.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["localizedattributes.push",{"_index":1385,"title":{},"body":{"classes/LocalizedAttributesFactory.html":{}}}],["localizedattributesfactory",{"_index":1381,"title":{"classes/LocalizedAttributesFactory.html":{}},"body":{"classes/LocalizedAttributesFactory.html":{}}}],["maintext",{"_index":1045,"title":{},"body":{"interfaces/FlashBriefingContent.html":{}}}],["manager",{"_index":2056,"title":{},"body":{"classes/StateManager.html":{}}}],["match",{"_index":336,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"classes/RouteMatcher.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["matchedcurrentstate",{"_index":1245,"title":{},"body":{"interfaces/InitialState.html":{},"interfaces/SkillState.html":{},"classes/StateManager-1.html":{}}}],["matchedcurrentstate(state",{"_index":2101,"title":{},"body":{"classes/StateManager-1.html":{}}}],["matcher",{"_index":1924,"title":{},"body":{"classes/RequestHandlerFactory-1.html":{},"classes/RouteMatcher.html":{}}}],["matcher.getmatchresult",{"_index":1936,"title":{},"body":{"classes/RequestHandlerFactory-1.html":{}}}],["matcher.match",{"_index":1935,"title":{},"body":{"classes/RequestHandlerFactory-1.html":{}}}],["matching",{"_index":192,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ApplicationFactory.html":{},"interfaces/AttributeType.html":{},"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/BaseSkillConfig.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ContextFactory.html":{},"interfaces/CreativeWork.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/DeviceAPIClient.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/ErrorHandlerBuilder.html":{},"interfaces/Factory.html":{},"classes/FallbackIntentFactory.html":{},"interfaces/FlashBriefingContent.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"classes/HandlerFactory-1.html":{},"interfaces/HandlerHelpers.html":{},"classes/HandlerInputFactory.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"interfaces/InitialState.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentHandlerFactory.html":{},"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestFactory-1.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/ListManagementAPIClient.html":{},"interfaces/LocalizedAttribute.html":{},"classes/LocalizedAttributesFactory.html":{},"interfaces/MergeObjectType.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"classes/MockAttributeManager.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"interfaces/Props.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/RelevantAudience.html":{},"classes/ReminderAPIClient.html":{},"classes/RequestEnvelopeFactory.html":{},"classes/RequestFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"classes/RequestHandlerFactory-1.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"classes/RouteMatcher.html":{},"interfaces/Router.html":{},"interfaces/S3SkillConfig.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{},"classes/SettingAPIClient.html":{},"interfaces/Situation.html":{},"interfaces/SituationState.html":{},"interfaces/Skill.html":{},"interfaces/SkillConstants.html":{},"interfaces/SkillHandlers.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{},"interfaces/SkillState.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"classes/StateManager.html":{},"classes/StateManager-1.html":{},"classes/SystemFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"interfaces/Thing.html":{},"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{},"interfaces/TrashCollectionAlert.html":{},"classes/UserFactory.html":{},"classes/UserProfileAPIClient.html":{},"interfaces/WeatherAlert.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["meaning",{"_index":989,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["mediacontent",{"_index":502,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["mediacontent.available.payloadbuilder",{"_index":1416,"title":{},"body":{"classes/ParameterFactory.html":{}}}],["mediacontent.eventname",{"_index":466,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["mediacontent.payload",{"_index":475,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["mediatype",{"_index":313,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["member",{"_index":115,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["merge",{"_index":908,"title":{},"body":{"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/FallbackIntentFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{}}}],["merge(handler",{"_index":918,"title":{},"body":{"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/FallbackIntentFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{}}}],["mergehandler",{"_index":1390,"title":{},"body":{"interfaces/MergeObjectType.html":{}}}],["mergeobject",{"_index":1391,"title":{},"body":{"interfaces/MergeObjectType.html":{}}}],["mergeobjecttype",{"_index":1386,"title":{"interfaces/MergeObjectType.html":{}},"body":{"interfaces/MergeObjectType.html":{}}}],["mergesessionattributes",{"_index":1226,"title":{},"body":{"interfaces/InitialState.html":{},"interfaces/SkillState.html":{},"classes/StateManager-1.html":{}}}],["message",{"_index":550,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/ErrorHandlerBuilder.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["messagealert",{"_index":491,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-3.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["messagealert.activated.payloadbuilder",{"_index":1472,"title":{},"body":{"classes/ParameterFactory-3.html":{}}}],["messagealert.eventname",{"_index":463,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["messagealert.payload",{"_index":472,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["messagefreshness",{"_index":443,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["messagegroup",{"_index":449,"title":{"interfaces/MessageGroup.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-3.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["messages",{"_index":2157,"title":{},"body":{"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{}}}],["messagestate",{"_index":440,"title":{"interfaces/MessageState.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["messagestatus",{"_index":441,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-3.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["messageurgent",{"_index":447,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["method",{"_index":81,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/ISPProductClient.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["methods",{"_index":14,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ApplicationFactory.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ContextFactory.html":{},"classes/DBClient.html":{},"classes/DeviceAPIClient.html":{},"interfaces/ErrorHandlerBuilder.html":{},"interfaces/Factory.html":{},"classes/FallbackIntentFactory.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"classes/HandlerFactory-1.html":{},"classes/HandlerInputFactory.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentHandlerFactory.html":{},"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestFactory-1.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/ListManagementAPIClient.html":{},"classes/LocalizedAttributesFactory.html":{},"classes/MockAttributeManager.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"classes/ProactiveClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"classes/ReminderAPIClient.html":{},"classes/RequestEnvelopeFactory.html":{},"classes/RequestFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"classes/RequestHandlerFactory-1.html":{},"classes/RouteMatcher.html":{},"classes/SentryErrorHandlerFactory.html":{},"classes/SessionFactory.html":{},"classes/SettingAPIClient.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{},"classes/StateManager.html":{},"classes/StateManager-1.html":{},"classes/SystemFactory.html":{},"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"classes/UserFactory.html":{},"classes/UserProfileAPIClient.html":{}}}],["miscellaneous",{"_index":2244,"title":{"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/typealiases.html":{}}}],["mockattributemanager",{"_index":258,"title":{"classes/MockAttributeManager.html":{}},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["model",{"_index":61,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ApplicationFactory.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ContextFactory.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/DeviceAPIClient.html":{},"interfaces/ErrorHandlerBuilder.html":{},"classes/FallbackIntentFactory.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"classes/HandlerFactory-1.html":{},"interfaces/HandlerHelpers.html":{},"classes/HandlerInputFactory.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentHandlerFactory.html":{},"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestFactory-1.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/ListManagementAPIClient.html":{},"classes/LocalizedAttributesFactory.html":{},"interfaces/MergeObjectType.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"classes/ProactiveClient.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/ReminderAPIClient.html":{},"classes/RequestEnvelopeFactory.html":{},"classes/RequestFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"classes/RequestHandlerFactory-1.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"classes/RouteMatcher.html":{},"interfaces/Router.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{},"classes/SettingAPIClient.html":{},"interfaces/Situation.html":{},"interfaces/SituationState.html":{},"classes/SystemFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"classes/UserFactory.html":{},"classes/UserProfileAPIClient.html":{},"dependencies.html":{}}}],["models",{"_index":2041,"title":{},"body":{"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{}}}],["modules",{"_index":2240,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["moment",{"_index":1411,"title":{},"body":{"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ProactiveClient.html":{}}}],["moment().add(1",{"_index":1695,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["moment().toisostring",{"_index":1694,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["moment(date).toisostring",{"_index":1423,"title":{},"body":{"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ProactiveClient.html":{}}}],["monday",{"_index":410,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["more",{"_index":993,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["movie",{"_index":318,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["multicast",{"_index":540,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["mx",{"_index":307,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["name",{"_index":30,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ApplicationFactory.html":{},"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ContextFactory.html":{},"interfaces/CreativeWork.html":{},"classes/DBClient.html":{},"classes/DeviceAPIClient.html":{},"interfaces/ErrorHandlerBuilder.html":{},"interfaces/Factory.html":{},"classes/FallbackIntentFactory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory-1.html":{},"classes/HandlerInputFactory.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentHandlerFactory.html":{},"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/ListManagementAPIClient.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"classes/MockAttributeManager.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"interfaces/Props.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/RelevantAudience.html":{},"classes/ReminderAPIClient.html":{},"classes/RequestEnvelopeFactory.html":{},"classes/RequestFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"classes/RequestHandlerFactory-1.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/ResponseContent-1.html":{},"classes/RouteMatcher.html":{},"classes/SessionFactory.html":{},"classes/SettingAPIClient.html":{},"interfaces/Skill.html":{},"interfaces/SkillHandlersBuilder.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"classes/StateManager.html":{},"classes/StateManager-1.html":{},"classes/SystemFactory.html":{},"interfaces/Thing.html":{},"interfaces/TranslationBuilder.html":{},"interfaces/TrashCollectionAlert.html":{},"classes/UserFactory.html":{},"interfaces/WeatherAlert.html":{},"index.html":{}}}],["namespace",{"_index":299,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["new",{"_index":184,"title":{},"body":{"classes/APIClient.html":{},"interfaces/AttributeType.html":{},"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"classes/BuyIntentHandlerBuilder.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"classes/ContentBuilder-1.html":{},"classes/ContextFactory.html":{},"interfaces/CreativeWork.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"interfaces/Factory.html":{},"classes/FallbackIntentFactory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"classes/HandlerFactory.html":{},"classes/HandlerFactory-1.html":{},"classes/HandlerInputFactory.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/IntentHandlerFactory.html":{},"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestFactory-1.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"classes/MockAttributeManager.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"classes/RequestEnvelopeFactory.html":{},"classes/RequestFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"classes/RequestHandlerFactory-1.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/ResponseContent-1.html":{},"classes/RouteMatcher.html":{},"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"interfaces/Thing.html":{},"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["newstate",{"_index":2057,"title":{},"body":{"classes/StateManager.html":{}}}],["next",{"_index":92,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"interfaces/AttributeType.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"interfaces/HandlerHelpers.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"interfaces/InitialState.html":{},"classes/MockAttributeManager.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"classes/ProactiveClient.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"classes/RequestHandlerFactory-1.html":{},"interfaces/ResponseContent-1.html":{},"interfaces/Router.html":{},"interfaces/Situation.html":{},"interfaces/SituationState.html":{},"interfaces/SkillState.html":{},"classes/StateManager-1.html":{}}}],["nextattributes",{"_index":766,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["no.${i",{"_index":1769,"title":{},"body":{"classes/ProductListResponseContentBuilder.html":{}}}],["noispresponse",{"_index":743,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["noproductresponse",{"_index":730,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["noproductresponse(responsebuilder",{"_index":750,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["not_purchasable",{"_index":752,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["note",{"_index":2236,"title":{},"body":{"index.html":{}}}],["npm",{"_index":2201,"title":{},"body":{"index.html":{}}}],["null",{"_index":165,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{},"classes/ParameterFactory-5.html":{},"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{}}}],["number",{"_index":161,"title":{},"body":{"classes/APIClient.html":{},"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/ISPProductClient.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-5.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["object",{"_index":1309,"title":{},"body":{"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{},"classes/SystemFactory.html":{}}}],["object.assign",{"_index":911,"title":{},"body":{"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/FallbackIntentFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/MergeObjectType.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{}}}],["object.assign(atts",{"_index":767,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["object.assign(this.system.user",{"_index":2137,"title":{},"body":{"classes/SystemFactory.html":{}}}],["object.keys(messages).length",{"_index":2166,"title":{},"body":{"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{}}}],["occasion",{"_index":364,"title":{"interfaces/Occasion.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-1.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["occasion.bookingtime",{"_index":1447,"title":{},"body":{"classes/ParameterFactory-1.html":{}}}],["occasion.broker.name",{"_index":1449,"title":{},"body":{"classes/ParameterFactory-1.html":{}}}],["occasion.eventname",{"_index":465,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["occasion.occasiontype",{"_index":1441,"title":{},"body":{"classes/ParameterFactory-1.html":{}}}],["occasion.payload",{"_index":474,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["occasion.provider.name",{"_index":1445,"title":{},"body":{"classes/ParameterFactory-1.html":{}}}],["occasion.subject",{"_index":1443,"title":{},"body":{"classes/ParameterFactory-1.html":{}}}],["occasion.updated.payloadbuilder",{"_index":1437,"title":{},"body":{"classes/ParameterFactory-1.html":{}}}],["occasiontype",{"_index":355,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["offer",{"_index":346,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["offertype",{"_index":335,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["ogranization",{"_index":361,"title":{"interfaces/Ogranization.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["ok",{"_index":1799,"title":{},"body":{"classes/RefundResponseContentBuilder.html":{}}}],["once",{"_index":137,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["onece",{"_index":992,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["optional",{"_index":32,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ApplicationFactory.html":{},"interfaces/Availability.html":{},"interfaces/BaseSkillConfig.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"interfaces/ClientConfig.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ContextFactory.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"classes/DeviceAPIClient.html":{},"interfaces/ErrorHandlerBuilder.html":{},"interfaces/Factory.html":{},"classes/FallbackIntentFactory.html":{},"interfaces/FlashBriefingContent.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory-1.html":{},"classes/HandlerInputFactory.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"interfaces/InitialState.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentHandlerFactory.html":{},"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/ListManagementAPIClient.html":{},"interfaces/MergeObjectType.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"classes/MockAttributeManager.html":{},"interfaces/Occasion.html":{},"interfaces/OrderState.html":{},"interfaces/Payload-2.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"classes/ProactiveClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/RelevantAudience.html":{},"classes/ReminderAPIClient.html":{},"classes/RequestEnvelopeFactory.html":{},"classes/RequestFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"classes/RequestHandlerFactory-1.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"classes/RouteMatcher.html":{},"interfaces/Router.html":{},"classes/SessionFactory.html":{},"classes/SettingAPIClient.html":{},"interfaces/Situation.html":{},"interfaces/SituationState.html":{},"interfaces/SkillHandlers.html":{},"interfaces/SkillHandlersBuilder.html":{},"interfaces/SkillState.html":{},"classes/StateManager.html":{},"classes/StateManager-1.html":{},"classes/SystemFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TranslationBuilder.html":{},"classes/UserFactory.html":{},"interfaces/WeatherAlert.html":{}}}],["order",{"_index":383,"title":{"interfaces/Order.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-2.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["order.seller.name",{"_index":1464,"title":{},"body":{"classes/ParameterFactory-2.html":{}}}],["order_delivered",{"_index":391,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["order_out_for_delivery",{"_index":390,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["order_preparing",{"_index":388,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["order_received",{"_index":387,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["order_shipped",{"_index":389,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["orderstate",{"_index":376,"title":{"interfaces/OrderState.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-2.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["orderstate.deliverydetails",{"_index":1462,"title":{},"body":{"classes/ParameterFactory-2.html":{}}}],["orderstate.entertimestamp",{"_index":1460,"title":{},"body":{"classes/ParameterFactory-2.html":{}}}],["orderstate.status",{"_index":1458,"title":{},"body":{"classes/ParameterFactory-2.html":{}}}],["orderstatus",{"_index":377,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-2.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["orderstatus.eventname",{"_index":464,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["orderstatus.payload",{"_index":473,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["orderstatus.updated.payloadbuilder",{"_index":1456,"title":{},"body":{"classes/ParameterFactory-2.html":{}}}],["output",{"_index":902,"title":{},"body":{"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/FallbackIntentFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{}}}],["overdue",{"_index":446,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["overview",{"_index":2241,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrite",{"_index":1306,"title":{},"body":{"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/RequestFactory.html":{},"classes/RouteMatcher.html":{}}}],["p",{"_index":220,"title":{},"body":{"classes/APIClient-1.html":{},"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["package",{"_index":2191,"title":{"dependencies.html":{}},"body":{}}],["packages",{"_index":1802,"title":{},"body":{"classes/RefundResponseContentBuilder.html":{}}}],["packages/.../amznpolly.ts",{"_index":2261,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["packages/.../client.ts",{"_index":2252,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["packages/.../fixtures.ts",{"_index":2248,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["packages/.../flashbriefing.ts",{"_index":2251,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["packages/.../generalresponse.ts",{"_index":2255,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["packages/.../handlerfactory.ts",{"_index":2266,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["packages/.../helpers.ts",{"_index":2257,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["packages/.../index.ts",{"_index":2250,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["packages/.../lists.ts",{"_index":2258,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["packages/.../model.ts",{"_index":2247,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["packages/.../models.ts",{"_index":2259,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["packages/.../productfinders.test.ts",{"_index":2254,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["packages/.../productfinders.ts",{"_index":2253,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["packages/.../responsehelpers.ts",{"_index":2263,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["packages/.../slot.ts",{"_index":2265,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["packages/.../statemanager.ts",{"_index":2249,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["packages/ask",{"_index":634,"title":{},"body":{"interfaces/BaseSkillConfig.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/S3SkillConfig.html":{},"interfaces/SkillHandlers.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{},"miscellaneous/typealiases.html":{}}}],["packages/core/__tests__/libs/attributemanager.test.ts",{"_index":250,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["packages/core/__tests__/libs/attributemanager.test.ts:10",{"_index":1394,"title":{},"body":{"classes/MockAttributeManager.html":{}}}],["packages/core/__tests__/libs/attributemanager.test.ts:11",{"_index":1399,"title":{},"body":{"classes/MockAttributeManager.html":{}}}],["packages/core/__tests__/libs/attributemanager.test.ts:14",{"_index":1400,"title":{},"body":{"classes/MockAttributeManager.html":{}}}],["packages/core/__tests__/libs/attributemanager.test.ts:17",{"_index":1398,"title":{},"body":{"classes/MockAttributeManager.html":{}}}],["packages/core/__tests__/libs/attributemanager.test.ts:20",{"_index":1405,"title":{},"body":{"classes/MockAttributeManager.html":{}}}],["packages/core/__tests__/libs/attributemanager.test.ts:23",{"_index":1407,"title":{},"body":{"classes/MockAttributeManager.html":{}}}],["packages/core/__tests__/libs/attributemanager.test.ts:26",{"_index":1403,"title":{},"body":{"classes/MockAttributeManager.html":{}}}],["packages/core/__tests__/libs/attributemanager.test.ts:29",{"_index":1401,"title":{},"body":{"classes/MockAttributeManager.html":{}}}],["packages/core/__tests__/libs/attributemanager.test.ts:5",{"_index":253,"title":{},"body":{"interfaces/AttributeType.html":{}}}],["packages/core/__tests__/libs/attributemanager.test.ts:7",{"_index":1396,"title":{},"body":{"classes/MockAttributeManager.html":{}}}],["packages/core/__tests__/libs/attributemanager.test.ts:8",{"_index":1397,"title":{},"body":{"classes/MockAttributeManager.html":{}}}],["packages/core/__tests__/libs/attributemanager.test.ts:9",{"_index":1395,"title":{},"body":{"classes/MockAttributeManager.html":{}}}],["packages/core/libs/amznpolly.ts",{"_index":2273,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["packages/core/libs/contentbuilder.ts",{"_index":816,"title":{},"body":{"classes/ContentBuilder.html":{},"interfaces/ResponseContent.html":{}}}],["packages/core/libs/contentbuilder.ts:10",{"_index":820,"title":{},"body":{"classes/ContentBuilder.html":{}}}],["packages/core/libs/contentbuilder.ts:11",{"_index":818,"title":{},"body":{"classes/ContentBuilder.html":{}}}],["packages/core/libs/contentbuilder.ts:16",{"_index":822,"title":{},"body":{"classes/ContentBuilder.html":{}}}],["packages/core/libs/contentbuilder.ts:19",{"_index":826,"title":{},"body":{"classes/ContentBuilder.html":{}}}],["packages/core/libs/contentbuilder.ts:23",{"_index":825,"title":{},"body":{"classes/ContentBuilder.html":{}}}],["packages/core/libs/contentbuilder.ts:27",{"_index":824,"title":{},"body":{"classes/ContentBuilder.html":{}}}],["packages/core/libs/contentbuilder.ts:35",{"_index":823,"title":{},"body":{"classes/ContentBuilder.html":{}}}],["packages/core/libs/contentbuilder.ts:43",{"_index":821,"title":{},"body":{"classes/ContentBuilder.html":{}}}],["packages/core/libs/contentbuilder.ts:9",{"_index":819,"title":{},"body":{"classes/ContentBuilder.html":{}}}],["packages/core/libs/db.ts",{"_index":921,"title":{},"body":{"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{}}}],["packages/core/libs/db.ts:14",{"_index":928,"title":{},"body":{"classes/DBClient.html":{}}}],["packages/core/libs/db.ts:15",{"_index":929,"title":{},"body":{"classes/DBClient.html":{}}}],["packages/core/libs/db.ts:16",{"_index":930,"title":{},"body":{"classes/DBClient.html":{}}}],["packages/core/libs/db.ts:17",{"_index":926,"title":{},"body":{"classes/DBClient.html":{}}}],["packages/core/libs/db.ts:24",{"_index":932,"title":{},"body":{"classes/DBClient.html":{}}}],["packages/core/libs/db.ts:37",{"_index":935,"title":{},"body":{"classes/DBClient.html":{}}}],["packages/core/libs/db.ts:4",{"_index":950,"title":{},"body":{"interfaces/DBItem.html":{}}}],["packages/core/libs/requesthandler.ts",{"_index":1387,"title":{},"body":{"interfaces/MergeObjectType.html":{}}}],["packages/core/libs/responsehelpers.ts",{"_index":2274,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["packages/core/libs/slot.ts",{"_index":2275,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["packages/core/libs/statemanager.ts",{"_index":2055,"title":{},"body":{"classes/StateManager.html":{},"miscellaneous/typealiases.html":{}}}],["packages/core/libs/statemanager.ts:29",{"_index":2079,"title":{},"body":{"classes/StateManager.html":{}}}],["packages/core/libs/statemanager.ts:35",{"_index":2073,"title":{},"body":{"classes/StateManager.html":{}}}],["packages/core/libs/statemanager.ts:39",{"_index":2077,"title":{},"body":{"classes/StateManager.html":{}}}],["packages/core/libs/statemanager.ts:42",{"_index":2075,"title":{},"body":{"classes/StateManager.html":{}}}],["packages/core/libs/translator.ts",{"_index":2145,"title":{},"body":{"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{}}}],["packages/core/libs/translator.ts:10",{"_index":2154,"title":{},"body":{"interfaces/TranslationBuilder.html":{}}}],["packages/core/libs/translator.ts:15",{"_index":2167,"title":{},"body":{"classes/TranslationFactory.html":{}}}],["packages/core/libs/translator.ts:7",{"_index":2151,"title":{},"body":{"interfaces/TranslationBuilder.html":{}}}],["packages/core/libs/translator.ts:8",{"_index":2158,"title":{},"body":{"interfaces/TranslationBuilder.html":{}}}],["packages/core/libs/translator.ts:9",{"_index":2153,"title":{},"body":{"interfaces/TranslationBuilder.html":{}}}],["packages/error",{"_index":965,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{},"miscellaneous/typealiases.html":{}}}],["packages/handlers/libs/flashbriefing.ts",{"_index":1037,"title":{},"body":{"interfaces/FlashBriefingContent.html":{},"miscellaneous/typealiases.html":{}}}],["packages/handlers/libs/requesthandlers/factories/base.ts",{"_index":1074,"title":{},"body":{"classes/HandlerBuilder-1.html":{}}}],["packages/handlers/libs/requesthandlers/factories/base.ts:12",{"_index":1078,"title":{},"body":{"classes/HandlerBuilder-1.html":{}}}],["packages/handlers/libs/requesthandlers/factories/base.ts:15",{"_index":1083,"title":{},"body":{"classes/HandlerBuilder-1.html":{}}}],["packages/handlers/libs/requesthandlers/factories/base.ts:19",{"_index":1082,"title":{},"body":{"classes/HandlerBuilder-1.html":{}}}],["packages/handlers/libs/requesthandlers/factories/base.ts:23",{"_index":1084,"title":{},"body":{"classes/HandlerBuilder-1.html":{}}}],["packages/handlers/libs/requesthandlers/factories/base.ts:28",{"_index":1081,"title":{},"body":{"classes/HandlerBuilder-1.html":{}}}],["packages/handlers/libs/requesthandlers/factories/base.ts:33",{"_index":1080,"title":{},"body":{"classes/HandlerBuilder-1.html":{}}}],["packages/handlers/libs/requesthandlers/factories/base.ts:7",{"_index":1077,"title":{},"body":{"classes/HandlerBuilder-1.html":{}}}],["packages/handlers/libs/requesthandlers/factories/base.ts:8",{"_index":1079,"title":{},"body":{"classes/HandlerBuilder-1.html":{}}}],["packages/handlers/libs/requesthandlers/factories/base.ts:9",{"_index":1076,"title":{},"body":{"classes/HandlerBuilder-1.html":{}}}],["packages/handlers/libs/requesthandlers/factories/index.ts",{"_index":1096,"title":{},"body":{"classes/HandlerFactory-1.html":{},"classes/IntentHandlerFactory.html":{},"classes/LaunchRequestFactory-1.html":{}}}],["packages/handlers/libs/requesthandlers/factories/index.ts:16",{"_index":1099,"title":{},"body":{"classes/HandlerFactory-1.html":{}}}],["packages/handlers/libs/requesthandlers/factories/index.ts:25",{"_index":1321,"title":{},"body":{"classes/LaunchRequestFactory-1.html":{}}}],["packages/handlers/libs/requesthandlers/factories/index.ts:9",{"_index":1259,"title":{},"body":{"classes/IntentHandlerFactory.html":{}}}],["packages/handlers/libs/requesthandlers/factories/intent.ts",{"_index":1251,"title":{},"body":{"classes/IntentHandlerBuilder.html":{}}}],["packages/handlers/libs/requesthandlers/factories/intent.ts:12",{"_index":1255,"title":{},"body":{"classes/IntentHandlerBuilder.html":{}}}],["packages/handlers/libs/requesthandlers/factories/intent.ts:13",{"_index":1254,"title":{},"body":{"classes/IntentHandlerBuilder.html":{}}}],["packages/handlers/libs/requesthandlers/factories/intent.ts:7",{"_index":1253,"title":{},"body":{"classes/IntentHandlerBuilder.html":{}}}],["packages/handlers/libs/requesthandlers/factories/launchrequest.ts",{"_index":1326,"title":{},"body":{"classes/LaunchRequestrBuilder.html":{}}}],["packages/handlers/libs/requesthandlers/factories/launchrequest.ts:8",{"_index":1327,"title":{},"body":{"classes/LaunchRequestrBuilder.html":{}}}],["packages/handlers/libs/requesthandlers/factories/model.ts",{"_index":1089,"title":{},"body":{"interfaces/HandlerBuilderInterface.html":{},"miscellaneous/typealiases.html":{}}}],["packages/handlers/libs/requesthandlers/factories/model.ts:11",{"_index":1093,"title":{},"body":{"interfaces/HandlerBuilderInterface.html":{}}}],["packages/handlers/libs/requesthandlers/factories/model.ts:12",{"_index":1092,"title":{},"body":{"interfaces/HandlerBuilderInterface.html":{}}}],["packages/handlers/libs/requesthandlers/factories/model.ts:13",{"_index":1094,"title":{},"body":{"interfaces/HandlerBuilderInterface.html":{}}}],["packages/handlers/libs/requesthandlers/factories/model.ts:14",{"_index":1091,"title":{},"body":{"interfaces/HandlerBuilderInterface.html":{}}}],["packages/handlers/libs/requesthandlers/factories/model.ts:15",{"_index":1090,"title":{},"body":{"interfaces/HandlerBuilderInterface.html":{}}}],["packages/handlers/libs/requesthandlers/handlerfactory.ts",{"_index":895,"title":{},"body":{"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/FallbackIntentFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"miscellaneous/typealiases.html":{}}}],["packages/handlers/libs/requesthandlers/handlerfactory.ts:25",{"_index":1909,"title":{},"body":{"interfaces/RequestHandlerBuilder.html":{}}}],["packages/handlers/libs/requesthandlers/handlerfactory.ts:42",{"_index":1911,"title":{},"body":{"classes/RequestHandlerFactory.html":{}}}],["packages/handlers/libs/requesthandlers/handlerfactory.ts:52",{"_index":1324,"title":{},"body":{"classes/LaunchRequestHandlerFactory.html":{}}}],["packages/handlers/libs/requesthandlers/handlerfactory.ts:55",{"_index":1322,"title":{},"body":{"classes/LaunchRequestHandlerFactory.html":{}}}],["packages/handlers/libs/requesthandlers/handlerfactory.ts:65",{"_index":1035,"title":{},"body":{"classes/FallbackIntentFactory.html":{}}}],["packages/handlers/libs/requesthandlers/handlerfactory.ts:68",{"_index":1034,"title":{},"body":{"classes/FallbackIntentFactory.html":{}}}],["packages/handlers/libs/requestinterceptors/injectconstants.ts",{"_index":808,"title":{},"body":{"classes/ConstantsInterceptorFactory.html":{},"interfaces/SkillConstants.html":{}}}],["packages/handlers/libs/requestinterceptors/injectconstants.ts:4",{"_index":2024,"title":{},"body":{"interfaces/SkillConstants.html":{}}}],["packages/handlers/libs/requestinterceptors/injectconstants.ts:8",{"_index":811,"title":{},"body":{"classes/ConstantsInterceptorFactory.html":{}}}],["packages/isp/__tests__/libs/productfinders.test.ts",{"_index":2268,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["packages/isp/libs/client.ts",{"_index":6,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{},"miscellaneous/typealiases.html":{}}}],["packages/isp/libs/client.ts:10",{"_index":35,"title":{},"body":{"classes/APIClient.html":{}}}],["packages/isp/libs/client.ts:100",{"_index":1194,"title":{},"body":{"classes/ISPProductClient.html":{}}}],["packages/isp/libs/client.ts:11",{"_index":34,"title":{},"body":{"classes/APIClient.html":{}}}],["packages/isp/libs/client.ts:12",{"_index":27,"title":{},"body":{"classes/APIClient.html":{}}}],["packages/isp/libs/client.ts:120",{"_index":1204,"title":{},"body":{"classes/ISPProductClient.html":{}}}],["packages/isp/libs/client.ts:135",{"_index":1205,"title":{},"body":{"classes/ISPProductClient.html":{}}}],["packages/isp/libs/client.ts:143",{"_index":1200,"title":{},"body":{"classes/ISPProductClient.html":{}}}],["packages/isp/libs/client.ts:152",{"_index":1196,"title":{},"body":{"classes/ISPProductClient.html":{}}}],["packages/isp/libs/client.ts:163",{"_index":1198,"title":{},"body":{"classes/ISPProductClient.html":{}}}],["packages/isp/libs/client.ts:174",{"_index":1209,"title":{},"body":{"classes/ISPProductClient.html":{}}}],["packages/isp/libs/client.ts:19",{"_index":49,"title":{},"body":{"classes/APIClient.html":{}}}],["packages/isp/libs/client.ts:24",{"_index":38,"title":{},"body":{"classes/APIClient.html":{}}}],["packages/isp/libs/client.ts:36",{"_index":44,"title":{},"body":{"classes/APIClient.html":{}}}],["packages/isp/libs/client.ts:43",{"_index":50,"title":{},"body":{"classes/APIClient.html":{}}}],["packages/isp/libs/client.ts:46",{"_index":47,"title":{},"body":{"classes/APIClient.html":{}}}],["packages/isp/libs/client.ts:52",{"_index":1186,"title":{},"body":{"classes/ISPProductClient.html":{}}}],["packages/isp/libs/client.ts:53",{"_index":1187,"title":{},"body":{"classes/ISPProductClient.html":{}}}],["packages/isp/libs/client.ts:54",{"_index":1185,"title":{},"body":{"classes/ISPProductClient.html":{}}}],["packages/isp/libs/client.ts:60",{"_index":1202,"title":{},"body":{"classes/ISPProductClient.html":{}}}],["packages/isp/libs/client.ts:66",{"_index":1192,"title":{},"body":{"classes/ISPProductClient.html":{}}}],["packages/isp/libs/client.ts:73",{"_index":1193,"title":{},"body":{"classes/ISPProductClient.html":{}}}],["packages/isp/libs/client.ts:81",{"_index":1206,"title":{},"body":{"classes/ISPProductClient.html":{}}}],["packages/isp/libs/client.ts:89",{"_index":1201,"title":{},"body":{"classes/ISPProductClient.html":{}}}],["packages/isp/libs/client.ts:9",{"_index":36,"title":{},"body":{"classes/APIClient.html":{}}}],["packages/isp/libs/contentbuilders/base.ts",{"_index":839,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["packages/isp/libs/contentbuilders/base.ts:110",{"_index":1181,"title":{},"body":{"classes/ISPContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/base.ts:117",{"_index":1171,"title":{},"body":{"classes/ISPContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/base.ts:13",{"_index":841,"title":{},"body":{"classes/ContentBuilder-1.html":{}}}],["packages/isp/libs/contentbuilders/base.ts:139",{"_index":1180,"title":{},"body":{"classes/ISPContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/base.ts:14",{"_index":842,"title":{},"body":{"classes/ContentBuilder-1.html":{}}}],["packages/isp/libs/contentbuilders/base.ts:146",{"_index":1167,"title":{},"body":{"classes/ISPContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/base.ts:15",{"_index":840,"title":{},"body":{"classes/ContentBuilder-1.html":{}}}],["packages/isp/libs/contentbuilders/base.ts:158",{"_index":1174,"title":{},"body":{"classes/ISPContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/base.ts:165",{"_index":1168,"title":{},"body":{"classes/ISPContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/base.ts:177",{"_index":1175,"title":{},"body":{"classes/ISPContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/base.ts:20",{"_index":844,"title":{},"body":{"classes/ContentBuilder-1.html":{}}}],["packages/isp/libs/contentbuilders/base.ts:23",{"_index":843,"title":{},"body":{"classes/ContentBuilder-1.html":{}}}],["packages/isp/libs/contentbuilders/base.ts:33",{"_index":1166,"title":{},"body":{"classes/ISPContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/base.ts:34",{"_index":1165,"title":{},"body":{"classes/ISPContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/base.ts:40",{"_index":1177,"title":{},"body":{"classes/ISPContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/base.ts:44",{"_index":1169,"title":{},"body":{"classes/ISPContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/base.ts:49",{"_index":1179,"title":{},"body":{"classes/ISPContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/base.ts:53",{"_index":1170,"title":{},"body":{"classes/ISPContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/base.ts:60",{"_index":1173,"title":{},"body":{"classes/ISPContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/base.ts:88",{"_index":1182,"title":{},"body":{"classes/ISPContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/base.ts:95",{"_index":1172,"title":{},"body":{"classes/ISPContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/buy.ts",{"_index":660,"title":{},"body":{"classes/BuyContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/buy.ts:6",{"_index":677,"title":{},"body":{"classes/BuyContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/buyresponse.ts",{"_index":774,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/buyresponse.ts:27",{"_index":785,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/buyresponse.ts:32",{"_index":781,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/buyresponse.ts:51",{"_index":784,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/buyresponse.ts:55",{"_index":783,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/buyresponse.ts:7",{"_index":782,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/buyresponse.ts:71",{"_index":786,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/detail.ts",{"_index":1743,"title":{},"body":{"classes/ProductDetailResponseContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/detail.ts:26",{"_index":1747,"title":{},"body":{"classes/ProductDetailResponseContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/detail.ts:7",{"_index":1746,"title":{},"body":{"classes/ProductDetailResponseContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/generalresponse.ts",{"_index":2269,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["packages/isp/libs/contentbuilders/list.ts",{"_index":1751,"title":{},"body":{"classes/ProductListResponseContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/list.ts:12",{"_index":1758,"title":{},"body":{"classes/ProductListResponseContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/list.ts:15",{"_index":1757,"title":{},"body":{"classes/ProductListResponseContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/list.ts:57",{"_index":1759,"title":{},"body":{"classes/ProductListResponseContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/list.ts:7",{"_index":1756,"title":{},"body":{"classes/ProductListResponseContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/list.ts:8",{"_index":1761,"title":{},"body":{"classes/ProductListResponseContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/refund.ts",{"_index":1773,"title":{},"body":{"classes/RefundContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/refund.ts:11",{"_index":1777,"title":{},"body":{"classes/RefundContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/refund.ts:31",{"_index":1780,"title":{},"body":{"classes/RefundContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/refund.ts:35",{"_index":1779,"title":{},"body":{"classes/RefundContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/refundresponse.ts",{"_index":1786,"title":{},"body":{"classes/RefundResponseContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/refundresponse.ts:25",{"_index":1797,"title":{},"body":{"classes/RefundResponseContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/refundresponse.ts:30",{"_index":1793,"title":{},"body":{"classes/RefundResponseContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/refundresponse.ts:48",{"_index":1796,"title":{},"body":{"classes/RefundResponseContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/refundresponse.ts:52",{"_index":1795,"title":{},"body":{"classes/RefundResponseContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/refundresponse.ts:68",{"_index":1798,"title":{},"body":{"classes/RefundResponseContentBuilder.html":{}}}],["packages/isp/libs/contentbuilders/refundresponse.ts:7",{"_index":1794,"title":{},"body":{"classes/RefundResponseContentBuilder.html":{}}}],["packages/isp/libs/handlers/buy.ts",{"_index":695,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["packages/isp/libs/handlers/buy.ts:30",{"_index":707,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["packages/isp/libs/handlers/buy.ts:33",{"_index":711,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["packages/isp/libs/handlers/fixtures.ts",{"_index":1052,"title":{},"body":{"classes/HandlerBuilder.html":{},"classes/HandlerFactory.html":{},"miscellaneous/typealiases.html":{}}}],["packages/isp/libs/handlers/fixtures.ts:11",{"_index":1055,"title":{},"body":{"classes/HandlerBuilder.html":{}}}],["packages/isp/libs/handlers/fixtures.ts:14",{"_index":1059,"title":{},"body":{"classes/HandlerBuilder.html":{}}}],["packages/isp/libs/handlers/fixtures.ts:18",{"_index":1058,"title":{},"body":{"classes/HandlerBuilder.html":{}}}],["packages/isp/libs/handlers/fixtures.ts:22",{"_index":1060,"title":{},"body":{"classes/HandlerBuilder.html":{}}}],["packages/isp/libs/handlers/fixtures.ts:27",{"_index":1057,"title":{},"body":{"classes/HandlerBuilder.html":{}}}],["packages/isp/libs/handlers/fixtures.ts:32",{"_index":1056,"title":{},"body":{"classes/HandlerBuilder.html":{}}}],["packages/isp/libs/handlers/fixtures.ts:40",{"_index":1095,"title":{},"body":{"classes/HandlerFactory.html":{}}}],["packages/isp/libs/handlers/fixtures.ts:7",{"_index":1054,"title":{},"body":{"classes/HandlerBuilder.html":{}}}],["packages/isp/libs/handlers/fixtures.ts:8",{"_index":1053,"title":{},"body":{"classes/HandlerBuilder.html":{}}}],["packages/isp/libs/handlers/helpers.ts",{"_index":2270,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["packages/isp/libs/productfinders.ts",{"_index":2267,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["packages/proactive",{"_index":296,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"classes/LocalizedAttributesFactory.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["packages/router/libs/matcher/routematcher.ts",{"_index":1944,"title":{},"body":{"classes/RouteMatcher.html":{}}}],["packages/router/libs/matcher/routematcher.ts:25",{"_index":1950,"title":{},"body":{"classes/RouteMatcher.html":{}}}],["packages/router/libs/matcher/routematcher.ts:26",{"_index":1952,"title":{},"body":{"classes/RouteMatcher.html":{}}}],["packages/router/libs/matcher/routematcher.ts:27",{"_index":1951,"title":{},"body":{"classes/RouteMatcher.html":{}}}],["packages/router/libs/matcher/routematcher.ts:28",{"_index":1953,"title":{},"body":{"classes/RouteMatcher.html":{}}}],["packages/router/libs/matcher/routematcher.ts:29",{"_index":1949,"title":{},"body":{"classes/RouteMatcher.html":{}}}],["packages/router/libs/matcher/routematcher.ts:36",{"_index":1954,"title":{},"body":{"classes/RouteMatcher.html":{}}}],["packages/router/libs/matcher/routematcher.ts:40",{"_index":1956,"title":{},"body":{"classes/RouteMatcher.html":{}}}],["packages/router/libs/matcher/routematcher.ts:77",{"_index":1955,"title":{},"body":{"classes/RouteMatcher.html":{}}}],["packages/router/libs/model.ts",{"_index":1111,"title":{},"body":{"interfaces/HandlerHelpers.html":{},"interfaces/Router.html":{},"interfaces/Situation.html":{},"interfaces/SituationState.html":{},"miscellaneous/typealiases.html":{}}}],["packages/router/libs/requesthandlers/createrequesthandler.ts",{"_index":1912,"title":{},"body":{"classes/RequestHandlerFactory-1.html":{}}}],["packages/router/libs/requesthandlers/createrequesthandler.ts:26",{"_index":1915,"title":{},"body":{"classes/RequestHandlerFactory-1.html":{}}}],["packages/router/libs/requesthandlers/createrequesthandler.ts:28",{"_index":1917,"title":{},"body":{"classes/RequestHandlerFactory-1.html":{}}}],["packages/router/libs/requesthandlers/createrequesthandler.ts:33",{"_index":1922,"title":{},"body":{"classes/RequestHandlerFactory-1.html":{}}}],["packages/router/libs/requesthandlers/createrequesthandler.ts:39",{"_index":1920,"title":{},"body":{"classes/RequestHandlerFactory-1.html":{}}}],["packages/serviceclients/libs/client.ts",{"_index":195,"title":{},"body":{"classes/APIClient-1.html":{},"miscellaneous/typealiases.html":{}}}],["packages/serviceclients/libs/client.ts:10",{"_index":200,"title":{},"body":{"classes/APIClient-1.html":{}}}],["packages/serviceclients/libs/client.ts:17",{"_index":213,"title":{},"body":{"classes/APIClient-1.html":{}}}],["packages/serviceclients/libs/client.ts:23",{"_index":207,"title":{},"body":{"classes/APIClient-1.html":{}}}],["packages/serviceclients/libs/client.ts:37",{"_index":209,"title":{},"body":{"classes/APIClient-1.html":{}}}],["packages/serviceclients/libs/client.ts:45",{"_index":211,"title":{},"body":{"classes/APIClient-1.html":{}}}],["packages/serviceclients/libs/client.ts:53",{"_index":215,"title":{},"body":{"classes/APIClient-1.html":{}}}],["packages/serviceclients/libs/client.ts:6",{"_index":205,"title":{},"body":{"classes/APIClient-1.html":{}}}],["packages/serviceclients/libs/client.ts:61",{"_index":218,"title":{},"body":{"classes/APIClient-1.html":{}}}],["packages/serviceclients/libs/client.ts:7",{"_index":202,"title":{},"body":{"classes/APIClient-1.html":{}}}],["packages/serviceclients/libs/client.ts:8",{"_index":201,"title":{},"body":{"classes/APIClient-1.html":{}}}],["packages/serviceclients/libs/client.ts:9",{"_index":204,"title":{},"body":{"classes/APIClient-1.html":{}}}],["packages/serviceclients/libs/devices.ts",{"_index":952,"title":{},"body":{"classes/DeviceAPIClient.html":{}}}],["packages/serviceclients/libs/devices.ts:5",{"_index":956,"title":{},"body":{"classes/DeviceAPIClient.html":{}}}],["packages/serviceclients/libs/devices.ts:6",{"_index":958,"title":{},"body":{"classes/DeviceAPIClient.html":{}}}],["packages/serviceclients/libs/devices.ts:9",{"_index":961,"title":{},"body":{"classes/DeviceAPIClient.html":{}}}],["packages/serviceclients/libs/lists.ts",{"_index":1329,"title":{},"body":{"classes/ListManagementAPIClient.html":{},"miscellaneous/typealiases.html":{}}}],["packages/serviceclients/libs/lists.ts:10",{"_index":1359,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["packages/serviceclients/libs/lists.ts:13",{"_index":1356,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["packages/serviceclients/libs/lists.ts:16",{"_index":1344,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["packages/serviceclients/libs/lists.ts:19",{"_index":1363,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["packages/serviceclients/libs/lists.ts:22",{"_index":1350,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["packages/serviceclients/libs/lists.ts:25",{"_index":1358,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["packages/serviceclients/libs/lists.ts:28",{"_index":1347,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["packages/serviceclients/libs/lists.ts:31",{"_index":1366,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["packages/serviceclients/libs/lists.ts:34",{"_index":1353,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["packages/serviceclients/libs/lists.ts:6",{"_index":1341,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["packages/serviceclients/libs/lists.ts:7",{"_index":1360,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["packages/serviceclients/libs/reminders.ts",{"_index":1806,"title":{},"body":{"classes/ReminderAPIClient.html":{}}}],["packages/serviceclients/libs/reminders.ts:15",{"_index":1822,"title":{},"body":{"classes/ReminderAPIClient.html":{}}}],["packages/serviceclients/libs/reminders.ts:23",{"_index":1825,"title":{},"body":{"classes/ReminderAPIClient.html":{}}}],["packages/serviceclients/libs/reminders.ts:29",{"_index":1823,"title":{},"body":{"classes/ReminderAPIClient.html":{}}}],["packages/serviceclients/libs/reminders.ts:36",{"_index":1816,"title":{},"body":{"classes/ReminderAPIClient.html":{}}}],["packages/serviceclients/libs/reminders.ts:7",{"_index":1813,"title":{},"body":{"classes/ReminderAPIClient.html":{}}}],["packages/serviceclients/libs/reminders.ts:8",{"_index":1819,"title":{},"body":{"classes/ReminderAPIClient.html":{}}}],["packages/serviceclients/libs/settings.ts",{"_index":2009,"title":{},"body":{"classes/SettingAPIClient.html":{}}}],["packages/serviceclients/libs/settings.ts:12",{"_index":2016,"title":{},"body":{"classes/SettingAPIClient.html":{}}}],["packages/serviceclients/libs/settings.ts:5",{"_index":2014,"title":{},"body":{"classes/SettingAPIClient.html":{}}}],["packages/serviceclients/libs/settings.ts:6",{"_index":2020,"title":{},"body":{"classes/SettingAPIClient.html":{}}}],["packages/serviceclients/libs/settings.ts:9",{"_index":2018,"title":{},"body":{"classes/SettingAPIClient.html":{}}}],["packages/serviceclients/libs/userprofiles.ts",{"_index":2178,"title":{},"body":{"classes/UserProfileAPIClient.html":{}}}],["packages/serviceclients/libs/userprofiles.ts:12",{"_index":2184,"title":{},"body":{"classes/UserProfileAPIClient.html":{}}}],["packages/serviceclients/libs/userprofiles.ts:15",{"_index":2186,"title":{},"body":{"classes/UserProfileAPIClient.html":{}}}],["packages/serviceclients/libs/userprofiles.ts:5",{"_index":2183,"title":{},"body":{"classes/UserProfileAPIClient.html":{}}}],["packages/serviceclients/libs/userprofiles.ts:6",{"_index":2187,"title":{},"body":{"classes/UserProfileAPIClient.html":{}}}],["packages/serviceclients/libs/userprofiles.ts:9",{"_index":2185,"title":{},"body":{"classes/UserProfileAPIClient.html":{}}}],["packages/situationmanager/libs/statemanager.ts",{"_index":1216,"title":{},"body":{"interfaces/InitialState.html":{},"interfaces/SkillState.html":{},"classes/StateManager-1.html":{},"miscellaneous/typealiases.html":{}}}],["packages/situationmanager/libs/statemanager.ts:16",{"_index":2089,"title":{},"body":{"classes/StateManager-1.html":{}}}],["packages/situationmanager/libs/statemanager.ts:17",{"_index":2088,"title":{},"body":{"classes/StateManager-1.html":{}}}],["packages/situationmanager/libs/statemanager.ts:18",{"_index":2087,"title":{},"body":{"classes/StateManager-1.html":{}}}],["packages/situationmanager/libs/statemanager.ts:27",{"_index":2100,"title":{},"body":{"classes/StateManager-1.html":{}}}],["packages/situationmanager/libs/statemanager.ts:30",{"_index":2103,"title":{},"body":{"classes/StateManager-1.html":{}}}],["packages/situationmanager/libs/statemanager.ts:39",{"_index":2105,"title":{},"body":{"classes/StateManager-1.html":{}}}],["packages/situationmanager/libs/statemanager.ts:49",{"_index":2093,"title":{},"body":{"classes/StateManager-1.html":{}}}],["packages/situationmanager/libs/statemanager.ts:62",{"_index":2094,"title":{},"body":{"classes/StateManager-1.html":{}}}],["packages/situationmanager/libs/statemanager.ts:68",{"_index":2091,"title":{},"body":{"classes/StateManager-1.html":{}}}],["packages/situationmanager/libs/statemanager.ts:73",{"_index":2092,"title":{},"body":{"classes/StateManager-1.html":{}}}],["packages/situationmanager/libs/statemanager.ts:78",{"_index":2090,"title":{},"body":{"classes/StateManager-1.html":{}}}],["packages/situationmanager/libs/statemanager.ts:83",{"_index":2102,"title":{},"body":{"classes/StateManager-1.html":{}}}],["packages/situationmanager/libs/statemanager.ts:86",{"_index":2098,"title":{},"body":{"classes/StateManager-1.html":{}}}],["packages/situationmanager/libs/statemanager.ts:89",{"_index":2096,"title":{},"body":{"classes/StateManager-1.html":{}}}],["packages/test/libs/application/applicationfactory.ts",{"_index":233,"title":{},"body":{"classes/ApplicationFactory.html":{}}}],["packages/test/libs/application/applicationfactory.ts:12",{"_index":241,"title":{},"body":{"classes/ApplicationFactory.html":{}}}],["packages/test/libs/application/applicationfactory.ts:5",{"_index":240,"title":{},"body":{"classes/ApplicationFactory.html":{}}}],["packages/test/libs/application/applicationfactory.ts:8",{"_index":243,"title":{},"body":{"classes/ApplicationFactory.html":{}}}],["packages/test/libs/context/contextfactory.ts",{"_index":881,"title":{},"body":{"classes/ContextFactory.html":{}}}],["packages/test/libs/context/contextfactory.ts:12",{"_index":892,"title":{},"body":{"classes/ContextFactory.html":{}}}],["packages/test/libs/context/contextfactory.ts:17",{"_index":890,"title":{},"body":{"classes/ContextFactory.html":{}}}],["packages/test/libs/context/contextfactory.ts:7",{"_index":889,"title":{},"body":{"classes/ContextFactory.html":{}}}],["packages/test/libs/context/contextfactory.ts:8",{"_index":887,"title":{},"body":{"classes/ContextFactory.html":{}}}],["packages/test/libs/context/systemfactory.ts",{"_index":2106,"title":{},"body":{"classes/SystemFactory.html":{}}}],["packages/test/libs/context/systemfactory.ts:107",{"_index":2115,"title":{},"body":{"classes/SystemFactory.html":{}}}],["packages/test/libs/context/systemfactory.ts:18",{"_index":2114,"title":{},"body":{"classes/SystemFactory.html":{}}}],["packages/test/libs/context/systemfactory.ts:35",{"_index":2123,"title":{},"body":{"classes/SystemFactory.html":{}}}],["packages/test/libs/context/systemfactory.ts:44",{"_index":2121,"title":{},"body":{"classes/SystemFactory.html":{}}}],["packages/test/libs/context/systemfactory.ts:55",{"_index":2129,"title":{},"body":{"classes/SystemFactory.html":{}}}],["packages/test/libs/context/systemfactory.ts:65",{"_index":2125,"title":{},"body":{"classes/SystemFactory.html":{}}}],["packages/test/libs/context/systemfactory.ts:77",{"_index":2119,"title":{},"body":{"classes/SystemFactory.html":{}}}],["packages/test/libs/context/systemfactory.ts:86",{"_index":2117,"title":{},"body":{"classes/SystemFactory.html":{}}}],["packages/test/libs/context/systemfactory.ts:96",{"_index":2128,"title":{},"body":{"classes/SystemFactory.html":{}}}],["packages/test/libs/handlerinput/handlerinputfactory.ts",{"_index":1124,"title":{},"body":{"classes/HandlerInputFactory.html":{}}}],["packages/test/libs/handlerinput/handlerinputfactory.ts:19",{"_index":1134,"title":{},"body":{"classes/HandlerInputFactory.html":{}}}],["packages/test/libs/handlerinput/handlerinputfactory.ts:20",{"_index":1133,"title":{},"body":{"classes/HandlerInputFactory.html":{}}}],["packages/test/libs/handlerinput/handlerinputfactory.ts:21",{"_index":1132,"title":{},"body":{"classes/HandlerInputFactory.html":{}}}],["packages/test/libs/handlerinput/handlerinputfactory.ts:26",{"_index":1142,"title":{},"body":{"classes/HandlerInputFactory.html":{}}}],["packages/test/libs/handlerinput/handlerinputfactory.ts:30",{"_index":1140,"title":{},"body":{"classes/HandlerInputFactory.html":{}}}],["packages/test/libs/handlerinput/handlerinputfactory.ts:34",{"_index":1145,"title":{},"body":{"classes/HandlerInputFactory.html":{}}}],["packages/test/libs/handlerinput/handlerinputfactory.ts:45",{"_index":1137,"title":{},"body":{"classes/HandlerInputFactory.html":{}}}],["packages/test/libs/handlerinput/handlerinputfactory.ts:56",{"_index":1136,"title":{},"body":{"classes/HandlerInputFactory.html":{}}}],["packages/test/libs/request/intentrequestfactory.ts",{"_index":1261,"title":{},"body":{"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{}}}],["packages/test/libs/request/intentrequestfactory.ts:11",{"_index":1313,"title":{},"body":{"classes/InvalidIntentRequestException.html":{}}}],["packages/test/libs/request/intentrequestfactory.ts:14",{"_index":1276,"title":{},"body":{"classes/IntentRequestFactory.html":{}}}],["packages/test/libs/request/intentrequestfactory.ts:19",{"_index":1286,"title":{},"body":{"classes/IntentRequestFactory.html":{}}}],["packages/test/libs/request/intentrequestfactory.ts:26",{"_index":1284,"title":{},"body":{"classes/IntentRequestFactory.html":{}}}],["packages/test/libs/request/intentrequestfactory.ts:33",{"_index":1287,"title":{},"body":{"classes/IntentRequestFactory.html":{}}}],["packages/test/libs/request/launchrequestfactory.ts",{"_index":1314,"title":{},"body":{"classes/LaunchRequestFactory.html":{}}}],["packages/test/libs/request/launchrequestfactory.ts:11",{"_index":1319,"title":{},"body":{"classes/LaunchRequestFactory.html":{}}}],["packages/test/libs/request/launchrequestfactory.ts:6",{"_index":1316,"title":{},"body":{"classes/LaunchRequestFactory.html":{}}}],["packages/test/libs/request/requestfactory.ts",{"_index":1877,"title":{},"body":{"classes/RequestFactory.html":{}}}],["packages/test/libs/request/requestfactory.ts:10",{"_index":1881,"title":{},"body":{"classes/RequestFactory.html":{}}}],["packages/test/libs/request/requestfactory.ts:11",{"_index":1879,"title":{},"body":{"classes/RequestFactory.html":{}}}],["packages/test/libs/request/requestfactory.ts:17",{"_index":1893,"title":{},"body":{"classes/RequestFactory.html":{}}}],["packages/test/libs/request/requestfactory.ts:21",{"_index":1887,"title":{},"body":{"classes/RequestFactory.html":{}}}],["packages/test/libs/request/requestfactory.ts:25",{"_index":1892,"title":{},"body":{"classes/RequestFactory.html":{}}}],["packages/test/libs/request/requestfactory.ts:29",{"_index":1886,"title":{},"body":{"classes/RequestFactory.html":{}}}],["packages/test/libs/request/requestfactory.ts:34",{"_index":1891,"title":{},"body":{"classes/RequestFactory.html":{}}}],["packages/test/libs/request/requestfactory.ts:38",{"_index":1888,"title":{},"body":{"classes/RequestFactory.html":{}}}],["packages/test/libs/request/requestfactory.ts:43",{"_index":1890,"title":{},"body":{"classes/RequestFactory.html":{}}}],["packages/test/libs/request/requestfactory.ts:47",{"_index":1884,"title":{},"body":{"classes/RequestFactory.html":{}}}],["packages/test/libs/request/requestfactory.ts:51",{"_index":1889,"title":{},"body":{"classes/RequestFactory.html":{}}}],["packages/test/libs/request/requestfactory.ts:55",{"_index":1894,"title":{},"body":{"classes/RequestFactory.html":{}}}],["packages/test/libs/request/requestfactory.ts:69",{"_index":1895,"title":{},"body":{"classes/RequestFactory.html":{}}}],["packages/test/libs/request/requestfactory.ts:7",{"_index":1882,"title":{},"body":{"classes/RequestFactory.html":{}}}],["packages/test/libs/request/requestfactory.ts:72",{"_index":1885,"title":{},"body":{"classes/RequestFactory.html":{}}}],["packages/test/libs/request/requestfactory.ts:8",{"_index":1883,"title":{},"body":{"classes/RequestFactory.html":{}}}],["packages/test/libs/request/requestfactory.ts:9",{"_index":1880,"title":{},"body":{"classes/RequestFactory.html":{}}}],["packages/test/libs/requestenvelopefactory.ts",{"_index":1832,"title":{},"body":{"classes/RequestEnvelopeFactory.html":{}}}],["packages/test/libs/requestenvelopefactory.ts:20",{"_index":1846,"title":{},"body":{"classes/RequestEnvelopeFactory.html":{}}}],["packages/test/libs/requestenvelopefactory.ts:21",{"_index":1856,"title":{},"body":{"classes/RequestEnvelopeFactory.html":{}}}],["packages/test/libs/requestenvelopefactory.ts:22",{"_index":1853,"title":{},"body":{"classes/RequestEnvelopeFactory.html":{}}}],["packages/test/libs/requestenvelopefactory.ts:23",{"_index":1851,"title":{},"body":{"classes/RequestEnvelopeFactory.html":{}}}],["packages/test/libs/requestenvelopefactory.ts:24",{"_index":1849,"title":{},"body":{"classes/RequestEnvelopeFactory.html":{}}}],["packages/test/libs/requestenvelopefactory.ts:25",{"_index":1841,"title":{},"body":{"classes/RequestEnvelopeFactory.html":{}}}],["packages/test/libs/requestenvelopefactory.ts:26",{"_index":1843,"title":{},"body":{"classes/RequestEnvelopeFactory.html":{}}}],["packages/test/libs/requestenvelopefactory.ts:28",{"_index":1848,"title":{},"body":{"classes/RequestEnvelopeFactory.html":{}}}],["packages/test/libs/requestenvelopefactory.ts:29",{"_index":1847,"title":{},"body":{"classes/RequestEnvelopeFactory.html":{}}}],["packages/test/libs/requestenvelopefactory.ts:30",{"_index":1852,"title":{},"body":{"classes/RequestEnvelopeFactory.html":{}}}],["packages/test/libs/requestenvelopefactory.ts:31",{"_index":1854,"title":{},"body":{"classes/RequestEnvelopeFactory.html":{}}}],["packages/test/libs/requestenvelopefactory.ts:32",{"_index":1840,"title":{},"body":{"classes/RequestEnvelopeFactory.html":{}}}],["packages/test/libs/requestenvelopefactory.ts:45",{"_index":1859,"title":{},"body":{"classes/RequestEnvelopeFactory.html":{}}}],["packages/test/libs/requestenvelopefactory.ts:73",{"_index":1858,"title":{},"body":{"classes/RequestEnvelopeFactory.html":{}}}],["packages/test/libs/session/sessionfactory.ts",{"_index":1981,"title":{},"body":{"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{}}}],["packages/test/libs/session/sessionfactory.ts:13",{"_index":1995,"title":{},"body":{"classes/SessionFactory.html":{}}}],["packages/test/libs/session/sessionfactory.ts:24",{"_index":2000,"title":{},"body":{"classes/SessionFactory.html":{}}}],["packages/test/libs/session/sessionfactory.ts:29",{"_index":2006,"title":{},"body":{"classes/SessionFactory.html":{}}}],["packages/test/libs/session/sessionfactory.ts:33",{"_index":2007,"title":{},"body":{"classes/SessionFactory.html":{}}}],["packages/test/libs/session/sessionfactory.ts:38",{"_index":2002,"title":{},"body":{"classes/SessionFactory.html":{}}}],["packages/test/libs/session/sessionfactory.ts:43",{"_index":1998,"title":{},"body":{"classes/SessionFactory.html":{}}}],["packages/test/libs/session/sessionfactory.ts:48",{"_index":2004,"title":{},"body":{"classes/SessionFactory.html":{}}}],["packages/test/libs/session/sessionfactory.ts:52",{"_index":1996,"title":{},"body":{"classes/SessionFactory.html":{}}}],["packages/test/libs/session/sessionfactory.ts:8",{"_index":1982,"title":{},"body":{"interfaces/SessionAttribute.html":{}}}],["packages/test/libs/user/userfactory.ts",{"_index":2168,"title":{},"body":{"classes/UserFactory.html":{}}}],["packages/test/libs/user/userfactory.ts:14",{"_index":2173,"title":{},"body":{"classes/UserFactory.html":{}}}],["packages/test/libs/user/userfactory.ts:19",{"_index":2172,"title":{},"body":{"classes/UserFactory.html":{}}}],["packages/test/libs/user/userfactory.ts:6",{"_index":2171,"title":{},"body":{"classes/UserFactory.html":{}}}],["packages/test/libs/user/userfactory.ts:9",{"_index":2175,"title":{},"body":{"classes/UserFactory.html":{}}}],["param",{"_index":97,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/ISPProductClient.html":{},"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/ProactiveClient.html":{},"classes/ReminderAPIClient.html":{},"classes/RequestFactory.html":{},"classes/SystemFactory.html":{}}}],["parameter",{"_index":2214,"title":{},"body":{"index.html":{}}}],["parameterfactory",{"_index":1408,"title":{"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{}},"body":{"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{}}}],["parameters",{"_index":28,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ApplicationFactory.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ContextFactory.html":{},"classes/DBClient.html":{},"classes/DeviceAPIClient.html":{},"interfaces/ErrorHandlerBuilder.html":{},"interfaces/Factory.html":{},"classes/FallbackIntentFactory.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory-1.html":{},"classes/HandlerInputFactory.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentHandlerFactory.html":{},"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/ListManagementAPIClient.html":{},"classes/MockAttributeManager.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"classes/ProactiveClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"classes/ReminderAPIClient.html":{},"classes/RequestEnvelopeFactory.html":{},"classes/RequestFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"classes/RequestHandlerFactory-1.html":{},"classes/RouteMatcher.html":{},"classes/SessionFactory.html":{},"classes/SettingAPIClient.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/StateManager.html":{},"classes/StateManager-1.html":{},"classes/SystemFactory.html":{},"interfaces/TranslationBuilder.html":{},"classes/UserFactory.html":{}}}],["parceldelivery",{"_index":372,"title":{"interfaces/ParcelDelivery.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["partial",{"_index":715,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/RequestFactory.html":{},"classes/SystemFactory.html":{}}}],["path",{"_index":196,"title":{},"body":{"classes/APIClient-1.html":{},"classes/DeviceAPIClient.html":{},"classes/ListManagementAPIClient.html":{},"classes/ReminderAPIClient.html":{},"classes/SettingAPIClient.html":{},"classes/UserProfileAPIClient.html":{}}}],["payload",{"_index":459,"title":{"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["payload.update",{"_index":1527,"title":{},"body":{"classes/ParameterFactory-5.html":{}}}],["payloadbuilder",{"_index":551,"title":{"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["peer",{"_index":2193,"title":{},"body":{"dependencies.html":{}}}],["permissions",{"_index":2135,"title":{},"body":{"classes/SystemFactory.html":{}}}],["persistancetype",{"_index":638,"title":{},"body":{"interfaces/BaseSkillConfig.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/S3SkillConfig.html":{},"interfaces/SkillHandlers.html":{},"miscellaneous/typealiases.html":{}}}],["persistenceadapter",{"_index":1125,"title":{},"body":{"classes/HandlerInputFactory.html":{}}}],["persistent",{"_index":261,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["person",{"_index":312,"title":{"interfaces/Person.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-3.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"classes/SystemFactory.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["personid",{"_index":2143,"title":{},"body":{"classes/SystemFactory.html":{}}}],["pet_bottles",{"_index":406,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["please",{"_index":804,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"interfaces/ErrorHandlerBuilder.html":{},"classes/ISPContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/ResponseContent-1.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["pollylanguage",{"_index":2260,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["post",{"_index":198,"title":{},"body":{"classes/APIClient-1.html":{},"classes/ProactiveClient.html":{},"miscellaneous/typealiases.html":{}}}],["post(body",{"_index":214,"title":{},"body":{"classes/APIClient-1.html":{}}}],["premiere",{"_index":324,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["preorder_received",{"_index":386,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["primarykey",{"_index":922,"title":{},"body":{"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{}}}],["private",{"_index":9,"title":{},"body":{"classes/APIClient.html":{},"classes/ApplicationFactory.html":{},"interfaces/AttributeType.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ContextFactory.html":{},"classes/HandlerInputFactory.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"interfaces/InitialState.html":{},"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/MockAttributeManager.html":{},"classes/ProactiveClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"classes/RequestEnvelopeFactory.html":{},"classes/RequestFactory.html":{},"classes/RequestHandlerFactory-1.html":{},"interfaces/ResponseContent-1.html":{},"classes/RouteMatcher.html":{},"interfaces/SkillState.html":{},"classes/StateManager-1.html":{},"classes/SystemFactory.html":{},"classes/UserFactory.html":{}}}],["proactive",{"_index":2213,"title":{},"body":{"index.html":{}}}],["proactiveclient",{"_index":1617,"title":{"classes/ProactiveClient.html":{}},"body":{"classes/ProactiveClient.html":{}}}],["process",{"_index":813,"title":{},"body":{"classes/ConstantsInterceptorFactory.html":{},"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/SkillConstants.html":{}}}],["process.env.sentry_dns",{"_index":977,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["product",{"_index":101,"title":{},"body":{"classes/APIClient.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["product.name",{"_index":174,"title":{},"body":{"classes/APIClient.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{}}}],["product.productid",{"_index":171,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["product.purchasable",{"_index":751,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["product.summary",{"_index":1748,"title":{},"body":{"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{}}}],["product_detail",{"_index":2272,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["productdetailresponsecontentbuilder",{"_index":1742,"title":{"classes/ProductDetailResponseContentBuilder.html":{}},"body":{"classes/ProductDetailResponseContentBuilder.html":{}}}],["productfinders",{"_index":734,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["productid",{"_index":39,"title":{},"body":{"classes/APIClient.html":{},"classes/BuyContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/RefundContentBuilder.html":{}}}],["productlistresponsecontentbuilder",{"_index":1750,"title":{"classes/ProductListResponseContentBuilder.html":{}},"body":{"classes/ProductListResponseContentBuilder.html":{}}}],["productname",{"_index":172,"title":{},"body":{"classes/APIClient.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"interfaces/ResponseContent-1.html":{}}}],["products",{"_index":113,"title":{},"body":{"classes/APIClient.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/ProductListResponseContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["products.length",{"_index":1764,"title":{},"body":{"classes/ProductListResponseContentBuilder.html":{}}}],["products.map((product",{"_index":1768,"title":{},"body":{"classes/ProductListResponseContentBuilder.html":{}}}],["products[0].name",{"_index":1766,"title":{},"body":{"classes/ProductListResponseContentBuilder.html":{}}}],["products[0].summary",{"_index":1767,"title":{},"body":{"classes/ProductListResponseContentBuilder.html":{}}}],["producttext",{"_index":1765,"title":{},"body":{"classes/ProductListResponseContentBuilder.html":{}}}],["progressiveresponseerrorhandler",{"_index":2262,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["promise",{"_index":45,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"classes/BuyIntentHandlerBuilder.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/DeviceAPIClient.html":{},"interfaces/ErrorHandlerBuilder.html":{},"interfaces/Factory.html":{},"classes/FallbackIntentFactory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/HandlerBuilder.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"interfaces/HandlerHelpers.html":{},"classes/ISPProductClient.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/ListManagementAPIClient.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"classes/ReminderAPIClient.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"classes/RequestHandlerFactory-1.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"classes/RouteMatcher.html":{},"interfaces/Router.html":{},"classes/SentryErrorHandlerFactory.html":{},"classes/SettingAPIClient.html":{},"interfaces/Situation.html":{},"interfaces/SituationState.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"classes/UserProfileAPIClient.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["promise.resolve",{"_index":275,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["promise.resolve(this.db",{"_index":267,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["properties",{"_index":8,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ApplicationFactory.html":{},"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/BaseSkillConfig.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ContextFactory.html":{},"interfaces/CreativeWork.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"classes/DeviceAPIClient.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/FlashBriefingContent.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"interfaces/HandlerHelpers.html":{},"classes/HandlerInputFactory.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"interfaces/InitialState.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/ListManagementAPIClient.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MergeObjectType.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"classes/MockAttributeManager.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"interfaces/Props.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/RelevantAudience.html":{},"classes/ReminderAPIClient.html":{},"classes/RequestEnvelopeFactory.html":{},"classes/RequestFactory.html":{},"classes/RequestHandlerFactory-1.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"classes/RouteMatcher.html":{},"interfaces/Router.html":{},"interfaces/S3SkillConfig.html":{},"classes/SessionFactory.html":{},"classes/SettingAPIClient.html":{},"interfaces/Situation.html":{},"interfaces/SituationState.html":{},"interfaces/Skill.html":{},"interfaces/SkillHandlers.html":{},"interfaces/SkillState.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"classes/StateManager-1.html":{},"classes/SystemFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"interfaces/Thing.html":{},"interfaces/TranslationObject.html":{},"interfaces/TrashCollectionAlert.html":{},"classes/UserFactory.html":{},"classes/UserProfileAPIClient.html":{},"interfaces/WeatherAlert.html":{}}}],["props",{"_index":457,"title":{"interfaces/Props.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["protected",{"_index":16,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/DeviceAPIClient.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"classes/HandlerFactory.html":{},"classes/HandlerInputFactory.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/ListManagementAPIClient.html":{},"classes/ProactiveClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"classes/ReminderAPIClient.html":{},"classes/RequestFactory.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{},"classes/SettingAPIClient.html":{},"classes/UserProfileAPIClient.html":{}}}],["provider",{"_index":331,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-1.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["providername",{"_index":1427,"title":{},"body":{"classes/ParameterFactory.html":{},"interfaces/PayloadBuilder-7.html":{}}}],["public",{"_index":18,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ApplicationFactory.html":{},"interfaces/AttributeType.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ContextFactory.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/DeviceAPIClient.html":{},"interfaces/ErrorHandlerBuilder.html":{},"classes/FallbackIntentFactory.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"classes/HandlerFactory.html":{},"classes/HandlerFactory-1.html":{},"classes/HandlerInputFactory.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"interfaces/InitialState.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentHandlerFactory.html":{},"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestFactory-1.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/ListManagementAPIClient.html":{},"classes/LocalizedAttributesFactory.html":{},"classes/MockAttributeManager.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"classes/ProactiveClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"classes/ReminderAPIClient.html":{},"classes/RequestEnvelopeFactory.html":{},"classes/RequestFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"classes/RequestHandlerFactory-1.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"classes/RouteMatcher.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{},"classes/SettingAPIClient.html":{},"interfaces/SkillConstants.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{},"interfaces/SkillState.html":{},"classes/StateManager.html":{},"classes/StateManager-1.html":{},"classes/SystemFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{},"classes/UserFactory.html":{},"classes/UserProfileAPIClient.html":{}}}],["purchase",{"_index":803,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["purchased",{"_index":799,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["purchaseresult",{"_index":787,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{}}}],["put",{"_index":199,"title":{},"body":{"classes/APIClient-1.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/SystemFactory.html":{},"miscellaneous/typealiases.html":{}}}],["put(body",{"_index":217,"title":{},"body":{"classes/APIClient-1.html":{}}}],["put(id",{"_index":933,"title":{},"body":{"classes/DBClient.html":{}}}],["putalert",{"_index":1533,"title":{},"body":{"classes/ParameterFactory-6.html":{},"interfaces/PayloadBuilder-1.html":{}}}],["putalert(alert",{"_index":562,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["putapiaccesstoken",{"_index":2108,"title":{},"body":{"classes/SystemFactory.html":{}}}],["putapiaccesstoken(apiaccesstoken",{"_index":1868,"title":{},"body":{"classes/RequestEnvelopeFactory.html":{}}}],["putapiaccesstoken(token",{"_index":2116,"title":{},"body":{"classes/SystemFactory.html":{}}}],["putapiendpoint",{"_index":2109,"title":{},"body":{"classes/SystemFactory.html":{}}}],["putapiendpoint(apiendpoint",{"_index":1867,"title":{},"body":{"classes/RequestEnvelopeFactory.html":{}}}],["putapiendpoint(endpoint",{"_index":2118,"title":{},"body":{"classes/SystemFactory.html":{}}}],["putapplication",{"_index":1983,"title":{},"body":{"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{},"classes/SystemFactory.html":{}}}],["putapplication(app",{"_index":1999,"title":{},"body":{"classes/SessionFactory.html":{}}}],["putapplication(application",{"_index":1871,"title":{},"body":{"classes/RequestEnvelopeFactory.html":{},"classes/SystemFactory.html":{}}}],["putapplicationid",{"_index":2110,"title":{},"body":{"classes/SystemFactory.html":{}}}],["putapplicationid(id",{"_index":2122,"title":{},"body":{"classes/SystemFactory.html":{}}}],["putattributes",{"_index":1989,"title":{},"body":{"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{}}}],["putattributes(attributes",{"_index":2001,"title":{},"body":{"classes/SessionFactory.html":{}}}],["putcontext",{"_index":885,"title":{},"body":{"classes/ContextFactory.html":{}}}],["putcontext(context",{"_index":891,"title":{},"body":{"classes/ContextFactory.html":{}}}],["putdevice",{"_index":2111,"title":{},"body":{"classes/SystemFactory.html":{}}}],["putdevice(device",{"_index":2124,"title":{},"body":{"classes/SystemFactory.html":{}}}],["putdirective",{"_index":667,"title":{},"body":{"classes/BuyContentBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ContentBuilder.html":{},"classes/ISPContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/ResponseContent.html":{}}}],["putdirective(directive",{"_index":680,"title":{},"body":{"classes/BuyContentBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ContentBuilder.html":{},"classes/ISPContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{}}}],["putdirectives",{"_index":668,"title":{},"body":{"classes/BuyContentBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ContentBuilder.html":{},"classes/ISPContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/ResponseContent.html":{}}}],["putdirectives(directives",{"_index":683,"title":{},"body":{"classes/BuyContentBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ContentBuilder.html":{},"classes/ISPContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{}}}],["putgarbagetypes",{"_index":1535,"title":{},"body":{"classes/ParameterFactory-6.html":{},"interfaces/PayloadBuilder-1.html":{}}}],["putgarbagetypes(garbagetypes",{"_index":563,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["putid",{"_index":237,"title":{},"body":{"classes/ApplicationFactory.html":{}}}],["putid(id",{"_index":242,"title":{},"body":{"classes/ApplicationFactory.html":{}}}],["putlocalestrings",{"_index":2149,"title":{},"body":{"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{}}}],["putlocalestrings(locale",{"_index":2156,"title":{},"body":{"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{}}}],["putlocalizedattribute",{"_index":1031,"title":{},"body":{"interfaces/Factory.html":{},"classes/LocalizedAttributesFactory.html":{}}}],["putlocalizedattribute(locale",{"_index":556,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["putperson",{"_index":2112,"title":{},"body":{"classes/SystemFactory.html":{}}}],["putperson(id",{"_index":2127,"title":{},"body":{"classes/SystemFactory.html":{}}}],["putreprompttext",{"_index":669,"title":{},"body":{"classes/BuyContentBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ContentBuilder.html":{},"classes/ISPContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/ResponseContent.html":{}}}],["putreprompttext(text",{"_index":686,"title":{},"body":{"classes/BuyContentBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ContentBuilder.html":{},"classes/ISPContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{}}}],["putrequest",{"_index":1271,"title":{},"body":{"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/RequestFactory.html":{}}}],["putrequest(request",{"_index":1293,"title":{},"body":{"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/RequestFactory.html":{}}}],["putrequestattributes",{"_index":1836,"title":{},"body":{"classes/RequestEnvelopeFactory.html":{}}}],["putsession",{"_index":1993,"title":{},"body":{"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{}}}],["putsession(session",{"_index":2003,"title":{},"body":{"classes/SessionFactory.html":{}}}],["putsessionid",{"_index":1985,"title":{},"body":{"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{}}}],["putsessionid(sessionid",{"_index":2005,"title":{},"body":{"classes/SessionFactory.html":{}}}],["putspeechtext",{"_index":670,"title":{},"body":{"classes/BuyContentBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ContentBuilder.html":{},"classes/ISPContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/ResponseContent.html":{}}}],["putspeechtext(text",{"_index":688,"title":{},"body":{"classes/BuyContentBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ContentBuilder.html":{},"classes/ISPContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{}}}],["putuser",{"_index":1987,"title":{},"body":{"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{},"classes/SystemFactory.html":{},"classes/UserFactory.html":{}}}],["putuser(user",{"_index":1869,"title":{},"body":{"classes/RequestEnvelopeFactory.html":{},"classes/SessionFactory.html":{},"classes/SystemFactory.html":{},"classes/UserFactory.html":{}}}],["putuserid",{"_index":2170,"title":{},"body":{"classes/UserFactory.html":{}}}],["putuserid(userid",{"_index":2174,"title":{},"body":{"classes/UserFactory.html":{}}}],["readonly",{"_index":234,"title":{},"body":{"classes/ApplicationFactory.html":{},"classes/ContextFactory.html":{},"interfaces/InitialState.html":{},"classes/RequestEnvelopeFactory.html":{},"classes/RouteMatcher.html":{},"interfaces/SkillState.html":{},"classes/StateManager-1.html":{}}}],["recyclable_plastics",{"_index":407,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["redirectionurl",{"_index":1046,"title":{},"body":{"interfaces/FlashBriefingContent.html":{}}}],["reference.html#details",{"_index":1044,"title":{},"body":{"interfaces/FlashBriefingContent.html":{}}}],["referenceid",{"_index":1697,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["refereneid",{"_index":547,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["refund",{"_index":1782,"title":{},"body":{"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{}}}],["refundcontentbuilder",{"_index":1772,"title":{"classes/RefundContentBuilder.html":{}},"body":{"classes/RefundContentBuilder.html":{}}}],["refundresponsecontentbuilder",{"_index":1785,"title":{"classes/RefundResponseContentBuilder.html":{}},"body":{"classes/RefundResponseContentBuilder.html":{}}}],["relation",{"_index":1496,"title":{},"body":{"classes/ParameterFactory-4.html":{},"interfaces/PayloadBuilder-8.html":{}}}],["relationshiptoinvitee",{"_index":341,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["release",{"_index":323,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["relevantaudience",{"_index":541,"title":{"interfaces/RelevantAudience.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["relevantaudience.payload",{"_index":1720,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["rematch",{"_index":337,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["reminderapiclient",{"_index":1805,"title":{"classes/ReminderAPIClient.html":{}},"body":{"classes/ReminderAPIClient.html":{}}}],["remindermanagement",{"_index":1826,"title":{},"body":{"classes/ReminderAPIClient.html":{}}}],["remindermanagement.reminderrequest",{"_index":1815,"title":{},"body":{"classes/ReminderAPIClient.html":{}}}],["reminderrequest",{"_index":1817,"title":{},"body":{"classes/ReminderAPIClient.html":{}}}],["replacehandler",{"_index":703,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"classes/IntentHandlerBuilder.html":{},"classes/LaunchRequestrBuilder.html":{}}}],["replacehandler(handler",{"_index":714,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/IntentHandlerBuilder.html":{},"classes/LaunchRequestrBuilder.html":{}}}],["repository",{"_index":2204,"title":{},"body":{"index.html":{}}}],["reprompt",{"_index":755,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["reprompt(\"i",{"_index":760,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["reprompt('could",{"_index":991,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["reprompt(noispresponse.reprompttext",{"_index":746,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["reprompt(reprompttext",{"_index":1004,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["reprompttext",{"_index":793,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"interfaces/ErrorHandlerBuilder.html":{},"classes/ISPContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["request",{"_index":260,"title":{},"body":{"interfaces/AttributeType.html":{},"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"classes/BuyResponseContentBuilder.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"interfaces/ErrorHandlerBuilder.html":{},"interfaces/Factory.html":{},"classes/FallbackIntentFactory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"classes/HandlerFactory.html":{},"interfaces/HandlerHelpers.html":{},"classes/HandlerInputFactory.html":{},"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/ListManagementAPIClient.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"classes/MockAttributeManager.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/RelevantAudience.html":{},"classes/RequestEnvelopeFactory.html":{},"classes/RequestFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"classes/RouteMatcher.html":{},"interfaces/Router.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/Situation.html":{},"interfaces/SituationState.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"classes/SystemFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"index.html":{}}}],["request['type",{"_index":1122,"title":{},"body":{"interfaces/HandlerHelpers.html":{},"interfaces/Router.html":{},"interfaces/Situation.html":{},"interfaces/SituationState.html":{}}}],["requestdate",{"_index":1833,"title":{},"body":{"classes/RequestEnvelopeFactory.html":{}}}],["requested",{"_index":352,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"classes/RouteMatcher.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["requestenvelope",{"_index":24,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/BuyIntentHandlerBuilder.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"interfaces/ErrorHandlerBuilder.html":{},"classes/FallbackIntentFactory.html":{},"classes/HandlerInputFactory.html":{},"classes/ISPProductClient.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/MergeObjectType.html":{},"classes/RequestEnvelopeFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{}}}],["requestenvelope.context",{"_index":1017,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["requestenvelope.context.system",{"_index":1160,"title":{},"body":{"classes/HandlerInputFactory.html":{}}}],["requestenvelope.context.system.apiendpoint",{"_index":74,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ISPProductClient.html":{}}}],["requestenvelope.request.requestid",{"_index":1029,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["requestenvelope.session",{"_index":1024,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["requestenvelope.session.sessionid",{"_index":1026,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["requestenvelopefactory",{"_index":1126,"title":{"classes/RequestEnvelopeFactory.html":{}},"body":{"classes/HandlerInputFactory.html":{},"classes/RequestEnvelopeFactory.html":{}}}],["requestevent",{"_index":1622,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["requestfactory",{"_index":1262,"title":{"classes/RequestFactory.html":{}},"body":{"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{},"classes/LaunchRequestFactory.html":{},"classes/RequestEnvelopeFactory.html":{},"classes/RequestFactory.html":{}}}],["requestfactory:10",{"_index":1278,"title":{},"body":{"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{}}}],["requestfactory:11",{"_index":1279,"title":{},"body":{"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{}}}],["requestfactory:17",{"_index":1302,"title":{},"body":{"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{}}}],["requestfactory:21",{"_index":1291,"title":{},"body":{"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{}}}],["requestfactory:25",{"_index":1300,"title":{},"body":{"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{}}}],["requestfactory:29",{"_index":1290,"title":{},"body":{"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{}}}],["requestfactory:34",{"_index":1298,"title":{},"body":{"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{}}}],["requestfactory:38",{"_index":1292,"title":{},"body":{"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{}}}],["requestfactory:43",{"_index":1296,"title":{},"body":{"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{}}}],["requestfactory:47",{"_index":1288,"title":{},"body":{"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{}}}],["requestfactory:51",{"_index":1294,"title":{},"body":{"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{}}}],["requestfactory:55",{"_index":1304,"title":{},"body":{"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{}}}],["requestfactory:69",{"_index":1305,"title":{},"body":{"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{}}}],["requestfactory:7",{"_index":1280,"title":{},"body":{"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{}}}],["requestfactory:72",{"_index":1289,"title":{},"body":{"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{}}}],["requestfactory:8",{"_index":1281,"title":{},"body":{"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{}}}],["requestfactory:9",{"_index":1277,"title":{},"body":{"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{}}}],["requesthandler",{"_index":643,"title":{},"body":{"interfaces/BaseSkillConfig.html":{},"classes/BuyIntentHandlerBuilder.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"interfaces/DynamoDBSkillConfig.html":{},"classes/FallbackIntentFactory.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"classes/IntentHandlerBuilder.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"interfaces/MergeObjectType.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"classes/RequestHandlerFactory-1.html":{},"interfaces/S3SkillConfig.html":{},"interfaces/SkillHandlers.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{},"classes/StateManager.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{}}}],["requesthandlerbuilder",{"_index":905,"title":{"interfaces/RequestHandlerBuilder.html":{}},"body":{"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/FallbackIntentFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{}}}],["requesthandlerfactory",{"_index":914,"title":{"classes/RequestHandlerFactory.html":{},"classes/RequestHandlerFactory-1.html":{}},"body":{"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/FallbackIntentFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"classes/RequestHandlerFactory-1.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{}}}],["requesthandlerfactory.create(route",{"_index":1931,"title":{},"body":{"classes/RequestHandlerFactory-1.html":{}}}],["requesthandlers",{"_index":655,"title":{},"body":{"interfaces/BaseSkillConfig.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/S3SkillConfig.html":{},"interfaces/SkillHandlers.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{}}}],["requesthandlers.foreach(handler",{"_index":2044,"title":{},"body":{"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{}}}],["requestid",{"_index":1263,"title":{},"body":{"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/RequestEnvelopeFactory.html":{},"classes/RequestFactory.html":{}}}],["requestinterceptor",{"_index":640,"title":{},"body":{"interfaces/BaseSkillConfig.html":{},"classes/ConstantsInterceptorFactory.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/ErrorHandlerBuilder.html":{},"interfaces/S3SkillConfig.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/SkillConstants.html":{},"interfaces/SkillHandlers.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{}}}],["requestinterceptors",{"_index":656,"title":{},"body":{"interfaces/BaseSkillConfig.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/S3SkillConfig.html":{},"interfaces/SkillHandlers.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{}}}],["requestinterceptors.foreach(interceptor",{"_index":2047,"title":{},"body":{"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{}}}],["requesttype",{"_index":1121,"title":{},"body":{"interfaces/HandlerHelpers.html":{},"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/RequestFactory.html":{},"interfaces/Router.html":{},"interfaces/Situation.html":{},"interfaces/SituationState.html":{}}}],["required",{"_index":1105,"title":{},"body":{"classes/HandlerFactory-1.html":{},"classes/IntentHandlerFactory.html":{},"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestFactory-1.html":{},"classes/RequestFactory.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{},"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{}}}],["requstbody",{"_index":542,"title":{"interfaces/RequstBody.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["res",{"_index":1681,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["res.access_token",{"_index":1683,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["res.expires_in",{"_index":1684,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["res.scope",{"_index":1685,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["res.token_type",{"_index":1686,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["rescheduled",{"_index":351,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["reservation",{"_index":357,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["reservation_request",{"_index":356,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["resetstate",{"_index":2071,"title":{},"body":{"classes/StateManager.html":{}}}],["resetstate(attributemanager",{"_index":2076,"title":{},"body":{"classes/StateManager.html":{}}}],["resolutionslot",{"_index":2264,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["resolve(type).handle(handler",{"_index":917,"title":{},"body":{"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/FallbackIntentFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{}}}],["resolver",{"_index":897,"title":{},"body":{"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/FallbackIntentFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{}}}],["response",{"_index":548,"title":{"interfaces/Response.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"interfaces/CreativeWork.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"interfaces/ErrorHandlerBuilder.html":{},"interfaces/Factory.html":{},"classes/FallbackIntentFactory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/HandlerBuilder.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"interfaces/HandlerHelpers.html":{},"classes/ISPContentBuilder.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MergeObjectType.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"interfaces/Props.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"classes/RequestHandlerFactory-1.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"interfaces/Router.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/Situation.html":{},"interfaces/SituationState.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["response.data",{"_index":1712,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["response.status",{"_index":1728,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["response.statustext",{"_index":1729,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["responsebuilder",{"_index":663,"title":{},"body":{"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/HandlerInputFactory.html":{},"classes/ISPContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{}}}],["responsebuilder.speak(noispresponse.speechtext",{"_index":745,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["responsecontent",{"_index":671,"title":{"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{}},"body":{"classes/BuyContentBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{}}}],["responsefactory",{"_index":1147,"title":{},"body":{"classes/HandlerInputFactory.html":{}}}],["responsefactory.init",{"_index":1163,"title":{},"body":{"classes/HandlerInputFactory.html":{}}}],["responseinterceptor",{"_index":641,"title":{},"body":{"interfaces/BaseSkillConfig.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/S3SkillConfig.html":{},"interfaces/SkillHandlers.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{}}}],["responseinterceptors",{"_index":657,"title":{},"body":{"interfaces/BaseSkillConfig.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/S3SkillConfig.html":{},"interfaces/SkillHandlers.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{}}}],["responseinterceptors.foreach(interceptor",{"_index":2050,"title":{},"body":{"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{}}}],["result",{"_index":191,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ApplicationFactory.html":{},"interfaces/AttributeType.html":{},"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/BaseSkillConfig.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ContextFactory.html":{},"interfaces/CreativeWork.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/DeviceAPIClient.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/ErrorHandlerBuilder.html":{},"interfaces/Factory.html":{},"classes/FallbackIntentFactory.html":{},"interfaces/FlashBriefingContent.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"classes/HandlerFactory-1.html":{},"interfaces/HandlerHelpers.html":{},"classes/HandlerInputFactory.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"interfaces/InitialState.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentHandlerFactory.html":{},"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestFactory-1.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/ListManagementAPIClient.html":{},"interfaces/LocalizedAttribute.html":{},"classes/LocalizedAttributesFactory.html":{},"interfaces/MergeObjectType.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"classes/MockAttributeManager.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"interfaces/Props.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/RelevantAudience.html":{},"classes/ReminderAPIClient.html":{},"classes/RequestEnvelopeFactory.html":{},"classes/RequestFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"classes/RequestHandlerFactory-1.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"classes/RouteMatcher.html":{},"interfaces/Router.html":{},"interfaces/S3SkillConfig.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{},"classes/SettingAPIClient.html":{},"interfaces/Situation.html":{},"interfaces/SituationState.html":{},"interfaces/Skill.html":{},"interfaces/SkillConstants.html":{},"interfaces/SkillHandlers.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{},"interfaces/SkillState.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"classes/StateManager.html":{},"classes/StateManager-1.html":{},"classes/SystemFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"interfaces/Thing.html":{},"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{},"interfaces/TrashCollectionAlert.html":{},"classes/UserFactory.html":{},"classes/UserProfileAPIClient.html":{},"interfaces/WeatherAlert.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["result2",{"_index":289,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["results",{"_index":193,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ApplicationFactory.html":{},"interfaces/AttributeType.html":{},"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/BaseSkillConfig.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ContextFactory.html":{},"interfaces/CreativeWork.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/DeviceAPIClient.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/ErrorHandlerBuilder.html":{},"interfaces/Factory.html":{},"classes/FallbackIntentFactory.html":{},"interfaces/FlashBriefingContent.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"classes/HandlerFactory-1.html":{},"interfaces/HandlerHelpers.html":{},"classes/HandlerInputFactory.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"interfaces/InitialState.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentHandlerFactory.html":{},"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestFactory-1.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/ListManagementAPIClient.html":{},"interfaces/LocalizedAttribute.html":{},"classes/LocalizedAttributesFactory.html":{},"interfaces/MergeObjectType.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"classes/MockAttributeManager.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"interfaces/Props.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/RelevantAudience.html":{},"classes/ReminderAPIClient.html":{},"classes/RequestEnvelopeFactory.html":{},"classes/RequestFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"classes/RequestHandlerFactory-1.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"classes/RouteMatcher.html":{},"interfaces/Router.html":{},"interfaces/S3SkillConfig.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{},"classes/SettingAPIClient.html":{},"interfaces/Situation.html":{},"interfaces/SituationState.html":{},"interfaces/Skill.html":{},"interfaces/SkillConstants.html":{},"interfaces/SkillHandlers.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{},"interfaces/SkillState.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"classes/StateManager.html":{},"classes/StateManager-1.html":{},"classes/SystemFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"interfaces/Thing.html":{},"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{},"interfaces/TrashCollectionAlert.html":{},"classes/UserFactory.html":{},"classes/UserProfileAPIClient.html":{},"interfaces/WeatherAlert.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{}}}],["retryatt",{"_index":1235,"title":{},"body":{"interfaces/InitialState.html":{},"interfaces/SkillState.html":{},"classes/StateManager-1.html":{}}}],["retryatt[statekey",{"_index":1236,"title":{},"body":{"interfaces/InitialState.html":{},"interfaces/SkillState.html":{},"classes/StateManager-1.html":{}}}],["return",{"_index":79,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ApplicationFactory.html":{},"interfaces/AttributeType.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ContextFactory.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/DeviceAPIClient.html":{},"interfaces/ErrorHandlerBuilder.html":{},"classes/FallbackIntentFactory.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"classes/HandlerFactory.html":{},"classes/HandlerFactory-1.html":{},"classes/HandlerInputFactory.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"interfaces/InitialState.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentHandlerFactory.html":{},"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestFactory-1.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/ListManagementAPIClient.html":{},"classes/LocalizedAttributesFactory.html":{},"interfaces/MergeObjectType.html":{},"classes/MockAttributeManager.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"classes/ProactiveClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"classes/ReminderAPIClient.html":{},"classes/RequestEnvelopeFactory.html":{},"classes/RequestFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"classes/RequestHandlerFactory-1.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"classes/RouteMatcher.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{},"classes/SettingAPIClient.html":{},"interfaces/SkillConstants.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{},"interfaces/SkillState.html":{},"classes/StateManager.html":{},"classes/StateManager-1.html":{},"classes/SystemFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{},"classes/UserFactory.html":{},"classes/UserProfileAPIClient.html":{}}}],["returns",{"_index":41,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ApplicationFactory.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ContextFactory.html":{},"classes/DBClient.html":{},"classes/DeviceAPIClient.html":{},"interfaces/ErrorHandlerBuilder.html":{},"interfaces/Factory.html":{},"classes/FallbackIntentFactory.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"classes/HandlerFactory-1.html":{},"classes/HandlerInputFactory.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentHandlerFactory.html":{},"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestFactory-1.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/ListManagementAPIClient.html":{},"classes/LocalizedAttributesFactory.html":{},"classes/MockAttributeManager.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"classes/ProactiveClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"classes/ReminderAPIClient.html":{},"classes/RequestEnvelopeFactory.html":{},"classes/RequestFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"classes/RequestHandlerFactory-1.html":{},"classes/RouteMatcher.html":{},"classes/SentryErrorHandlerFactory.html":{},"classes/SessionFactory.html":{},"classes/SettingAPIClient.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{},"classes/StateManager.html":{},"classes/StateManager-1.html":{},"classes/SystemFactory.html":{},"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"classes/UserFactory.html":{},"classes/UserProfileAPIClient.html":{}}}],["route",{"_index":1921,"title":{},"body":{"classes/RequestHandlerFactory-1.html":{}}}],["route.handler(input",{"_index":1943,"title":{},"body":{"classes/RequestHandlerFactory-1.html":{}}}],["routematcher",{"_index":1923,"title":{"classes/RouteMatcher.html":{}},"body":{"classes/RequestHandlerFactory-1.html":{},"classes/RouteMatcher.html":{}}}],["routematcher(handlerinput",{"_index":1934,"title":{},"body":{"classes/RequestHandlerFactory-1.html":{}}}],["router",{"_index":1114,"title":{"interfaces/Router.html":{}},"body":{"interfaces/HandlerHelpers.html":{},"classes/RequestHandlerFactory-1.html":{},"classes/RouteMatcher.html":{},"interfaces/Router.html":{},"interfaces/Situation.html":{},"interfaces/SituationState.html":{}}}],["routerhandler",{"_index":1120,"title":{},"body":{"interfaces/HandlerHelpers.html":{},"interfaces/Router.html":{},"interfaces/Situation.html":{},"interfaces/SituationState.html":{},"miscellaneous/typealiases.html":{}}}],["routers",{"_index":1918,"title":{},"body":{"classes/RequestHandlerFactory-1.html":{}}}],["run",{"_index":2233,"title":{},"body":{"index.html":{}}}],["runtime",{"_index":812,"title":{},"body":{"classes/ConstantsInterceptorFactory.html":{},"interfaces/SkillConstants.html":{}}}],["s",{"_index":2202,"title":{},"body":{"index.html":{}}}],["s3",{"_index":647,"title":{},"body":{"interfaces/BaseSkillConfig.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/S3SkillConfig.html":{},"interfaces/SkillHandlers.html":{},"miscellaneous/typealiases.html":{}}}],["s3skillconfig",{"_index":648,"title":{"interfaces/S3SkillConfig.html":{}},"body":{"interfaces/BaseSkillConfig.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/S3SkillConfig.html":{},"interfaces/SkillHandlers.html":{},"miscellaneous/typealiases.html":{}}}],["saturday",{"_index":415,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["save",{"_index":281,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["saved",{"_index":292,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["savepersistentattributes",{"_index":273,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["scope",{"_index":535,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["scope.settag('request_id",{"_index":1028,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["scope.setuser(userparams",{"_index":1030,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["scope=alexa::proactive_events",{"_index":1705,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["score",{"_index":439,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-5.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["scoreearned",{"_index":429,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-5.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["sdk",{"_index":58,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ApplicationFactory.html":{},"interfaces/AttributeType.html":{},"interfaces/BaseSkillConfig.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ContextFactory.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/DeviceAPIClient.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/ErrorHandlerBuilder.html":{},"classes/FallbackIntentFactory.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"interfaces/HandlerHelpers.html":{},"classes/HandlerInputFactory.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"interfaces/InitialState.html":{},"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/ListManagementAPIClient.html":{},"interfaces/MergeObjectType.html":{},"classes/MockAttributeManager.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/ReminderAPIClient.html":{},"classes/RequestEnvelopeFactory.html":{},"classes/RequestFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"classes/RequestHandlerFactory-1.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"classes/RouteMatcher.html":{},"interfaces/Router.html":{},"interfaces/S3SkillConfig.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{},"classes/SettingAPIClient.html":{},"interfaces/Situation.html":{},"interfaces/SituationState.html":{},"interfaces/SkillConstants.html":{},"interfaces/SkillHandlers.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{},"interfaces/SkillState.html":{},"classes/StateManager.html":{},"classes/StateManager-1.html":{},"classes/SystemFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"classes/UserFactory.html":{},"classes/UserProfileAPIClient.html":{},"dependencies.html":{},"index.html":{}}}],["search",{"_index":177,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["searchproduct",{"_index":179,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["searchproduct(condition",{"_index":1207,"title":{},"body":{"classes/ISPProductClient.html":{}}}],["seller",{"_index":384,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-2.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["sentry",{"_index":973,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["sentry.captureevent",{"_index":996,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["sentry.configurescope(scope",{"_index":1027,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["sentry.init",{"_index":975,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["sentry/node",{"_index":974,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["sentrydefaulterrorhandler",{"_index":1005,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["sentryerrorhandlerfactory",{"_index":994,"title":{"classes/SentryErrorHandlerFactory.html":{}},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["sentryerrorhandlerfactory.init",{"_index":983,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["sentryerrorhandlerfactory.init().gethandler",{"_index":980,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["serviceclient",{"_index":2222,"title":{},"body":{"index.html":{}}}],["serviceclientfactory",{"_index":742,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"classes/HandlerInputFactory.html":{}}}],["services",{"_index":60,"title":{},"body":{"classes/APIClient.html":{},"classes/ContentBuilder-1.html":{},"classes/DeviceAPIClient.html":{},"classes/HandlerInputFactory.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/ListManagementAPIClient.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/ReminderAPIClient.html":{},"interfaces/ResponseContent-1.html":{},"classes/SettingAPIClient.html":{},"classes/UserProfileAPIClient.html":{}}}],["services.listmanagement",{"_index":1368,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["services.monetization.inskillproduct",{"_index":65,"title":{},"body":{"classes/APIClient.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/ProductListResponseContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["services.monetization.inskillproductsresponse",{"_index":63,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["services.remindermanagement",{"_index":1827,"title":{},"body":{"classes/ReminderAPIClient.html":{}}}],["services.serviceclientfactory",{"_index":1150,"title":{},"body":{"classes/HandlerInputFactory.html":{}}}],["session",{"_index":124,"title":{},"body":{"classes/APIClient.html":{},"interfaces/AttributeType.html":{},"classes/HandlerInputFactory.html":{},"classes/ISPProductClient.html":{},"classes/MockAttributeManager.html":{},"classes/RequestEnvelopeFactory.html":{},"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{}}}],["sessionattribute",{"_index":1980,"title":{"interfaces/SessionAttribute.html":{}},"body":{"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{}}}],["sessionfactory",{"_index":1838,"title":{"classes/SessionFactory.html":{}},"body":{"classes/RequestEnvelopeFactory.html":{},"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{}}}],["sessionid",{"_index":1834,"title":{},"body":{"classes/RequestEnvelopeFactory.html":{},"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{}}}],["set",{"_index":1006,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/RouteMatcher.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["setacceptedpurchaseresult",{"_index":778,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{}}}],["setacceptedrefundresult",{"_index":1790,"title":{},"body":{"classes/RefundResponseContentBuilder.html":{}}}],["setalertsource",{"_index":1549,"title":{},"body":{"classes/ParameterFactory-7.html":{},"interfaces/PayloadBuilder-2.html":{}}}],["setalertsource(source",{"_index":572,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["setalerttype",{"_index":1551,"title":{},"body":{"classes/ParameterFactory-7.html":{},"interfaces/PayloadBuilder-2.html":{}}}],["setalerttype(type",{"_index":573,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["setapiclient",{"_index":1128,"title":{},"body":{"classes/HandlerInputFactory.html":{}}}],["setapiclient(client",{"_index":1139,"title":{},"body":{"classes/HandlerInputFactory.html":{}}}],["setawayteamstatistic",{"_index":1522,"title":{},"body":{"classes/ParameterFactory-5.html":{},"interfaces/PayloadBuilder-3.html":{}}}],["setawayteamstatistic(teamname",{"_index":581,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["setbookingtime",{"_index":1446,"title":{},"body":{"classes/ParameterFactory-1.html":{},"interfaces/PayloadBuilder-6.html":{}}}],["setbookingtime(date",{"_index":608,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["setbrokername",{"_index":1448,"title":{},"body":{"classes/ParameterFactory-1.html":{},"interfaces/PayloadBuilder-6.html":{}}}],["setbrokername(name",{"_index":609,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["setbuydirective",{"_index":664,"title":{},"body":{"classes/BuyContentBuilder.html":{}}}],["setbuydirective(productid",{"_index":676,"title":{},"body":{"classes/BuyContentBuilder.html":{}}}],["setcanceldirective",{"_index":1775,"title":{},"body":{"classes/RefundContentBuilder.html":{}}}],["setcanceldirective(productid",{"_index":1778,"title":{},"body":{"classes/RefundContentBuilder.html":{}}}],["setcannotbuytheproductresponse",{"_index":873,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["setcollectiondayofweek",{"_index":1540,"title":{},"body":{"classes/ParameterFactory-6.html":{},"interfaces/PayloadBuilder-1.html":{}}}],["setcollectiondayofweek(collectiondayofweek",{"_index":566,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["setcontentname",{"_index":1417,"title":{},"body":{"classes/ParameterFactory.html":{},"interfaces/PayloadBuilder-7.html":{}}}],["setcontentname(name",{"_index":614,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["setdeclinedpurchaseresult",{"_index":779,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{}}}],["setdeclinedrefundresult",{"_index":1791,"title":{},"body":{"classes/RefundResponseContentBuilder.html":{}}}],["setdialogstate",{"_index":1264,"title":{},"body":{"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{}}}],["setdialogstate(state",{"_index":1282,"title":{},"body":{"classes/IntentRequestFactory.html":{}}}],["setdistributionmethod",{"_index":1424,"title":{},"body":{"classes/ParameterFactory.html":{},"interfaces/PayloadBuilder-7.html":{}}}],["setdistributionmethod(method",{"_index":619,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["setentertimestamp",{"_index":1459,"title":{},"body":{"classes/ParameterFactory-2.html":{},"interfaces/PayloadBuilder-5.html":{}}}],["setentertimestamp(date",{"_index":596,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["setentitledproductresponse",{"_index":878,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["seterrorresponse",{"_index":967,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["seterrorresponse('speech",{"_index":984,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["seterrorresponse(speechtext",{"_index":969,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["seterrortrackerinterceptor",{"_index":1010,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["setevent",{"_index":1623,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["setevent(event",{"_index":1649,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["seteventleaguename",{"_index":1517,"title":{},"body":{"classes/ParameterFactory-5.html":{},"interfaces/PayloadBuilder-3.html":{}}}],["seteventleaguename(name",{"_index":579,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["seteventname",{"_index":1624,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["seteventname(name",{"_index":1651,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["setexpectedarrival",{"_index":1461,"title":{},"body":{"classes/ParameterFactory-2.html":{},"interfaces/PayloadBuilder-5.html":{}}}],["setexpectedarrival(date",{"_index":598,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["setexpirytime",{"_index":1625,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["setexpirytime(date",{"_index":1653,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["setfailedpurchaseresult",{"_index":780,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{}}}],["setfailedrefundresult",{"_index":1792,"title":{},"body":{"classes/RefundResponseContentBuilder.html":{}}}],["setgamename",{"_index":1502,"title":{},"body":{"classes/ParameterFactory-4.html":{},"interfaces/PayloadBuilder-8.html":{}}}],["setgamename(name",{"_index":628,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["setgameoffername",{"_index":1500,"title":{},"body":{"classes/ParameterFactory-4.html":{},"interfaces/PayloadBuilder-8.html":{}}}],["setgameoffername(name",{"_index":629,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["sethandle",{"_index":704,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"interfaces/ErrorHandlerBuilder.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"classes/IntentHandlerBuilder.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["sethandle((handlerinput",{"_index":986,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["sethandle(handle",{"_index":718,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"interfaces/ErrorHandlerBuilder.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/IntentHandlerBuilder.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["sethandlecondition",{"_index":705,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"classes/IntentHandlerBuilder.html":{},"classes/LaunchRequestrBuilder.html":{}}}],["sethandlecondition(condition",{"_index":720,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/IntentHandlerBuilder.html":{},"classes/LaunchRequestrBuilder.html":{}}}],["sethometeamstatistic",{"_index":1519,"title":{},"body":{"classes/ParameterFactory-5.html":{},"interfaces/PayloadBuilder-3.html":{}}}],["sethometeamstatistic(teamname",{"_index":580,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["setintent",{"_index":1265,"title":{},"body":{"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{}}}],["setintent(intent",{"_index":1285,"title":{},"body":{"classes/IntentRequestFactory.html":{}}}],["setinvitername",{"_index":1493,"title":{},"body":{"classes/ParameterFactory-4.html":{},"interfaces/PayloadBuilder-8.html":{}}}],["setinvitername(name",{"_index":623,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["setinvitetype",{"_index":1498,"title":{},"body":{"classes/ParameterFactory-4.html":{},"interfaces/PayloadBuilder-8.html":{}}}],["setinvitetype(type",{"_index":626,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["setlistproducts",{"_index":1754,"title":{},"body":{"classes/ProductListResponseContentBuilder.html":{}}}],["setlocale",{"_index":1272,"title":{},"body":{"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/RequestFactory.html":{}}}],["setlocale(locale",{"_index":1295,"title":{},"body":{"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/RequestFactory.html":{}}}],["setlocalizedattributes",{"_index":1626,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["setlocalizedattributes(localizedattributes",{"_index":1655,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["setmediatype",{"_index":1419,"title":{},"body":{"classes/ParameterFactory.html":{},"interfaces/PayloadBuilder-7.html":{}}}],["setmediatype(type",{"_index":615,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["setmessagecount",{"_index":1476,"title":{},"body":{"classes/ParameterFactory-3.html":{},"interfaces/PayloadBuilder-4.html":{}}}],["setmessagecount(count",{"_index":585,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["setmessagecreator",{"_index":1474,"title":{},"body":{"classes/ParameterFactory-3.html":{},"interfaces/PayloadBuilder-4.html":{}}}],["setmessagecreator(name",{"_index":584,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["setmessagefreshness",{"_index":1480,"title":{},"body":{"classes/ParameterFactory-3.html":{},"interfaces/PayloadBuilder-4.html":{}}}],["setmessagefreshness(freshness",{"_index":588,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["setmessagestatus",{"_index":1482,"title":{},"body":{"classes/ParameterFactory-3.html":{},"interfaces/PayloadBuilder-4.html":{}}}],["setmessagestatus(messagestatus",{"_index":590,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["setmessageurgency",{"_index":1478,"title":{},"body":{"classes/ParameterFactory-3.html":{},"interfaces/PayloadBuilder-4.html":{}}}],["setmessageurgency(urgency",{"_index":586,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["setnoentitledproductresponse",{"_index":1776,"title":{},"body":{"classes/RefundContentBuilder.html":{}}}],["setoccasiontype",{"_index":1440,"title":{},"body":{"classes/ParameterFactory-1.html":{},"interfaces/PayloadBuilder-6.html":{}}}],["setoccasiontype(type",{"_index":604,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["setorderstatus",{"_index":1457,"title":{},"body":{"classes/ParameterFactory-2.html":{},"interfaces/PayloadBuilder-5.html":{}}}],["setorderstatus(status",{"_index":594,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["setpayload",{"_index":1627,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["setpayload(payload",{"_index":1657,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["setpersistanceadapter",{"_index":1129,"title":{},"body":{"classes/HandlerInputFactory.html":{}}}],["setpersistanceadapter(adapter",{"_index":1141,"title":{},"body":{"classes/HandlerInputFactory.html":{}}}],["setpersistentattributes",{"_index":271,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["setpersistentattributes(attribute",{"_index":1402,"title":{},"body":{"classes/MockAttributeManager.html":{}}}],["setproduct",{"_index":849,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["setproduct(product",{"_index":1176,"title":{},"body":{"classes/ISPContentBuilder.html":{}}}],["setproductdetail",{"_index":1745,"title":{},"body":{"classes/ProductDetailResponseContentBuilder.html":{}}}],["setproductlists",{"_index":1755,"title":{},"body":{"classes/ProductListResponseContentBuilder.html":{}}}],["setproductlists(list",{"_index":1760,"title":{},"body":{"classes/ProductListResponseContentBuilder.html":{}}}],["setproductname",{"_index":850,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["setproductname(name",{"_index":1178,"title":{},"body":{"classes/ISPContentBuilder.html":{}}}],["setproductnotfoundresponse",{"_index":870,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["setproductsnotfoundresponse",{"_index":866,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["setprovider",{"_index":1426,"title":{},"body":{"classes/ParameterFactory.html":{},"interfaces/PayloadBuilder-7.html":{}}}],["setprovider(providername",{"_index":621,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["setprovidername",{"_index":1444,"title":{},"body":{"classes/ParameterFactory-1.html":{},"interfaces/PayloadBuilder-6.html":{}}}],["setprovidername(name",{"_index":607,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["setreferenceid",{"_index":1628,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["setreferenceid(id",{"_index":1659,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["setrelationshiptoinvitee",{"_index":1495,"title":{},"body":{"classes/ParameterFactory-4.html":{},"interfaces/PayloadBuilder-8.html":{}}}],["setrelationshiptoinvitee(relation",{"_index":624,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["setrelevantaudience",{"_index":1629,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["setrelevantaudience(type",{"_index":1661,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["setrequestattributes",{"_index":268,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["setrequestattributes(attribute",{"_index":1404,"title":{},"body":{"classes/MockAttributeManager.html":{}}}],["setrequesteddate",{"_index":1273,"title":{},"body":{"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/RequestFactory.html":{}}}],["setrequesteddate(date",{"_index":1297,"title":{},"body":{"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/RequestFactory.html":{}}}],["setrequesteddate(this.requestdate",{"_index":1865,"title":{},"body":{"classes/RequestEnvelopeFactory.html":{}}}],["setrequestid",{"_index":1274,"title":{},"body":{"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/RequestFactory.html":{}}}],["setrequestid(id",{"_index":1299,"title":{},"body":{"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/RequestFactory.html":{}}}],["setrequesttype",{"_index":1275,"title":{},"body":{"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/RequestFactory.html":{}}}],["setrequesttype(type",{"_index":1301,"title":{},"body":{"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/RequestFactory.html":{}}}],["setsessionattributes",{"_index":270,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["setsessionattributes(attribute",{"_index":1406,"title":{},"body":{"classes/MockAttributeManager.html":{}}}],["setstarttime",{"_index":1421,"title":{},"body":{"classes/ParameterFactory.html":{},"interfaces/PayloadBuilder-7.html":{}}}],["setstarttime(date",{"_index":618,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["setstate",{"_index":1229,"title":{},"body":{"interfaces/InitialState.html":{},"interfaces/SkillState.html":{},"classes/StateManager-1.html":{}}}],["setstate(current",{"_index":2104,"title":{},"body":{"classes/StateManager-1.html":{}}}],["setsubject",{"_index":1442,"title":{},"body":{"classes/ParameterFactory-1.html":{},"interfaces/PayloadBuilder-6.html":{}}}],["setsubject(subject",{"_index":606,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["settask",{"_index":1315,"title":{},"body":{"classes/LaunchRequestFactory.html":{}}}],["settask(task",{"_index":1317,"title":{},"body":{"classes/LaunchRequestFactory.html":{}}}],["settimestamp",{"_index":1630,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["settimestamp(date",{"_index":1665,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["settingapiclient",{"_index":2008,"title":{"classes/SettingAPIClient.html":{}},"body":{"classes/SettingAPIClient.html":{}}}],["settings",{"_index":857,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["setunsupportedispresponse",{"_index":861,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["several",{"_index":175,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{},"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/RequestFactory.html":{}}}],["shouldendsession",{"_index":1118,"title":{},"body":{"interfaces/HandlerHelpers.html":{},"interfaces/Router.html":{},"interfaces/Situation.html":{},"interfaces/SituationState.html":{}}}],["shouldmatchintentrequest",{"_index":1958,"title":{},"body":{"classes/RouteMatcher.html":{}}}],["shouldmatchintentrequest(request",{"_index":1971,"title":{},"body":{"classes/RouteMatcher.html":{}}}],["shouldmatchrequesttype",{"_index":1959,"title":{},"body":{"classes/RouteMatcher.html":{}}}],["shouldmatchrequesttype(request",{"_index":1969,"title":{},"body":{"classes/RouteMatcher.html":{}}}],["single",{"_index":317,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["situation",{"_index":1116,"title":{"interfaces/Situation.html":{}},"body":{"interfaces/HandlerHelpers.html":{},"classes/RequestHandlerFactory-1.html":{},"interfaces/Router.html":{},"interfaces/Situation.html":{},"interfaces/SituationState.html":{}}}],["situation.shouldendsession",{"_index":1941,"title":{},"body":{"classes/RequestHandlerFactory-1.html":{}}}],["situation.state",{"_index":1928,"title":{},"body":{"classes/RequestHandlerFactory-1.html":{}}}],["situationstate",{"_index":1117,"title":{"interfaces/SituationState.html":{}},"body":{"interfaces/HandlerHelpers.html":{},"interfaces/Router.html":{},"interfaces/Situation.html":{},"interfaces/SituationState.html":{}}}],["skill",{"_index":362,"title":{"interfaces/Skill.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"classes/ContentBuilder-1.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/FlashBriefingContent.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/ISPContentBuilder.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/ResponseContent-1.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"classes/SystemFactory.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["skillconfig",{"_index":653,"title":{},"body":{"interfaces/BaseSkillConfig.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/S3SkillConfig.html":{},"interfaces/SkillHandlers.html":{},"miscellaneous/typealiases.html":{}}}],["skillconstants",{"_index":644,"title":{"interfaces/SkillConstants.html":{}},"body":{"interfaces/BaseSkillConfig.html":{},"classes/ConstantsInterceptorFactory.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/S3SkillConfig.html":{},"interfaces/SkillConstants.html":{},"interfaces/SkillHandlers.html":{}}}],["skillhandlers",{"_index":654,"title":{"interfaces/SkillHandlers.html":{}},"body":{"interfaces/BaseSkillConfig.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/S3SkillConfig.html":{},"interfaces/SkillHandlers.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{}}}],["skillhandlersbuilder",{"_index":2025,"title":{"interfaces/SkillHandlersBuilder.html":{}},"body":{"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{}}}],["skillhandlersfactory",{"_index":2043,"title":{"classes/SkillHandlersFactory.html":{}},"body":{"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{}}}],["skillstate",{"_index":1217,"title":{"interfaces/SkillState.html":{}},"body":{"interfaces/InitialState.html":{},"interfaces/SkillState.html":{},"classes/StateManager-1.html":{}}}],["snow_storm",{"_index":423,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["soccer",{"_index":433,"title":{"interfaces/Soccer.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["socialgameinvite",{"_index":509,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-4.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["socialgameinvite.available.payloadbuilder",{"_index":1492,"title":{},"body":{"classes/ParameterFactory-4.html":{}}}],["socialgameinvite.eventname",{"_index":467,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["socialgameinvite.payload",{"_index":476,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["something",{"_index":985,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["sorry",{"_index":856,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ApplicationFactory.html":{},"interfaces/AttributeType.html":{},"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/BaseSkillConfig.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ContextFactory.html":{},"interfaces/CreativeWork.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/DeviceAPIClient.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/ErrorHandlerBuilder.html":{},"interfaces/Factory.html":{},"classes/FallbackIntentFactory.html":{},"interfaces/FlashBriefingContent.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"classes/HandlerFactory-1.html":{},"interfaces/HandlerHelpers.html":{},"classes/HandlerInputFactory.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"interfaces/InitialState.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentHandlerFactory.html":{},"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestFactory-1.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/ListManagementAPIClient.html":{},"interfaces/LocalizedAttribute.html":{},"classes/LocalizedAttributesFactory.html":{},"interfaces/MergeObjectType.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"classes/MockAttributeManager.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"interfaces/Props.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/RelevantAudience.html":{},"classes/ReminderAPIClient.html":{},"classes/RequestEnvelopeFactory.html":{},"classes/RequestFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"classes/RequestHandlerFactory-1.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"classes/RouteMatcher.html":{},"interfaces/Router.html":{},"interfaces/S3SkillConfig.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{},"classes/SettingAPIClient.html":{},"interfaces/Situation.html":{},"interfaces/SituationState.html":{},"interfaces/Skill.html":{},"interfaces/SkillConstants.html":{},"interfaces/SkillHandlers.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{},"interfaces/SkillState.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"classes/StateManager.html":{},"classes/StateManager-1.html":{},"classes/SystemFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"interfaces/Thing.html":{},"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{},"interfaces/TrashCollectionAlert.html":{},"classes/UserFactory.html":{},"classes/UserProfileAPIClient.html":{},"interfaces/WeatherAlert.html":{}}}],["speak",{"_index":754,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["speak(\"i",{"_index":756,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["speak('sorry",{"_index":987,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["speak(speechtext",{"_index":1003,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["specific",{"_index":168,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["speech",{"_index":982,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["speechtext",{"_index":791,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"interfaces/ErrorHandlerBuilder.html":{},"classes/ISPContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["sportsevent",{"_index":431,"title":{"interfaces/SportsEvent.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-5.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["sportsevent.eventname",{"_index":462,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["sportsevent.payload",{"_index":471,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["sportsevent.updated.payloadbuilder",{"_index":1510,"title":{},"body":{"classes/ParameterFactory-5.html":{}}}],["sportsteam",{"_index":437,"title":{"interfaces/SportsTeam.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["stack",{"_index":1000,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["started",{"_index":2196,"title":{"index.html":{}},"body":{"index.html":{}}}],["starttime",{"_index":329,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["state",{"_index":493,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/HandlerHelpers.html":{},"interfaces/InitialState.html":{},"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"classes/RequestHandlerFactory-1.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"classes/RouteMatcher.html":{},"interfaces/Router.html":{},"interfaces/Situation.html":{},"interfaces/SituationState.html":{},"interfaces/Skill.html":{},"interfaces/SkillState.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"classes/StateManager.html":{},"classes/StateManager-1.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["state.current",{"_index":1225,"title":{},"body":{"interfaces/InitialState.html":{},"interfaces/SkillState.html":{},"classes/StateManager-1.html":{}}}],["state.freshness",{"_index":1481,"title":{},"body":{"classes/ParameterFactory-3.html":{}}}],["state.status",{"_index":1483,"title":{},"body":{"classes/ParameterFactory-3.html":{}}}],["statekey",{"_index":1219,"title":{},"body":{"interfaces/InitialState.html":{},"interfaces/SkillState.html":{},"classes/StateManager-1.html":{}}}],["statemanager",{"_index":1112,"title":{"classes/StateManager.html":{},"classes/StateManager-1.html":{}},"body":{"interfaces/HandlerHelpers.html":{},"interfaces/InitialState.html":{},"classes/RequestHandlerFactory-1.html":{},"classes/RouteMatcher.html":{},"interfaces/Router.html":{},"interfaces/Situation.html":{},"interfaces/SituationState.html":{},"interfaces/SkillState.html":{},"classes/StateManager.html":{},"classes/StateManager-1.html":{}}}],["statemanager(input.attributesmanager",{"_index":1937,"title":{},"body":{"classes/RequestHandlerFactory-1.html":{},"classes/RouteMatcher.html":{}}}],["statemanager.getcurrentstate(attributemanager",{"_index":2062,"title":{},"body":{"classes/StateManager.html":{}}}],["statemanager.setstate(next",{"_index":1940,"title":{},"body":{"classes/RequestHandlerFactory-1.html":{}}}],["statemanager.updatestate(attributemanager",{"_index":2061,"title":{},"body":{"classes/StateManager.html":{}}}],["static",{"_index":700,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"classes/ConstantsInterceptorFactory.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"interfaces/ErrorHandlerBuilder.html":{},"classes/FallbackIntentFactory.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerFactory.html":{},"classes/HandlerFactory-1.html":{},"classes/IntentHandlerFactory.html":{},"classes/LaunchRequestFactory-1.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LocalizedAttributesFactory.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"classes/RequestHandlerFactory-1.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/SkillConstants.html":{},"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{},"classes/StateManager.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{}}}],["status",{"_index":133,"title":{},"body":{"classes/APIClient.html":{},"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/ISPProductClient.html":{},"classes/ListManagementAPIClient.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["statuscode",{"_index":549,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["stop",{"_index":860,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["stream",{"_index":321,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["streamurl",{"_index":1047,"title":{},"body":{"interfaces/FlashBriefingContent.html":{}}}],["string",{"_index":33,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ApplicationFactory.html":{},"interfaces/AttributeType.html":{},"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/BaseSkillConfig.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"interfaces/CreativeWork.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/DeviceAPIClient.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/ErrorHandlerBuilder.html":{},"interfaces/Factory.html":{},"classes/FallbackIntentFactory.html":{},"interfaces/FlashBriefingContent.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/HandlerFactory-1.html":{},"interfaces/HandlerHelpers.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"interfaces/InitialState.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentHandlerFactory.html":{},"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestFactory-1.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/ListManagementAPIClient.html":{},"interfaces/LocalizedAttribute.html":{},"classes/LocalizedAttributesFactory.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"classes/MockAttributeManager.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-7.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"interfaces/Props.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/RelevantAudience.html":{},"classes/ReminderAPIClient.html":{},"classes/RequestEnvelopeFactory.html":{},"classes/RequestFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"interfaces/Router.html":{},"interfaces/S3SkillConfig.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{},"classes/SettingAPIClient.html":{},"interfaces/Situation.html":{},"interfaces/SituationState.html":{},"interfaces/Skill.html":{},"interfaces/SkillConstants.html":{},"interfaces/SkillHandlers.html":{},"interfaces/SkillState.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"classes/StateManager.html":{},"classes/StateManager-1.html":{},"classes/SystemFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"interfaces/Thing.html":{},"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{},"interfaces/TrashCollectionAlert.html":{},"classes/UserFactory.html":{},"classes/UserProfileAPIClient.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["subject",{"_index":365,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-1.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["summary",{"_index":2205,"title":{},"body":{"index.html":{}}}],["sunday",{"_index":416,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["super",{"_index":1256,"title":{},"body":{"classes/IntentHandlerBuilder.html":{}}}],["super('intentrequest",{"_index":1310,"title":{},"body":{"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{}}}],["super('launchrequest",{"_index":1320,"title":{},"body":{"classes/LaunchRequestFactory.html":{}}}],["super(handlerinput.requestenvelope",{"_index":117,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["super(locale",{"_index":846,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["supportedhandlertype",{"_index":912,"title":{},"body":{"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/FallbackIntentFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"miscellaneous/typealiases.html":{}}}],["supportedinterfaces",{"_index":2138,"title":{},"body":{"classes/SystemFactory.html":{}}}],["supports",{"_index":854,"title":{},"body":{"classes/ContentBuilder-1.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/FallbackIntentFactory.html":{},"classes/ISPContentBuilder.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/ResponseContent-1.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{}}}],["supports(type",{"_index":1323,"title":{},"body":{"classes/LaunchRequestHandlerFactory.html":{}}}],["switch",{"_index":1672,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["system",{"_index":883,"title":{},"body":{"classes/ContextFactory.html":{},"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{},"classes/SystemFactory.html":{}}}],["system.device",{"_index":1021,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["system.device.deviceid",{"_index":1023,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["system.user.userid",{"_index":1020,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["systemfactory",{"_index":888,"title":{"classes/SystemFactory.html":{}},"body":{"classes/ContextFactory.html":{},"classes/SystemFactory.html":{}}}],["t",{"_index":639,"title":{},"body":{"interfaces/BaseSkillConfig.html":{},"classes/ConstantsInterceptorFactory.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/InitialState.html":{},"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/RequestEnvelopeFactory.html":{},"classes/RequestFactory.html":{},"classes/RequestHandlerFactory-1.html":{},"classes/RouteMatcher.html":{},"interfaces/S3SkillConfig.html":{},"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{},"interfaces/SkillConstants.html":{},"interfaces/SkillHandlers.html":{},"interfaces/SkillState.html":{},"classes/StateManager.html":{},"classes/StateManager-1.html":{}}}],["t['type",{"_index":1896,"title":{},"body":{"classes/RequestFactory.html":{}}}],["tablename",{"_index":652,"title":{},"body":{"interfaces/BaseSkillConfig.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/S3SkillConfig.html":{},"interfaces/SkillHandlers.html":{}}}],["target",{"_index":166,"title":{},"body":{"classes/APIClient.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/FallbackIntentFactory.html":{},"classes/ISPProductClient.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{}}}],["targetroute",{"_index":1945,"title":{},"body":{"classes/RouteMatcher.html":{}}}],["targetstate",{"_index":1232,"title":{},"body":{"interfaces/InitialState.html":{},"interfaces/SkillState.html":{},"classes/StateManager-1.html":{}}}],["targetstate.before",{"_index":1244,"title":{},"body":{"interfaces/InitialState.html":{},"interfaces/SkillState.html":{},"classes/StateManager-1.html":{}}}],["targetstate.current",{"_index":1240,"title":{},"body":{"interfaces/InitialState.html":{},"interfaces/SkillState.html":{},"classes/StateManager-1.html":{}}}],["targetstate.next",{"_index":1242,"title":{},"body":{"interfaces/InitialState.html":{},"interfaces/SkillState.html":{},"classes/StateManager-1.html":{}}}],["task",{"_index":1318,"title":{},"body":{"classes/LaunchRequestFactory.html":{}}}],["team",{"_index":438,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-5.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["teamname",{"_index":430,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-5.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["tell",{"_index":990,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["test",{"_index":283,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/MockAttributeManager.html":{},"classes/RequestFactory.html":{}}}],["test1",{"_index":287,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["testhandler",{"_index":2065,"title":{},"body":{"classes/StateManager.html":{}}}],["testlint",{"_index":2232,"title":{},"body":{"index.html":{}}}],["text",{"_index":558,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"classes/ContentBuilder.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/ISPContentBuilder.html":{},"interfaces/LocalizedAttribute.html":{},"classes/LocalizedAttributesFactory.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"interfaces/Props.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/ResponseContent.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["thanks",{"_index":794,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{}}}],["thing",{"_index":326,"title":{"interfaces/Thing.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["think",{"_index":758,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["this.apiclient",{"_index":1154,"title":{},"body":{"classes/HandlerInputFactory.html":{}}}],["this.apiendpoint",{"_index":1691,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["this.app",{"_index":246,"title":{},"body":{"classes/ApplicationFactory.html":{}}}],["this.app.applicationid",{"_index":245,"title":{},"body":{"classes/ApplicationFactory.html":{}}}],["this.attributemanager",{"_index":118,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{},"interfaces/InitialState.html":{},"interfaces/SkillState.html":{},"classes/StateManager-1.html":{}}}],["this.attributemanager.getsessionattributes",{"_index":146,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["this.attributemanager.setsessionattributes",{"_index":151,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["this.body",{"_index":1693,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["this.body.event",{"_index":1715,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["this.body.event.name",{"_index":1717,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["this.body.event.payload",{"_index":1716,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["this.body.expirytime",{"_index":1714,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["this.body.localizedattributes",{"_index":1718,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["this.body.referenceid",{"_index":1699,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["this.body.relevantaudience",{"_index":1721,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["this.body.timestamp",{"_index":1713,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["this.cacheusage",{"_index":121,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["this.canhandle",{"_index":1071,"title":{},"body":{"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"classes/HandlerFactory.html":{},"classes/RouteMatcher.html":{}}}],["this.canhandlefilter",{"_index":1063,"title":{},"body":{"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"classes/HandlerFactory.html":{}}}],["this.canhandlefilter(handlerinput",{"_index":735,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"classes/HandlerFactory.html":{},"classes/IntentHandlerBuilder.html":{},"classes/LaunchRequestrBuilder.html":{}}}],["this.client",{"_index":938,"title":{},"body":{"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{}}}],["this.client.get(param).promise",{"_index":946,"title":{},"body":{"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{}}}],["this.client.put(param).promise",{"_index":949,"title":{},"body":{"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{}}}],["this.clientid",{"_index":1687,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["this.clientsecret",{"_index":1689,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["this.contents",{"_index":796,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{}}}],["this.contents.directive",{"_index":692,"title":{},"body":{"classes/BuyContentBuilder.html":{},"classes/RefundContentBuilder.html":{}}}],["this.contents.directives",{"_index":831,"title":{},"body":{"classes/ContentBuilder.html":{},"interfaces/ResponseContent.html":{}}}],["this.contents.directives.concat(directives",{"_index":832,"title":{},"body":{"classes/ContentBuilder.html":{},"interfaces/ResponseContent.html":{}}}],["this.contents.directives.push(directive",{"_index":833,"title":{},"body":{"classes/ContentBuilder.html":{},"interfaces/ResponseContent.html":{}}}],["this.contents.reprompttext",{"_index":830,"title":{},"body":{"classes/ContentBuilder.html":{},"interfaces/ResponseContent.html":{}}}],["this.contents.speechtext",{"_index":829,"title":{},"body":{"classes/ContentBuilder.html":{},"interfaces/ResponseContent.html":{}}}],["this.context",{"_index":893,"title":{},"body":{"classes/ContextFactory.html":{},"classes/RequestEnvelopeFactory.html":{}}}],["this.context.getcontext",{"_index":1875,"title":{},"body":{"classes/RequestEnvelopeFactory.html":{}}}],["this.context.system.putapplication(application",{"_index":1866,"title":{},"body":{"classes/RequestEnvelopeFactory.html":{}}}],["this.createaxiosrequestobject('delete",{"_index":226,"title":{},"body":{"classes/APIClient-1.html":{}}}],["this.createaxiosrequestobject('get",{"_index":229,"title":{},"body":{"classes/APIClient-1.html":{}}}],["this.createaxiosrequestobject('post",{"_index":230,"title":{},"body":{"classes/APIClient-1.html":{}}}],["this.createaxiosrequestobject('put",{"_index":231,"title":{},"body":{"classes/APIClient-1.html":{}}}],["this.createaxiosrequestobject(productid",{"_index":98,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["this.date",{"_index":1899,"title":{},"body":{"classes/RequestFactory.html":{}}}],["this.date.toisostring",{"_index":1900,"title":{},"body":{"classes/RequestFactory.html":{}}}],["this.db",{"_index":274,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["this.delete(`${listid}/items/${itemid",{"_index":1379,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["this.delete(alertid",{"_index":1828,"title":{},"body":{"classes/ReminderAPIClient.html":{}}}],["this.delete(listid",{"_index":1375,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["this.endpoint",{"_index":73,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ISPProductClient.html":{}}}],["this.endpoint}${p.replace(/\\/\\//g",{"_index":222,"title":{},"body":{"classes/APIClient-1.html":{}}}],["this.endpoint}/v1/users/~current/skills/~current/inskillproducts",{"_index":78,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["this.executecustomsituation",{"_index":1978,"title":{},"body":{"classes/RouteMatcher.html":{}}}],["this.fetchlists",{"_index":158,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["this.findproductbyid(condition.productid",{"_index":188,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["this.findproductbyname(condition.productname",{"_index":187,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["this.findproductbyno(condition.userinputno",{"_index":186,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["this.get",{"_index":106,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{},"classes/ListManagementAPIClient.html":{},"classes/ReminderAPIClient.html":{}}}],["this.get('profile.email",{"_index":2189,"title":{},"body":{"classes/UserProfileAPIClient.html":{}}}],["this.get('profile.givenname",{"_index":2188,"title":{},"body":{"classes/UserProfileAPIClient.html":{}}}],["this.get('profile.mobilenumber",{"_index":2190,"title":{},"body":{"classes/UserProfileAPIClient.html":{}}}],["this.get('profile.name",{"_index":1371,"title":{},"body":{"classes/ListManagementAPIClient.html":{},"classes/UserProfileAPIClient.html":{}}}],["this.get(`${deviceid}/settings/address",{"_index":963,"title":{},"body":{"classes/DeviceAPIClient.html":{}}}],["this.get(`${deviceid}/settings/address/countryandpostalcode",{"_index":962,"title":{},"body":{"classes/DeviceAPIClient.html":{}}}],["this.get(`${deviceid}/settings/system.distanceunits",{"_index":2023,"title":{},"body":{"classes/SettingAPIClient.html":{}}}],["this.get(`${deviceid}/settings/system.temperatureunit",{"_index":2022,"title":{},"body":{"classes/SettingAPIClient.html":{}}}],["this.get(`${deviceid}/settings/system.timezone",{"_index":2021,"title":{},"body":{"classes/SettingAPIClient.html":{}}}],["this.get(`${listid}/${status",{"_index":1372,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["this.get(`${listid}/items/${itemid",{"_index":1376,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["this.get(alertid",{"_index":1829,"title":{},"body":{"classes/ReminderAPIClient.html":{}}}],["this.get(productid",{"_index":107,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["this.getacceptedpurchaseresult",{"_index":800,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{}}}],["this.getacceptedrefundresult",{"_index":1803,"title":{},"body":{"classes/RefundResponseContentBuilder.html":{}}}],["this.getaccesstoken",{"_index":1724,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["this.getbeforestate().includes(state",{"_index":1250,"title":{},"body":{"interfaces/InitialState.html":{},"interfaces/SkillState.html":{},"classes/StateManager-1.html":{}}}],["this.getbody",{"_index":1722,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["this.getcachedproducts",{"_index":148,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["this.getcannotbuytheproductresponse",{"_index":874,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["this.getcurrentstate",{"_index":1246,"title":{},"body":{"interfaces/InitialState.html":{},"interfaces/SkillState.html":{},"classes/StateManager-1.html":{}}}],["this.getcurrentstate(attributemanager",{"_index":2085,"title":{},"body":{"classes/StateManager.html":{}}}],["this.getdeclinedpurchaseresult",{"_index":797,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{}}}],["this.getdeclinedrefundresult",{"_index":1800,"title":{},"body":{"classes/RefundResponseContentBuilder.html":{}}}],["this.getentitledproductresponse",{"_index":879,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["this.getfailedpurchaseresult",{"_index":806,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{}}}],["this.getfailedrefundresult",{"_index":1804,"title":{},"body":{"classes/RefundResponseContentBuilder.html":{}}}],["this.getlistproducts",{"_index":1771,"title":{},"body":{"classes/ProductListResponseContentBuilder.html":{}}}],["this.getlocale",{"_index":1905,"title":{},"body":{"classes/RequestFactory.html":{}}}],["this.getnextstate().includes(state",{"_index":1248,"title":{},"body":{"interfaces/InitialState.html":{},"interfaces/SkillState.html":{},"classes/StateManager-1.html":{}}}],["this.getnoentitledproductresponse",{"_index":1783,"title":{},"body":{"classes/RefundContentBuilder.html":{}}}],["this.getpayload",{"_index":1432,"title":{},"body":{"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{}}}],["this.getproduct",{"_index":789,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{}}}],["this.getproductdetail",{"_index":1749,"title":{},"body":{"classes/ProductDetailResponseContentBuilder.html":{}}}],["this.getproductlists",{"_index":1763,"title":{},"body":{"classes/ProductListResponseContentBuilder.html":{}}}],["this.getproductname",{"_index":869,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["this.getproductnotfoundresponse",{"_index":871,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["this.getproductsnotfoundresponse",{"_index":867,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["this.getrequestid",{"_index":1906,"title":{},"body":{"classes/RequestFactory.html":{}}}],["this.getrequestparams(authresult.access_token",{"_index":1727,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["this.getrequesttype",{"_index":1907,"title":{},"body":{"classes/RequestFactory.html":{}}}],["this.getserviceclientfactory",{"_index":1164,"title":{},"body":{"classes/HandlerInputFactory.html":{}}}],["this.getstate",{"_index":1238,"title":{},"body":{"interfaces/InitialState.html":{},"interfaces/SkillState.html":{},"classes/StateManager-1.html":{}}}],["this.gettimestamp",{"_index":1904,"title":{},"body":{"classes/RequestFactory.html":{}}}],["this.getunsupportedispresponse",{"_index":862,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["this.geturl(path",{"_index":224,"title":{},"body":{"classes/APIClient-1.html":{}}}],["this.geturl(productid",{"_index":82,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["this.handle",{"_index":1064,"title":{},"body":{"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"classes/HandlerFactory.html":{}}}],["this.handlerfilter",{"_index":1088,"title":{},"body":{"classes/HandlerBuilder-1.html":{}}}],["this.handlerfilter(handlerinput",{"_index":1087,"title":{},"body":{"classes/HandlerBuilder-1.html":{}}}],["this.hasproducts",{"_index":164,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["this.input",{"_index":1960,"title":{},"body":{"classes/RouteMatcher.html":{}}}],["this.intentname",{"_index":1257,"title":{},"body":{"classes/IntentHandlerBuilder.html":{}}}],["this.isdebug",{"_index":75,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"classes/ISPProductClient.html":{}}}],["this.isjp",{"_index":790,"title":{},"body":{"classes/BuyResponseContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["this.isstate(targetstate",{"_index":1234,"title":{},"body":{"interfaces/InitialState.html":{},"interfaces/SkillState.html":{},"classes/StateManager-1.html":{}}}],["this.listproducts",{"_index":1762,"title":{},"body":{"classes/ProductListResponseContentBuilder.html":{}}}],["this.locale",{"_index":71,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/RequestFactory.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{}}}],["this.mergesessionattributes",{"_index":1230,"title":{},"body":{"interfaces/InitialState.html":{},"interfaces/SkillState.html":{},"classes/StateManager-1.html":{}}}],["this.path}${path",{"_index":221,"title":{},"body":{"classes/APIClient-1.html":{}}}],["this.persistenceadapter",{"_index":1153,"title":{},"body":{"classes/HandlerInputFactory.html":{}}}],["this.persistent",{"_index":272,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["this.post(reminderrequest",{"_index":1831,"title":{},"body":{"classes/ReminderAPIClient.html":{}}}],["this.post(request",{"_index":1373,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["this.primarykey",{"_index":941,"title":{},"body":{"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{}}}],["this.product",{"_index":848,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["this.productname",{"_index":847,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["this.products",{"_index":139,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["this.products.find(product",{"_index":170,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["this.products.length",{"_index":140,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["this.products[userinputno",{"_index":167,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["this.put(reminderrequest",{"_index":1830,"title":{},"body":{"classes/ReminderAPIClient.html":{}}}],["this.put(request",{"_index":1374,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["this.putrequestattributes",{"_index":1872,"title":{},"body":{"classes/RequestEnvelopeFactory.html":{}}}],["this.request",{"_index":264,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{},"classes/RequestEnvelopeFactory.html":{},"classes/RequestFactory.html":{},"classes/RouteMatcher.html":{}}}],["this.request.getrequest",{"_index":1873,"title":{},"body":{"classes/RequestEnvelopeFactory.html":{}}}],["this.request.intent",{"_index":1312,"title":{},"body":{"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{}}}],["this.request.setrequestid(requestid",{"_index":1864,"title":{},"body":{"classes/RequestEnvelopeFactory.html":{}}}],["this.requestenvelopefactory",{"_index":1152,"title":{},"body":{"classes/HandlerInputFactory.html":{}}}],["this.requestenvelopefactory.context.putcontext(context",{"_index":1157,"title":{},"body":{"classes/HandlerInputFactory.html":{}}}],["this.requestenvelopefactory.getrequest",{"_index":1158,"title":{},"body":{"classes/HandlerInputFactory.html":{}}}],["this.requestenvelopefactory.request.putrequest(request",{"_index":1155,"title":{},"body":{"classes/HandlerInputFactory.html":{}}}],["this.requestenvelopefactory.session.putsession(session",{"_index":1156,"title":{},"body":{"classes/HandlerInputFactory.html":{}}}],["this.requestid",{"_index":1898,"title":{},"body":{"classes/RequestFactory.html":{}}}],["this.requesttype",{"_index":1897,"title":{},"body":{"classes/RequestFactory.html":{}}}],["this.responsebuilder",{"_index":827,"title":{},"body":{"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{}}}],["this.responsebuilder.adddirective(directive",{"_index":837,"title":{},"body":{"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{}}}],["this.responsebuilder.getresponse",{"_index":838,"title":{},"body":{"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{}}}],["this.responsebuilder.reprompt(reprompttext",{"_index":835,"title":{},"body":{"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{}}}],["this.responsebuilder.speak(speechtext",{"_index":834,"title":{},"body":{"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{}}}],["this.router",{"_index":1929,"title":{},"body":{"classes/RequestHandlerFactory-1.html":{}}}],["this.router.map((route",{"_index":1930,"title":{},"body":{"classes/RequestHandlerFactory-1.html":{}}}],["this.session",{"_index":265,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{},"classes/RequestEnvelopeFactory.html":{},"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{}}}],["this.session.application",{"_index":1984,"title":{},"body":{"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{}}}],["this.session.attributes",{"_index":1990,"title":{},"body":{"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{}}}],["this.session.getsession",{"_index":1874,"title":{},"body":{"classes/RequestEnvelopeFactory.html":{}}}],["this.session.new",{"_index":1992,"title":{},"body":{"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{}}}],["this.session.putsessionid(sessionid",{"_index":1870,"title":{},"body":{"classes/RequestEnvelopeFactory.html":{}}}],["this.session.sessionid",{"_index":1986,"title":{},"body":{"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{}}}],["this.session.user",{"_index":1988,"title":{},"body":{"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{}}}],["this.sethandle(handle",{"_index":1065,"title":{},"body":{"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"classes/HandlerFactory.html":{}}}],["this.sethandle(handler.handle",{"_index":1070,"title":{},"body":{"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"classes/HandlerFactory.html":{}}}],["this.sethandlecondition(condition",{"_index":1066,"title":{},"body":{"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"classes/HandlerFactory.html":{}}}],["this.sethandlecondition(handler.canhandle",{"_index":1068,"title":{},"body":{"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"classes/HandlerFactory.html":{}}}],["this.state",{"_index":1221,"title":{},"body":{"interfaces/InitialState.html":{},"interfaces/SkillState.html":{},"classes/StateManager-1.html":{}}}],["this.statemanager",{"_index":1962,"title":{},"body":{"classes/RouteMatcher.html":{}}}],["this.statemanager.hasstate",{"_index":1973,"title":{},"body":{"classes/RouteMatcher.html":{}}}],["this.statemanager.matchedcurrentstate(currentstate.current",{"_index":1976,"title":{},"body":{"classes/RouteMatcher.html":{}}}],["this.system",{"_index":2131,"title":{},"body":{"classes/SystemFactory.html":{}}}],["this.system.apiaccesstoken",{"_index":2141,"title":{},"body":{"classes/SystemFactory.html":{}}}],["this.system.apiendpoint",{"_index":2140,"title":{},"body":{"classes/SystemFactory.html":{}}}],["this.system.application",{"_index":2133,"title":{},"body":{"classes/SystemFactory.html":{}}}],["this.system.application.applicationid",{"_index":2132,"title":{},"body":{"classes/SystemFactory.html":{}}}],["this.system.device",{"_index":2139,"title":{},"body":{"classes/SystemFactory.html":{}}}],["this.system.getsystem",{"_index":886,"title":{},"body":{"classes/ContextFactory.html":{}}}],["this.system.person",{"_index":2142,"title":{},"body":{"classes/SystemFactory.html":{}}}],["this.system.user",{"_index":2136,"title":{},"body":{"classes/SystemFactory.html":{}}}],["this.tablename",{"_index":943,"title":{},"body":{"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{}}}],["this.targetroute",{"_index":1963,"title":{},"body":{"classes/RouteMatcher.html":{}}}],["this.targetroute.situation",{"_index":1964,"title":{},"body":{"classes/RouteMatcher.html":{}}}],["this.targetroute.situation.custom",{"_index":1965,"title":{},"body":{"classes/RouteMatcher.html":{}}}],["this.targetroute.situation.custom(this.input",{"_index":1966,"title":{},"body":{"classes/RouteMatcher.html":{}}}],["this.targetroute.situation.state",{"_index":1975,"title":{},"body":{"classes/RouteMatcher.html":{}}}],["this.token",{"_index":69,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ISPProductClient.html":{}}}],["this.updaterequest",{"_index":1311,"title":{},"body":{"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{},"classes/LaunchRequestFactory.html":{},"classes/RequestFactory.html":{}}}],["this.updatestate(attributemanager",{"_index":2084,"title":{},"body":{"classes/StateManager.html":{}}}],["this.user",{"_index":1861,"title":{},"body":{"classes/RequestEnvelopeFactory.html":{},"classes/UserFactory.html":{}}}],["this.user.putuserid(userid).getuser",{"_index":1863,"title":{},"body":{"classes/RequestEnvelopeFactory.html":{}}}],["this.user.userid",{"_index":2176,"title":{},"body":{"classes/UserFactory.html":{}}}],["this.validaterequest",{"_index":1908,"title":{},"body":{"classes/RequestFactory.html":{}}}],["this.version",{"_index":1876,"title":{},"body":{"classes/RequestEnvelopeFactory.html":{}}}],["throw",{"_index":183,"title":{},"body":{"classes/APIClient.html":{},"classes/ContentBuilder-1.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"classes/HandlerFactory.html":{},"classes/HandlerFactory-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/IntentHandlerFactory.html":{},"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{},"classes/LaunchRequestFactory-1.html":{},"classes/ProactiveClient.html":{},"classes/RequestFactory.html":{},"interfaces/ResponseContent-1.html":{},"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{}}}],["thunder_storm",{"_index":424,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["thursday",{"_index":413,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["timestamp",{"_index":543,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"classes/RequestFactory.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["timestamp.substring(0",{"_index":1901,"title":{},"body":{"classes/RequestFactory.html":{}}}],["titletext",{"_index":1048,"title":{},"body":{"interfaces/FlashBriefingContent.html":{}}}],["tmergetargethandler",{"_index":900,"title":{"interfaces/TMergeTargetHandler.html":{}},"body":{"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/FallbackIntentFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{}}}],["token",{"_index":13,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ISPProductClient.html":{},"classes/ProactiveClient.html":{},"classes/RequestEnvelopeFactory.html":{},"classes/SystemFactory.html":{}}}],["token_type",{"_index":537,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["tornado",{"_index":421,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["track",{"_index":1008,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["translation",{"_index":2159,"title":{},"body":{"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{}}}],["translationbuilder",{"_index":2144,"title":{"interfaces/TranslationBuilder.html":{}},"body":{"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{}}}],["translationfactory",{"_index":2161,"title":{"classes/TranslationFactory.html":{}},"body":{"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{}}}],["translationobject",{"_index":2155,"title":{"interfaces/TranslationObject.html":{}},"body":{"interfaces/TranslationBuilder.html":{},"classes/TranslationFactory.html":{},"interfaces/TranslationObject.html":{}}}],["trashcollectionalert",{"_index":417,"title":{"interfaces/TrashCollectionAlert.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-6.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["trashcollectionalert.activated.payloadbuilder",{"_index":1532,"title":{},"body":{"classes/ParameterFactory-6.html":{}}}],["trashcollectionalert.eventname",{"_index":468,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["trashcollectionalert.payload",{"_index":469,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["trequesthandler",{"_index":903,"title":{"interfaces/TRequestHandler.html":{}},"body":{"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/FallbackIntentFactory.html":{},"classes/LaunchRequestHandlerFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{}}}],["true",{"_index":68,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"interfaces/AttributeType.html":{},"classes/BuyIntentHandlerBuilder.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"interfaces/ErrorHandlerBuilder.html":{},"classes/FallbackIntentFactory.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"classes/HandlerFactory.html":{},"classes/ISPProductClient.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/MockAttributeManager.html":{},"classes/ProactiveClient.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"classes/RouteMatcher.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{}}}],["true.(we",{"_index":1972,"title":{},"body":{"classes/RouteMatcher.html":{}}}],["try",{"_index":135,"title":{},"body":{"classes/APIClient.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/ProactiveClient.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["tuesday",{"_index":411,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["type",{"_index":31,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ApplicationFactory.html":{},"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/BaseSkillConfig.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"classes/ConstantsInterceptorFactory.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ContextFactory.html":{},"interfaces/CreativeWork.html":{},"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"classes/DeviceAPIClient.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/ErrorHandlerBuilder.html":{},"interfaces/Factory.html":{},"classes/FallbackIntentFactory.html":{},"interfaces/FlashBriefingContent.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"classes/HandlerFactory-1.html":{},"interfaces/HandlerHelpers.html":{},"classes/HandlerInputFactory.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"interfaces/InitialState.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentHandlerFactory.html":{},"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestFactory-1.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/ListManagementAPIClient.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MergeObjectType.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"classes/MockAttributeManager.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-7.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"interfaces/Props.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"interfaces/RelevantAudience.html":{},"classes/ReminderAPIClient.html":{},"classes/RequestEnvelopeFactory.html":{},"classes/RequestFactory.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"classes/RequestHandlerFactory-1.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/ResponseContent.html":{},"interfaces/ResponseContent-1.html":{},"classes/RouteMatcher.html":{},"interfaces/Router.html":{},"interfaces/S3SkillConfig.html":{},"classes/SentryErrorHandlerFactory.html":{},"classes/SessionFactory.html":{},"classes/SettingAPIClient.html":{},"interfaces/Situation.html":{},"interfaces/SituationState.html":{},"interfaces/Skill.html":{},"interfaces/SkillHandlers.html":{},"interfaces/SkillHandlersBuilder.html":{},"interfaces/SkillState.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"classes/StateManager.html":{},"classes/StateManager-1.html":{},"classes/SystemFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"interfaces/Thing.html":{},"interfaces/TranslationBuilder.html":{},"interfaces/TranslationObject.html":{},"interfaces/TrashCollectionAlert.html":{},"classes/UserFactory.html":{},"classes/UserProfileAPIClient.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":2245,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types",{"_index":300,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"classes/LocalizedAttributesFactory.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.availability",{"_index":507,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.confirmationstate",{"_index":500,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-1.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.confirmationstatus",{"_index":603,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-1.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.creativework",{"_index":508,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.datetime",{"_index":330,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.dayofweek",{"_index":567,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-6.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.distributionmethod",{"_index":620,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.game",{"_index":512,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.gameinvite",{"_index":511,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.gamestatistic",{"_index":1513,"title":{},"body":{"classes/ParameterFactory-5.html":{}}}],["types.garbagetype",{"_index":564,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-6.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.goal",{"_index":489,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-5.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.invitetype",{"_index":627,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-4.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.locale",{"_index":557,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"classes/LocalizedAttributesFactory.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.localizedattributes",{"_index":560,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"classes/LocalizedAttributesFactory.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.mediatype",{"_index":616,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.messagefreshness",{"_index":589,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.messagegroup",{"_index":495,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.messagestate",{"_index":494,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.messagestatus",{"_index":591,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.messageurgent",{"_index":587,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.occasion",{"_index":501,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.occasiontype",{"_index":605,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-1.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.offertype",{"_index":630,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-4.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.order",{"_index":498,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-2.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.orderstate",{"_index":497,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.orderstatus",{"_index":595,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-2.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.person",{"_index":451,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.relationshiptoinvitee",{"_index":625,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-4.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.soccer",{"_index":1511,"title":{},"body":{"classes/ParameterFactory-5.html":{}}}],["types.sportsevent",{"_index":490,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.trashcollectionalert",{"_index":482,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-6.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.weatheralert",{"_index":484,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["types.weatheralerttype",{"_index":574,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["typescript",{"_index":94,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"interfaces/AttributeType.html":{},"classes/DBClient.html":{},"interfaces/DBConfig.html":{},"interfaces/DBItem.html":{},"interfaces/ErrorHandlerBuilder.html":{},"classes/ISPProductClient.html":{},"interfaces/InitialState.html":{},"classes/MockAttributeManager.html":{},"classes/ParameterFactory.html":{},"classes/ParameterFactory-1.html":{},"classes/ParameterFactory-2.html":{},"classes/ParameterFactory-3.html":{},"classes/ParameterFactory-4.html":{},"classes/ParameterFactory-5.html":{},"classes/ParameterFactory-6.html":{},"classes/ParameterFactory-7.html":{},"classes/ProactiveClient.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/SkillState.html":{},"classes/StateManager-1.html":{}}}],["uid",{"_index":1049,"title":{},"body":{"interfaces/FlashBriefingContent.html":{}}}],["undefined",{"_index":1138,"title":{},"body":{"classes/HandlerInputFactory.html":{},"classes/RequestHandlerFactory-1.html":{}}}],["understand",{"_index":988,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["unicast",{"_index":539,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"classes/ProactiveClient.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["unmatch",{"_index":1967,"title":{},"body":{"classes/RouteMatcher.html":{}}}],["unread",{"_index":444,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["unsupportedispresponse",{"_index":731,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["unsupportedispresponse(locale",{"_index":744,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{}}}],["update",{"_index":488,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["updateconfirmationstatus",{"_index":1438,"title":{},"body":{"classes/ParameterFactory-1.html":{},"interfaces/PayloadBuilder-6.html":{}}}],["updateconfirmationstatus(status",{"_index":602,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["updated",{"_index":354,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-5.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["updated.eventname",{"_index":485,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["updated.hasownproperty('scoreearned",{"_index":1525,"title":{},"body":{"classes/ParameterFactory-5.html":{}}}],["updated.hasownproperty('teamname",{"_index":1526,"title":{},"body":{"classes/ParameterFactory-5.html":{}}}],["updated.payload",{"_index":486,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["updated.payloadbuilder",{"_index":577,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["updated.scoreearned",{"_index":1515,"title":{},"body":{"classes/ParameterFactory-5.html":{}}}],["updated.teamname",{"_index":1516,"title":{},"body":{"classes/ParameterFactory-5.html":{}}}],["updatedate",{"_index":1050,"title":{},"body":{"interfaces/FlashBriefingContent.html":{}}}],["updategoaldata",{"_index":1514,"title":{},"body":{"classes/ParameterFactory-5.html":{},"interfaces/PayloadBuilder-3.html":{}}}],["updategoaldata(teamname",{"_index":578,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["updatehandler",{"_index":706,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/HandlerFactory.html":{},"classes/IntentHandlerBuilder.html":{},"classes/LaunchRequestrBuilder.html":{}}}],["updatehandler(condition",{"_index":722,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"interfaces/HandlerBuilderInterface.html":{},"classes/IntentHandlerBuilder.html":{},"classes/LaunchRequestrBuilder.html":{}}}],["updatelist",{"_index":1338,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["updatelist(listid",{"_index":1361,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["updatelistitem",{"_index":1339,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["updatelistitem(listid",{"_index":1364,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["updatereferenceid",{"_index":1631,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["updatereferenceid(id",{"_index":1667,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["updatereminder",{"_index":1811,"title":{},"body":{"classes/ReminderAPIClient.html":{}}}],["updatereminder(alertid",{"_index":1824,"title":{},"body":{"classes/ReminderAPIClient.html":{}}}],["updaterequest",{"_index":1130,"title":{},"body":{"classes/HandlerInputFactory.html":{},"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/RequestFactory.html":{}}}],["updaterequest(param",{"_index":1303,"title":{},"body":{"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{},"classes/RequestFactory.html":{}}}],["updaterequest(requestenvelope",{"_index":1144,"title":{},"body":{"classes/HandlerInputFactory.html":{}}}],["updatesellername",{"_index":1463,"title":{},"body":{"classes/ParameterFactory-2.html":{},"interfaces/PayloadBuilder-5.html":{}}}],["updatesellername(name",{"_index":599,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["updatesessionattributes",{"_index":254,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["updatesessionattributes(handlerinput",{"_index":282,"title":{},"body":{"interfaces/AttributeType.html":{},"classes/MockAttributeManager.html":{}}}],["updatestate",{"_index":2060,"title":{},"body":{"classes/StateManager.html":{}}}],["updatestate(attributemanager",{"_index":2078,"title":{},"body":{"classes/StateManager.html":{}}}],["updator",{"_index":1939,"title":{},"body":{"classes/RequestHandlerFactory-1.html":{}}}],["urgency",{"_index":453,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-3.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["urgent",{"_index":448,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-3.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["url",{"_index":77,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/ISPProductClient.html":{},"classes/ProactiveClient.html":{},"classes/SystemFactory.html":{},"index.html":{}}}],["urlencoded",{"_index":1704,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["url}/productid",{"_index":80,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["url}stages/development",{"_index":1678,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["use",{"_index":123,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["user",{"_index":298,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"classes/RequestEnvelopeFactory.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"classes/SystemFactory.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"classes/UserFactory.html":{},"interfaces/WeatherAlert.html":{}}}],["userfactory",{"_index":1839,"title":{"classes/UserFactory.html":{}},"body":{"classes/RequestEnvelopeFactory.html":{},"classes/UserFactory.html":{}}}],["userid",{"_index":1019,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/RequestEnvelopeFactory.html":{},"classes/SentryErrorHandlerFactory.html":{},"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{},"classes/SystemFactory.html":{},"classes/UserFactory.html":{}}}],["userinputno",{"_index":162,"title":{},"body":{"classes/APIClient.html":{},"classes/ISPProductClient.html":{}}}],["userparams",{"_index":1018,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["userparams.deviceid",{"_index":1022,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["userparams.sessionid",{"_index":1025,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{}}}],["userprofileapiclient",{"_index":2177,"title":{"classes/UserProfileAPIClient.html":{}},"body":{"classes/UserProfileAPIClient.html":{}}}],["utilities",{"_index":2210,"title":{},"body":{"index.html":{}}}],["utility",{"_index":2197,"title":{},"body":{"index.html":{}}}],["utils",{"_index":899,"title":{},"body":{"interfaces/CustomHandlerInput.html":{},"interfaces/CustomeRequestEnvelope.html":{},"classes/FallbackIntentFactory.html":{},"classes/IntentHandlerBuilder.html":{},"classes/LaunchRequestHandlerFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"interfaces/RequestHandlerBuilder.html":{},"classes/RequestHandlerFactory.html":{},"interfaces/TMergeTargetHandler.html":{},"interfaces/TRequestHandler.html":{},"index.html":{}}}],["utils.dev",{"_index":2200,"title":{},"body":{"index.html":{}}}],["utils.git",{"_index":2228,"title":{},"body":{"index.html":{}}}],["utils/ask",{"_index":2208,"title":{},"body":{"index.html":{}}}],["utils/core",{"_index":726,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"classes/RouteMatcher.html":{},"index.html":{}}}],["utils/error",{"_index":1011,"title":{},"body":{"interfaces/ErrorHandlerBuilder.html":{},"classes/SentryErrorHandlerFactory.html":{},"index.html":{}}}],["utils/handlers",{"_index":645,"title":{},"body":{"interfaces/BaseSkillConfig.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/S3SkillConfig.html":{},"interfaces/SkillHandlers.html":{},"index.html":{}}}],["utils/isp",{"_index":2215,"title":{},"body":{"index.html":{}}}],["utils/libs/handlerbuilders.ts",{"_index":2026,"title":{},"body":{"interfaces/SkillHandlersBuilder.html":{},"classes/SkillHandlersFactory.html":{}}}],["utils/libs/handlerbuilders.ts:12",{"_index":2035,"title":{},"body":{"interfaces/SkillHandlersBuilder.html":{}}}],["utils/libs/handlerbuilders.ts:13",{"_index":2037,"title":{},"body":{"interfaces/SkillHandlersBuilder.html":{}}}],["utils/libs/handlerbuilders.ts:14",{"_index":2039,"title":{},"body":{"interfaces/SkillHandlersBuilder.html":{}}}],["utils/libs/handlerbuilders.ts:15",{"_index":2033,"title":{},"body":{"interfaces/SkillHandlersBuilder.html":{}}}],["utils/libs/handlerbuilders.ts:16",{"_index":2040,"title":{},"body":{"interfaces/SkillHandlersBuilder.html":{}}}],["utils/libs/handlerbuilders.ts:19",{"_index":2054,"title":{},"body":{"classes/SkillHandlersFactory.html":{}}}],["utils/libs/models.ts",{"_index":635,"title":{},"body":{"interfaces/BaseSkillConfig.html":{},"interfaces/DynamoDBSkillConfig.html":{},"interfaces/S3SkillConfig.html":{},"interfaces/SkillHandlers.html":{},"miscellaneous/typealiases.html":{}}}],["utils/proactive",{"_index":2211,"title":{},"body":{"index.html":{}}}],["utils/service",{"_index":2220,"title":{},"body":{"index.html":{}}}],["utils/situation",{"_index":1113,"title":{},"body":{"interfaces/HandlerHelpers.html":{},"classes/RequestHandlerFactory-1.html":{},"classes/RouteMatcher.html":{},"interfaces/Router.html":{},"interfaces/Situation.html":{},"interfaces/SituationState.html":{}}}],["utils/tree/master/packages/core",{"_index":2209,"title":{},"body":{"index.html":{}}}],["utils/tree/master/packages/error",{"_index":2219,"title":{},"body":{"index.html":{}}}],["utils/tree/master/packages/handlers",{"_index":2217,"title":{},"body":{"index.html":{}}}],["utils/tree/master/packages/isp",{"_index":2216,"title":{},"body":{"index.html":{}}}],["utils/tree/master/packages/proactive",{"_index":2212,"title":{},"body":{"index.html":{}}}],["utils/tree/master/packages/serviceclient",{"_index":2221,"title":{},"body":{"index.html":{}}}],["utilspackages",{"_index":2203,"title":{},"body":{"index.html":{}}}],["uuid",{"_index":1669,"title":{},"body":{"classes/ProactiveClient.html":{},"classes/RequestEnvelopeFactory.html":{},"classes/RequestFactory.html":{},"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{},"classes/SystemFactory.html":{}}}],["uuid.v4",{"_index":1698,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["v0.13.0",{"_index":2239,"title":{},"body":{"index.html":{}}}],["v1/alerts/reminders",{"_index":1812,"title":{},"body":{"classes/ReminderAPIClient.html":{}}}],["v1/devices",{"_index":955,"title":{},"body":{"classes/DeviceAPIClient.html":{}}}],["v2",{"_index":1115,"title":{},"body":{"interfaces/HandlerHelpers.html":{},"interfaces/Router.html":{},"interfaces/Situation.html":{},"interfaces/SituationState.html":{}}}],["v2/accounts/~current/settings",{"_index":2182,"title":{},"body":{"classes/UserProfileAPIClient.html":{}}}],["v2/devices",{"_index":2013,"title":{},"body":{"classes/SettingAPIClient.html":{}}}],["v2/householdlists",{"_index":1340,"title":{},"body":{"classes/ListManagementAPIClient.html":{}}}],["v4",{"_index":1860,"title":{},"body":{"classes/RequestEnvelopeFactory.html":{},"classes/RequestFactory.html":{},"interfaces/SessionAttribute.html":{},"classes/SessionFactory.html":{},"classes/SystemFactory.html":{}}}],["validaterequest",{"_index":1266,"title":{},"body":{"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{},"classes/LaunchRequestFactory.html":{},"classes/RequestFactory.html":{}}}],["value",{"_index":203,"title":{},"body":{"classes/APIClient-1.html":{},"classes/ApplicationFactory.html":{},"classes/BuyContentBuilder.html":{},"classes/BuyIntentHandlerBuilder.html":{},"classes/BuyResponseContentBuilder.html":{},"classes/ContentBuilder.html":{},"classes/ContentBuilder-1.html":{},"classes/ContextFactory.html":{},"classes/DeviceAPIClient.html":{},"classes/HandlerBuilder.html":{},"classes/HandlerBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/IntentHandlerBuilder.html":{},"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{},"classes/LaunchRequestFactory.html":{},"classes/LaunchRequestrBuilder.html":{},"classes/ListManagementAPIClient.html":{},"classes/MockAttributeManager.html":{},"classes/ProactiveClient.html":{},"classes/ProductDetailResponseContentBuilder.html":{},"classes/ProductListResponseContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"classes/RefundResponseContentBuilder.html":{},"classes/ReminderAPIClient.html":{},"classes/RequestEnvelopeFactory.html":{},"classes/RequestFactory.html":{},"classes/RequestHandlerFactory-1.html":{},"classes/RouteMatcher.html":{},"classes/SessionFactory.html":{},"classes/SettingAPIClient.html":{},"classes/StateManager-1.html":{},"classes/UserFactory.html":{},"classes/UserProfileAPIClient.html":{}}}],["version",{"_index":1835,"title":{},"body":{"classes/RequestEnvelopeFactory.html":{},"index.html":{}}}],["void",{"_index":712,"title":{},"body":{"classes/BuyIntentHandlerBuilder.html":{},"classes/IntentRequestFactory.html":{},"classes/InvalidIntentRequestException.html":{},"classes/LaunchRequestFactory.html":{},"classes/MockAttributeManager.html":{},"classes/RequestFactory.html":{},"classes/StateManager.html":{}}}],["want",{"_index":859,"title":{},"body":{"classes/ContentBuilder-1.html":{},"classes/ISPContentBuilder.html":{},"classes/RefundContentBuilder.html":{},"interfaces/ResponseContent-1.html":{}}}],["waste_paper",{"_index":408,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["weatheralert",{"_index":425,"title":{"interfaces/WeatherAlert.html":{}},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"classes/ParameterFactory-7.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{}}}],["weatheralert.activated.payloadbuilder",{"_index":1548,"title":{},"body":{"classes/ParameterFactory-7.html":{}}}],["weatheralert.alerttype",{"_index":1552,"title":{},"body":{"classes/ParameterFactory-7.html":{}}}],["weatheralert.eventname",{"_index":461,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["weatheralert.payload",{"_index":470,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["weatheralert.source",{"_index":1550,"title":{},"body":{"classes/ParameterFactory-7.html":{}}}],["weatheralerttype",{"_index":420,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["wednesday",{"_index":412,"title":{},"body":{"interfaces/AudiencePayload.html":{},"interfaces/AuthResponse.html":{},"interfaces/Availability.html":{},"interfaces/Class.html":{},"interfaces/ClientConfig.html":{},"interfaces/ConfirmationState.html":{},"interfaces/CreativeWork.html":{},"interfaces/Factory.html":{},"interfaces/Game.html":{},"interfaces/GameInvite.html":{},"interfaces/GameStatistic.html":{},"interfaces/Goal.html":{},"interfaces/LocalizedAttribute.html":{},"interfaces/MessageGroup.html":{},"interfaces/MessageState.html":{},"interfaces/Occasion.html":{},"interfaces/Ogranization.html":{},"interfaces/Order.html":{},"interfaces/OrderState.html":{},"interfaces/ParcelDelivery.html":{},"interfaces/Payload.html":{},"interfaces/Payload-1.html":{},"interfaces/Payload-2.html":{},"interfaces/Payload-3.html":{},"interfaces/Payload-4.html":{},"interfaces/Payload-5.html":{},"interfaces/Payload-6.html":{},"interfaces/Payload-7.html":{},"interfaces/PayloadBuilder.html":{},"interfaces/PayloadBuilder-1.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-3.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-5.html":{},"interfaces/PayloadBuilder-6.html":{},"interfaces/PayloadBuilder-7.html":{},"interfaces/PayloadBuilder-8.html":{},"interfaces/Person.html":{},"interfaces/Props.html":{},"interfaces/RelevantAudience.html":{},"interfaces/RequstBody.html":{},"interfaces/Response.html":{},"interfaces/Skill.html":{},"interfaces/Soccer.html":{},"interfaces/SportsEvent.html":{},"interfaces/SportsTeam.html":{},"interfaces/Thing.html":{},"interfaces/TrashCollectionAlert.html":{},"interfaces/WeatherAlert.html":{},"miscellaneous/typealiases.html":{}}}],["www",{"_index":1702,"title":{},"body":{"classes/ProactiveClient.html":{}}}],["yarn",{"_index":2230,"title":{},"body":{"index.html":{}}}],["yes",{"_index":40,"title":{},"body":{"classes/APIClient.html":{},"classes/APIClient-1.html":{},"classes/DBClient.html":{},"classes/HandlerFactory-1.html":{},"classes/HandlerInputFactory.html":{},"classes/ISPContentBuilder.html":{},"classes/ISPProductClient.html":{},"classes/IntentHandlerFactory.html":{},"classes/IntentRequestFactory.html":{},"classes/LaunchRequestFactory.html":{},"interfaces/PayloadBuilder-2.html":{},"interfaces/PayloadBuilder-4.html":{},"interfaces/PayloadBuilder-7.html":{},"classes/ProactiveClient.html":{},"classes/RequestFactory.html":{},"classes/StateManager-1.html":{},"classes/SystemFactory.html":{}}}],["z",{"_index":1903,"title":{},"body":{"classes/RequestFactory.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/APIClient.html":{"url":"classes/APIClient.html","title":"class - APIClient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  APIClient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/isp/libs/client.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                endpoint\n                            \n                            \n                                    Private\n                                isDebug\n                            \n                            \n                                    Private\n                                locale\n                            \n                            \n                                    Private\n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                createAxiosRequestObject\n                            \n                            \n                                    Protected\n                                    Async\n                                get\n                            \n                            \n                                    Public\n                                getProduct\n                            \n                            \n                                    Private\n                                getURL\n                            \n                            \n                                    Public\n                                listProducts\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(requestEnvelope: RequestEnvelope, isDebug: boolean)\n                    \n                \n                        \n                            \n                                Defined in packages/isp/libs/client.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        requestEnvelope\n                                                  \n                                                        \n                                                                    RequestEnvelope\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        isDebug\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            endpoint\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/isp/libs/client.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isDebug\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/isp/libs/client.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            locale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/isp/libs/client.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/isp/libs/client.ts:9\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createAxiosRequestObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createAxiosRequestObject(productId?: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/client.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productId\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     AxiosRequestConfig\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Async\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(productId?: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/client.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productId\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getProduct\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getProduct(productId: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/client.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getURL\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getURL(productId?: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/client.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productId\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            listProducts\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    listProducts()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/client.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import axios, { AxiosRequestConfig } from 'axios'\nimport { getLocale, getApiAccessToken, HandlerInput, AttributesManager } from 'ask-sdk-core'\nimport { RequestEnvelope, services } from 'ask-sdk-model'\nimport InSkillProductsResponse = services.monetization.InSkillProductsResponse\nimport InSkillProduct = services.monetization.InSkillProduct\ntype InskillProducts = InSkillProduct[]\n\nexport class APIClient {\n    private token: string\n    private locale: string\n    private endpoint: string\n    private isDebug: boolean\n    public constructor (requestEnvelope: RequestEnvelope, isDebug: boolean = true) {\n        this.token = getApiAccessToken(requestEnvelope)\n        this.locale = getLocale(requestEnvelope)\n        this.endpoint = requestEnvelope.context.System.apiEndpoint\n        this.isDebug = isDebug\n    }\n    private getURL (productId?: string): string {\n        const url = `${this.endpoint}/v1/users/~current/skills/~current/inSkillProducts`\n        if (!productId) return url\n        return `${url}/productId`\n    }\n    private createAxiosRequestObject (productId?: string): AxiosRequestConfig {\n        return {\n            method: 'GET',\n            url: this.getURL(productId),\n            headers: {\n                'Content-type': 'application/json',\n                'Accept-Language': this.locale,\n                'Authorization': `Bearer ${this.token}`\n            }\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    protected async get (productId?: string): Promise {\n        const param = this.createAxiosRequestObject(productId)\n        if (this.isDebug) console.log('[Get ISP product] %j', param)\n        const { data } = await axios(param)\n        if (this.isDebug) console.log('[Get ISP product] %j', data)\n        return data\n    }\n    public listProducts (): Promise {\n        return this.get()\n    }\n    public getProduct (productId: string): Promise {\n        return this.get(productId)\n    }\n}\n\nexport class ISPProductClient extends APIClient {\n    private attributeManager: AttributesManager\n    private cacheUsage: 'enable' | 'disable' = 'enable'\n    private products: InskillProducts = []\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    constructor (handlerInput: HandlerInput, isDebug: boolean = true) {\n        super(handlerInput.requestEnvelope, isDebug)\n        this.attributeManager = handlerInput.attributesManager\n    }\n    public getCacheStatus (): 'enable' | 'disable' {\n        return this.cacheUsage\n    }\n    /**\n   * Disallow to use the session attributes item at first\n   **/\n    public disabledCache (): this {\n        this.cacheUsage = 'disable'\n        return this\n    }\n    /**\n   * Allow to use the session attributes item at first\n   **/\n    public enableCache (): this {\n        this.cacheUsage = 'enable'\n        return this\n    }\n    /**\n   * Check product avaliable status\n   * If products is empty, try to fetch at once\n   */\n    private async hasProducts (): Promise {\n        if (!this.products || this.products.length  0) {\n            this.products = products\n        }\n        return this.products\n    }\n    /**\n   * Fetch the ISP API.\n   * If cacheUsage is enabled, it will return from session attributes at first\n   */\n    public async fetchLists (): Promise {\n        const atts = this.attributeManager.getSessionAttributes()\n        if (this.cacheUsage === 'enable') {\n            const cachedProducts = this.getCachedProducts()\n            if (cachedProducts && cachedProducts.length > 0) {\n                return\n            }\n        }\n        const data = await this.get()\n        const products = data.inSkillProducts\n        this.products = products\n        this.attributeManager.setSessionAttributes({\n            ...atts,\n            products\n        })\n    }\n    /**\n   * get product by product id\n   * @param productId {string}\n   */\n    public async getProductById (productId: string): Promise {\n        if (this.cacheUsage === 'enable') {\n            const cachedProducts = this.getCachedProducts()\n            if (cachedProducts && cachedProducts.length > 0) {\n                // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n                const item = cachedProducts.find(cache => cache.productId === productId)\n                if (item) return item\n            }\n        }\n        const product = await this.get(productId)\n        return product\n    }\n    /**\n   * get products\n   */\n    public async getProducts (): Promise {\n        await this.fetchLists()\n        return this.products\n    }\n    /**\n   * Find product by the list number\n   * @param userInputNo {number} list number\n   */\n    public async findProductByNo (userInputNo: number): Promise {\n        if (!await this.hasProducts()) return null\n        const target = this.products[userInputNo]\n        return target\n    }\n    /**\n   * Find product by the specific id\n   * @param productId {string} product id\n   */\n    public async findProductById (productId: string): Promise {\n        if (!await this.hasProducts()) return null\n        // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n        const product = this.products.find(product => product.productId === productId)\n        if (!product) return null\n        return product\n    }\n    /**\n   * Find product by the product name\n   * @param productName {string} product name\n   */\n    public async findProductByName (productName: string): Promise {\n        if (!await this.hasProducts()) return null\n        // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n        const product = this.products.find(product => product.name === productName)\n        if (!product) return null\n        return product\n    }\n    /**\n   * Find product by several condition\n   * @param condition {productName?: string, userInputNo?: number, productId?: string} search conditions\n   */\n    public async searchProduct (condition: {productName?: string; userInputNo?: number; productId?: string}): Promise {\n        if (!condition.productName && !condition.userInputNo && !condition.productId) throw new Error('No search condition')\n        if (condition.userInputNo) return this.findProductByNo(condition.userInputNo)\n        if (condition.productName) return this.findProductByName(condition.productName)\n        if (condition.productId) return this.findProductById(condition.productId)\n        throw new Error('Invalid search condition')\n    }\n}\nexport default ISPProductClient\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/APIClient-1.html":{"url":"classes/APIClient-1.html","title":"class - APIClient-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  APIClient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/serviceClients/libs/client.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                endpoint\n                            \n                            \n                                    Protected\n                                isDebug\n                            \n                            \n                                    Protected\n                                locale\n                            \n                            \n                                    Protected\n                                path\n                            \n                            \n                                    Protected\n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                createAxiosRequestObject\n                            \n                            \n                                    Protected\n                                    Async\n                                delete\n                            \n                            \n                                    Protected\n                                    Async\n                                get\n                            \n                            \n                                    Protected\n                                getURL\n                            \n                            \n                                    Protected\n                                    Async\n                                post\n                            \n                            \n                                    Protected\n                                    Async\n                                put\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(requestEnvelope: RequestEnvelope, isDebug: boolean)\n                    \n                \n                        \n                            \n                                Defined in packages/serviceClients/libs/client.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        requestEnvelope\n                                                  \n                                                        \n                                                                    RequestEnvelope\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        isDebug\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            endpoint\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/serviceClients/libs/client.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            isDebug\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/serviceClients/libs/client.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            locale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/serviceClients/libs/client.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in packages/serviceClients/libs/client.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/serviceClients/libs/client.ts:6\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            createAxiosRequestObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createAxiosRequestObject(method: Method, path?: string, data?: any)\n                \n            \n\n\n            \n                \n                    Defined in packages/serviceClients/libs/client.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                                Method\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     AxiosRequestConfig\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Async\n                            delete\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(path?: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/serviceClients/libs/client.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Async\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(path?: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/serviceClients/libs/client.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getURL\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getURL(path?: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/serviceClients/libs/client.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Async\n                            post\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    post(body?: any, path?: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/serviceClients/libs/client.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Async\n                            put\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    put(body?: any, path?: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/serviceClients/libs/client.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    body\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    path\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import axios, { AxiosRequestConfig } from 'axios'\nimport { getLocale, getApiAccessToken } from 'ask-sdk-core'\nimport { RequestEnvelope } from 'ask-sdk-model'\ntype Method = 'GET' | 'PUT' | 'POST' | 'DELETE'\nexport abstract class APIClient {\n    protected token: string\n    protected locale: string\n    protected endpoint: string\n    protected path: string = ''\n    protected isDebug: boolean\n    public constructor (requestEnvelope: RequestEnvelope, isDebug: boolean = true) {\n        this.token = getApiAccessToken(requestEnvelope)\n        this.locale = getLocale(requestEnvelope)\n        this.endpoint = requestEnvelope.context.System.apiEndpoint\n        this.isDebug = isDebug\n    }\n    protected getURL (path?: string): string {\n        const p = `/${this.path}${path ? `/${path}` : ''}`\n        const url = `${this.endpoint}${p.replace(/\\/\\//g, '/')}`\n        return url\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    protected createAxiosRequestObject (method: Method, path?: string, data?: any): AxiosRequestConfig {\n        const conf: AxiosRequestConfig = {\n            method: method,\n            url: this.getURL(path),\n            headers: {\n                'Content-type': 'application/json',\n                'Accept-Language': this.locale,\n                'Authorization': `Bearer ${this.token}`\n            }\n        }\n        if (data) conf.data = data\n        return conf\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    protected async delete (path?: string): Promise {\n        const param = this.createAxiosRequestObject('DELETE', path)\n        if (this.isDebug) console.log('[Request] %j', param)\n        const { data } = await axios(param)\n        if (this.isDebug) console.log('[Response] %j', data)\n        return data\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    protected async get (path?: string): Promise {\n        const param = this.createAxiosRequestObject('GET', path)\n        if (this.isDebug) console.log('[Request] %j', param)\n        const { data } = await axios(param)\n        if (this.isDebug) console.log('[Response] %j', data)\n        return data\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    protected async post (body?: any, path?: string): Promise {\n        const param = this.createAxiosRequestObject('POST', path, body)\n        if (this.isDebug) console.log('[Request] %j', param)\n        const { data } = await axios(param)\n        if (this.isDebug) console.log('[Response] %j', data)\n        return data\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    protected async put (body?: any, path?: string): Promise {\n        const param = this.createAxiosRequestObject('PUT', path, body)\n        if (this.isDebug) console.log('[Request] %j', param)\n        const { data } = await axios(param)\n        if (this.isDebug) console.log('[Response] %j', data)\n        return data\n    }\n}\nexport default APIClient\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ApplicationFactory.html":{"url":"classes/ApplicationFactory.html","title":"class - ApplicationFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ApplicationFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/test/libs/application/ApplicationFactory.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                app\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getApplication\n                            \n                            \n                                    Public\n                                putId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            app\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Application\n\n                        \n                    \n                    \n                        \n                            Default value : {\n        applicationId: ''\n    }\n                        \n                    \n                        \n                            \n                                    Defined in packages/test/libs/application/ApplicationFactory.ts:5\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getApplication\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getApplication()\n                \n            \n\n\n            \n                \n                    Defined in packages/test/libs/application/ApplicationFactory.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Application\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putId(id: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/test/libs/application/ApplicationFactory.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n    Application\n} from 'ask-sdk-core/node_modules/ask-sdk-model'\nexport class ApplicationFactory {\n    private readonly app: Application = {\n        applicationId: ''\n    }\n    public putId (id: string): this {\n        this.app.applicationId = id\n        return this\n    }\n    public getApplication (): Application {\n        return this.app\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AttributeType.html":{"url":"interfaces/AttributeType.html","title":"interface - AttributeType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AttributeType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/__tests__/libs/attributeManager.test.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in packages/core/__tests__/libs/attributeManager.test.ts:5\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { HandlerInput, AttributesManager } from 'ask-sdk'\nimport { updateSessionAttributes, getSessionAttribute, getSessionAttributes } from '../../libs/attributeManager'\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ninterface AttributeType {[key: string]: any}\nclass MockAttributeManager implements AttributesManager {\n    private request: AttributeType = {}\n    private session: AttributeType = {}\n    private persistent: AttributeType = {}\n    private db: AttributeType = {}\n    public getRequestAttributes () {\n        return this.request\n    }\n    public getSessionAttributes () {\n        return this.session\n    }\n    public getPersistentAttributes () {\n        return Promise.resolve(this.db)\n    }\n    public setRequestAttributes (attribute: AttributeType) {\n        this.request = attribute\n    }\n    public setSessionAttributes (attribute: AttributeType) {\n        this.session = attribute\n    }\n    public setPersistentAttributes (attribute: AttributeType) {\n        this.persistent = attribute\n    }\n    public savePersistentAttributes () {\n        this.db = this.persistent\n        return Promise.resolve()\n    }\n}\n\nconst generateHandlerInput = (): HandlerInput => {\n    const attributesManager: AttributesManager = new MockAttributeManager()\n    const handlerInput = {\n        attributesManager\n    } as HandlerInput\n    return handlerInput\n}\ndescribe('attributeManager.ts', () => {\n    let handlerInput = generateHandlerInput()\n    beforeEach(() => {\n        handlerInput = generateHandlerInput()\n    })\n    describe('updateSessionAttributes()', () => {\n        it('should save attributes', () => {\n            updateSessionAttributes(handlerInput, { test: 'true' })\n            const result = getSessionAttribute(handlerInput, 'test')\n            expect(result).toEqual('true')\n        })\n\n        it('should add save attributes', () => {\n            updateSessionAttributes(handlerInput, { test: 'true' })\n            updateSessionAttributes(handlerInput, { test1: 'false' })\n            const result = getSessionAttribute(handlerInput, 'test')\n            expect(result).toEqual('true')\n            const result2 = getSessionAttribute(handlerInput, 'test1')\n            expect(result2).toEqual('false')\n        })\n    })\n    describe('getSessionAttributes()', () => {\n        it('should get saved attributes', () => {\n            updateSessionAttributes(handlerInput, { test: 'true' })\n            const result = getSessionAttributes(handlerInput)\n            expect(result).toEqual({ test: 'true' })\n        })\n        it('should add save attributes', () => {\n            updateSessionAttributes(handlerInput, { test: 'true' })\n            updateSessionAttributes(handlerInput, { test1: 'false' })\n            const result = getSessionAttributes(handlerInput)\n            expect(result).toEqual({\n                test: 'true',\n                test1: 'false'\n            })\n        })\n    })\n})\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AudiencePayload.html":{"url":"interfaces/AudiencePayload.html","title":"interface - AudiencePayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AudiencePayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        user\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                    \n                                \n                                \n                                    \n                                        user:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthResponse.html":{"url":"interfaces/AuthResponse.html","title":"interface - AuthResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  AuthResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        access_token\n                                \n                                \n                                        expires_in\n                                \n                                \n                                        scope\n                                \n                                \n                                        token_type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        access_token\n                                    \n                                \n                                \n                                    \n                                        access_token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expires_in\n                                    \n                                \n                                \n                                    \n                                        expires_in:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        scope\n                                    \n                                \n                                \n                                    \n                                        scope:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token_type\n                                    \n                                \n                                \n                                    \n                                        token_type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Availability.html":{"url":"interfaces/Availability.html","title":"interface - Availability","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Availability\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        method\n                                \n                                \n                                            Optional\n                                        provider\n                                \n                                \n                                        startTime\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        method\n                                    \n                                \n                                \n                                    \n                                        method:         DistributionMethod\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DistributionMethod\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        provider\n                                    \n                                \n                                \n                                    \n                                        provider:         Thing\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Thing\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        startTime\n                                    \n                                \n                                \n                                    \n                                        startTime:         Types.dateTime\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Types.dateTime\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BaseSkillConfig.html":{"url":"interfaces/BaseSkillConfig.html","title":"interface - BaseSkillConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  BaseSkillConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ask-utils/libs/models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        constants\n                                \n                                \n                                            Optional\n                                        isISP\n                                \n                                \n                                        persistanceType\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        constants\n                                    \n                                \n                                \n                                    \n                                        constants:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isISP\n                                    \n                                \n                                \n                                    \n                                        isISP:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        persistanceType\n                                    \n                                \n                                \n                                    \n                                        persistanceType:         PersistanceType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PersistanceType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n    RequestInterceptor,\n    ResponseInterceptor,\n    ErrorHandler,\n    RequestHandler\n} from 'ask-sdk'\nimport {\n    SkillConstants\n} from '@ask-utils/handlers'\n\ntype PersistanceType = 'DynamoDB' | 'S3'\ninterface BaseSkillConfig {\n    persistanceType: PersistanceType;\n    isISP?: boolean;\n    constants?: T;\n}\nexport interface S3SkillConfig extends BaseSkillConfig {\n    persistanceType: 'S3';\n    bucketName: string;\n    bucketPathPrefix: string;\n}\nexport interface DynamoDBSkillConfig extends BaseSkillConfig {\n    persistanceType: 'DynamoDB';\n    tableName: string;\n}\nexport type SkillConfig = S3SkillConfig | DynamoDBSkillConfig\nexport interface SkillHandlers {\n    requestHandlers: RequestHandler[];\n    requestInterceptors?: RequestInterceptor[];\n    responseInterceptors?: ResponseInterceptor[];\n    errorHandlers?: ErrorHandler[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BuyContentBuilder.html":{"url":"classes/BuyContentBuilder.html","title":"class - BuyContentBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BuyContentBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/isp/libs/contentBuilders/Buy.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ContentBuilder\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                contents\n                            \n                            \n                                    Protected\n                                locale\n                            \n                            \n                                    Protected\n                                responseBuilder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                setBuyDirective\n                            \n                            \n                                    Public\n                                getResponse\n                            \n                            \n                                    Protected\n                                isJP\n                            \n                            \n                                    Public\n                                putDirective\n                            \n                            \n                                    Public\n                                putDirectives\n                            \n                            \n                                    Public\n                                putRepromptText\n                            \n                            \n                                    Public\n                                putSpeechText\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            contents\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ResponseContent\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         ContentBuilder\n\n                                \n                            \n                        \n                            \n                                    Defined in         ContentBuilder:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            locale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ContentBuilder\n\n                                \n                            \n                        \n                            \n                                    Defined in         ContentBuilder:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            responseBuilder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ResponseBuilder\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ContentBuilder\n\n                                \n                            \n                        \n                            \n                                    Defined in         ContentBuilder:10\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setBuyDirective\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setBuyDirective(productId: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/Buy.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getResponse()\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:43\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Response\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isJP\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isJP()\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:16\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putDirective\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putDirective(directive: Directive)\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:35\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    directive\n                                    \n                                                Directive\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putDirectives\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putDirectives(directives: Directive[])\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    directives\n                                    \n                                            Directive[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putRepromptText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putRepromptText(text: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:23\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putSpeechText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putSpeechText(text: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n    getBuyProductDirective\n} from '../index'\nimport ContentBuilder from './base'\nexport class BuyContentBuilder extends ContentBuilder {\n    public setBuyDirective (productId: string): this {\n        this.contents.directive = getBuyProductDirective(productId)\n        return this\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BuyIntentHandlerBuilder.html":{"url":"classes/BuyIntentHandlerBuilder.html","title":"class - BuyIntentHandlerBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BuyIntentHandlerBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/isp/libs/handlers/Buy.ts\n        \n\n\n            \n                Extends\n            \n            \n                        HandlerBuilder\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                canHandle\n                            \n                            \n                                    Public\n                                canHandle\n                            \n                            \n                                    Protected\n                                canHandleFilter\n                            \n                            \n                                    Public\n                                handle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                create\n                            \n                            \n                                    Public\n                                getHandler\n                            \n                            \n                                    Public\n                                replaceHandler\n                            \n                            \n                                    Public\n                                setHandle\n                            \n                            \n                                    Public\n                                setHandleCondition\n                            \n                            \n                                    Public\n                                updateHandler\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            canHandle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CanHandle\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in packages/isp/libs/handlers/Buy.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            canHandle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CanHandle\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         HandlerBuilder\n\n                                \n                            \n                        \n                            \n                                    Defined in         HandlerBuilder:8\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            canHandleFilter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CanHandle\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         HandlerBuilder\n\n                                \n                            \n                        \n                            \n                                    Defined in         HandlerBuilder:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            handle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Handle\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         HandlerBuilder\n\n                                \n                            \n                        \n                            \n                                    Defined in         HandlerBuilder:11\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/handlers/Buy.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getHandler\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getHandler()\n                \n            \n\n\n            \n                \n                    Inherited from         HandlerBuilder\n\n                \n            \n            \n                \n                        Defined in         HandlerBuilder:32\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     RequestHandler\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            replaceHandler\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    replaceHandler(handler: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         HandlerBuilder\n\n                \n            \n            \n                \n                        Defined in         HandlerBuilder:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    handler\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setHandle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setHandle(handle: Handle)\n                \n            \n\n\n            \n                \n                    Inherited from         HandlerBuilder\n\n                \n            \n            \n                \n                        Defined in         HandlerBuilder:18\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    handle\n                                    \n                                                Handle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setHandleCondition\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setHandleCondition(condition: CanHandle)\n                \n            \n\n\n            \n                \n                    Inherited from         HandlerBuilder\n\n                \n            \n            \n                \n                        Defined in         HandlerBuilder:14\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                CanHandle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateHandler\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateHandler(condition: CanHandle, handle: Handle)\n                \n            \n\n\n            \n                \n                    Inherited from         HandlerBuilder\n\n                \n            \n            \n                \n                        Defined in         HandlerBuilder:22\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                CanHandle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    handle\n                                    \n                                                Handle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HandlerInput, getLocale } from 'ask-sdk-core'\nimport { Response } from 'ask-sdk-model'\nimport {\n    isYesIntent,\n    isMatchedIntent\n} from '@ask-utils/core'\nimport {\n    HandlerBuilder,\n    CanHandle\n} from './fixtures'\nimport {\n    isMatchedISPState,\n    getProduct\n} from './helpers'\nimport {\n    NoProductResponse,\n    UnSupportedISPResponse\n} from '../contentBuilders/generalResponse'\nimport {\n    getBuyProductDirective\n} from '../directiveBuilders'\nimport {\n    ISPProductClient\n} from '../client'\nimport {\n\n} from '../productFinders'\n\nexport class BuyIntentHandlerBuilder extends HandlerBuilder {\n    public canHandle: CanHandle = (handlerInput) => {\n        return this.canHandleFilter(handlerInput)\n    }\n    public static create () {\n\n    }\n}\n\nexport const BuyIntentHandler = {\n    canHandle (handlerInput: HandlerInput): boolean {\n        if (isMatchedIntent(handlerInput, 'BuyIntent')) return true\n        if (isYesIntent(handlerInput)) {\n            return isMatchedISPState(handlerInput.attributesManager, 'BUY')\n        }\n        return false\n    },\n    async handle (handlerInput: HandlerInput): Promise {\n        const { requestEnvelope, responseBuilder, serviceClientFactory } = handlerInput\n        const locale = getLocale(requestEnvelope)\n        if (!serviceClientFactory) {\n            const noISPResponse = UnSupportedISPResponse(locale)\n            return responseBuilder.speak(noISPResponse.speechText)\n                .reprompt(noISPResponse.repromptText)\n                .getResponse()\n        }\n\n        const product = await getProduct(handlerInput)\n        // みつからない\n        if (!product) {\n            const client = new ISPProductClient(handlerInput)\n            const { inSkillProducts } = await client.listProducts()\n            return NoProductResponse(responseBuilder, locale, inSkillProducts)\n        }\n        // 買えない商品\n        if (product.purchasable === 'NOT_PURCHASABLE') {\n            if (/^ja/.test(locale)) {\n                return responseBuilder\n                    .speak('すみません。その商品は現在購入できません。他に何をしますか？')\n                    .reprompt('他に何をしますか？')\n                    .getResponse()\n            }\n            return responseBuilder\n                .speak(\"I don't think we have a product by that name.  Can you try again?\")\n                .reprompt(\"I didn't catch that. Can you try again?\")\n                .getResponse()\n        }\n\n        // ここで一旦データを保存する\n        // Connectionの方にいくとセッションが切れるから\n        const attributes = handlerInput.attributesManager.getSessionAttributes()\n        const atts = await handlerInput.attributesManager.getPersistentAttributes()\n        const nextAttributes = Object.assign(atts, {\n            ispLastSessionAttribtes: attributes\n        })\n        await handlerInput.attributesManager.setPersistentAttributes(nextAttributes)\n        await handlerInput.attributesManager.savePersistentAttributes()\n\n        return handlerInput.responseBuilder\n            .addDirective(getBuyProductDirective(product.productId))\n            .getResponse()\n    }\n}\n\nexport default BuyIntentHandler\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/BuyResponseContentBuilder.html":{"url":"classes/BuyResponseContentBuilder.html","title":"class - BuyResponseContentBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  BuyResponseContentBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/isp/libs/contentBuilders/BuyResponse.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ContentBuilder\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                contents\n                            \n                            \n                                    Protected\n                                locale\n                            \n                            \n                                    Protected\n                                responseBuilder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getAcceptedPurchaseResult\n                            \n                            \n                                    Private\n                                getDeclinedPurchaseResult\n                            \n                            \n                                    Private\n                                getFailedPurchaseResult\n                            \n                            \n                                    Public\n                                setAcceptedPurchaseResult\n                            \n                            \n                                    Public\n                                setDeclinedPurchaseResult\n                            \n                            \n                                    Public\n                                setFailedPurchaseResult\n                            \n                            \n                                    Public\n                                getResponse\n                            \n                            \n                                    Protected\n                                isJP\n                            \n                            \n                                    Public\n                                putDirective\n                            \n                            \n                                    Public\n                                putDirectives\n                            \n                            \n                                    Public\n                                putRepromptText\n                            \n                            \n                                    Public\n                                putSpeechText\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            contents\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ResponseContent\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         ContentBuilder\n\n                                \n                            \n                        \n                            \n                                    Defined in         ContentBuilder:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            locale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ContentBuilder\n\n                                \n                            \n                        \n                            \n                                    Defined in         ContentBuilder:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            responseBuilder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ResponseBuilder\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ContentBuilder\n\n                                \n                            \n                        \n                            \n                                    Defined in         ContentBuilder:10\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getAcceptedPurchaseResult\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAcceptedPurchaseResult()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/BuyResponse.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ResponseContent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getDeclinedPurchaseResult\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDeclinedPurchaseResult()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/BuyResponse.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ResponseContent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getFailedPurchaseResult\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFailedPurchaseResult()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/BuyResponse.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ResponseContent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setAcceptedPurchaseResult\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setAcceptedPurchaseResult()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/BuyResponse.ts:51\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setDeclinedPurchaseResult\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setDeclinedPurchaseResult()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/BuyResponse.ts:27\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setFailedPurchaseResult\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setFailedPurchaseResult()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/BuyResponse.ts:71\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getResponse()\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:43\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Response\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isJP\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isJP()\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:16\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putDirective\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putDirective(directive: Directive)\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:35\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    directive\n                                    \n                                                Directive\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putDirectives\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putDirectives(directives: Directive[])\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    directives\n                                    \n                                            Directive[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putRepromptText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putRepromptText(text: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:23\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putSpeechText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putSpeechText(text: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import ContentBuilder, {\n    ResponseContent\n} from './base'\n\nexport class BuyResponseContentBuilder extends ContentBuilder {\n    // purchaseResult === 'DECLINED'\n    private getDeclinedPurchaseResult (): ResponseContent {\n        const product = this.getProduct()\n        if (this.isJP()) {\n            return {\n                speechText: [\n                    `${product && product.name ? product.name : '商品'}に興味を持ってくれてありがとうございます。`,\n                    'また機会が購入してくださいね。',\n                    '次はなにをしますか？'\n                ].join(' '),\n                repromptText: '次はなにをしますか？'\n            }\n        }\n        return {\n            speechText: [\n                `Thanks for your interest in the ${product && product.name ? product.name : 'product'}.`,\n                'What will you do for next?'\n            ].join(' '),\n            repromptText: 'What will you do for next?'\n        }\n    }\n    public setDeclinedPurchaseResult (): this {\n        this.contents = this.getDeclinedPurchaseResult()\n        return this\n    }\n    // purchaseResult === 'ACCEPTED'\n    private getAcceptedPurchaseResult (): ResponseContent {\n        const product = this.getProduct()\n        if (this.isJP()) {\n            return {\n                speechText: [\n                    `${product && product.name ? product.name : '商品'}の購入ありがとうございます。`,\n                    '次は何をしますか？'\n                ].join(' '),\n                repromptText: '次は何をしますか？'\n            }\n        }\n        return {\n            speechText: [\n                `You have purchased the ${product && product.name ? product.name : 'product'}.`,\n                'What will you do for next?'\n            ].join(' '),\n            repromptText: 'What will you do for next?'\n        }\n    }\n    public setAcceptedPurchaseResult (): this {\n        this.contents = this.getAcceptedPurchaseResult()\n        return this\n    }\n    private getFailedPurchaseResult (): ResponseContent {\n        if (this.isJP()) {\n            return {\n                speechText: [\n                    'スキル商品の購入処理に失敗しました。',\n                    'もう一度トライするか、アレクサアプリからサポートに問い合わせてください。'\n                ].join(' ')\n            }\n        }\n        return {\n            speechText: [\n                'There was an error handling your purchase request.',\n                'Please try again or contact us for help.'\n            ].join(' ')\n        }\n    }\n    public setFailedPurchaseResult (): this {\n        this.contents = this.getFailedPurchaseResult()\n        return this\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Class.html":{"url":"interfaces/Class.html","title":"interface - Class","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Class\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        getAccessToken\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        getAccessToken\n                                    \n                                \n                                \n                                    \n                                        getAccessToken:     Promise\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Promise\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ClientConfig.html":{"url":"interfaces/ClientConfig.html","title":"interface - ClientConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ClientConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        apiEndpont\n                                \n                                \n                                            Optional\n                                        apiRegion\n                                \n                                \n                                        clientId\n                                \n                                \n                                        clientSecret\n                                \n                                \n                                            Optional\n                                        isProduction\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        apiEndpont\n                                    \n                                \n                                \n                                    \n                                        apiEndpont:         APIEndpoint\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         APIEndpoint\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        apiRegion\n                                    \n                                \n                                \n                                    \n                                        apiRegion:         ApiRegion\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ApiRegion\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        clientId\n                                    \n                                \n                                \n                                    \n                                        clientId:         ClientId\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ClientId\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        clientSecret\n                                    \n                                \n                                \n                                    \n                                        clientSecret:         ClientSecret\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ClientSecret\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isProduction\n                                    \n                                \n                                \n                                    \n                                        isProduction:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ConfirmationState.html":{"url":"interfaces/ConfirmationState.html","title":"interface - ConfirmationState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ConfirmationState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        confirmationStatus\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        confirmationStatus\n                                    \n                                \n                                \n                                    \n                                        confirmationStatus:         ConfirmationStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ConfirmationStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ConstantsInterceptorFactory.html":{"url":"classes/ConstantsInterceptorFactory.html","title":"class - ConstantsInterceptorFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ConstantsInterceptorFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/handlers/libs/requestInterceptors/InjectConstants.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    init(constants: T)\n                \n            \n\n\n            \n                \n                    Defined in packages/handlers/libs/requestInterceptors/InjectConstants.ts:8\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    constants\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     RequestInterceptor\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HandlerInput } from 'ask-sdk-core'\nimport { RequestInterceptor } from 'ask-sdk-runtime'\n\nexport interface SkillConstants {\n    [key: string]: any;\n}\nexport class ConstantsInterceptorFactory {\n    public static init (constants: T): RequestInterceptor {\n        return {\n            async process ({ attributesManager }: HandlerInput) {\n                const atts = attributesManager.getRequestAttributes()\n                attributesManager.setRequestAttributes({\n                    ...atts,\n                    CONSTANTS: constants\n                })\n            }\n        }\n    }\n}\n\nexport default ConstantsInterceptorFactory\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ContentBuilder.html":{"url":"classes/ContentBuilder.html","title":"class - ContentBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ContentBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/libs/contentBuilder.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                contents\n                            \n                            \n                                    Protected\n                                locale\n                            \n                            \n                                    Protected\n                                responseBuilder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getResponse\n                            \n                            \n                                    Protected\n                                isJP\n                            \n                            \n                                    Public\n                                putDirective\n                            \n                            \n                                    Public\n                                putDirectives\n                            \n                            \n                                    Public\n                                putRepromptText\n                            \n                            \n                                    Public\n                                putSpeechText\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(locale: string, responseBuilder: ResponseBuilder)\n                    \n                \n                        \n                            \n                                Defined in packages/core/libs/contentBuilder.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        locale\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        responseBuilder\n                                                  \n                                                        \n                                                                        ResponseBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            contents\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ResponseContent\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/libs/contentBuilder.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            locale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/libs/contentBuilder.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            responseBuilder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ResponseBuilder\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/libs/contentBuilder.ts:10\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getResponse()\n                \n            \n\n\n            \n                \n                    Defined in packages/core/libs/contentBuilder.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Response\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isJP\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isJP()\n                \n            \n\n\n            \n                \n                    Defined in packages/core/libs/contentBuilder.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putDirective\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putDirective(directive: Directive)\n                \n            \n\n\n            \n                \n                    Defined in packages/core/libs/contentBuilder.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    directive\n                                    \n                                                Directive\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putDirectives\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putDirectives(directives: Directive[])\n                \n            \n\n\n            \n                \n                    Defined in packages/core/libs/contentBuilder.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    directives\n                                    \n                                            Directive[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putRepromptText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putRepromptText(text: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/core/libs/contentBuilder.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putSpeechText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putSpeechText(text: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/core/libs/contentBuilder.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ResponseBuilder } from 'ask-sdk-core'\nimport { Response, Directive } from 'ask-sdk-model'\nexport interface ResponseContent {\n    speechText?: string;\n    repromptText?: string;\n    directives?: Directive[];\n}\nexport class ContentBuilder {\n    protected locale: string\n    protected responseBuilder: ResponseBuilder\n    protected contents: ResponseContent = {}\n    public constructor (locale: string, responseBuilder: ResponseBuilder) {\n        this.locale = locale\n        this.responseBuilder = responseBuilder\n    }\n    protected isJP (): boolean {\n        return /^ja/.test(this.locale)\n    }\n    public putSpeechText (text: string): this {\n        this.contents.speechText = text\n        return this\n    }\n    public putRepromptText (text: string): this {\n        this.contents.repromptText = text\n        return this\n    }\n    public putDirectives (directives: Directive[]): this {\n        if (!this.contents.directives) {\n            this.contents.directives = directives\n            return this\n        }\n        this.contents.directives = this.contents.directives.concat(directives)\n        return this\n    }\n    public putDirective (directive: Directive): this {\n        if (!this.contents.directives) {\n            this.contents.directives = [directive]\n            return this\n        }\n        this.contents.directives.push(directive)\n        return this\n    }\n    public getResponse (): Response {\n        const { speechText, repromptText, directives } = this.contents\n        if (speechText) this.responseBuilder.speak(speechText)\n        if (repromptText) this.responseBuilder.reprompt(repromptText)\n        if (directives) directives.forEach((directive): ResponseBuilder => this.responseBuilder.addDirective(directive))\n        return this.responseBuilder.getResponse()\n    }\n}\nexport default ContentBuilder\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ContentBuilder-1.html":{"url":"classes/ContentBuilder-1.html","title":"class - ContentBuilder-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ContentBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/isp/libs/contentBuilders/base.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                contents\n                            \n                            \n                                    Protected\n                                locale\n                            \n                            \n                                    Protected\n                                responseBuilder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getResponse\n                            \n                            \n                                    Protected\n                                isJP\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(locale: string, responseBuilder: ResponseBuilder)\n                    \n                \n                        \n                            \n                                Defined in packages/isp/libs/contentBuilders/base.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        locale\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        responseBuilder\n                                                  \n                                                        \n                                                                        ResponseBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            contents\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ResponseContent\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in packages/isp/libs/contentBuilders/base.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            locale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/isp/libs/contentBuilders/base.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            responseBuilder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ResponseBuilder\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/isp/libs/contentBuilders/base.ts:14\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getResponse()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/base.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Response\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isJP\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isJP()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/base.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { services, Response, Directive } from 'ask-sdk-model'\nimport { ResponseBuilder } from 'ask-sdk-core'\n\nimport InSkillProduct = services.monetization.InSkillProduct\n\nexport interface ResponseContent {\n    speechText?: string;\n    repromptText?: string;\n    directive?: Directive;\n}\n\nexport class ContentBuilder {\n    protected locale: string\n    protected responseBuilder: ResponseBuilder\n    protected contents: ResponseContent = {}\n    public constructor (locale: string, responseBuilder: ResponseBuilder) {\n        this.locale = locale\n        this.responseBuilder = responseBuilder\n    }\n    protected isJP (): boolean {\n        return /^ja/.test(this.locale)\n    }\n    public getResponse (): Response {\n        const { speechText, repromptText, directive } = this.contents\n        if (speechText) this.responseBuilder.speak(speechText)\n        if (repromptText) this.responseBuilder.reprompt(repromptText)\n        if (directive) this.responseBuilder.addDirective(directive)\n        return this.responseBuilder.getResponse()\n    }\n}\n\nexport class ISPContentBuilder extends ContentBuilder {\n    protected productName?: string\n    protected product?: InSkillProduct\n    public constructor (locale: string, responseBuilder: ResponseBuilder, productName?: string, product?: InSkillProduct) {\n        super(locale, responseBuilder)\n        if (productName) this.productName = productName\n        if (product) this.product = product\n    }\n    public setProduct (product: InSkillProduct): this {\n        this.product = product\n        return this\n    }\n    protected getProduct (): InSkillProduct {\n        const { product } = this\n        if (!product) throw new Error('No products')\n        return product\n    }\n    public setProductName (name: string): this {\n        this.productName = name\n        return this\n    }\n    protected getProductName (): string {\n        if (!this.productName) throw new Error('No product name')\n        return this.productName\n    }\n    /**\n   * If the device or account does not supports ISP\n   */\n    private getUnSupportedISPResponse (): ResponseContent {\n        if (this.isJP()) {\n            return {\n                speechText: [\n                    'すみません。',\n                    'お使いのデバイス・アプリでは、スキル内課金を利用することができません。',\n                    '別のデバイスを利用するか、アレクサアプリから設定を確認してもう一度お試しください。',\n                    '次はなにをしますか？',\n                    'スキルを終了して、アプリの設定を確認したい場合は「終了」と話しかけてください。'\n                ].join(' '),\n                repromptText: [\n                    '次はなにをしますか？',\n                    'スキルを終了して、アプリの設定を確認したい場合は「終了」と話しかけてください。'\n                ].join(' ')\n            }\n        }\n        return {\n            speechText: [\n                'Sorry, you can not purchase by the device.',\n                'Please check your device and application settings by the Alexa app.',\n                'What will you do the next?'\n            ].join(' '),\n            repromptText: [\n                'What will you do the next?',\n                'If you want to stop the skill, please say me \"STOP\".'\n            ].join(' ')\n        }\n    }\n    public setUnSupportedISPResponse (): this {\n        this.contents = this.getUnSupportedISPResponse()\n        return this\n    }\n    /**\n   * Product does not found response\n   */\n    private getProductsNotFoundResponse (): ResponseContent {\n        if (this.isJP()) {\n            return {\n                speechText: [\n                    `すみません。商品が見つかりませんでした。`,\n                    '他に何をしますか？'\n                ].join(' '),\n                repromptText: '他に何をしますか？'\n            }\n        }\n        return {\n            speechText: `I can't find any products you can buy. What do you want to do next?`,\n            repromptText: `What do you want to do next?`\n        }\n    }\n    public setProductsNotFoundResponse (): this {\n        this.contents = this.getProductsNotFoundResponse()\n        return this\n    }\n    /**\n   * Product does not found response\n   */\n    private getProductNotFoundResponse (): ResponseContent {\n        try {\n            const productName = this.getProductName()\n            if (this.isJP()) {\n                return {\n                    speechText: [\n                        `${productName}を購入することができます。`,\n                        `詳細を聞きたい場合は「${productName}について教えて」、`,\n                        `購入する場合は「${productName}を購入」と話しかけてください。`,\n                        'どうしますか？'\n                    ].join(' '),\n                    repromptText: '購入・詳細、どちらにしますか？'\n                }\n            }\n            return {\n                speechText: `${productName}. what item do you want?`,\n                repromptText: `${productName}. what item do you want?`\n            }\n        } catch (e) {\n            return this.getProductsNotFoundResponse()\n        }\n    }\n    public setProductNotFoundResponse (): this {\n        this.contents = this.getProductNotFoundResponse()\n        return this\n    }\n    /**\n   * If product not found\n   */\n    private getCanNotBuyTheProductResponse (): ResponseContent {\n        if (this.isJP()) {\n            return {\n                speechText: 'すみません。その商品は現在購入できません。他に何をしますか？',\n                repromptText: '他に何をしますか？'\n            }\n        }\n        return {\n            speechText: \"I don't think we have a product by that name.  Can you try again?\",\n            repromptText: \"I didn't catch that. Can you try again?\"\n        }\n    }\n    public setCanNotBuyTheProductResponse (): this {\n        this.contents = this.getCanNotBuyTheProductResponse()\n        return this\n    }\n    /**\n   * If product already purchased\n   */\n    public getEntitledProductResponse (): ResponseContent {\n        if (this.isJP()) {\n            return {\n                speechText: 'その商品はすでに購入済の様子です。他に何をしますか？',\n                repromptText: '他に何をしますか？'\n            }\n        }\n        return {\n            speechText: 'You already entitled the product. What will you do for next?',\n            repromptText: 'What will you do for next?'\n        }\n    }\n    public setEntitledProductResponse (): this {\n        this.contents = this.getEntitledProductResponse()\n        return this\n    }\n}\nexport default ISPContentBuilder\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ContextFactory.html":{"url":"classes/ContextFactory.html","title":"class - ContextFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ContextFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/test/libs/context/ContextFactory.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                context\n                            \n                            \n                                    Public\n                                    Readonly\n                                system\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getContext\n                            \n                            \n                                    Public\n                                putContext\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Context\n\n                        \n                    \n                    \n                        \n                            Default value : {\n        System: this.system.getSystem()\n    }\n                        \n                    \n                        \n                            \n                                    Defined in packages/test/libs/context/ContextFactory.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            system\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new SystemFactory()\n                        \n                    \n                        \n                            \n                                    Defined in packages/test/libs/context/ContextFactory.ts:7\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getContext\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getContext()\n                \n            \n\n\n            \n                \n                    Defined in packages/test/libs/context/ContextFactory.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Context\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putContext\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putContext(context: Context)\n                \n            \n\n\n            \n                \n                    Defined in packages/test/libs/context/ContextFactory.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            Context\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n    Context\n} from 'ask-sdk-core/node_modules/ask-sdk-model'\nimport { SystemFactory } from './SystemFactory'\n\nexport class ContextFactory {\n    public readonly system = new SystemFactory()\n    private context: Context = {\n        System: this.system.getSystem()\n    }\n\n    public putContext (context: Context): this {\n        this.context = context\n        return this\n    }\n\n    public getContext (): Context {\n        return {\n            ...this.context,\n            System: this.system.getSystem()\n        }\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreativeWork.html":{"url":"interfaces/CreativeWork.html","title":"interface - CreativeWork","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CreativeWork\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        contentType\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        contentType\n                                    \n                                \n                                \n                                    \n                                        contentType:         MediaType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MediaType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CustomHandlerInput.html":{"url":"interfaces/CustomHandlerInput.html","title":"interface - CustomHandlerInput","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CustomHandlerInput\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/handlers/libs/requestHandlers/HandlerFactory.ts\n        \n\n\n            \n                Extends\n            \n            \n                    HandlerInput\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        requestEnvelope\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        requestEnvelope\n                                    \n                                \n                                \n                                    \n                                        requestEnvelope:         CustomeRequestEnvelope\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CustomeRequestEnvelope\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { RequestHandler, HandlerInput } from 'ask-sdk-core'\nimport { Response, Request, RequestEnvelope } from 'ask-sdk-model'\nimport Resolver, { interfaces } from 'class-resolver'\nimport { isLaunchRequest } from 'ask-utils'\n\nexport interface TMergeTargetHandler {\n    canHandle?: (input: Input) => Promise | boolean;\n    handle?: (input: Input) => Promise | Output;\n}\nexport interface TRequestHandler {\n    canHandle: (input: Input) => Promise | boolean;\n    handle: (input: Input) => Promise | Output;\n}\nexport interface CustomeRequestEnvelope extends RequestEnvelope {\n    request: CustomRequest;\n}\nexport interface CustomHandlerInput extends HandlerInput {\n    requestEnvelope: CustomeRequestEnvelope;\n}\nexport interface RequestHandlerBuilder extends interfaces.ResolveTarget {\n    handle(handler: TMergeTargetHandler): TRequestHandler;\n}\n\nconst merge = (handler: TMergeTargetHandler, target?: TMergeTargetHandler): TRequestHandler => {\n    const fallBackHandler: RequestHandler = {\n        canHandle () {\n            return true\n        },\n        handle (handlerInput) {\n            return handlerInput.responseBuilder.getResponse()\n        }\n    }\n    return Object.assign({}, fallBackHandler, target, handler)\n}\n\nexport type SupportedHandlerType = 'LaunchRequest'\nexport class RequestHandlerFactory {\n    public static create (type: SupportedHandlerType, handler: TMergeTargetHandler): TRequestHandler {\n        return new Resolver(\n            new LaunchRequestHandlerFactory(),\n            new FallbackIntentFactory()\n        ).resolve(type).handle(handler)\n    }\n}\nexport default RequestHandlerFactory\n\nexport class LaunchRequestHandlerFactory implements RequestHandlerBuilder {\n    supports (type: string) {\n        return type === 'LaunchRequest'\n    }\n    handle (handler: TMergeTargetHandler) {\n        return merge(handler, {\n            canHandle (handlerInput) {\n                return isLaunchRequest(handlerInput)\n            }\n        })\n    }\n}\n\nexport class FallbackIntentFactory implements RequestHandlerBuilder {\n    supports () {\n        return true\n    }\n    handle (handler: TMergeTargetHandler) {\n        return merge(handler)\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CustomeRequestEnvelope.html":{"url":"interfaces/CustomeRequestEnvelope.html","title":"interface - CustomeRequestEnvelope","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CustomeRequestEnvelope\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/handlers/libs/requestHandlers/HandlerFactory.ts\n        \n\n\n            \n                Extends\n            \n            \n                    RequestEnvelope\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        request\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        request\n                                    \n                                \n                                \n                                    \n                                        request:     CustomRequest\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     CustomRequest\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { RequestHandler, HandlerInput } from 'ask-sdk-core'\nimport { Response, Request, RequestEnvelope } from 'ask-sdk-model'\nimport Resolver, { interfaces } from 'class-resolver'\nimport { isLaunchRequest } from 'ask-utils'\n\nexport interface TMergeTargetHandler {\n    canHandle?: (input: Input) => Promise | boolean;\n    handle?: (input: Input) => Promise | Output;\n}\nexport interface TRequestHandler {\n    canHandle: (input: Input) => Promise | boolean;\n    handle: (input: Input) => Promise | Output;\n}\nexport interface CustomeRequestEnvelope extends RequestEnvelope {\n    request: CustomRequest;\n}\nexport interface CustomHandlerInput extends HandlerInput {\n    requestEnvelope: CustomeRequestEnvelope;\n}\nexport interface RequestHandlerBuilder extends interfaces.ResolveTarget {\n    handle(handler: TMergeTargetHandler): TRequestHandler;\n}\n\nconst merge = (handler: TMergeTargetHandler, target?: TMergeTargetHandler): TRequestHandler => {\n    const fallBackHandler: RequestHandler = {\n        canHandle () {\n            return true\n        },\n        handle (handlerInput) {\n            return handlerInput.responseBuilder.getResponse()\n        }\n    }\n    return Object.assign({}, fallBackHandler, target, handler)\n}\n\nexport type SupportedHandlerType = 'LaunchRequest'\nexport class RequestHandlerFactory {\n    public static create (type: SupportedHandlerType, handler: TMergeTargetHandler): TRequestHandler {\n        return new Resolver(\n            new LaunchRequestHandlerFactory(),\n            new FallbackIntentFactory()\n        ).resolve(type).handle(handler)\n    }\n}\nexport default RequestHandlerFactory\n\nexport class LaunchRequestHandlerFactory implements RequestHandlerBuilder {\n    supports (type: string) {\n        return type === 'LaunchRequest'\n    }\n    handle (handler: TMergeTargetHandler) {\n        return merge(handler, {\n            canHandle (handlerInput) {\n                return isLaunchRequest(handlerInput)\n            }\n        })\n    }\n}\n\nexport class FallbackIntentFactory implements RequestHandlerBuilder {\n    supports () {\n        return true\n    }\n    handle (handler: TMergeTargetHandler) {\n        return merge(handler)\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DBClient.html":{"url":"classes/DBClient.html","title":"class - DBClient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DBClient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/libs/db.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                client\n                            \n                            \n                                    Protected\n                                isDebug\n                            \n                            \n                                    Protected\n                                primaryKey\n                            \n                            \n                                    Protected\n                                tableName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                get\n                            \n                            \n                                    Public\n                                    Async\n                                put\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(tableName: string, config?: DBConfig)\n                    \n                \n                        \n                            \n                                Defined in packages/core/libs/db.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tableName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        DBConfig\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            client\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         DocumentClient\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/libs/db.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            isDebug\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/libs/db.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            primaryKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/libs/db.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            tableName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/libs/db.ts:16\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(id: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/core/libs/db.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            put\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    put(id: string, attributes: DBItem)\n                \n            \n\n\n            \n                \n                    Defined in packages/core/libs/db.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    attributes\n                                    \n                                                DBItem\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { DynamoDB } from 'aws-sdk'\nimport DocumentClient = DynamoDB.DocumentClient\n\nexport interface DBItem {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    [key: string]: any;\n}\nexport interface DBConfig {\n    client?: DocumentClient;\n    isDebug?: boolean;\n    primaryKey?: string;\n}\nexport class DBClient {\n    protected client: DocumentClient\n    protected isDebug: boolean\n    protected tableName: string\n    protected primaryKey: string\n    public constructor (tableName: string, config?: DBConfig) {\n        this.client = config ? config.client || new DocumentClient() : new DocumentClient()\n        this.isDebug = config ? config.isDebug || false : false\n        this.primaryKey = config ? config.primaryKey || 'id' : 'id'\n        this.tableName = tableName\n    }\n    public async get (id: string): Promise {\n        const param: DocumentClient.GetItemInput = {\n            TableName: this.tableName,\n            Key: {\n                [this.primaryKey]: id\n            }\n        }\n        if (this.isDebug) console.log('DBClient.get: %j', param)\n        const { Item } = await this.client.get(param).promise()\n        if (this.isDebug) console.log('DBClient.get(): %j', Item)\n        if (!Item) return {}\n        return Item\n    }\n    public async put (id: string, attributes: DBItem): Promise {\n        const param: DocumentClient.PutItemInput = {\n            TableName: this.tableName,\n            Item: {\n                [this.primaryKey]: id,\n                ...attributes\n            }\n        }\n        if (this.isDebug) console.log('DBClient.put: %j', param)\n        const result = await this.client.put(param).promise()\n        if (this.isDebug) console.log('DBClient.put: %j', result)\n        return result\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DBConfig.html":{"url":"interfaces/DBConfig.html","title":"interface - DBConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DBConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/libs/db.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        client\n                                \n                                \n                                            Optional\n                                        isDebug\n                                \n                                \n                                            Optional\n                                        primaryKey\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        client\n                                    \n                                \n                                \n                                    \n                                        client:         DocumentClient\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DocumentClient\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isDebug\n                                    \n                                \n                                \n                                    \n                                        isDebug:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        primaryKey\n                                    \n                                \n                                \n                                    \n                                        primaryKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { DynamoDB } from 'aws-sdk'\nimport DocumentClient = DynamoDB.DocumentClient\n\nexport interface DBItem {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    [key: string]: any;\n}\nexport interface DBConfig {\n    client?: DocumentClient;\n    isDebug?: boolean;\n    primaryKey?: string;\n}\nexport class DBClient {\n    protected client: DocumentClient\n    protected isDebug: boolean\n    protected tableName: string\n    protected primaryKey: string\n    public constructor (tableName: string, config?: DBConfig) {\n        this.client = config ? config.client || new DocumentClient() : new DocumentClient()\n        this.isDebug = config ? config.isDebug || false : false\n        this.primaryKey = config ? config.primaryKey || 'id' : 'id'\n        this.tableName = tableName\n    }\n    public async get (id: string): Promise {\n        const param: DocumentClient.GetItemInput = {\n            TableName: this.tableName,\n            Key: {\n                [this.primaryKey]: id\n            }\n        }\n        if (this.isDebug) console.log('DBClient.get: %j', param)\n        const { Item } = await this.client.get(param).promise()\n        if (this.isDebug) console.log('DBClient.get(): %j', Item)\n        if (!Item) return {}\n        return Item\n    }\n    public async put (id: string, attributes: DBItem): Promise {\n        const param: DocumentClient.PutItemInput = {\n            TableName: this.tableName,\n            Item: {\n                [this.primaryKey]: id,\n                ...attributes\n            }\n        }\n        if (this.isDebug) console.log('DBClient.put: %j', param)\n        const result = await this.client.put(param).promise()\n        if (this.isDebug) console.log('DBClient.put: %j', result)\n        return result\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DBItem.html":{"url":"interfaces/DBItem.html","title":"interface - DBItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DBItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/libs/db.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in packages/core/libs/db.ts:4\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { DynamoDB } from 'aws-sdk'\nimport DocumentClient = DynamoDB.DocumentClient\n\nexport interface DBItem {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    [key: string]: any;\n}\nexport interface DBConfig {\n    client?: DocumentClient;\n    isDebug?: boolean;\n    primaryKey?: string;\n}\nexport class DBClient {\n    protected client: DocumentClient\n    protected isDebug: boolean\n    protected tableName: string\n    protected primaryKey: string\n    public constructor (tableName: string, config?: DBConfig) {\n        this.client = config ? config.client || new DocumentClient() : new DocumentClient()\n        this.isDebug = config ? config.isDebug || false : false\n        this.primaryKey = config ? config.primaryKey || 'id' : 'id'\n        this.tableName = tableName\n    }\n    public async get (id: string): Promise {\n        const param: DocumentClient.GetItemInput = {\n            TableName: this.tableName,\n            Key: {\n                [this.primaryKey]: id\n            }\n        }\n        if (this.isDebug) console.log('DBClient.get: %j', param)\n        const { Item } = await this.client.get(param).promise()\n        if (this.isDebug) console.log('DBClient.get(): %j', Item)\n        if (!Item) return {}\n        return Item\n    }\n    public async put (id: string, attributes: DBItem): Promise {\n        const param: DocumentClient.PutItemInput = {\n            TableName: this.tableName,\n            Item: {\n                [this.primaryKey]: id,\n                ...attributes\n            }\n        }\n        if (this.isDebug) console.log('DBClient.put: %j', param)\n        const result = await this.client.put(param).promise()\n        if (this.isDebug) console.log('DBClient.put: %j', result)\n        return result\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DeviceAPIClient.html":{"url":"classes/DeviceAPIClient.html","title":"class - DeviceAPIClient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DeviceAPIClient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/serviceClients/libs/Devices.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Client\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                path\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                getCountryAndPostalCode\n                            \n                            \n                                    Public\n                                    Async\n                                getFullAddress\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '/v1/devices/'\n                        \n                    \n                        \n                            \n                                    Defined in packages/serviceClients/libs/Devices.ts:5\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getCountryAndPostalCode\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCountryAndPostalCode(deviceId: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/serviceClients/libs/Devices.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    deviceId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getFullAddress\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFullAddress(deviceId: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/serviceClients/libs/Devices.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    deviceId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { services } from 'ask-sdk-model'\nimport Client from './client'\n\nexport class DeviceAPIClient extends Client {\n    protected path = '/v1/devices/'\n    public async getCountryAndPostalCode (deviceId: string): Promise {\n        return this.get(`${deviceId}/settings/address/countryAndPostalCode`)\n    }\n    public async getFullAddress (deviceId: string): Promise {\n        return this.get(`${deviceId}/settings/address`)\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DynamoDBSkillConfig.html":{"url":"interfaces/DynamoDBSkillConfig.html","title":"interface - DynamoDBSkillConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  DynamoDBSkillConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ask-utils/libs/models.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseSkillConfig\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        persistanceType\n                                \n                                \n                                        tableName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        persistanceType\n                                    \n                                \n                                \n                                    \n                                        persistanceType:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tableName\n                                    \n                                \n                                \n                                    \n                                        tableName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n    RequestInterceptor,\n    ResponseInterceptor,\n    ErrorHandler,\n    RequestHandler\n} from 'ask-sdk'\nimport {\n    SkillConstants\n} from '@ask-utils/handlers'\n\ntype PersistanceType = 'DynamoDB' | 'S3'\ninterface BaseSkillConfig {\n    persistanceType: PersistanceType;\n    isISP?: boolean;\n    constants?: T;\n}\nexport interface S3SkillConfig extends BaseSkillConfig {\n    persistanceType: 'S3';\n    bucketName: string;\n    bucketPathPrefix: string;\n}\nexport interface DynamoDBSkillConfig extends BaseSkillConfig {\n    persistanceType: 'DynamoDB';\n    tableName: string;\n}\nexport type SkillConfig = S3SkillConfig | DynamoDBSkillConfig\nexport interface SkillHandlers {\n    requestHandlers: RequestHandler[];\n    requestInterceptors?: RequestInterceptor[];\n    responseInterceptors?: ResponseInterceptor[];\n    errorHandlers?: ErrorHandler[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ErrorHandlerBuilder.html":{"url":"interfaces/ErrorHandlerBuilder.html","title":"interface - ErrorHandlerBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ErrorHandlerBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/error-handlers/libs/index.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getHandler\n                                \n                                \n                                    setErrorResponse\n                                \n                                \n                                    setHandle\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHandler\n                        \n                        \n                    \n                \n            \n            \n                \ngetHandler()\n                \n            \n\n\n            \n                \n                    Defined in packages/error-handlers/libs/index.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorHandler\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setErrorResponse\n                        \n                        \n                    \n                \n            \n            \n                \nsetErrorResponse(speechText: string, repromptText: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/error-handlers/libs/index.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    speechText\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    repromptText\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ErrorHandlerBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setHandle\n                        \n                        \n                    \n                \n            \n            \n                \nsetHandle(handle: ErrorHandle)\n                \n            \n\n\n            \n                \n                    Defined in packages/error-handlers/libs/index.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    handle\n                                    \n                                                ErrorHandle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ErrorHandlerBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ErrorHandler, RequestInterceptor, HandlerInput } from 'ask-sdk-core'\nimport { Response } from 'ask-sdk-model'\nimport * as Sentry from '@sentry/node'\nSentry.init({ dsn: process.env.SENTRY_DNS as string })\n\nexport type ErrorHandle = (handlerInput: HandlerInput, error: Error) => Promise | Response\nexport interface ErrorHandlerBuilder {\n    getHandler(): ErrorHandler;\n    setHandle(handle: ErrorHandle): ErrorHandlerBuilder;\n    setErrorResponse(speechText: string, repromptText: string): ErrorHandlerBuilder;\n}\n/**\n * ErrorHandler Factory for Sentry\n *\n * @example Basic\n * ```typescript\n * const ErrorHandler = SentryErrorHandlerFactory.init().getHandler()\n * ```\n * @example Custom speech and reprompt\n * ```typescript\n * const ErrorHandler = SentryErrorHandlerFactory.init()\n *                          .setErrorResponse('Speech something', 'reprompt something')\n *                          .getHandler()\n * ```\n * @example Custom handler\n * ```typescript\n * const ErrorHandler = SentryErrorHandlerFactory.init()\n *                          .setHandle((handlerInput) => {\n *                            return handlerInput.responseBuilder\n *                              .speak('Sorry I could not understand the meaning. Please tell me again')\n *                              .reprompt('Could you tell me onece more?')\n *                              .getResponse()\n *                          })\n *                          .getHandler()\n * ```\n */\nexport class SentryErrorHandlerFactory {\n    public static init (): ErrorHandlerBuilder {\n        let handlerFilter: ErrorHandle = (handlerInput) => {\n            return handlerInput.responseBuilder\n                .speak('Sorry I could not understand the meaning. Please tell me again')\n                .reprompt('Could you tell me onece more?')\n                .getResponse()\n        }\n\n        const handler: ErrorHandler = {\n            canHandle: () => true,\n            handle: (handlerInput, error) => {\n                Sentry.captureEvent({\n                    message: error.message,\n                    extra: {\n                        request: handlerInput.requestEnvelope,\n                        error,\n                        stack: error.stack\n                    }\n                })\n                return handlerFilter(handlerInput, error)\n            }\n        }\n        return {\n            getHandler (): ErrorHandler {\n                return handler\n            },\n            setHandle (handle: ErrorHandle) {\n                handlerFilter = handle\n                return this\n            },\n            setErrorResponse (speechText: string, repromptText: string) {\n                handlerFilter = (handlerInput) => {\n                    return handlerInput.responseBuilder\n                        .speak(speechText)\n                        .reprompt(repromptText)\n                        .getResponse()\n                }\n                return this\n            }\n        }\n    }\n}\n\nexport const SentryDefaultErrorHandler: ErrorHandler = SentryErrorHandlerFactory.init().getHandler()\n\n/**\n * Set additional track information\n *\n * @example\n * import Alexa from 'ask-sdk'\n * import { SetErrorTrackerInterceptor, SentryDefaultErrorHandler } from '@ask-utils/error-handlers'\n *\n * export const handler = Alexa.SkillBuilders.standard()\n *                            .addErrorHandlers(SentryDefaultErrorHandler)\n *                            .addRequestInterceptors(SetErrorTrackerInterceptor)\n *                            .lambda()\n */\nexport const SetErrorTrackerInterceptor: RequestInterceptor = {\n    process ({ requestEnvelope }) {\n        const { System } = requestEnvelope.context\n        const userParams: {[key: string]: string} = {\n            userId: System.user.userId\n        }\n        if (System.device) userParams.deviceId = System.device.deviceId\n        if (requestEnvelope.session) userParams.sessionId = requestEnvelope.session.sessionId\n\n        Sentry.configureScope(scope => {\n            scope.setTag('request_id', requestEnvelope.request.requestId)\n            scope.setUser(userParams)\n        })\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Factory.html":{"url":"interfaces/Factory.html","title":"interface - Factory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Factory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getLocalizedAttributes\n                                \n                                \n                                    putLocalizedAttribute\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLocalizedAttributes\n                        \n                        \n                    \n                \n            \n            \n                \ngetLocalizedAttributes()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:270\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Types.LocalizedAttributes\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            putLocalizedAttribute\n                        \n                        \n                    \n                \n            \n            \n                \nputLocalizedAttribute(locale: Types.Locale, key: string, text: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:269\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    locale\n                                    \n                                                Types.Locale\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Factory\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FallbackIntentFactory.html":{"url":"classes/FallbackIntentFactory.html","title":"class - FallbackIntentFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FallbackIntentFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/handlers/libs/requestHandlers/HandlerFactory.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            RequestHandlerBuilder\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                            \n                                supports\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handle\n                        \n                        \n                    \n                \n            \n            \n                \nhandle(handler: TMergeTargetHandler)\n                \n            \n\n\n            \n                \n                    Defined in packages/handlers/libs/requestHandlers/HandlerFactory.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    handler\n                                    \n                                                TMergeTargetHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TRequestHandler\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            supports\n                        \n                        \n                    \n                \n            \n            \n                \nsupports()\n                \n            \n\n\n            \n                \n                    Defined in packages/handlers/libs/requestHandlers/HandlerFactory.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { RequestHandler, HandlerInput } from 'ask-sdk-core'\nimport { Response, Request, RequestEnvelope } from 'ask-sdk-model'\nimport Resolver, { interfaces } from 'class-resolver'\nimport { isLaunchRequest } from 'ask-utils'\n\nexport interface TMergeTargetHandler {\n    canHandle?: (input: Input) => Promise | boolean;\n    handle?: (input: Input) => Promise | Output;\n}\nexport interface TRequestHandler {\n    canHandle: (input: Input) => Promise | boolean;\n    handle: (input: Input) => Promise | Output;\n}\nexport interface CustomeRequestEnvelope extends RequestEnvelope {\n    request: CustomRequest;\n}\nexport interface CustomHandlerInput extends HandlerInput {\n    requestEnvelope: CustomeRequestEnvelope;\n}\nexport interface RequestHandlerBuilder extends interfaces.ResolveTarget {\n    handle(handler: TMergeTargetHandler): TRequestHandler;\n}\n\nconst merge = (handler: TMergeTargetHandler, target?: TMergeTargetHandler): TRequestHandler => {\n    const fallBackHandler: RequestHandler = {\n        canHandle () {\n            return true\n        },\n        handle (handlerInput) {\n            return handlerInput.responseBuilder.getResponse()\n        }\n    }\n    return Object.assign({}, fallBackHandler, target, handler)\n}\n\nexport type SupportedHandlerType = 'LaunchRequest'\nexport class RequestHandlerFactory {\n    public static create (type: SupportedHandlerType, handler: TMergeTargetHandler): TRequestHandler {\n        return new Resolver(\n            new LaunchRequestHandlerFactory(),\n            new FallbackIntentFactory()\n        ).resolve(type).handle(handler)\n    }\n}\nexport default RequestHandlerFactory\n\nexport class LaunchRequestHandlerFactory implements RequestHandlerBuilder {\n    supports (type: string) {\n        return type === 'LaunchRequest'\n    }\n    handle (handler: TMergeTargetHandler) {\n        return merge(handler, {\n            canHandle (handlerInput) {\n                return isLaunchRequest(handlerInput)\n            }\n        })\n    }\n}\n\nexport class FallbackIntentFactory implements RequestHandlerBuilder {\n    supports () {\n        return true\n    }\n    handle (handler: TMergeTargetHandler) {\n        return merge(handler)\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FlashBriefingContent.html":{"url":"interfaces/FlashBriefingContent.html","title":"interface - FlashBriefingContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FlashBriefingContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/handlers/libs/flashbriefing.ts\n        \n\n            \n                Description\n            \n            \n                Flashbrieding feed contemts\nhttps://developer.amazon.com/docs/flashbriefing/flash-briefing-skill-api-feed-reference.html#details\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        mainText\n                                \n                                \n                                        redirectionUrl\n                                \n                                \n                                            Optional\n                                        streamUrl\n                                \n                                \n                                        titleText\n                                \n                                \n                                        uid\n                                \n                                \n                                        updateDate\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        mainText\n                                    \n                                \n                                \n                                    \n                                        mainText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        redirectionUrl\n                                    \n                                \n                                \n                                    \n                                        redirectionUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        streamUrl\n                                    \n                                \n                                \n                                    \n                                        streamUrl:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        titleText\n                                    \n                                \n                                \n                                    \n                                        titleText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        uid\n                                    \n                                \n                                \n                                    \n                                        uid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updateDate\n                                    \n                                \n                                \n                                    \n                                        updateDate:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface FlashBriefingContent {\n    uid: string;\n    updateDate: string;\n    titleText: string;\n    streamUrl?: string;\n    mainText: string;\n    redirectionUrl: string;\n}\nexport type FlashBriefings = FlashBriefingContent[]\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Game.html":{"url":"interfaces/Game.html","title":"interface - Game","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Game\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        name\n                                \n                                \n                                        offer\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        offer\n                                    \n                                \n                                \n                                    \n                                        offer:         OfferType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OfferType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GameInvite.html":{"url":"interfaces/GameInvite.html","title":"interface - GameInvite","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GameInvite\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        inviter\n                                \n                                \n                                        inviteType\n                                \n                                \n                                        relationshipToInvitee\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        inviter\n                                    \n                                \n                                \n                                    \n                                        inviter:         Person\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Person\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inviteType\n                                    \n                                \n                                \n                                    \n                                        inviteType:         InviteType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         InviteType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        relationshipToInvitee\n                                    \n                                \n                                \n                                    \n                                        relationshipToInvitee:         RelationshipToInvitee\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RelationshipToInvitee\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GameStatistic.html":{"url":"interfaces/GameStatistic.html","title":"interface - GameStatistic","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GameStatistic\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        score\n                                \n                                \n                                        team\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        score\n                                    \n                                \n                                \n                                    \n                                        score:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        team\n                                    \n                                \n                                \n                                    \n                                        team:         SportsTeam\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SportsTeam\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Goal.html":{"url":"interfaces/Goal.html","title":"interface - Goal","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Goal\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        scoreEarned\n                                \n                                \n                                        teamName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        scoreEarned\n                                    \n                                \n                                \n                                    \n                                        scoreEarned:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        teamName\n                                    \n                                \n                                \n                                    \n                                        teamName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HandlerBuilder.html":{"url":"classes/HandlerBuilder.html","title":"class - HandlerBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HandlerBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/isp/libs/handlers/fixtures.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                canHandle\n                            \n                            \n                                    Protected\n                                canHandleFilter\n                            \n                            \n                                    Public\n                                handle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getHandler\n                            \n                            \n                                    Public\n                                replaceHandler\n                            \n                            \n                                    Public\n                                setHandle\n                            \n                            \n                                    Public\n                                setHandleCondition\n                            \n                            \n                                    Public\n                                updateHandler\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            canHandle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CanHandle\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in packages/isp/libs/handlers/fixtures.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            canHandleFilter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CanHandle\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in packages/isp/libs/handlers/fixtures.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            handle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Handle\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in packages/isp/libs/handlers/fixtures.ts:11\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getHandler\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getHandler()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/handlers/fixtures.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     RequestHandler\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            replaceHandler\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    replaceHandler(handler: Partial)\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/handlers/fixtures.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    handler\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setHandle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setHandle(handle: Handle)\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/handlers/fixtures.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    handle\n                                    \n                                                Handle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setHandleCondition\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setHandleCondition(condition: CanHandle)\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/handlers/fixtures.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                CanHandle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateHandler\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateHandler(condition: CanHandle, handle: Handle)\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/handlers/fixtures.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                CanHandle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    handle\n                                    \n                                                Handle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { RequestHandler, HandlerInput } from 'ask-sdk-core'\nimport { Response } from 'ask-sdk-model'\n\nexport type CanHandle = (handlerInput: HandlerInput) => Promise | boolean\nexport type Handle = (handlerInput: HandlerInput) => Promise | Response\nexport class HandlerBuilder {\n    protected canHandleFilter: CanHandle = () => true\n    public canHandle: CanHandle = (handlerInput) => {\n        return this.canHandleFilter(handlerInput)\n    }\n    public handle: Handle = (handlerInput) => {\n        throw new Error(`Unsupported request: ${JSON.stringify(handlerInput)}`)\n    }\n    public setHandleCondition (condition: CanHandle): this {\n        this.canHandleFilter = condition\n        return this\n    }\n    public setHandle (handle: Handle): this {\n        this.handle = handle\n        return this\n    }\n    public updateHandler (condition: CanHandle, handle: Handle): this {\n        this.setHandle(handle)\n        this.setHandleCondition(condition)\n        return this\n    }\n    public replaceHandler (handler: Partial): this {\n        if (handler.canHandle) this.setHandleCondition(handler.canHandle)\n        if (handler.handle) this.setHandle(handler.handle)\n        return this\n    }\n    public getHandler (): RequestHandler {\n        return {\n            canHandle: this.canHandle,\n            handle: this.handle\n        }\n    }\n}\nexport class HandlerFactory {\n    public static init () {\n        const builder = new HandlerBuilder()\n        return builder\n    }\n}\nexport default HandlerFactory\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HandlerBuilder-1.html":{"url":"classes/HandlerBuilder-1.html","title":"class - HandlerBuilder-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HandlerBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/handlers/libs/requestHandlers/factories/Base.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            HandlerBuilderInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                canHandle\n                            \n                            \n                                    Protected\n                                canHandleFilter\n                            \n                            \n                                    Public\n                                handle\n                            \n                            \n                                    Protected\n                                handlerFilter\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getHandler\n                            \n                            \n                                    Public\n                                replaceHandler\n                            \n                            \n                                    Public\n                                setHandle\n                            \n                            \n                                    Public\n                                setHandleCondition\n                            \n                            \n                                    Public\n                                updateHandler\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            canHandle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CanHandle\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in packages/handlers/libs/requestHandlers/factories/Base.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            canHandleFilter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CanHandle\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in packages/handlers/libs/requestHandlers/factories/Base.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            handle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Handle\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in packages/handlers/libs/requestHandlers/factories/Base.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            handlerFilter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Handle\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in packages/handlers/libs/requestHandlers/factories/Base.ts:8\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getHandler\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getHandler()\n                \n            \n\n\n            \n                \n                    Defined in packages/handlers/libs/requestHandlers/factories/Base.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     RequestHandler\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            replaceHandler\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    replaceHandler(handler: Partial)\n                \n            \n\n\n            \n                \n                    Defined in packages/handlers/libs/requestHandlers/factories/Base.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    handler\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setHandle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setHandle(handle: Handle)\n                \n            \n\n\n            \n                \n                    Defined in packages/handlers/libs/requestHandlers/factories/Base.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    handle\n                                    \n                                                Handle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setHandleCondition\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setHandleCondition(condition: CanHandle)\n                \n            \n\n\n            \n                \n                    Defined in packages/handlers/libs/requestHandlers/factories/Base.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                CanHandle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateHandler\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateHandler(condition: CanHandle, handle: Handle)\n                \n            \n\n\n            \n                \n                    Defined in packages/handlers/libs/requestHandlers/factories/Base.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                CanHandle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    handle\n                                    \n                                                Handle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { RequestHandler } from 'ask-sdk-core'\nimport {\n    CanHandle, Handle, HandlerBuilderInterface,\n    CanHandleResponse, HandleResponse\n} from './model'\nexport class HandlerBuilder implements HandlerBuilderInterface {\n    protected canHandleFilter: CanHandle = (): CanHandleResponse => true\n    protected handlerFilter: Handle = (handlerInput): HandleResponse => { throw new Error(`Unsupported request: ${JSON.stringify(handlerInput)}`) }\n    public canHandle: CanHandle = (handlerInput): CanHandleResponse => {\n        return this.canHandleFilter(handlerInput)\n    }\n    public handle: Handle = (handlerInput): HandleResponse => {\n        return this.handlerFilter(handlerInput)\n    }\n    public setHandleCondition (condition: CanHandle): this {\n        this.canHandleFilter = condition\n        return this\n    }\n    public setHandle (handle: Handle): this {\n        this.handlerFilter = handle\n        return this\n    }\n    public updateHandler (condition: CanHandle, handle: Handle): this {\n        this.setHandle(handle)\n        this.setHandleCondition(condition)\n        return this\n    }\n    public replaceHandler (handler: Partial): this {\n        if (handler.canHandle) this.setHandleCondition(handler.canHandle)\n        if (handler.handle) this.setHandle(handler.handle)\n        return this\n    }\n    public getHandler (): RequestHandler {\n        return {\n            canHandle: this.canHandle,\n            handle: this.handle\n        }\n    }\n}\nexport default HandlerBuilder\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HandlerBuilderInterface.html":{"url":"interfaces/HandlerBuilderInterface.html","title":"interface - HandlerBuilderInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  HandlerBuilderInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/handlers/libs/requestHandlers/factories/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        canHandle\n                                \n                                \n                                        handle\n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getHandler\n                                \n                                \n                                    replaceHandler\n                                \n                                \n                                    setHandle\n                                \n                                \n                                    setHandleCondition\n                                \n                                \n                                    updateHandler\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHandler\n                        \n                        \n                    \n                \n            \n            \n                \ngetHandler()\n                \n            \n\n\n            \n                \n                    Defined in packages/handlers/libs/requestHandlers/factories/model.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     RequestHandler\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            replaceHandler\n                        \n                        \n                    \n                \n            \n            \n                \nreplaceHandler(handler: Partial)\n                \n            \n\n\n            \n                \n                    Defined in packages/handlers/libs/requestHandlers/factories/model.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    handler\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         HandlerBuilderInterface\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setHandle\n                        \n                        \n                    \n                \n            \n            \n                \nsetHandle(handle: Handle)\n                \n            \n\n\n            \n                \n                    Defined in packages/handlers/libs/requestHandlers/factories/model.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    handle\n                                    \n                                                Handle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         HandlerBuilderInterface\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setHandleCondition\n                        \n                        \n                    \n                \n            \n            \n                \nsetHandleCondition(condition: CanHandle)\n                \n            \n\n\n            \n                \n                    Defined in packages/handlers/libs/requestHandlers/factories/model.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                CanHandle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         HandlerBuilderInterface\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateHandler\n                        \n                        \n                    \n                \n            \n            \n                \nupdateHandler(condition: CanHandle, handle: Handle)\n                \n            \n\n\n            \n                \n                    Defined in packages/handlers/libs/requestHandlers/factories/model.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                CanHandle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    handle\n                                    \n                                                Handle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         HandlerBuilderInterface\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        canHandle\n                                    \n                                \n                                \n                                    \n                                        canHandle:         CanHandle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         CanHandle\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        handle\n                                    \n                                \n                                \n                                    \n                                        handle:         Handle\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Handle\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { RequestHandler, HandlerInput } from 'ask-sdk-core'\nimport { Response } from 'ask-sdk-model'\n\nexport type CanHandleResponse = Promise | boolean\nexport type HandleResponse = Promise | Response\nexport type CanHandle = (handlerInput: HandlerInput) => CanHandleResponse\nexport type Handle = (handlerInput: HandlerInput) => Promise | Response\nexport interface HandlerBuilderInterface {\n    canHandle: CanHandle;\n    handle: Handle;\n    setHandleCondition(condition: CanHandle): HandlerBuilderInterface;\n    setHandle(handle: Handle): HandlerBuilderInterface;\n    updateHandler(condition: CanHandle, handle: Handle): HandlerBuilderInterface;\n    replaceHandler(handler: Partial): HandlerBuilderInterface;\n    getHandler(): RequestHandler;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HandlerFactory.html":{"url":"classes/HandlerFactory.html","title":"class - HandlerFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HandlerFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/isp/libs/handlers/fixtures.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/handlers/fixtures.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         HandlerBuilder\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { RequestHandler, HandlerInput } from 'ask-sdk-core'\nimport { Response } from 'ask-sdk-model'\n\nexport type CanHandle = (handlerInput: HandlerInput) => Promise | boolean\nexport type Handle = (handlerInput: HandlerInput) => Promise | Response\nexport class HandlerBuilder {\n    protected canHandleFilter: CanHandle = () => true\n    public canHandle: CanHandle = (handlerInput) => {\n        return this.canHandleFilter(handlerInput)\n    }\n    public handle: Handle = (handlerInput) => {\n        throw new Error(`Unsupported request: ${JSON.stringify(handlerInput)}`)\n    }\n    public setHandleCondition (condition: CanHandle): this {\n        this.canHandleFilter = condition\n        return this\n    }\n    public setHandle (handle: Handle): this {\n        this.handle = handle\n        return this\n    }\n    public updateHandler (condition: CanHandle, handle: Handle): this {\n        this.setHandle(handle)\n        this.setHandleCondition(condition)\n        return this\n    }\n    public replaceHandler (handler: Partial): this {\n        if (handler.canHandle) this.setHandleCondition(handler.canHandle)\n        if (handler.handle) this.setHandle(handler.handle)\n        return this\n    }\n    public getHandler (): RequestHandler {\n        return {\n            canHandle: this.canHandle,\n            handle: this.handle\n        }\n    }\n}\nexport class HandlerFactory {\n    public static init () {\n        const builder = new HandlerBuilder()\n        return builder\n    }\n}\nexport default HandlerFactory\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HandlerFactory-1.html":{"url":"classes/HandlerFactory-1.html","title":"class - HandlerFactory-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HandlerFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/handlers/libs/requestHandlers/factories/index.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    init(type: string, intentName?: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/handlers/libs/requestHandlers/factories/index.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    intentName\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         HandlerBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import HandlerBuilder from './Base'\nimport IntentHandlerBuilder from './Intent'\nimport LaunchRequestBuilder from './LaunchRequest'\nexport * from './Base'\nexport * from './Intent'\nexport * from './model'\n\nexport class IntentHandlerFactory {\n    public static init (intentName?: string): IntentHandlerBuilder {\n        if (!intentName) throw new Error('intentName is required')\n        return new IntentHandlerBuilder(intentName)\n    }\n}\n\nexport class HandlerFactory {\n    public static init (type: string, intentName?: string): HandlerBuilder {\n        if (type === 'IntentRequest') {\n            return IntentHandlerFactory.init(intentName)\n        }\n        return new HandlerBuilder()\n    }\n}\n\nexport class LaunchRequestFactory {\n    public static init (): HandlerBuilder {\n        return new LaunchRequestBuilder()\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/HandlerHelpers.html":{"url":"interfaces/HandlerHelpers.html","title":"interface - HandlerHelpers","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  HandlerHelpers\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/router/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        stateManager\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        stateManager\n                                    \n                                \n                                \n                                    \n                                        stateManager:         StateManager\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         StateManager\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HandlerInput } from 'ask-sdk'\nimport { Response, Request\n} from 'ask-sdk-core/node_modules/ask-sdk-model'\nimport { StateManager, State } from '@ask-utils/situation'\n\n/**\n * Router for ASK SDK v2\n */\nexport interface Situation {\n    state?: SituationState;\n    custom?: (input: HandlerInput) => boolean | Promise;\n    shouldEndSession?: boolean;\n}\n\ninterface SituationState {\n    current?: string;\n    next?: string;\n}\n\nexport interface HandlerHelpers {\n    stateManager: StateManager;\n}\nexport type RouterHandler = (handlerInput: HandlerInput, helpers: HandlerHelpers) => Response | Promise\n\nexport interface Router {\n    requestType: Request['type'];\n    intentName?: string;\n    situation?: Situation;\n    handler: RouterHandler;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HandlerInputFactory.html":{"url":"classes/HandlerInputFactory.html","title":"class - HandlerInputFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HandlerInputFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/test/libs/HandlerInput/HandlerInputFactory.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Optional\n                                apiClient\n                            \n                            \n                                    Protected\n                                    Optional\n                                persistenceAdapter\n                            \n                            \n                                    Protected\n                                RequestEnvelopeFactory\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                create\n                            \n                            \n                                    Private\n                                getServiceClientFactory\n                            \n                            \n                                    Public\n                                setApiClient\n                            \n                            \n                                    Public\n                                setPersistanceAdapter\n                            \n                            \n                                    Public\n                                updateRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(requestEnvelopeFactory: RequestEnvelopeFactory)\n                    \n                \n                        \n                            \n                                Defined in packages/test/libs/HandlerInput/HandlerInputFactory.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        requestEnvelopeFactory\n                                                  \n                                                        \n                                                                        RequestEnvelopeFactory\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Optional\n                            apiClient\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ApiClient\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/test/libs/HandlerInput/HandlerInputFactory.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Optional\n                            persistenceAdapter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     PersistenceAdapter\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/test/libs/HandlerInput/HandlerInputFactory.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            RequestEnvelopeFactory\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         RequestEnvelopeFactory\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/test/libs/HandlerInput/HandlerInputFactory.ts:19\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(context?: any)\n                \n            \n\n\n            \n                \n                    Defined in packages/test/libs/HandlerInput/HandlerInputFactory.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     HandlerInput\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getServiceClientFactory\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getServiceClientFactory()\n                \n            \n\n\n            \n                \n                    Defined in packages/test/libs/HandlerInput/HandlerInputFactory.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ServiceClientFactory | undefined\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setApiClient\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setApiClient(client: ApiClient)\n                \n            \n\n\n            \n                \n                    Defined in packages/test/libs/HandlerInput/HandlerInputFactory.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    client\n                                    \n                                                ApiClient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setPersistanceAdapter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setPersistanceAdapter(adapter: PersistenceAdapter)\n                \n            \n\n\n            \n                \n                    Defined in packages/test/libs/HandlerInput/HandlerInputFactory.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    adapter\n                                    \n                                            PersistenceAdapter\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateRequest(requestEnvelope: RequestEnvelope)\n                \n            \n\n\n            \n                \n                    Defined in packages/test/libs/HandlerInput/HandlerInputFactory.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    requestEnvelope\n                                    \n                                            RequestEnvelope\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n    HandlerInput, AttributesManagerFactory, ResponseFactory, PersistenceAdapter\n} from 'ask-sdk-core'\nimport {\n    services as coreService,\n} from 'ask-sdk-core/node_modules/ask-sdk-model'\nimport {\n    RequestEnvelope\n    // services\n} from 'ask-sdk-model'\nimport { RequestEnvelopeFactory } from '../RequestEnvelopeFactory';\n\nimport ServiceClientFactory = coreService.ServiceClientFactory // services.ServiceClientFactory;\nimport ApiClient = coreService.ApiClient;\n\nexport class HandlerInputFactory {\n    protected RequestEnvelopeFactory: RequestEnvelopeFactory;\n    protected persistenceAdapter?: PersistenceAdapter;\n    protected apiClient?: ApiClient;\n    public constructor(requestEnvelopeFactory: RequestEnvelopeFactory) {\n        this.RequestEnvelopeFactory = requestEnvelopeFactory\n    }\n\n    public setPersistanceAdapter (adapter: PersistenceAdapter): this {\n        this.persistenceAdapter = adapter\n        return this\n    }\n    public setApiClient (client: ApiClient): this {\n        this.apiClient = client\n        return this\n    }\n    public updateRequest (requestEnvelope: RequestEnvelope): this {\n        const {\n            request,\n            session,\n            context,\n        } = requestEnvelope\n        this.RequestEnvelopeFactory.request.putRequest(request)\n        if (session) this.RequestEnvelopeFactory.session.putSession(session)\n        this.RequestEnvelopeFactory.context.putContext(context)\n        return this\n    }\n    private getServiceClientFactory (): ServiceClientFactory | undefined {\n        const { apiClient } = this\n        const requestEnvelope = this.RequestEnvelopeFactory.getRequest()\n        const { apiAccessToken, apiEndpoint } = requestEnvelope.context.System\n        if (!apiClient || !apiAccessToken) return undefined\n        return new ServiceClientFactory({\n            apiClient: apiClient,\n            apiEndpoint: apiEndpoint,\n            authorizationValue: apiAccessToken\n        })\n    }\n    public create (context?: any): HandlerInput {\n        const requestEnvelope = this.RequestEnvelopeFactory.getRequest()\n        const input: HandlerInput = {\n            requestEnvelope,\n            context,\n            attributesManager: AttributesManagerFactory.init({\n                requestEnvelope,\n                persistenceAdapter: this.persistenceAdapter\n            }),\n            responseBuilder: ResponseFactory.init(),\n            serviceClientFactory: this.getServiceClientFactory()\n        }\n        return input\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ISPContentBuilder.html":{"url":"classes/ISPContentBuilder.html","title":"class - ISPContentBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ISPContentBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/isp/libs/contentBuilders/base.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ContentBuilder\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Optional\n                                product\n                            \n                            \n                                    Protected\n                                    Optional\n                                productName\n                            \n                            \n                                    Protected\n                                contents\n                            \n                            \n                                    Protected\n                                locale\n                            \n                            \n                                    Protected\n                                responseBuilder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getCanNotBuyTheProductResponse\n                            \n                            \n                                    Public\n                                getEntitledProductResponse\n                            \n                            \n                                    Protected\n                                getProduct\n                            \n                            \n                                    Protected\n                                getProductName\n                            \n                            \n                                    Private\n                                getProductNotFoundResponse\n                            \n                            \n                                    Private\n                                getProductsNotFoundResponse\n                            \n                            \n                                    Private\n                                getUnSupportedISPResponse\n                            \n                            \n                                    Public\n                                setCanNotBuyTheProductResponse\n                            \n                            \n                                    Public\n                                setEntitledProductResponse\n                            \n                            \n                                    Public\n                                setProduct\n                            \n                            \n                                    Public\n                                setProductName\n                            \n                            \n                                    Public\n                                setProductNotFoundResponse\n                            \n                            \n                                    Public\n                                setProductsNotFoundResponse\n                            \n                            \n                                    Public\n                                setUnSupportedISPResponse\n                            \n                            \n                                    Public\n                                getResponse\n                            \n                            \n                                    Protected\n                                isJP\n                            \n                            \n                                    Public\n                                putDirective\n                            \n                            \n                                    Public\n                                putDirectives\n                            \n                            \n                                    Public\n                                putRepromptText\n                            \n                            \n                                    Public\n                                putSpeechText\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(locale: string, responseBuilder: ResponseBuilder, productName?: string, product?: InSkillProduct)\n                    \n                \n                        \n                            \n                                Defined in packages/isp/libs/contentBuilders/base.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        locale\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        responseBuilder\n                                                  \n                                                        \n                                                                        ResponseBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        productName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        product\n                                                  \n                                                        \n                                                                        InSkillProduct\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Optional\n                            product\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         InSkillProduct\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/isp/libs/contentBuilders/base.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Optional\n                            productName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/isp/libs/contentBuilders/base.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            contents\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ResponseContent\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         ContentBuilder\n\n                                \n                            \n                        \n                            \n                                    Defined in         ContentBuilder:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            locale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ContentBuilder\n\n                                \n                            \n                        \n                            \n                                    Defined in         ContentBuilder:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            responseBuilder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ResponseBuilder\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ContentBuilder\n\n                                \n                            \n                        \n                            \n                                    Defined in         ContentBuilder:10\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getCanNotBuyTheProductResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCanNotBuyTheProductResponse()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/base.ts:146\n                \n            \n\n\n            \n                \n                    If product not found\n\n\n                    \n                        Returns :         ResponseContent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getEntitledProductResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getEntitledProductResponse()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/base.ts:165\n                \n            \n\n\n            \n                \n                    If product already purchased\n\n\n                    \n                        Returns :         ResponseContent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getProduct\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getProduct()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/base.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         InSkillProduct\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            getProductName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getProductName()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/base.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getProductNotFoundResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getProductNotFoundResponse()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/base.ts:117\n                \n            \n\n\n            \n                \n                    Product does not found response\n\n\n                    \n                        Returns :         ResponseContent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getProductsNotFoundResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getProductsNotFoundResponse()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/base.ts:95\n                \n            \n\n\n            \n                \n                    Product does not found response\n\n\n                    \n                        Returns :         ResponseContent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getUnSupportedISPResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUnSupportedISPResponse()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/base.ts:60\n                \n            \n\n\n            \n                \n                    If the device or account does not supports ISP\n\n\n                    \n                        Returns :         ResponseContent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setCanNotBuyTheProductResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setCanNotBuyTheProductResponse()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/base.ts:158\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setEntitledProductResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setEntitledProductResponse()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/base.ts:177\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setProduct\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setProduct(product: InSkillProduct)\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/base.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    product\n                                    \n                                                InSkillProduct\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setProductName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setProductName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/base.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setProductNotFoundResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setProductNotFoundResponse()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/base.ts:139\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setProductsNotFoundResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setProductsNotFoundResponse()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/base.ts:110\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setUnSupportedISPResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setUnSupportedISPResponse()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/base.ts:88\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getResponse()\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:43\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Response\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isJP\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isJP()\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:16\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putDirective\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putDirective(directive: Directive)\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:35\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    directive\n                                    \n                                                Directive\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putDirectives\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putDirectives(directives: Directive[])\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    directives\n                                    \n                                            Directive[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putRepromptText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putRepromptText(text: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:23\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putSpeechText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putSpeechText(text: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { services, Response, Directive } from 'ask-sdk-model'\nimport { ResponseBuilder } from 'ask-sdk-core'\n\nimport InSkillProduct = services.monetization.InSkillProduct\n\nexport interface ResponseContent {\n    speechText?: string;\n    repromptText?: string;\n    directive?: Directive;\n}\n\nexport class ContentBuilder {\n    protected locale: string\n    protected responseBuilder: ResponseBuilder\n    protected contents: ResponseContent = {}\n    public constructor (locale: string, responseBuilder: ResponseBuilder) {\n        this.locale = locale\n        this.responseBuilder = responseBuilder\n    }\n    protected isJP (): boolean {\n        return /^ja/.test(this.locale)\n    }\n    public getResponse (): Response {\n        const { speechText, repromptText, directive } = this.contents\n        if (speechText) this.responseBuilder.speak(speechText)\n        if (repromptText) this.responseBuilder.reprompt(repromptText)\n        if (directive) this.responseBuilder.addDirective(directive)\n        return this.responseBuilder.getResponse()\n    }\n}\n\nexport class ISPContentBuilder extends ContentBuilder {\n    protected productName?: string\n    protected product?: InSkillProduct\n    public constructor (locale: string, responseBuilder: ResponseBuilder, productName?: string, product?: InSkillProduct) {\n        super(locale, responseBuilder)\n        if (productName) this.productName = productName\n        if (product) this.product = product\n    }\n    public setProduct (product: InSkillProduct): this {\n        this.product = product\n        return this\n    }\n    protected getProduct (): InSkillProduct {\n        const { product } = this\n        if (!product) throw new Error('No products')\n        return product\n    }\n    public setProductName (name: string): this {\n        this.productName = name\n        return this\n    }\n    protected getProductName (): string {\n        if (!this.productName) throw new Error('No product name')\n        return this.productName\n    }\n    /**\n   * If the device or account does not supports ISP\n   */\n    private getUnSupportedISPResponse (): ResponseContent {\n        if (this.isJP()) {\n            return {\n                speechText: [\n                    'すみません。',\n                    'お使いのデバイス・アプリでは、スキル内課金を利用することができません。',\n                    '別のデバイスを利用するか、アレクサアプリから設定を確認してもう一度お試しください。',\n                    '次はなにをしますか？',\n                    'スキルを終了して、アプリの設定を確認したい場合は「終了」と話しかけてください。'\n                ].join(' '),\n                repromptText: [\n                    '次はなにをしますか？',\n                    'スキルを終了して、アプリの設定を確認したい場合は「終了」と話しかけてください。'\n                ].join(' ')\n            }\n        }\n        return {\n            speechText: [\n                'Sorry, you can not purchase by the device.',\n                'Please check your device and application settings by the Alexa app.',\n                'What will you do the next?'\n            ].join(' '),\n            repromptText: [\n                'What will you do the next?',\n                'If you want to stop the skill, please say me \"STOP\".'\n            ].join(' ')\n        }\n    }\n    public setUnSupportedISPResponse (): this {\n        this.contents = this.getUnSupportedISPResponse()\n        return this\n    }\n    /**\n   * Product does not found response\n   */\n    private getProductsNotFoundResponse (): ResponseContent {\n        if (this.isJP()) {\n            return {\n                speechText: [\n                    `すみません。商品が見つかりませんでした。`,\n                    '他に何をしますか？'\n                ].join(' '),\n                repromptText: '他に何をしますか？'\n            }\n        }\n        return {\n            speechText: `I can't find any products you can buy. What do you want to do next?`,\n            repromptText: `What do you want to do next?`\n        }\n    }\n    public setProductsNotFoundResponse (): this {\n        this.contents = this.getProductsNotFoundResponse()\n        return this\n    }\n    /**\n   * Product does not found response\n   */\n    private getProductNotFoundResponse (): ResponseContent {\n        try {\n            const productName = this.getProductName()\n            if (this.isJP()) {\n                return {\n                    speechText: [\n                        `${productName}を購入することができます。`,\n                        `詳細を聞きたい場合は「${productName}について教えて」、`,\n                        `購入する場合は「${productName}を購入」と話しかけてください。`,\n                        'どうしますか？'\n                    ].join(' '),\n                    repromptText: '購入・詳細、どちらにしますか？'\n                }\n            }\n            return {\n                speechText: `${productName}. what item do you want?`,\n                repromptText: `${productName}. what item do you want?`\n            }\n        } catch (e) {\n            return this.getProductsNotFoundResponse()\n        }\n    }\n    public setProductNotFoundResponse (): this {\n        this.contents = this.getProductNotFoundResponse()\n        return this\n    }\n    /**\n   * If product not found\n   */\n    private getCanNotBuyTheProductResponse (): ResponseContent {\n        if (this.isJP()) {\n            return {\n                speechText: 'すみません。その商品は現在購入できません。他に何をしますか？',\n                repromptText: '他に何をしますか？'\n            }\n        }\n        return {\n            speechText: \"I don't think we have a product by that name.  Can you try again?\",\n            repromptText: \"I didn't catch that. Can you try again?\"\n        }\n    }\n    public setCanNotBuyTheProductResponse (): this {\n        this.contents = this.getCanNotBuyTheProductResponse()\n        return this\n    }\n    /**\n   * If product already purchased\n   */\n    public getEntitledProductResponse (): ResponseContent {\n        if (this.isJP()) {\n            return {\n                speechText: 'その商品はすでに購入済の様子です。他に何をしますか？',\n                repromptText: '他に何をしますか？'\n            }\n        }\n        return {\n            speechText: 'You already entitled the product. What will you do for next?',\n            repromptText: 'What will you do for next?'\n        }\n    }\n    public setEntitledProductResponse (): this {\n        this.contents = this.getEntitledProductResponse()\n        return this\n    }\n}\nexport default ISPContentBuilder\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ISPProductClient.html":{"url":"classes/ISPProductClient.html","title":"class - ISPProductClient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ISPProductClient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/isp/libs/client.ts\n        \n\n\n            \n                Extends\n            \n            \n                        APIClient\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                attributeManager\n                            \n                            \n                                    Private\n                                cacheUsage\n                            \n                            \n                                    Private\n                                products\n                            \n                            \n                                    Private\n                                endpoint\n                            \n                            \n                                    Private\n                                isDebug\n                            \n                            \n                                    Private\n                                locale\n                            \n                            \n                                    Private\n                                token\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                disabledCache\n                            \n                            \n                                    Public\n                                enableCache\n                            \n                            \n                                    Public\n                                    Async\n                                fetchLists\n                            \n                            \n                                    Public\n                                    Async\n                                findProductById\n                            \n                            \n                                    Public\n                                    Async\n                                findProductByName\n                            \n                            \n                                    Public\n                                    Async\n                                findProductByNo\n                            \n                            \n                                    Private\n                                getCachedProducts\n                            \n                            \n                                    Public\n                                getCacheStatus\n                            \n                            \n                                    Public\n                                    Async\n                                getProductById\n                            \n                            \n                                    Public\n                                    Async\n                                getProducts\n                            \n                            \n                                    Private\n                                    Async\n                                hasProducts\n                            \n                            \n                                    Public\n                                    Async\n                                searchProduct\n                            \n                            \n                                    Private\n                                createAxiosRequestObject\n                            \n                            \n                                    Protected\n                                    Async\n                                get\n                            \n                            \n                                    Public\n                                getProduct\n                            \n                            \n                                    Private\n                                getURL\n                            \n                            \n                                    Public\n                                listProducts\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(handlerInput: HandlerInput, isDebug: boolean)\n                    \n                \n                        \n                            \n                                Defined in packages/isp/libs/client.ts:54\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        handlerInput\n                                                  \n                                                        \n                                                                    HandlerInput\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        isDebug\n                                                  \n                                                        \n                                                                        boolean\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            attributeManager\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AttributesManager\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/isp/libs/client.ts:52\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            cacheUsage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     \"enable\" | \"disable\"\n\n                        \n                    \n                    \n                        \n                            Default value : 'enable'\n                        \n                    \n                        \n                            \n                                    Defined in packages/isp/libs/client.ts:53\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            products\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         InskillProducts\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in packages/isp/libs/client.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            endpoint\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         APIClient\n\n                                \n                            \n                        \n                            \n                                    Defined in         APIClient:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            isDebug\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from         APIClient\n\n                                \n                            \n                        \n                            \n                                    Defined in         APIClient:12\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            locale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         APIClient\n\n                                \n                            \n                        \n                            \n                                    Defined in         APIClient:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            token\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         APIClient\n\n                                \n                            \n                        \n                            \n                                    Defined in         APIClient:9\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            disabledCache\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    disabledCache()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/client.ts:66\n                \n            \n\n\n            \n                \n                    Disallow to use the session attributes item at first\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            enableCache\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    enableCache()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/client.ts:73\n                \n            \n\n\n            \n                \n                    Allow to use the session attributes item at first\n\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            fetchLists\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchLists()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/client.ts:100\n                \n            \n\n\n            \n                \n                    Fetch the ISP API.\nIf cacheUsage is enabled, it will return from session attributes at first\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            findProductById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findProductById(productId: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/client.ts:152\n                \n            \n\n\n            \n                \n                    Find product by the specific id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    productId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        product id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            findProductByName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findProductByName(productName: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/client.ts:163\n                \n            \n\n\n            \n                \n                    Find product by the product name\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    productName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        product name\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            findProductByNo\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findProductByNo(userInputNo: number)\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/client.ts:143\n                \n            \n\n\n            \n                \n                    Find product by the list number\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    userInputNo\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        list number\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getCachedProducts\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCachedProducts()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/client.ts:89\n                \n            \n\n\n            \n                \n                    get product from session attributes\n\n\n                    \n                        Returns :         InskillProducts\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getCacheStatus\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCacheStatus()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/client.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     \"enable\" | \"disable\"\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getProductById\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getProductById(productId: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/client.ts:120\n                \n            \n\n\n            \n                \n                    get product by product id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getProducts\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getProducts()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/client.ts:135\n                \n            \n\n\n            \n                \n                    get products\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            hasProducts\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasProducts()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/client.ts:81\n                \n            \n\n\n            \n                \n                    Check product avaliable status\nIf products is empty, try to fetch at once\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            searchProduct\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    searchProduct(condition: literal type)\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/client.ts:174\n                \n            \n\n\n            \n                \n                    Find product by several condition\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : string, userInputNo?: number, productId?: string} search conditions\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            createAxiosRequestObject\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createAxiosRequestObject(productId?: string)\n                \n            \n\n\n            \n                \n                    Inherited from         APIClient\n\n                \n            \n            \n                \n                        Defined in         APIClient:24\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productId\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     AxiosRequestConfig\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            Async\n                            get\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    get(productId?: string)\n                \n            \n\n\n            \n                \n                    Inherited from         APIClient\n\n                \n            \n            \n                \n                        Defined in         APIClient:36\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productId\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getProduct\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getProduct(productId: string)\n                \n            \n\n\n            \n                \n                    Inherited from         APIClient\n\n                \n            \n            \n                \n                        Defined in         APIClient:46\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getURL\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getURL(productId?: string)\n                \n            \n\n\n            \n                \n                    Inherited from         APIClient\n\n                \n            \n            \n                \n                        Defined in         APIClient:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productId\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            listProducts\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    listProducts()\n                \n            \n\n\n            \n                \n                    Inherited from         APIClient\n\n                \n            \n            \n                \n                        Defined in         APIClient:43\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import axios, { AxiosRequestConfig } from 'axios'\nimport { getLocale, getApiAccessToken, HandlerInput, AttributesManager } from 'ask-sdk-core'\nimport { RequestEnvelope, services } from 'ask-sdk-model'\nimport InSkillProductsResponse = services.monetization.InSkillProductsResponse\nimport InSkillProduct = services.monetization.InSkillProduct\ntype InskillProducts = InSkillProduct[]\n\nexport class APIClient {\n    private token: string\n    private locale: string\n    private endpoint: string\n    private isDebug: boolean\n    public constructor (requestEnvelope: RequestEnvelope, isDebug: boolean = true) {\n        this.token = getApiAccessToken(requestEnvelope)\n        this.locale = getLocale(requestEnvelope)\n        this.endpoint = requestEnvelope.context.System.apiEndpoint\n        this.isDebug = isDebug\n    }\n    private getURL (productId?: string): string {\n        const url = `${this.endpoint}/v1/users/~current/skills/~current/inSkillProducts`\n        if (!productId) return url\n        return `${url}/productId`\n    }\n    private createAxiosRequestObject (productId?: string): AxiosRequestConfig {\n        return {\n            method: 'GET',\n            url: this.getURL(productId),\n            headers: {\n                'Content-type': 'application/json',\n                'Accept-Language': this.locale,\n                'Authorization': `Bearer ${this.token}`\n            }\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    protected async get (productId?: string): Promise {\n        const param = this.createAxiosRequestObject(productId)\n        if (this.isDebug) console.log('[Get ISP product] %j', param)\n        const { data } = await axios(param)\n        if (this.isDebug) console.log('[Get ISP product] %j', data)\n        return data\n    }\n    public listProducts (): Promise {\n        return this.get()\n    }\n    public getProduct (productId: string): Promise {\n        return this.get(productId)\n    }\n}\n\nexport class ISPProductClient extends APIClient {\n    private attributeManager: AttributesManager\n    private cacheUsage: 'enable' | 'disable' = 'enable'\n    private products: InskillProducts = []\n    // eslint-disable-next-line @typescript-eslint/explicit-member-accessibility\n    constructor (handlerInput: HandlerInput, isDebug: boolean = true) {\n        super(handlerInput.requestEnvelope, isDebug)\n        this.attributeManager = handlerInput.attributesManager\n    }\n    public getCacheStatus (): 'enable' | 'disable' {\n        return this.cacheUsage\n    }\n    /**\n   * Disallow to use the session attributes item at first\n   **/\n    public disabledCache (): this {\n        this.cacheUsage = 'disable'\n        return this\n    }\n    /**\n   * Allow to use the session attributes item at first\n   **/\n    public enableCache (): this {\n        this.cacheUsage = 'enable'\n        return this\n    }\n    /**\n   * Check product avaliable status\n   * If products is empty, try to fetch at once\n   */\n    private async hasProducts (): Promise {\n        if (!this.products || this.products.length  0) {\n            this.products = products\n        }\n        return this.products\n    }\n    /**\n   * Fetch the ISP API.\n   * If cacheUsage is enabled, it will return from session attributes at first\n   */\n    public async fetchLists (): Promise {\n        const atts = this.attributeManager.getSessionAttributes()\n        if (this.cacheUsage === 'enable') {\n            const cachedProducts = this.getCachedProducts()\n            if (cachedProducts && cachedProducts.length > 0) {\n                return\n            }\n        }\n        const data = await this.get()\n        const products = data.inSkillProducts\n        this.products = products\n        this.attributeManager.setSessionAttributes({\n            ...atts,\n            products\n        })\n    }\n    /**\n   * get product by product id\n   * @param productId {string}\n   */\n    public async getProductById (productId: string): Promise {\n        if (this.cacheUsage === 'enable') {\n            const cachedProducts = this.getCachedProducts()\n            if (cachedProducts && cachedProducts.length > 0) {\n                // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n                const item = cachedProducts.find(cache => cache.productId === productId)\n                if (item) return item\n            }\n        }\n        const product = await this.get(productId)\n        return product\n    }\n    /**\n   * get products\n   */\n    public async getProducts (): Promise {\n        await this.fetchLists()\n        return this.products\n    }\n    /**\n   * Find product by the list number\n   * @param userInputNo {number} list number\n   */\n    public async findProductByNo (userInputNo: number): Promise {\n        if (!await this.hasProducts()) return null\n        const target = this.products[userInputNo]\n        return target\n    }\n    /**\n   * Find product by the specific id\n   * @param productId {string} product id\n   */\n    public async findProductById (productId: string): Promise {\n        if (!await this.hasProducts()) return null\n        // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n        const product = this.products.find(product => product.productId === productId)\n        if (!product) return null\n        return product\n    }\n    /**\n   * Find product by the product name\n   * @param productName {string} product name\n   */\n    public async findProductByName (productName: string): Promise {\n        if (!await this.hasProducts()) return null\n        // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n        const product = this.products.find(product => product.name === productName)\n        if (!product) return null\n        return product\n    }\n    /**\n   * Find product by several condition\n   * @param condition {productName?: string, userInputNo?: number, productId?: string} search conditions\n   */\n    public async searchProduct (condition: {productName?: string; userInputNo?: number; productId?: string}): Promise {\n        if (!condition.productName && !condition.userInputNo && !condition.productId) throw new Error('No search condition')\n        if (condition.userInputNo) return this.findProductByNo(condition.userInputNo)\n        if (condition.productName) return this.findProductByName(condition.productName)\n        if (condition.productId) return this.findProductById(condition.productId)\n        throw new Error('Invalid search condition')\n    }\n}\nexport default ISPProductClient\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/InitialState.html":{"url":"interfaces/InitialState.html","title":"interface - InitialState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  InitialState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/situationManager/libs/StateManager.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        current\n                                \n                                \n                                            Optional\n                                        next\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        current\n                                    \n                                \n                                \n                                    \n                                        current:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        next\n                                    \n                                \n                                \n                                    \n                                        next:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n    AttributesManager\n} from 'ask-sdk-core'\n\nexport type State = string\nexport interface SkillState {\n    current: T | '';\n    next?: T[];\n    before?: T[];\n}\nexport interface InitialState {\n    current?: T;\n    next?: T;\n}\nexport class StateManager {\n    public stateKey: string = '__state'\n    private state: SkillState;\n    private readonly attributeManager: AttributesManager\n    public constructor (attributeManager: AttributesManager, initialState?: InitialState) {\n        this.attributeManager = attributeManager\n        this.state = {\n            current: initialState && initialState.current ? initialState.current : '',\n            next: initialState && initialState.next ? [initialState.next] : []\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    private isState (state: any): state is SkillState {\n        return state && state.current\n    }\n    private mergeSessionAttributes (): this {\n        const { state, stateKey, attributeManager } = this\n        const attributes = {\n            ...attributeManager.getSessionAttributes(),\n            [stateKey]: state\n        }\n        attributeManager.setSessionAttributes(attributes)\n        return this\n    }\n    public setState (current: T, next?: T[], before?: T[]): this {\n        this.state = {\n            current,\n            next,\n            before\n        }\n        this.mergeSessionAttributes()\n        return this\n    }\n\n    public getState (): SkillState {\n        const { stateKey, attributeManager } = this\n\n        const attributes = attributeManager.getSessionAttributes()\n        const targetState = attributes[stateKey]\n        if (!this.isState(targetState)) {\n            this.mergeSessionAttributes()\n            const retryAtt = attributeManager.getSessionAttributes()\n            return retryAtt[stateKey]\n        }\n        return targetState\n    }\n\n    public hasState (): boolean {\n        const state = this.getState()\n        if (!state) return false\n        return state.current !== ''\n    }\n\n    public getCurrentState (): T | '' {\n        const targetState = this.getState()\n        return targetState.current\n    }\n\n    public getNextState (): T[] {\n        const targetState = this.getState()\n        return targetState.next || []\n    }\n\n    public getBeforeState (): T[] {\n        const targetState = this.getState()\n        return targetState.before || []\n    }\n\n    public matchedCurrentState (state: T): boolean {\n        return this.getCurrentState() === state\n    }\n    public includesNextState (state: T): boolean {\n        return this.getNextState().includes(state)\n    }\n    public includesBeforeState (state: T): boolean {\n        return this.getBeforeState().includes(state)\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IntentHandlerBuilder.html":{"url":"classes/IntentHandlerBuilder.html","title":"class - IntentHandlerBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IntentHandlerBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/handlers/libs/requestHandlers/factories/Intent.ts\n        \n\n\n            \n                Extends\n            \n            \n                        HandlerBuilder\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                canHandle\n                            \n                            \n                                    Protected\n                                intentName\n                            \n                            \n                                    Public\n                                canHandle\n                            \n                            \n                                    Protected\n                                canHandleFilter\n                            \n                            \n                                    Public\n                                handle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getHandler\n                            \n                            \n                                    Public\n                                replaceHandler\n                            \n                            \n                                    Public\n                                setHandle\n                            \n                            \n                                    Public\n                                setHandleCondition\n                            \n                            \n                                    Public\n                                updateHandler\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(intentName: string)\n                    \n                \n                        \n                            \n                                Defined in packages/handlers/libs/requestHandlers/factories/Intent.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        intentName\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            canHandle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CanHandle\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in packages/handlers/libs/requestHandlers/factories/Intent.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            intentName\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/handlers/libs/requestHandlers/factories/Intent.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            canHandle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CanHandle\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         HandlerBuilder\n\n                                \n                            \n                        \n                            \n                                    Defined in         HandlerBuilder:8\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            canHandleFilter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CanHandle\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         HandlerBuilder\n\n                                \n                            \n                        \n                            \n                                    Defined in         HandlerBuilder:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            handle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Handle\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         HandlerBuilder\n\n                                \n                            \n                        \n                            \n                                    Defined in         HandlerBuilder:11\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getHandler\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getHandler()\n                \n            \n\n\n            \n                \n                    Inherited from         HandlerBuilder\n\n                \n            \n            \n                \n                        Defined in         HandlerBuilder:32\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     RequestHandler\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            replaceHandler\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    replaceHandler(handler: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         HandlerBuilder\n\n                \n            \n            \n                \n                        Defined in         HandlerBuilder:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    handler\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setHandle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setHandle(handle: Handle)\n                \n            \n\n\n            \n                \n                    Inherited from         HandlerBuilder\n\n                \n            \n            \n                \n                        Defined in         HandlerBuilder:18\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    handle\n                                    \n                                                Handle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setHandleCondition\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setHandleCondition(condition: CanHandle)\n                \n            \n\n\n            \n                \n                    Inherited from         HandlerBuilder\n\n                \n            \n            \n                \n                        Defined in         HandlerBuilder:14\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                CanHandle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateHandler\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateHandler(condition: CanHandle, handle: Handle)\n                \n            \n\n\n            \n                \n                    Inherited from         HandlerBuilder\n\n                \n            \n            \n                \n                        Defined in         HandlerBuilder:22\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                CanHandle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    handle\n                                    \n                                                Handle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { isMatchedIntent } from 'ask-utils'\nimport { HandlerBuilder } from './Base'\nimport {\n    CanHandle, CanHandleResponse\n} from './model'\n\nexport class IntentHandlerBuilder extends HandlerBuilder {\n    public constructor (intentName: string) {\n        super()\n        this.intentName = intentName\n    }\n    protected intentName: string\n    public canHandle: CanHandle = (handlerInput): CanHandleResponse => {\n        if (!isMatchedIntent(handlerInput, this.intentName)) return false\n        return this.canHandleFilter(handlerInput)\n    }\n}\nexport default IntentHandlerBuilder\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IntentHandlerFactory.html":{"url":"classes/IntentHandlerFactory.html","title":"class - IntentHandlerFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IntentHandlerFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/handlers/libs/requestHandlers/factories/index.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    init(intentName?: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/handlers/libs/requestHandlers/factories/index.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    intentName\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         IntentHandlerBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import HandlerBuilder from './Base'\nimport IntentHandlerBuilder from './Intent'\nimport LaunchRequestBuilder from './LaunchRequest'\nexport * from './Base'\nexport * from './Intent'\nexport * from './model'\n\nexport class IntentHandlerFactory {\n    public static init (intentName?: string): IntentHandlerBuilder {\n        if (!intentName) throw new Error('intentName is required')\n        return new IntentHandlerBuilder(intentName)\n    }\n}\n\nexport class HandlerFactory {\n    public static init (type: string, intentName?: string): HandlerBuilder {\n        if (type === 'IntentRequest') {\n            return IntentHandlerFactory.init(intentName)\n        }\n        return new HandlerBuilder()\n    }\n}\n\nexport class LaunchRequestFactory {\n    public static init (): HandlerBuilder {\n        return new LaunchRequestBuilder()\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/IntentRequestFactory.html":{"url":"classes/IntentRequestFactory.html","title":"class - IntentRequestFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  IntentRequestFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/test/libs/request/IntentRequestFactory.ts\n        \n\n\n            \n                Extends\n            \n            \n                        RequestFactory\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                date\n                            \n                            \n                                    Protected\n                                locale\n                            \n                            \n                                    Protected\n                                request\n                            \n                            \n                                    Protected\n                                    Optional\n                                requestID\n                            \n                            \n                                    Protected\n                                requestType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                setDialogState\n                            \n                            \n                                    Public\n                                setIntent\n                            \n                            \n                                    Protected\n                                validateRequest\n                            \n                            \n                                    Private\n                                getLocale\n                            \n                            \n                                    Public\n                                getRequest\n                            \n                            \n                                    Private\n                                getRequestId\n                            \n                            \n                                    Private\n                                getRequestType\n                            \n                            \n                                    Private\n                                getTimestamp\n                            \n                            \n                                    Public\n                                putRequest\n                            \n                            \n                                    Public\n                                setLocale\n                            \n                            \n                                    Public\n                                setRequestedDate\n                            \n                            \n                                    Public\n                                setRequestId\n                            \n                            \n                                    Public\n                                setRequestType\n                            \n                            \n                                    Protected\n                                updateRequest\n                            \n                            \n                                    Protected\n                                validateRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(locale: string)\n                    \n                \n                        \n                            \n                                Defined in packages/test/libs/request/IntentRequestFactory.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        locale\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            date\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                            \n                                \n                                    Inherited from         RequestFactory\n\n                                \n                            \n                        \n                            \n                                    Defined in         RequestFactory:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            locale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         RequestFactory\n\n                                \n                            \n                        \n                            \n                                    Defined in         RequestFactory:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            request\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Partial\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         RequestFactory\n\n                                \n                            \n                        \n                            \n                                    Defined in         RequestFactory:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Optional\n                            requestID\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         RequestFactory\n\n                                \n                            \n                        \n                            \n                                    Defined in         RequestFactory:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            requestType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         RequestFactory\n\n                                \n                            \n                        \n                            \n                                    Defined in         RequestFactory:8\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setDialogState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setDialogState(state: DialogState)\n                \n            \n\n\n            \n                \n                    Defined in packages/test/libs/request/IntentRequestFactory.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                DialogState\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setIntent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setIntent(intent: Intent)\n                \n            \n\n\n            \n                \n                    Defined in packages/test/libs/request/IntentRequestFactory.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    intent\n                                    \n                                            Intent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            validateRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateRequest()\n                \n            \n\n\n            \n                \n                    Defined in packages/test/libs/request/IntentRequestFactory.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getLocale\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getLocale()\n                \n            \n\n\n            \n                \n                    Inherited from         RequestFactory\n\n                \n            \n            \n                \n                        Defined in         RequestFactory:47\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getRequest()\n                \n            \n\n\n            \n                \n                    Inherited from         RequestFactory\n\n                \n            \n            \n                \n                        Defined in         RequestFactory:72\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Request\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getRequestId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getRequestId()\n                \n            \n\n\n            \n                \n                    Inherited from         RequestFactory\n\n                \n            \n            \n                \n                        Defined in         RequestFactory:29\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getRequestType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getRequestType()\n                \n            \n\n\n            \n                \n                    Inherited from         RequestFactory\n\n                \n            \n            \n                \n                        Defined in         RequestFactory:21\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getTimestamp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTimestamp()\n                \n            \n\n\n            \n                \n                    Inherited from         RequestFactory\n\n                \n            \n            \n                \n                        Defined in         RequestFactory:38\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putRequest(request: T)\n                \n            \n\n\n            \n                \n                    Inherited from         RequestFactory\n\n                \n            \n            \n                \n                        Defined in         RequestFactory:51\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setLocale\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setLocale(locale: string)\n                \n            \n\n\n            \n                \n                    Inherited from         RequestFactory\n\n                \n            \n            \n                \n                        Defined in         RequestFactory:43\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    locale\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setRequestedDate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setRequestedDate(date: Date)\n                \n            \n\n\n            \n                \n                    Inherited from         RequestFactory\n\n                \n            \n            \n                \n                        Defined in         RequestFactory:34\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setRequestId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setRequestId(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         RequestFactory\n\n                \n            \n            \n                \n                        Defined in         RequestFactory:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setRequestType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setRequestType(type)\n                \n            \n\n\n            \n                \n                    Inherited from         RequestFactory\n\n                \n            \n            \n                \n                        Defined in         RequestFactory:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateRequest(param?: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         RequestFactory\n\n                \n            \n            \n                \n                        Defined in         RequestFactory:55\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    param\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            validateRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateRequest()\n                \n            \n\n\n            \n                \n                    Inherited from         RequestFactory\n\n                \n            \n            \n                \n                        Defined in         RequestFactory:69\n\n                \n            \n\n\n            \n                \n                    IF the request type has several required value, should overwrite it to test them.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n    RequestFactory\n} from './RequestFactory'\nimport {\n    Intent,\n    IntentRequest,\n    DialogState\n} from 'ask-sdk-core/node_modules/ask-sdk-model'\n\nexport class InvalidIntentRequestException extends Error {\n    public message = 'Invalid IntentRequest object'\n}\n\nexport class IntentRequestFactory extends RequestFactory {\n    public constructor (locale: string = 'en-US') {\n        super('IntentRequest', locale)\n    }\n\n    public setIntent (intent: Intent): this {\n        this.updateRequest({\n            intent\n        })\n        return this\n    }\n\n    public setDialogState (state: DialogState): this {\n        this.updateRequest({\n            dialogState: state\n        })\n        return this\n    }\n\n    protected validateRequest (): void {\n        if (!this.request.intent) throw new InvalidIntentRequestException()\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/InvalidIntentRequestException.html":{"url":"classes/InvalidIntentRequestException.html","title":"class - InvalidIntentRequestException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  InvalidIntentRequestException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/test/libs/request/IntentRequestFactory.ts\n        \n\n\n            \n                Extends\n            \n            \n                    Error\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                message\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'Invalid IntentRequest object'\n                        \n                    \n                        \n                            \n                                    Defined in packages/test/libs/request/IntentRequestFactory.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n    RequestFactory\n} from './RequestFactory'\nimport {\n    Intent,\n    IntentRequest,\n    DialogState\n} from 'ask-sdk-core/node_modules/ask-sdk-model'\n\nexport class InvalidIntentRequestException extends Error {\n    public message = 'Invalid IntentRequest object'\n}\n\nexport class IntentRequestFactory extends RequestFactory {\n    public constructor (locale: string = 'en-US') {\n        super('IntentRequest', locale)\n    }\n\n    public setIntent (intent: Intent): this {\n        this.updateRequest({\n            intent\n        })\n        return this\n    }\n\n    public setDialogState (state: DialogState): this {\n        this.updateRequest({\n            dialogState: state\n        })\n        return this\n    }\n\n    protected validateRequest (): void {\n        if (!this.request.intent) throw new InvalidIntentRequestException()\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LaunchRequestFactory.html":{"url":"classes/LaunchRequestFactory.html","title":"class - LaunchRequestFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LaunchRequestFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/test/libs/request/LaunchRequestFactory.ts\n        \n\n\n            \n                Extends\n            \n            \n                        RequestFactory\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                date\n                            \n                            \n                                    Protected\n                                locale\n                            \n                            \n                                    Protected\n                                request\n                            \n                            \n                                    Protected\n                                    Optional\n                                requestID\n                            \n                            \n                                    Protected\n                                requestType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                setTask\n                            \n                            \n                                    Private\n                                getLocale\n                            \n                            \n                                    Public\n                                getRequest\n                            \n                            \n                                    Private\n                                getRequestId\n                            \n                            \n                                    Private\n                                getRequestType\n                            \n                            \n                                    Private\n                                getTimestamp\n                            \n                            \n                                    Public\n                                putRequest\n                            \n                            \n                                    Public\n                                setLocale\n                            \n                            \n                                    Public\n                                setRequestedDate\n                            \n                            \n                                    Public\n                                setRequestId\n                            \n                            \n                                    Public\n                                setRequestType\n                            \n                            \n                                    Protected\n                                updateRequest\n                            \n                            \n                                    Protected\n                                validateRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(locale: string)\n                    \n                \n                        \n                            \n                                Defined in packages/test/libs/request/LaunchRequestFactory.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        locale\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            date\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                            \n                                \n                                    Inherited from         RequestFactory\n\n                                \n                            \n                        \n                            \n                                    Defined in         RequestFactory:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            locale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         RequestFactory\n\n                                \n                            \n                        \n                            \n                                    Defined in         RequestFactory:10\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            request\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Partial\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         RequestFactory\n\n                                \n                            \n                        \n                            \n                                    Defined in         RequestFactory:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Optional\n                            requestID\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         RequestFactory\n\n                                \n                            \n                        \n                            \n                                    Defined in         RequestFactory:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            requestType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         RequestFactory\n\n                                \n                            \n                        \n                            \n                                    Defined in         RequestFactory:8\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setTask\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setTask(task: Task)\n                \n            \n\n\n            \n                \n                    Defined in packages/test/libs/request/LaunchRequestFactory.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    task\n                                    \n                                            Task\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getLocale\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getLocale()\n                \n            \n\n\n            \n                \n                    Inherited from         RequestFactory\n\n                \n            \n            \n                \n                        Defined in         RequestFactory:47\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getRequest()\n                \n            \n\n\n            \n                \n                    Inherited from         RequestFactory\n\n                \n            \n            \n                \n                        Defined in         RequestFactory:72\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Request\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getRequestId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getRequestId()\n                \n            \n\n\n            \n                \n                    Inherited from         RequestFactory\n\n                \n            \n            \n                \n                        Defined in         RequestFactory:29\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getRequestType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getRequestType()\n                \n            \n\n\n            \n                \n                    Inherited from         RequestFactory\n\n                \n            \n            \n                \n                        Defined in         RequestFactory:21\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getTimestamp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTimestamp()\n                \n            \n\n\n            \n                \n                    Inherited from         RequestFactory\n\n                \n            \n            \n                \n                        Defined in         RequestFactory:38\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putRequest(request: T)\n                \n            \n\n\n            \n                \n                    Inherited from         RequestFactory\n\n                \n            \n            \n                \n                        Defined in         RequestFactory:51\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setLocale\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setLocale(locale: string)\n                \n            \n\n\n            \n                \n                    Inherited from         RequestFactory\n\n                \n            \n            \n                \n                        Defined in         RequestFactory:43\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    locale\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setRequestedDate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setRequestedDate(date: Date)\n                \n            \n\n\n            \n                \n                    Inherited from         RequestFactory\n\n                \n            \n            \n                \n                        Defined in         RequestFactory:34\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setRequestId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setRequestId(id: string)\n                \n            \n\n\n            \n                \n                    Inherited from         RequestFactory\n\n                \n            \n            \n                \n                        Defined in         RequestFactory:25\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setRequestType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setRequestType(type)\n                \n            \n\n\n            \n                \n                    Inherited from         RequestFactory\n\n                \n            \n            \n                \n                        Defined in         RequestFactory:17\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateRequest(param?: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         RequestFactory\n\n                \n            \n            \n                \n                        Defined in         RequestFactory:55\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    param\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            validateRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateRequest()\n                \n            \n\n\n            \n                \n                    Inherited from         RequestFactory\n\n                \n            \n            \n                \n                        Defined in         RequestFactory:69\n\n                \n            \n\n\n            \n                \n                    IF the request type has several required value, should overwrite it to test them.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n    RequestFactory\n} from './RequestFactory'\nimport { LaunchRequest, Task } from 'ask-sdk-core/node_modules/ask-sdk-model'\n\nexport class LaunchRequestFactory extends RequestFactory {\n    public constructor (locale: string = 'en-US') {\n        super('LaunchRequest', locale)\n    }\n\n    public setTask (task: Task): this {\n        this.updateRequest({\n            task\n        })\n        return this\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LaunchRequestFactory-1.html":{"url":"classes/LaunchRequestFactory-1.html","title":"class - LaunchRequestFactory-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LaunchRequestFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/handlers/libs/requestHandlers/factories/index.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in packages/handlers/libs/requestHandlers/factories/index.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         HandlerBuilder\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import HandlerBuilder from './Base'\nimport IntentHandlerBuilder from './Intent'\nimport LaunchRequestBuilder from './LaunchRequest'\nexport * from './Base'\nexport * from './Intent'\nexport * from './model'\n\nexport class IntentHandlerFactory {\n    public static init (intentName?: string): IntentHandlerBuilder {\n        if (!intentName) throw new Error('intentName is required')\n        return new IntentHandlerBuilder(intentName)\n    }\n}\n\nexport class HandlerFactory {\n    public static init (type: string, intentName?: string): HandlerBuilder {\n        if (type === 'IntentRequest') {\n            return IntentHandlerFactory.init(intentName)\n        }\n        return new HandlerBuilder()\n    }\n}\n\nexport class LaunchRequestFactory {\n    public static init (): HandlerBuilder {\n        return new LaunchRequestBuilder()\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LaunchRequestHandlerFactory.html":{"url":"classes/LaunchRequestHandlerFactory.html","title":"class - LaunchRequestHandlerFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LaunchRequestHandlerFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/handlers/libs/requestHandlers/HandlerFactory.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                            RequestHandlerBuilder\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                handle\n                            \n                            \n                                supports\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handle\n                        \n                        \n                    \n                \n            \n            \n                \nhandle(handler: TMergeTargetHandler)\n                \n            \n\n\n            \n                \n                    Defined in packages/handlers/libs/requestHandlers/HandlerFactory.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    handler\n                                    \n                                                TMergeTargetHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TRequestHandler\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            supports\n                        \n                        \n                    \n                \n            \n            \n                \nsupports(type: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/handlers/libs/requestHandlers/HandlerFactory.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { RequestHandler, HandlerInput } from 'ask-sdk-core'\nimport { Response, Request, RequestEnvelope } from 'ask-sdk-model'\nimport Resolver, { interfaces } from 'class-resolver'\nimport { isLaunchRequest } from 'ask-utils'\n\nexport interface TMergeTargetHandler {\n    canHandle?: (input: Input) => Promise | boolean;\n    handle?: (input: Input) => Promise | Output;\n}\nexport interface TRequestHandler {\n    canHandle: (input: Input) => Promise | boolean;\n    handle: (input: Input) => Promise | Output;\n}\nexport interface CustomeRequestEnvelope extends RequestEnvelope {\n    request: CustomRequest;\n}\nexport interface CustomHandlerInput extends HandlerInput {\n    requestEnvelope: CustomeRequestEnvelope;\n}\nexport interface RequestHandlerBuilder extends interfaces.ResolveTarget {\n    handle(handler: TMergeTargetHandler): TRequestHandler;\n}\n\nconst merge = (handler: TMergeTargetHandler, target?: TMergeTargetHandler): TRequestHandler => {\n    const fallBackHandler: RequestHandler = {\n        canHandle () {\n            return true\n        },\n        handle (handlerInput) {\n            return handlerInput.responseBuilder.getResponse()\n        }\n    }\n    return Object.assign({}, fallBackHandler, target, handler)\n}\n\nexport type SupportedHandlerType = 'LaunchRequest'\nexport class RequestHandlerFactory {\n    public static create (type: SupportedHandlerType, handler: TMergeTargetHandler): TRequestHandler {\n        return new Resolver(\n            new LaunchRequestHandlerFactory(),\n            new FallbackIntentFactory()\n        ).resolve(type).handle(handler)\n    }\n}\nexport default RequestHandlerFactory\n\nexport class LaunchRequestHandlerFactory implements RequestHandlerBuilder {\n    supports (type: string) {\n        return type === 'LaunchRequest'\n    }\n    handle (handler: TMergeTargetHandler) {\n        return merge(handler, {\n            canHandle (handlerInput) {\n                return isLaunchRequest(handlerInput)\n            }\n        })\n    }\n}\n\nexport class FallbackIntentFactory implements RequestHandlerBuilder {\n    supports () {\n        return true\n    }\n    handle (handler: TMergeTargetHandler) {\n        return merge(handler)\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LaunchRequestrBuilder.html":{"url":"classes/LaunchRequestrBuilder.html","title":"class - LaunchRequestrBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LaunchRequestrBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/handlers/libs/requestHandlers/factories/LaunchRequest.ts\n        \n\n\n            \n                Extends\n            \n            \n                        HandlerBuilder\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                canHandle\n                            \n                            \n                                    Public\n                                canHandle\n                            \n                            \n                                    Protected\n                                canHandleFilter\n                            \n                            \n                                    Public\n                                handle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getHandler\n                            \n                            \n                                    Public\n                                replaceHandler\n                            \n                            \n                                    Public\n                                setHandle\n                            \n                            \n                                    Public\n                                setHandleCondition\n                            \n                            \n                                    Public\n                                updateHandler\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            canHandle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CanHandle\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in packages/handlers/libs/requestHandlers/factories/LaunchRequest.ts:8\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            canHandle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CanHandle\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         HandlerBuilder\n\n                                \n                            \n                        \n                            \n                                    Defined in         HandlerBuilder:8\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            canHandleFilter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         CanHandle\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         HandlerBuilder\n\n                                \n                            \n                        \n                            \n                                    Defined in         HandlerBuilder:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            handle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Handle\n\n                        \n                    \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                            \n                                \n                                    Inherited from         HandlerBuilder\n\n                                \n                            \n                        \n                            \n                                    Defined in         HandlerBuilder:11\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getHandler\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getHandler()\n                \n            \n\n\n            \n                \n                    Inherited from         HandlerBuilder\n\n                \n            \n            \n                \n                        Defined in         HandlerBuilder:32\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     RequestHandler\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            replaceHandler\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    replaceHandler(handler: Partial)\n                \n            \n\n\n            \n                \n                    Inherited from         HandlerBuilder\n\n                \n            \n            \n                \n                        Defined in         HandlerBuilder:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    handler\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setHandle\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setHandle(handle: Handle)\n                \n            \n\n\n            \n                \n                    Inherited from         HandlerBuilder\n\n                \n            \n            \n                \n                        Defined in         HandlerBuilder:18\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    handle\n                                    \n                                                Handle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setHandleCondition\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setHandleCondition(condition: CanHandle)\n                \n            \n\n\n            \n                \n                    Inherited from         HandlerBuilder\n\n                \n            \n            \n                \n                        Defined in         HandlerBuilder:14\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                CanHandle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateHandler\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateHandler(condition: CanHandle, handle: Handle)\n                \n            \n\n\n            \n                \n                    Inherited from         HandlerBuilder\n\n                \n            \n            \n                \n                        Defined in         HandlerBuilder:22\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    condition\n                                    \n                                                CanHandle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    handle\n                                    \n                                                Handle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { isLaunchRequest } from 'ask-utils'\nimport { HandlerBuilder } from './Base'\nimport {\n    CanHandle, CanHandleResponse\n} from './model'\n\nexport class LaunchRequestrBuilder extends HandlerBuilder {\n    public canHandle: CanHandle = (handlerInput): CanHandleResponse => {\n        if (!isLaunchRequest(handlerInput)) return false\n        return this.canHandleFilter(handlerInput)\n    }\n}\nexport default LaunchRequestrBuilder\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ListManagementAPIClient.html":{"url":"classes/ListManagementAPIClient.html","title":"class - ListManagementAPIClient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ListManagementAPIClient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/serviceClients/libs/Lists.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Client\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                path\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createList\n                            \n                            \n                                    Public\n                                    Async\n                                createListItem\n                            \n                            \n                                    Public\n                                    Async\n                                deleteList\n                            \n                            \n                                    Public\n                                    Async\n                                deleteListItem\n                            \n                            \n                                    Public\n                                    Async\n                                getList\n                            \n                            \n                                    Public\n                                    Async\n                                getListItem\n                            \n                            \n                                    Public\n                                    Async\n                                getListsMetadata\n                            \n                            \n                                    Public\n                                    Async\n                                getProfileName\n                            \n                            \n                                    Public\n                                    Async\n                                updateList\n                            \n                            \n                                    Public\n                                    Async\n                                updateListItem\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'v2/householdlists/'\n                        \n                    \n                        \n                            \n                                    Defined in packages/serviceClients/libs/Lists.ts:6\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            createList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createList(request: listManagement.CreateListRequest)\n                \n            \n\n\n            \n                \n                    Defined in packages/serviceClients/libs/Lists.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            listManagement.CreateListRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            createListItem\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createListItem(listId: string, request: listManagement.CreateListItemRequest)\n                \n            \n\n\n            \n                \n                    Defined in packages/serviceClients/libs/Lists.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    listId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    request\n                                    \n                                            listManagement.CreateListItemRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            deleteList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteList(listId: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/serviceClients/libs/Lists.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    listId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            deleteListItem\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteListItem(listId: string, itemId: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/serviceClients/libs/Lists.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    listId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    itemId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getList(listId: string, status: ListStatus)\n                \n            \n\n\n            \n                \n                    Defined in packages/serviceClients/libs/Lists.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    listId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    status\n                                    \n                                                ListStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getListItem\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getListItem(listId: string, itemId: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/serviceClients/libs/Lists.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    listId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    itemId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getListsMetadata\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getListsMetadata()\n                \n            \n\n\n            \n                \n                    Defined in packages/serviceClients/libs/Lists.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getProfileName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getProfileName()\n                \n            \n\n\n            \n                \n                    Defined in packages/serviceClients/libs/Lists.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            updateList\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateList(listId: string, request: listManagement.UpdateListRequest)\n                \n            \n\n\n            \n                \n                    Defined in packages/serviceClients/libs/Lists.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    listId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    request\n                                    \n                                            listManagement.UpdateListRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            updateListItem\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateListItem(listId: string, itemId: string, request: listManagement.UpdateListItemRequest)\n                \n            \n\n\n            \n                \n                    Defined in packages/serviceClients/libs/Lists.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    listId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    itemId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    request\n                                    \n                                            listManagement.UpdateListItemRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { services } from 'ask-sdk-model'\nimport Client from './client'\nimport listManagement = services.listManagement\ntype ListStatus = 'active' | 'completed'\nexport class ListManagementAPIClient extends Client {\n    protected path = 'v2/householdlists/'\n    public async getProfileName (): Promise {\n        return this.get('Profile.name')\n    }\n    public async getListsMetadata (): Promise {\n        return this.get()\n    }\n    public async getList (listId: string, status: ListStatus): Promise {\n        return this.get(`${listId}/${status}`)\n    }\n    public async createList (request: listManagement.CreateListRequest): Promise {\n        return this.post(request)\n    }\n    public async updateList (listId: string, request: listManagement.UpdateListRequest): Promise {\n        return this.put(request, listId)\n    }\n    public async deleteList (listId: string): Promise {\n        await this.delete(listId)\n    }\n    public async getListItem (listId: string, itemId: string): Promise {\n        return this.get(`${listId}/items/${itemId}`)\n    }\n    public async createListItem (listId: string, request: listManagement.CreateListItemRequest): Promise {\n        return this.post(request, `${listId}/items/`)\n    }\n    public async updateListItem (listId: string, itemId: string, request: listManagement.UpdateListItemRequest): Promise {\n        return this.put(request, `${listId}/items/${itemId}`)\n    }\n    public async deleteListItem (listId: string, itemId: string): Promise {\n        await this.delete(`${listId}/items/${itemId}`)\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LocalizedAttribute.html":{"url":"interfaces/LocalizedAttribute.html","title":"interface - LocalizedAttribute","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LocalizedAttribute\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        locale\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [name: string]:        string\n\n                    \n                \n                        \n                            \n                                Defined in packages/proactive-event/libs/model.ts:113\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        locale\n                                    \n                                \n                                \n                                    \n                                        locale:         Locale\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Locale\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LocalizedAttributesFactory.html":{"url":"classes/LocalizedAttributesFactory.html","title":"class - LocalizedAttributesFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LocalizedAttributesFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/LocalizedAttributes/Factory.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/LocalizedAttributes/Factory.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         interfaces.LocalizedAttributes.Factory\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n    Types,\n    interfaces\n} from '../model'\n\nexport default class LocalizedAttributesFactory {\n    public static init (): interfaces.LocalizedAttributes.Factory {\n        const localizedAttributes: Types.LocalizedAttributes = []\n        return {\n            putLocalizedAttribute (locale: Types.Locale, key: string, text: string) {\n                localizedAttributes.push({\n                    locale,\n                    [key]: text\n                })\n                return this\n            },\n            getLocalizedAttributes () {\n                return localizedAttributes\n            }\n        }\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MergeObjectType.html":{"url":"interfaces/MergeObjectType.html","title":"interface - MergeObjectType","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MergeObjectType\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/libs/requestHandler.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        canHandle\n                                \n                                \n                                            Optional\n                                        handle\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        canHandle\n                                    \n                                \n                                \n                                    \n                                        canHandle:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        handle\n                                    \n                                \n                                \n                                    \n                                        handle:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { RequestHandler, HandlerInput } from 'ask-sdk-core'\nimport {\n    Response,\n    RequestEnvelope\n} from 'ask-sdk-model'\n\nexport const cloneHandler = (cloneTarget: RequestHandler): RequestHandler => {\n    return Object.assign({}, cloneTarget)\n}\n\ninterface MergeObjectType {\n    canHandle?: (handlerInput: HandlerInput) => boolean;\n    handle?: (handlerInput: HandlerInput) => Response;\n}\n\nexport const mergeHandler = (cloneTarget: RequestHandler, mergeObject: MergeObjectType): RequestHandler => {\n    return Object.assign({}, cloneTarget, mergeObject)\n}\n\nexport const isSkillEvent = (requestEnvelope: RequestEnvelope): boolean => {\n    return /^AlexaSkillEvent/.test(requestEnvelope.request.type)\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MessageGroup.html":{"url":"interfaces/MessageGroup.html","title":"interface - MessageGroup","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MessageGroup\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        count\n                                \n                                \n                                        creator\n                                \n                                \n                                            Optional\n                                        urgency\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        count\n                                    \n                                \n                                \n                                    \n                                        count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        creator\n                                    \n                                \n                                \n                                    \n                                        creator:         Types.Person\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Types.Person\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        urgency\n                                    \n                                \n                                \n                                    \n                                        urgency:         MessageUrgent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MessageUrgent\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MessageState.html":{"url":"interfaces/MessageState.html","title":"interface - MessageState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  MessageState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        freshness\n                                \n                                \n                                        status\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        freshness\n                                    \n                                \n                                \n                                    \n                                        freshness:         MessageFreshness\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MessageFreshness\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:         MessageStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MessageStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MockAttributeManager.html":{"url":"classes/MockAttributeManager.html","title":"class - MockAttributeManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MockAttributeManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/__tests__/libs/attributeManager.test.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        AttributesManager\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                db\n                            \n                            \n                                    Private\n                                persistent\n                            \n                            \n                                    Private\n                                request\n                            \n                            \n                                    Private\n                                session\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getPersistentAttributes\n                            \n                            \n                                    Public\n                                getRequestAttributes\n                            \n                            \n                                    Public\n                                getSessionAttributes\n                            \n                            \n                                    Public\n                                savePersistentAttributes\n                            \n                            \n                                    Public\n                                setPersistentAttributes\n                            \n                            \n                                    Public\n                                setRequestAttributes\n                            \n                            \n                                    Public\n                                setSessionAttributes\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            db\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AttributeType\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/__tests__/libs/attributeManager.test.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            persistent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AttributeType\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/__tests__/libs/attributeManager.test.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            request\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AttributeType\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/__tests__/libs/attributeManager.test.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            session\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         AttributeType\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/__tests__/libs/attributeManager.test.ts:8\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getPersistentAttributes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPersistentAttributes()\n                \n            \n\n\n            \n                \n                    Defined in packages/core/__tests__/libs/attributeManager.test.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getRequestAttributes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getRequestAttributes()\n                \n            \n\n\n            \n                \n                    Defined in packages/core/__tests__/libs/attributeManager.test.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         AttributeType\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getSessionAttributes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSessionAttributes()\n                \n            \n\n\n            \n                \n                    Defined in packages/core/__tests__/libs/attributeManager.test.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         AttributeType\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            savePersistentAttributes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    savePersistentAttributes()\n                \n            \n\n\n            \n                \n                    Defined in packages/core/__tests__/libs/attributeManager.test.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setPersistentAttributes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setPersistentAttributes(attribute: AttributeType)\n                \n            \n\n\n            \n                \n                    Defined in packages/core/__tests__/libs/attributeManager.test.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    attribute\n                                    \n                                                AttributeType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setRequestAttributes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setRequestAttributes(attribute: AttributeType)\n                \n            \n\n\n            \n                \n                    Defined in packages/core/__tests__/libs/attributeManager.test.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    attribute\n                                    \n                                                AttributeType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setSessionAttributes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setSessionAttributes(attribute: AttributeType)\n                \n            \n\n\n            \n                \n                    Defined in packages/core/__tests__/libs/attributeManager.test.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    attribute\n                                    \n                                                AttributeType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { HandlerInput, AttributesManager } from 'ask-sdk'\nimport { updateSessionAttributes, getSessionAttribute, getSessionAttributes } from '../../libs/attributeManager'\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ninterface AttributeType {[key: string]: any}\nclass MockAttributeManager implements AttributesManager {\n    private request: AttributeType = {}\n    private session: AttributeType = {}\n    private persistent: AttributeType = {}\n    private db: AttributeType = {}\n    public getRequestAttributes () {\n        return this.request\n    }\n    public getSessionAttributes () {\n        return this.session\n    }\n    public getPersistentAttributes () {\n        return Promise.resolve(this.db)\n    }\n    public setRequestAttributes (attribute: AttributeType) {\n        this.request = attribute\n    }\n    public setSessionAttributes (attribute: AttributeType) {\n        this.session = attribute\n    }\n    public setPersistentAttributes (attribute: AttributeType) {\n        this.persistent = attribute\n    }\n    public savePersistentAttributes () {\n        this.db = this.persistent\n        return Promise.resolve()\n    }\n}\n\nconst generateHandlerInput = (): HandlerInput => {\n    const attributesManager: AttributesManager = new MockAttributeManager()\n    const handlerInput = {\n        attributesManager\n    } as HandlerInput\n    return handlerInput\n}\ndescribe('attributeManager.ts', () => {\n    let handlerInput = generateHandlerInput()\n    beforeEach(() => {\n        handlerInput = generateHandlerInput()\n    })\n    describe('updateSessionAttributes()', () => {\n        it('should save attributes', () => {\n            updateSessionAttributes(handlerInput, { test: 'true' })\n            const result = getSessionAttribute(handlerInput, 'test')\n            expect(result).toEqual('true')\n        })\n\n        it('should add save attributes', () => {\n            updateSessionAttributes(handlerInput, { test: 'true' })\n            updateSessionAttributes(handlerInput, { test1: 'false' })\n            const result = getSessionAttribute(handlerInput, 'test')\n            expect(result).toEqual('true')\n            const result2 = getSessionAttribute(handlerInput, 'test1')\n            expect(result2).toEqual('false')\n        })\n    })\n    describe('getSessionAttributes()', () => {\n        it('should get saved attributes', () => {\n            updateSessionAttributes(handlerInput, { test: 'true' })\n            const result = getSessionAttributes(handlerInput)\n            expect(result).toEqual({ test: 'true' })\n        })\n        it('should add save attributes', () => {\n            updateSessionAttributes(handlerInput, { test: 'true' })\n            updateSessionAttributes(handlerInput, { test1: 'false' })\n            const result = getSessionAttributes(handlerInput)\n            expect(result).toEqual({\n                test: 'true',\n                test1: 'false'\n            })\n        })\n    })\n})\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Occasion.html":{"url":"interfaces/Occasion.html","title":"interface - Occasion","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Occasion\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        bookingTime\n                                \n                                \n                                            Optional\n                                        broker\n                                \n                                \n                                        occasionType\n                                \n                                \n                                        provider\n                                \n                                \n                                        subject\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bookingTime\n                                    \n                                \n                                \n                                    \n                                        bookingTime:         Types.dateTime\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Types.dateTime\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        broker\n                                    \n                                \n                                \n                                    \n                                        broker:         Skill\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Skill\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        occasionType\n                                    \n                                \n                                \n                                    \n                                        occasionType:         OccasionType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OccasionType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        provider\n                                    \n                                \n                                \n                                    \n                                        provider:         Ogranization\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Ogranization\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subject\n                                    \n                                \n                                \n                                    \n                                        subject:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Ogranization.html":{"url":"interfaces/Ogranization.html","title":"interface - Ogranization","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Ogranization\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Order.html":{"url":"interfaces/Order.html","title":"interface - Order","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Order\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        seller\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        seller\n                                    \n                                \n                                \n                                    \n                                        seller:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OrderState.html":{"url":"interfaces/OrderState.html","title":"interface - OrderState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  OrderState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        deliveryDetails\n                                \n                                \n                                            Optional\n                                        enterTimestamp\n                                \n                                \n                                        status\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        deliveryDetails\n                                    \n                                \n                                \n                                    \n                                        deliveryDetails:         ParcelDelivery\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ParcelDelivery\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        enterTimestamp\n                                    \n                                \n                                \n                                    \n                                        enterTimestamp:         Types.dateTime\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Types.dateTime\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                    \n                                \n                                \n                                    \n                                        status:         OrderStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         OrderStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ParameterFactory.html":{"url":"classes/ParameterFactory.html","title":"class - ParameterFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ParameterFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/MediaContent/Available/PayloadFactory.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/MediaContent/Available/PayloadFactory.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         PayloadBuilder\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import moment from 'moment'\nimport {\n    interfaces,\n    Types,\n    event\n} from '../../model'\n\n// helper\nimport {\n    getCreativeWork,\n    getAvailability\n} from '../../helpers'\nimport MediaContent = interfaces.MediaContent\nimport PayloadBuilder = MediaContent.Available.PayloadBuilder\n\nexport default class ParameterFactory {\n    public static init (): PayloadBuilder {\n        const eventName = 'AMAZON.MediaContent.Available'\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const availability: any = {}\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const content: any = {\n            name: 'localizedattribute:contentName'\n        }\n        return {\n            setContentName (name: string) {\n                content.name = name\n                return this\n            },\n            setMediaType (type: Types.MediaType) {\n                content.contentType = type\n                return this\n            },\n            setStartTime (date: Date): PayloadBuilder {\n                availability.startTime = moment(date).toISOString()\n                return this\n            },\n            setDistributionMethod (method: Types.DistributionMethod): PayloadBuilder {\n                availability.method = method\n                return this\n            },\n            setProvider (providerName: string = 'localizedattribute:providerName'): PayloadBuilder {\n                availability.provider = {\n                    name: providerName\n                }\n                return this\n            },\n            getEventName (): event.MediaContent.EventName {\n                return eventName\n            },\n            getPayload (): event.MediaContent.Available.Payload {\n                return {\n                    availability: getAvailability(availability),\n                    content: getCreativeWork(content)\n                }\n            },\n            getParameter () {\n                return {\n                    name: eventName,\n                    payload: this.getPayload()\n                }\n            }\n        }\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ParameterFactory-1.html":{"url":"classes/ParameterFactory-1.html","title":"class - ParameterFactory-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ParameterFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/Occasion/Updated/PayloadFactory.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/Occasion/Updated/PayloadFactory.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         PayloadBuilder\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import moment from 'moment'\nimport {\n    interfaces,\n    Types\n} from '../../model'\n\n// helper\nimport {\n    getOccasion\n} from '../../helpers'\nimport Occasion = interfaces.Occasion\nimport PayloadBuilder = Occasion.Updated.PayloadBuilder\n\nexport default class ParameterFactory {\n    public static init (): PayloadBuilder {\n        const eventName = 'AMAZON.Occasion.Updated'\n        const confirmationState: Types.ConfirmationState = {\n            confirmationStatus: 'CONFIRMED'\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const occasion: any = {\n            broker: {\n                name: 'localizedattribute:brokerName'\n            },\n            provider: {\n                name: 'localizedattribute:providerName'\n            }\n        }\n        return {\n            updateConfirmationStatus (status: Types.ConfirmationStatus) {\n                confirmationState.confirmationStatus = status\n                return this\n            },\n            getConfirmationState (): Types.ConfirmationState {\n                return confirmationState\n            },\n            getConfirmationStatus (): Types.ConfirmationStatus {\n                return confirmationState.confirmationStatus\n            },\n            setOccasionType (type: Types.OccasionType) {\n                occasion.occasionType = type\n                return this\n            },\n            setSubject (subject: string) {\n                occasion.subject = subject\n                return this\n            },\n            setProviderName (name: string) {\n                occasion.provider.name = name\n                return this\n            },\n            setBookingTime (date: Date) {\n                occasion.bookingTime = moment(date).toISOString()\n                return this\n            },\n            setBrokerName (name: string) {\n                occasion.broker.name = name\n                return this\n            },\n            getEventName () {\n                return eventName\n            },\n            getPayload () {\n                return {\n                    state: confirmationState,\n                    occasion: getOccasion(occasion)\n                }\n            },\n            getParameter () {\n                return {\n                    name: eventName,\n                    payload: this.getPayload()\n                }\n            }\n        }\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ParameterFactory-2.html":{"url":"classes/ParameterFactory-2.html","title":"class - ParameterFactory-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ParameterFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/OrderStatus/Updated/PayloadFactory.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/OrderStatus/Updated/PayloadFactory.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         PayloadBuilder\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import moment from 'moment'\nimport {\n    interfaces,\n    Types\n} from '../../model'\n\n// helper\nimport {\n    getOrderState\n} from '../../helpers'\nimport OrderStatus = interfaces.OrderStatus\nimport PayloadBuilder = OrderStatus.Updated.PayloadBuilder\n\nexport default class ParameterFactory {\n    public static init (): PayloadBuilder {\n        const eventName = 'AMAZON.OrderStatus.Updated'\n\n        const order: Types.Order = {\n            seller: {\n                name: 'localizedattribute:sellerName'\n            }\n        }\n\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const orderState: any = {}\n        return {\n            setOrderStatus (status: Types.OrderStatus) {\n                orderState.status = status\n                return this\n            },\n            setEnterTimestamp (date: Date) {\n                orderState.enterTimestamp = moment(date).toISOString()\n                return this\n            },\n            setExpectedArrival (date: Date) {\n                orderState.deliveryDetails = {\n                    expectedArrival: moment(date).toISOString()\n                }\n                return this\n            },\n            updateSellerName (name: string) {\n                order.seller.name = name\n                return this\n            },\n            getEventName () {\n                return eventName\n            },\n            getPayload () {\n                return {\n                    state: getOrderState(orderState),\n                    order\n                }\n            },\n            getParameter () {\n                return {\n                    name: eventName,\n                    payload: this.getPayload()\n                }\n            }\n        }\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ParameterFactory-3.html":{"url":"classes/ParameterFactory-3.html","title":"class - ParameterFactory-3","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ParameterFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/MessageAlert/Activated/PayloadFactory.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/MessageAlert/Activated/PayloadFactory.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         PayloadBuilder\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n    interfaces\n} from '../../model'\n\n// helper\nimport {\n    getMessageState,\n    getMessageGroup\n} from '../../helpers'\nimport MessageAlert = interfaces.MessageAlert\nimport PayloadBuilder = MessageAlert.Activated.PayloadBuilder\n\nexport default class ParameterFactory {\n    public static init (): PayloadBuilder {\n        const eventName = 'AMAZON.MessageAlert.Activated'\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const state: any = {}\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const group: any = {}\n        return {\n            setMessageCreator (name) {\n                const person = {\n                    name\n                }\n                group.creator = person\n                return this\n            },\n            setMessageCount (count) {\n                group.count = count\n                return this\n            },\n            setMessageUrgency (urgency = 'URGENT') {\n                group.urgency = urgency\n                return this\n            },\n            setMessageFreshness (freshness) {\n                state.freshness = freshness\n                return this\n            },\n            setMessageStatus (messageStatus) {\n                state.status = messageStatus\n                return this\n            },\n            getEventName () {\n                return eventName\n            },\n            getPayload () {\n                return {\n                    state: getMessageState(state),\n                    messageGroup: getMessageGroup(group)\n                }\n            },\n            getParameter () {\n                return {\n                    name: eventName,\n                    payload: this.getPayload()\n                }\n            }\n        }\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ParameterFactory-4.html":{"url":"classes/ParameterFactory-4.html","title":"class - ParameterFactory-4","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ParameterFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/SocialGameInvite/Available/PayloadFactory.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/SocialGameInvite/Available/PayloadFactory.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         PayloadBuilder\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n    interfaces,\n    Types\n} from '../../model'\n\n// helper\nimport {\n    getGame,\n    getGameInvite\n} from '../../helpers'\nimport SocialGameInvite = interfaces.SocialGameInvite\nimport PayloadBuilder = SocialGameInvite.Available.PayloadBuilder\n\nexport default class ParameterFactory {\n    public static init (): PayloadBuilder {\n        const eventName = 'AMAZON.SocialGameInvite.Available'\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const invite: any = {\n            inviter: {\n                name: ''\n            }\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const game: any = {\n            name: 'localizedattribute:gameName'\n        }\n        return {\n            setInviterName (name: string) {\n                invite.inviter.name = name\n                return this\n            },\n            setRelationshipToInvitee (relation: Types.RelationshipToInvitee) {\n                invite.relationshipToInvitee = relation\n                return this\n            },\n            setInviteType (type: Types.InviteType) {\n                invite.inviteType = type\n                return this\n            },\n            setGameOfferName (name: Types.OfferType) {\n                game.offer = name\n                return this\n            },\n            setGameName (name: string) {\n                game.name = name\n                return this\n            },\n            getEventName () {\n                return eventName\n            },\n            getPayload () {\n                return {\n                    invite: getGameInvite(invite),\n                    game: getGame(game)\n                }\n            },\n            getParameter () {\n                return {\n                    name: eventName,\n                    payload: this.getPayload()\n                }\n            }\n        }\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ParameterFactory-5.html":{"url":"classes/ParameterFactory-5.html","title":"class - ParameterFactory-5","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ParameterFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/SportsEvent/Updated/PayloadFactory.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/SportsEvent/Updated/PayloadFactory.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         PayloadBuilder\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n    interfaces,\n    Types,\n    event\n} from '../../model'\n\n// helper\nimport SportsEvent = interfaces.SportsEvent\nimport PayloadBuilder = SportsEvent.Updated.PayloadBuilder\n\nexport default class ParameterFactory {\n    public static init (): PayloadBuilder {\n        const eventName = 'AMAZON.SportsEvent.Updated'\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const eventLeague: Types.Soccer = {\n            name: 'localizedattribute:eventLeagueName'\n        }\n        const homeTeamStatistic: Types.GameStatistic = {\n            team: {\n                name: ''\n            },\n            score: 0\n        }\n        const awayTeamStatistic: Types.GameStatistic = {\n            team: {\n                name: ''\n            },\n            score: 0\n        }\n        let updated: Types.Goal | null = null\n        return {\n            updateGoalData (teamName: string, score: number) {\n                if (updated === null) {\n                    updated = {\n                        scoreEarned: score,\n                        teamName\n                    }\n                }\n                updated.scoreEarned = score\n                updated.teamName = teamName\n                return this\n            },\n            setEventLeagueName (name: string) {\n                eventLeague.name = name\n                return this\n            },\n            setHomeTeamStatistic (teamName: string, score: number) {\n                homeTeamStatistic.team.name = teamName\n                homeTeamStatistic.score = score\n                return this\n            },\n            setAwayTeamStatistic (teamName: string, score: number) {\n                awayTeamStatistic.score = score\n                awayTeamStatistic.team.name = teamName\n                return this\n            },\n            getEventName () {\n                return eventName\n            },\n            getPayload () {\n                const payload: event.SportsEvent.Updated.Payload = {\n                    sportsEvent: {\n                        eventLeague,\n                        homeTeamStatistic,\n                        awayTeamStatistic\n                    }\n                }\n\n                if (updated !== null && updated.hasOwnProperty('scoreEarned') && updated.hasOwnProperty('teamName')) payload.update = updated\n                return payload\n            },\n            getParameter () {\n                return {\n                    name: eventName,\n                    payload: this.getPayload()\n                }\n            }\n        }\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ParameterFactory-6.html":{"url":"classes/ParameterFactory-6.html","title":"class - ParameterFactory-6","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ParameterFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/TrashCollectionAlert/Activated/PayloadFactory.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/TrashCollectionAlert/Activated/PayloadFactory.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         PayloadBuilder\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n    interfaces,\n    Types,\n    event\n} from '../../model'\nimport TrashCollectionAlert = interfaces.TrashCollectionAlert\nimport PayloadBuilder = TrashCollectionAlert.Activated.PayloadBuilder\n\nexport default class ParameterFactory {\n    public static init (): PayloadBuilder {\n        const eventName = 'AMAZON.TrashCollectionAlert.Activated'\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        let alert: any = {}\n        return {\n            putAlert (alertItem: Types.TrashCollectionAlert): PayloadBuilder {\n                alert = alertItem\n                return this\n            },\n            putGarbageTypes (garbageTypes: Types.GarbageType[]): PayloadBuilder {\n                alert.garbageTypes = garbageTypes\n                return this\n            },\n            addGarbageType (garbageType: Types.GarbageType): PayloadBuilder {\n                if (alert.garbageTypes && alert.garbageTypes.length > 0) {\n                    alert.garbageTypes.push(garbageType)\n                } else {\n                    alert.garbageTypes = [garbageType]\n                }\n                return this\n            },\n            setCollectionDayOfWeek (collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder {\n                alert.collectionDayOfWeek = collectionDayOfWeek\n                return this\n            },\n            getEventName () {\n                return eventName\n            },\n            getPayload (): event.TrashCollectionAlert.Activated.Payload {\n                return {\n                    alert\n                }\n            },\n            getParameter (): event.Props {\n                return {\n                    name: eventName,\n                    payload: this.getPayload()\n                }\n            }\n        }\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ParameterFactory-7.html":{"url":"classes/ParameterFactory-7.html","title":"class - ParameterFactory-7","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ParameterFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/WeatherAlert/Activated/PayloadFactory.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/WeatherAlert/Activated/PayloadFactory.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         PayloadBuilder\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n    interfaces\n} from '../../model'\n\n// helper\nimport {\n    getWeatherAlert\n} from '../../helpers'\nimport WeatherAlert = interfaces.WeatherAlert\nimport PayloadBuilder = WeatherAlert.Activated.PayloadBuilder\n\nexport default class ParameterFactory {\n    public static init (): PayloadBuilder {\n        const eventName = 'AMAZON.WeatherAlert.Activated'\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const weatherAlert: any = {}\n        return {\n            setAlertSource (source: string = 'localizedattribute:source') {\n                weatherAlert.source = source\n                return this\n            },\n            setAlertType (type) {\n                weatherAlert.alertType = type\n                return this\n            },\n            getEventName () {\n                return eventName\n            },\n            getPayload () {\n                return {\n                    weatherAlert: getWeatherAlert(weatherAlert)\n                }\n            },\n            getParameter () {\n                return {\n                    name: eventName,\n                    payload: this.getPayload()\n                }\n            }\n        }\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ParcelDelivery.html":{"url":"interfaces/ParcelDelivery.html","title":"interface - ParcelDelivery","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ParcelDelivery\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        expectedArrival\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        expectedArrival\n                                    \n                                \n                                \n                                    \n                                        expectedArrival:         Types.dateTime\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Types.dateTime\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Payload.html":{"url":"interfaces/Payload.html","title":"interface - Payload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Payload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        alert\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alert\n                                    \n                                \n                                \n                                    \n                                        alert:         Types.TrashCollectionAlert\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Types.TrashCollectionAlert\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Payload-1.html":{"url":"interfaces/Payload-1.html","title":"interface - Payload-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Payload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        weatherAlert\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        weatherAlert\n                                    \n                                \n                                \n                                    \n                                        weatherAlert:         Types.WeatherAlert\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Types.WeatherAlert\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Payload-2.html":{"url":"interfaces/Payload-2.html","title":"interface - Payload-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Payload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        sportsEvent\n                                \n                                \n                                            Optional\n                                        update\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        sportsEvent\n                                    \n                                \n                                \n                                    \n                                        sportsEvent:         Types.SportsEvent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Types.SportsEvent\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        update\n                                    \n                                \n                                \n                                    \n                                        update:         Types.Goal\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Types.Goal\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Payload-3.html":{"url":"interfaces/Payload-3.html","title":"interface - Payload-3","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Payload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        messageGroup\n                                \n                                \n                                        state\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        messageGroup\n                                    \n                                \n                                \n                                    \n                                        messageGroup:         Types.MessageGroup\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Types.MessageGroup\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        state\n                                    \n                                \n                                \n                                    \n                                        state:         Types.MessageState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Types.MessageState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Payload-4.html":{"url":"interfaces/Payload-4.html","title":"interface - Payload-4","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Payload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        order\n                                \n                                \n                                        state\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        order\n                                    \n                                \n                                \n                                    \n                                        order:         Types.Order\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Types.Order\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        state\n                                    \n                                \n                                \n                                    \n                                        state:         Types.OrderState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Types.OrderState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Payload-5.html":{"url":"interfaces/Payload-5.html","title":"interface - Payload-5","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Payload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        occasion\n                                \n                                \n                                        state\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        occasion\n                                    \n                                \n                                \n                                    \n                                        occasion:         Types.Occasion\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Types.Occasion\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        state\n                                    \n                                \n                                \n                                    \n                                        state:         Types.ConfirmationState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Types.ConfirmationState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Payload-6.html":{"url":"interfaces/Payload-6.html","title":"interface - Payload-6","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Payload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        availability\n                                \n                                \n                                        content\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        availability\n                                    \n                                \n                                \n                                    \n                                        availability:         Types.Availability\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Types.Availability\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:         Types.CreativeWork\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Types.CreativeWork\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Payload-7.html":{"url":"interfaces/Payload-7.html","title":"interface - Payload-7","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Payload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        game\n                                \n                                \n                                        invite\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        game\n                                    \n                                \n                                \n                                    \n                                        game:         Types.Game\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Types.Game\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        invite\n                                    \n                                \n                                \n                                    \n                                        invite:     Types.GameInvite\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Types.GameInvite\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PayloadBuilder.html":{"url":"interfaces/PayloadBuilder.html","title":"interface - PayloadBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PayloadBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getEventName\n                                \n                                \n                                    getParameter\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEventName\n                        \n                        \n                    \n                \n            \n            \n                \ngetEventName()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:264\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     event.EventName\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getParameter\n                        \n                        \n                    \n                \n            \n            \n                \ngetParameter()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:265\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         event.Props\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PayloadBuilder-1.html":{"url":"interfaces/PayloadBuilder-1.html","title":"interface - PayloadBuilder-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PayloadBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    addGarbageType\n                                \n                                \n                                    getEventName\n                                \n                                \n                                    getParameter\n                                \n                                \n                                    getPayload\n                                \n                                \n                                    putAlert\n                                \n                                \n                                    putGarbageTypes\n                                \n                                \n                                    setCollectionDayOfWeek\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addGarbageType\n                        \n                        \n                    \n                \n            \n            \n                \naddGarbageType(garbageType: Types.GarbageType)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:279\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    garbageType\n                                    \n                                                Types.GarbageType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEventName\n                        \n                        \n                    \n                \n            \n            \n                \ngetEventName()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:281\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         event.TrashCollectionAlert.Activated.EventName\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getParameter\n                        \n                        \n                    \n                \n            \n            \n                \ngetParameter()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:283\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     event.Props\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPayload\n                        \n                        \n                    \n                \n            \n            \n                \ngetPayload()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:282\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     event.TrashCollectionAlert.Payload\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            putAlert\n                        \n                        \n                    \n                \n            \n            \n                \nputAlert(alert: Types.TrashCollectionAlert)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:277\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    alert\n                                    \n                                                Types.TrashCollectionAlert\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            putGarbageTypes\n                        \n                        \n                    \n                \n            \n            \n                \nputGarbageTypes(garbageTypes: Types.GarbageType[])\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:278\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    garbageTypes\n                                    \n                                                Types.GarbageType[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setCollectionDayOfWeek\n                        \n                        \n                    \n                \n            \n            \n                \nsetCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:280\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    collectionDayOfWeek\n                                    \n                                                Types.DayOfWeek\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PayloadBuilder-2.html":{"url":"interfaces/PayloadBuilder-2.html","title":"interface - PayloadBuilder-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PayloadBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getEventName\n                                \n                                \n                                    getParameter\n                                \n                                \n                                    getPayload\n                                \n                                \n                                    setAlertSource\n                                \n                                \n                                    setAlertType\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEventName\n                        \n                        \n                    \n                \n            \n            \n                \ngetEventName()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:293\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         event.WeatherAlert.Activated.EventName\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getParameter\n                        \n                        \n                    \n                \n            \n            \n                \ngetParameter()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:294\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     event.Props\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPayload\n                        \n                        \n                    \n                \n            \n            \n                \ngetPayload()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:295\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     event.WeatherAlert.Activated.Payload\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setAlertSource\n                        \n                        \n                    \n                \n            \n            \n                \nsetAlertSource(source?: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:291\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    source\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setAlertType\n                        \n                        \n                    \n                \n            \n            \n                \nsetAlertType(type: Types.WeatherAlertType)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:292\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                Types.WeatherAlertType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PayloadBuilder-3.html":{"url":"interfaces/PayloadBuilder-3.html","title":"interface - PayloadBuilder-3","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PayloadBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getEventName\n                                \n                                \n                                    getParameter\n                                \n                                \n                                    getPayload\n                                \n                                \n                                    setAwayTeamStatistic\n                                \n                                \n                                    setEventLeagueName\n                                \n                                \n                                    setHomeTeamStatistic\n                                \n                                \n                                    updateGoalData\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEventName\n                        \n                        \n                    \n                \n            \n            \n                \ngetEventName()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:307\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         event.SportsEvent.Updated.EventName\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getParameter\n                        \n                        \n                    \n                \n            \n            \n                \ngetParameter()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:308\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     event.Props\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPayload\n                        \n                        \n                    \n                \n            \n            \n                \ngetPayload()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:309\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     event.SportsEvent.Updated.Payload\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setAwayTeamStatistic\n                        \n                        \n                    \n                \n            \n            \n                \nsetAwayTeamStatistic(teamName: string, score: number)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:306\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    teamName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    score\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setEventLeagueName\n                        \n                        \n                    \n                \n            \n            \n                \nsetEventLeagueName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:304\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setHomeTeamStatistic\n                        \n                        \n                    \n                \n            \n            \n                \nsetHomeTeamStatistic(teamName: string, score: number)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:305\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    teamName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    score\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateGoalData\n                        \n                        \n                    \n                \n            \n            \n                \nupdateGoalData(teamName: string, score: number)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:303\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    teamName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    score\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PayloadBuilder-4.html":{"url":"interfaces/PayloadBuilder-4.html","title":"interface - PayloadBuilder-4","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PayloadBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getEventName\n                                \n                                \n                                    getParameter\n                                \n                                \n                                    getPayload\n                                \n                                \n                                    setMessageCount\n                                \n                                \n                                    setMessageCreator\n                                \n                                \n                                    setMessageFreshness\n                                \n                                \n                                    setMessageStatus\n                                \n                                \n                                    setMessageUrgency\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEventName\n                        \n                        \n                    \n                \n            \n            \n                \ngetEventName()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:322\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     event.MessageAlert.Activated.EventName\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getParameter\n                        \n                        \n                    \n                \n            \n            \n                \ngetParameter()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:323\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     event.Props\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPayload\n                        \n                        \n                    \n                \n            \n            \n                \ngetPayload()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:324\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     event.MessageAlert.Payload\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setMessageCount\n                        \n                        \n                    \n                \n            \n            \n                \nsetMessageCount(count: number)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:318\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    count\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setMessageCreator\n                        \n                        \n                    \n                \n            \n            \n                \nsetMessageCreator(name: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:317\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setMessageFreshness\n                        \n                        \n                    \n                \n            \n            \n                \nsetMessageFreshness(freshness: Types.MessageFreshness)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:320\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    freshness\n                                    \n                                                Types.MessageFreshness\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setMessageStatus\n                        \n                        \n                    \n                \n            \n            \n                \nsetMessageStatus(messageStatus: Types.MessageStatus)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:321\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    messageStatus\n                                    \n                                                Types.MessageStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setMessageUrgency\n                        \n                        \n                    \n                \n            \n            \n                \nsetMessageUrgency(urgency?: Types.MessageUrgent)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:319\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    urgency\n                                    \n                                                Types.MessageUrgent\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PayloadBuilder-5.html":{"url":"interfaces/PayloadBuilder-5.html","title":"interface - PayloadBuilder-5","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PayloadBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getEventName\n                                \n                                \n                                    getParameter\n                                \n                                \n                                    getPayload\n                                \n                                \n                                    setEnterTimestamp\n                                \n                                \n                                    setExpectedArrival\n                                \n                                \n                                    setOrderStatus\n                                \n                                \n                                    updateSellerName\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEventName\n                        \n                        \n                    \n                \n            \n            \n                \ngetEventName()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:336\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         event.OrderStatus.EventName\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getParameter\n                        \n                        \n                    \n                \n            \n            \n                \ngetParameter()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:338\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     event.Props\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPayload\n                        \n                        \n                    \n                \n            \n            \n                \ngetPayload()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:337\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     event.OrderStatus.Updated.Payload\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setEnterTimestamp\n                        \n                        \n                    \n                \n            \n            \n                \nsetEnterTimestamp(date: Date)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:333\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setExpectedArrival\n                        \n                        \n                    \n                \n            \n            \n                \nsetExpectedArrival(date: Date)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:334\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setOrderStatus\n                        \n                        \n                    \n                \n            \n            \n                \nsetOrderStatus(status: Types.OrderStatus)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:332\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    status\n                                    \n                                                Types.OrderStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateSellerName\n                        \n                        \n                    \n                \n            \n            \n                \nupdateSellerName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:335\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PayloadBuilder-6.html":{"url":"interfaces/PayloadBuilder-6.html","title":"interface - PayloadBuilder-6","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PayloadBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getConfirmationState\n                                \n                                \n                                    getConfirmationStatus\n                                \n                                \n                                    getEventName\n                                \n                                \n                                    getParameter\n                                \n                                \n                                    getPayload\n                                \n                                \n                                    setBookingTime\n                                \n                                \n                                    setBrokerName\n                                \n                                \n                                    setOccasionType\n                                \n                                \n                                    setProviderName\n                                \n                                \n                                    setSubject\n                                \n                                \n                                    updateConfirmationStatus\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getConfirmationState\n                        \n                        \n                    \n                \n            \n            \n                \ngetConfirmationState()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:353\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Types.ConfirmationState\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getConfirmationStatus\n                        \n                        \n                    \n                \n            \n            \n                \ngetConfirmationStatus()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:354\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Types.ConfirmationStatus\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEventName\n                        \n                        \n                    \n                \n            \n            \n                \ngetEventName()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:352\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         event.Occasion.Updated.EventName\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getParameter\n                        \n                        \n                    \n                \n            \n            \n                \ngetParameter()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:356\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     event.Props\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPayload\n                        \n                        \n                    \n                \n            \n            \n                \ngetPayload()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:355\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     event.Occasion.Payload\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setBookingTime\n                        \n                        \n                    \n                \n            \n            \n                \nsetBookingTime(date: Date)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:350\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setBrokerName\n                        \n                        \n                    \n                \n            \n            \n                \nsetBrokerName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:351\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setOccasionType\n                        \n                        \n                    \n                \n            \n            \n                \nsetOccasionType(type: Types.OccasionType)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:347\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                Types.OccasionType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setProviderName\n                        \n                        \n                    \n                \n            \n            \n                \nsetProviderName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:349\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setSubject\n                        \n                        \n                    \n                \n            \n            \n                \nsetSubject(subject: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:348\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    subject\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateConfirmationStatus\n                        \n                        \n                    \n                \n            \n            \n                \nupdateConfirmationStatus(status: Types.ConfirmationStatus)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:346\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    status\n                                    \n                                                Types.ConfirmationStatus\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PayloadBuilder-7.html":{"url":"interfaces/PayloadBuilder-7.html","title":"interface - PayloadBuilder-7","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PayloadBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getEventName\n                                \n                                \n                                    getParameter\n                                \n                                \n                                    getPayload\n                                \n                                \n                                    setContentName\n                                \n                                \n                                    setDistributionMethod\n                                \n                                \n                                    setMediaType\n                                \n                                \n                                    setProvider\n                                \n                                \n                                    setStartTime\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEventName\n                        \n                        \n                    \n                \n            \n            \n                \ngetEventName()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:365\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     event.MediaContent.EventName\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getParameter\n                        \n                        \n                    \n                \n            \n            \n                \ngetParameter()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:370\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     event.Props\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPayload\n                        \n                        \n                    \n                \n            \n            \n                \ngetPayload()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:369\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     event.MediaContent.Payload\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setContentName\n                        \n                        \n                    \n                \n            \n            \n                \nsetContentName(name?: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:363\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setDistributionMethod\n                        \n                        \n                    \n                \n            \n            \n                \nsetDistributionMethod(method: Types.DistributionMethod)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:367\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                            Types.DistributionMethod\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setMediaType\n                        \n                        \n                    \n                \n            \n            \n                \nsetMediaType(type: Types.MediaType)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:364\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                Types.MediaType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setProvider\n                        \n                        \n                    \n                \n            \n            \n                \nsetProvider(providerName: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:368\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    providerName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setStartTime\n                        \n                        \n                    \n                \n            \n            \n                \nsetStartTime(date: Date)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:366\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PayloadBuilder-8.html":{"url":"interfaces/PayloadBuilder-8.html","title":"interface - PayloadBuilder-8","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PayloadBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    getEventName\n                                \n                                \n                                    getPayload\n                                \n                                \n                                    setGameName\n                                \n                                \n                                    setGameOfferName\n                                \n                                \n                                    setInviterName\n                                \n                                \n                                    setInviteType\n                                \n                                \n                                    setRelationshipToInvitee\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getEventName\n                        \n                        \n                    \n                \n            \n            \n                \ngetEventName()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:382\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     event.SocialGameInvite.Available.EventName\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPayload\n                        \n                        \n                    \n                \n            \n            \n                \ngetPayload()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:383\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     event.SocialGameInvite.Available.Payload\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setGameName\n                        \n                        \n                    \n                \n            \n            \n                \nsetGameName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:380\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setGameOfferName\n                        \n                        \n                    \n                \n            \n            \n                \nsetGameOfferName(name: Types.OfferType)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:381\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                Types.OfferType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setInviterName\n                        \n                        \n                    \n                \n            \n            \n                \nsetInviterName(name: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:377\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setInviteType\n                        \n                        \n                    \n                \n            \n            \n                \nsetInviteType(type: Types.InviteType)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:379\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                Types.InviteType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setRelationshipToInvitee\n                        \n                        \n                    \n                \n            \n            \n                \nsetRelationshipToInvitee(relation: Types.RelationshipToInvitee)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/model.ts:378\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    relation\n                                    \n                                                Types.RelationshipToInvitee\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PayloadBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Person.html":{"url":"interfaces/Person.html","title":"interface - Person","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Person\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProactiveClient.html":{"url":"classes/ProactiveClient.html","title":"class - ProactiveClient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProactiveClient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/clients.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                apiEndpoint\n                            \n                            \n                                    Private\n                                body\n                            \n                            \n                                    Protected\n                                clientId\n                            \n                            \n                                    Protected\n                                clientSecret\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                getAccessToken\n                            \n                            \n                                    Public\n                                getBody\n                            \n                            \n                                    Public\n                                getReferenceId\n                            \n                            \n                                    Public\n                                getRequestParams\n                            \n                            \n                                    Public\n                                    Async\n                                requestEvent\n                            \n                            \n                                    Public\n                                setEvent\n                            \n                            \n                                    Public\n                                setEventName\n                            \n                            \n                                    Public\n                                setExpiryTime\n                            \n                            \n                                    Public\n                                setLocalizedAttributes\n                            \n                            \n                                    Public\n                                setPayload\n                            \n                            \n                                    Public\n                                setReferenceId\n                            \n                            \n                                    Public\n                                setRelevantAudience\n                            \n                            \n                                    Public\n                                setTimestamp\n                            \n                            \n                                    Public\n                                updateReferenceId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(config: client.ClientConfig)\n                    \n                \n                        \n                            \n                                Defined in packages/proactive-event/libs/clients.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                        client.ClientConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            apiEndpoint\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         client.APIEndpoint\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/proactive-event/libs/clients.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            body\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in packages/proactive-event/libs/clients.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            clientId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         client.ClientId\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/proactive-event/libs/clients.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            clientSecret\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         client.ClientSecret\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/proactive-event/libs/clients.ts:37\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getAccessToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAccessToken()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/clients.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getBody\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getBody()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/clients.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         client.RequstBody\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getReferenceId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getReferenceId()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/clients.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getRequestParams\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getRequestParams(accessToken: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/clients.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    accessToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     AxiosRequestConfig\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            requestEvent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    requestEvent()\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/clients.ts:129\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setEvent\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setEvent(event: event.Props)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/clients.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                event.Props\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setEventName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setEventName(name: event.EventName)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/clients.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                            event.EventName\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setExpiryTime\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setExpiryTime(date: Date)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/clients.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setLocalizedAttributes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setLocalizedAttributes(localizedAttributes: literal type[])\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/clients.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    localizedAttributes\n                                    \n                                            literal type[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setPayload\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setPayload(payload: event.Payload)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/clients.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            event.Payload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setReferenceId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setReferenceId(id: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/clients.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setRelevantAudience\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setRelevantAudience(type: client.AudienceType, payload?: client.AudiencePayload)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/clients.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                client.AudienceType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    payload\n                                    \n                                            client.AudiencePayload\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setTimestamp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setTimestamp(date: Date)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/clients.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            updateReferenceId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateReferenceId(id: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/proactive-event/libs/clients.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import axios, { AxiosRequestConfig } from 'axios'\nimport moment from 'moment'\nimport uuid from 'uuid'\nimport {\n    event,\n    client\n} from './model'\n\nexport const getApiURL = (config: client.ClientConfig): client.APIEndpoint => {\n    if (config.apiEndpont) return config.apiEndpont\n    switch (config.apiRegion) {\n        case 'FE':\n            return 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n        case 'EU':\n            return 'https://api.eu.amazonalexa.com/v1/proactiveEvents/'\n        case 'US':\n        default:\n            return 'https://api.amazonalexa.com/v1/proactiveEvents/'\n    }\n}\n\nexport const getApiEndpoint = (config: client.ClientConfig): client.APIEndpoint => {\n    const url = getApiURL(config)\n    if (!config.isProduction) return `${url}stages/development` as client.DevAPIURL\n    return url\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const isAuthResponse = (res: any): res is client.AuthResponse => {\n    if (!res) return false\n    if (!res.access_token || !res.expires_in || !res.scope || !res.token_type) return false\n    return true\n}\n\nexport default class ProactiveClient {\n    protected clientId: client.ClientId\n    protected clientSecret: client.ClientSecret\n    protected apiEndpoint: client.APIEndpoint\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    private body: any = {}\n\n    public constructor (config: client.ClientConfig) {\n        this.clientId = config.clientId\n        this.clientSecret = config.clientSecret\n        this.apiEndpoint = getApiEndpoint(config)\n        this.body = {\n            timestamp: moment().toISOString(),\n            expiryTime: moment().add(1, 'days').toISOString(),\n            event: {},\n            relevantAudience: 'Multicast',\n            referenceId: uuid.v4()\n        }\n        return this\n    }\n    public getReferenceId (): string {\n        return this.body.referenceId\n    }\n    public updateReferenceId (id: string): this{\n        this.body.referenceId = id\n        return this\n    }\n    public async getAccessToken (): Promise {\n        const response = await axios({\n            method: 'POST',\n            url: 'https://api.amazon.com/auth/O2/token',\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded'\n            },\n            data: [\n                'scope=alexa::proactive_events',\n                'grant_type=client_credentials',\n                `client_id=${this.clientId}`,\n                `client_secret=${this.clientSecret}`\n            ].join('&')\n        })\n        if (!isAuthResponse(response.data)) throw new Error('failed to get access token')\n        return response.data\n    }\n    public setReferenceId (id: string): this {\n        this.body.referenceId = id\n        return this\n    }\n    public setTimestamp (date: Date): this {\n        this.body.timestamp = moment(date).toISOString()\n        return this\n    }\n    public setExpiryTime (date: Date): this {\n        this.body.expiryTime = moment(date).toISOString()\n        return this\n    }\n    public setEvent (event: event.Props): this {\n        this.body.event = event\n        return this\n    }\n    public setPayload (payload: event.Payload): this {\n        this.body.event.payload = payload\n        return this\n    }\n    public setEventName (name: event.EventName): this {\n        this.body.event.name = name\n        return this\n    }\n    public setLocalizedAttributes (localizedAttributes: {}[]): this {\n        this.body.localizedAttributes = localizedAttributes\n        return this\n    }\n    public setRelevantAudience (type: client.AudienceType, payload?: client.AudiencePayload): this {\n        const relevantAudience: client.RelevantAudience = {\n            type\n        }\n        if (type === 'Unicast') relevantAudience.payload = payload\n        this.body.relevantAudience = relevantAudience\n        return this\n    }\n    public getBody (): client.RequstBody {\n        return this.body\n    }\n    public getRequestParams (accessToken: string): AxiosRequestConfig {\n        return {\n            method: 'POST',\n            url: this.apiEndpoint,\n            headers: {\n                'Content-type': 'application/json',\n                'Authorization': `Bearer ${accessToken}`\n            },\n            data: this.getBody()\n        }\n    }\n    public async requestEvent (): Promise {\n        const authResult = await this.getAccessToken()\n        if (!authResult.access_token) throw new Error('missing access_token')\n        const param = this.getRequestParams(authResult.access_token)\n        try {\n            const response = await axios(param)\n            return {\n                statusCode: response.status,\n                message: response.statusText,\n                request: this.getBody()\n            }\n        } catch (e) {\n            if (!e.response) throw e\n            const err = {\n                statusCode: 500,\n                errorCode: 'Error',\n                message: 'Internal Error'\n            }\n            if (e.response.data && e.response.data.message) err.message = e.response.data.message\n            if (e.response.status) err.statusCode = e.response.status\n            if (e.response.statusText) err.errorCode = e.response.statusText\n            throw err\n        }\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProductDetailResponseContentBuilder.html":{"url":"classes/ProductDetailResponseContentBuilder.html","title":"class - ProductDetailResponseContentBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProductDetailResponseContentBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/isp/libs/contentBuilders/Detail.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ContentBuilder\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                contents\n                            \n                            \n                                    Protected\n                                locale\n                            \n                            \n                                    Protected\n                                responseBuilder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getProductDetail\n                            \n                            \n                                    Public\n                                setProductDetail\n                            \n                            \n                                    Public\n                                getResponse\n                            \n                            \n                                    Protected\n                                isJP\n                            \n                            \n                                    Public\n                                putDirective\n                            \n                            \n                                    Public\n                                putDirectives\n                            \n                            \n                                    Public\n                                putRepromptText\n                            \n                            \n                                    Public\n                                putSpeechText\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            contents\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ResponseContent\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         ContentBuilder\n\n                                \n                            \n                        \n                            \n                                    Defined in         ContentBuilder:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            locale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ContentBuilder\n\n                                \n                            \n                        \n                            \n                                    Defined in         ContentBuilder:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            responseBuilder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ResponseBuilder\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ContentBuilder\n\n                                \n                            \n                        \n                            \n                                    Defined in         ContentBuilder:10\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getProductDetail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getProductDetail()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/Detail.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ResponseContent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setProductDetail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setProductDetail()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/Detail.ts:26\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getResponse()\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:43\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Response\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isJP\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isJP()\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:16\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putDirective\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putDirective(directive: Directive)\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:35\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    directive\n                                    \n                                                Directive\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putDirectives\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putDirectives(directives: Directive[])\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    directives\n                                    \n                                            Directive[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putRepromptText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putRepromptText(text: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:23\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putSpeechText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putSpeechText(text: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import ContentBuilder, {\n    ResponseContent\n} from './base'\n\nexport class ProductDetailResponseContentBuilder extends ContentBuilder {\n    // purchaseResult === 'DECLINED'\n    private getProductDetail (): ResponseContent {\n        const product = this.getProduct()\n        if (this.isJP()) {\n            return {\n                speechText: [\n                    product.summary,\n                    '購入しますか？'\n                ].join(' '),\n                repromptText: '購入しますか？'\n            }\n        }\n        return {\n            speechText: [\n                product.summary,\n                'Will you buy the product?'\n            ].join(' '),\n            repromptText: 'Will you buy the product?'\n        }\n    }\n    public setProductDetail (): this {\n        this.contents = this.getProductDetail()\n        return this\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProductListResponseContentBuilder.html":{"url":"classes/ProductListResponseContentBuilder.html","title":"class - ProductListResponseContentBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProductListResponseContentBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/isp/libs/contentBuilders/List.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ContentBuilder\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                listProducts\n                            \n                            \n                                    Protected\n                                contents\n                            \n                            \n                                    Protected\n                                locale\n                            \n                            \n                                    Protected\n                                responseBuilder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getListProducts\n                            \n                            \n                                    Private\n                                getProductLists\n                            \n                            \n                                    Public\n                                setListProducts\n                            \n                            \n                                    Public\n                                setProductLists\n                            \n                            \n                                    Public\n                                getResponse\n                            \n                            \n                                    Protected\n                                isJP\n                            \n                            \n                                    Public\n                                putDirective\n                            \n                            \n                                    Public\n                                putDirectives\n                            \n                            \n                                    Public\n                                putRepromptText\n                            \n                            \n                                    Public\n                                putSpeechText\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            listProducts\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         InSkillProduct[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in packages/isp/libs/contentBuilders/List.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            contents\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ResponseContent\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         ContentBuilder\n\n                                \n                            \n                        \n                            \n                                    Defined in         ContentBuilder:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            locale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ContentBuilder\n\n                                \n                            \n                        \n                            \n                                    Defined in         ContentBuilder:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            responseBuilder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ResponseBuilder\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ContentBuilder\n\n                                \n                            \n                        \n                            \n                                    Defined in         ContentBuilder:10\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getListProducts\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getListProducts()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/List.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ResponseContent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getProductLists\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getProductLists()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/List.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         InSkillProduct[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setListProducts\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setListProducts()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/List.ts:57\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setProductLists\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setProductLists(list: InSkillProduct[])\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/List.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    list\n                                    \n                                                InSkillProduct[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getResponse()\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:43\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Response\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isJP\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isJP()\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:16\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putDirective\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putDirective(directive: Directive)\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:35\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    directive\n                                    \n                                                Directive\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putDirectives\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putDirectives(directives: Directive[])\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    directives\n                                    \n                                            Directive[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putRepromptText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putRepromptText(text: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:23\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putSpeechText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putSpeechText(text: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { services } from 'ask-sdk-model'\nimport ContentBuilder, {\n    ResponseContent\n} from './base'\nimport InSkillProduct = services.monetization.InSkillProduct\nexport class ProductListResponseContentBuilder extends ContentBuilder {\n    private listProducts: InSkillProduct[] = []\n    public setProductLists (list: InSkillProduct[]): this {\n        this.listProducts = list\n        return this\n    }\n    private getProductLists (): InSkillProduct[] {\n        return this.listProducts\n    }\n    private getListProducts (): ResponseContent {\n        const products = this.getProductLists()\n        if (products.length === 1) {\n            const productText = `${products[0].name}. ${products[0].summary}`\n            if (this.isJP()) {\n                return {\n                    speechText: [\n                        productText,\n                        'どの商品を購入しますか？'\n                    ].join(' '),\n                    repromptText: 'どの商品を購入しますか？'\n                }\n            }\n            return {\n                speechText: [\n                    productText,\n                    'What item will you buy?'\n                ].join(' '),\n                repromptText: 'What item will you buy?'\n            }\n        }\n        if (this.isJP()) {\n            return {\n                speechText: [\n                    products.map((product, i): string => {\n                        return `${i + 1}番目。 ${product.name}. ${product.summary}`\n                    }).join(''),\n                    'どの商品を購入しますか？'\n                ].join(' '),\n                repromptText: 'どの商品を購入しますか？'\n            }\n        }\n        return {\n            speechText: [\n                products.map((product, i): string => {\n                    return `No.${i + 1}. ${product.name}. ${product.summary}`\n                }).join('Next.'),\n                'What item will you buy?'\n            ].join(' '),\n            repromptText: 'What item will you buy?'\n        }\n    }\n    public setListProducts (): this {\n        this.contents = this.getListProducts()\n        return this\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Props.html":{"url":"interfaces/Props.html","title":"interface - Props","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Props\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        name\n                                \n                                \n                                        payload\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     E\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     E\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payload\n                                    \n                                \n                                \n                                    \n                                        payload:     P\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     P\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RefundContentBuilder.html":{"url":"classes/RefundContentBuilder.html","title":"class - RefundContentBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RefundContentBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/isp/libs/contentBuilders/Refund.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ContentBuilder\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                contents\n                            \n                            \n                                    Protected\n                                locale\n                            \n                            \n                                    Protected\n                                responseBuilder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getNoEntitledProductResponse\n                            \n                            \n                                    Public\n                                setCancelDirective\n                            \n                            \n                                    Public\n                                setNoEntitledProductResponse\n                            \n                            \n                                    Public\n                                getResponse\n                            \n                            \n                                    Protected\n                                isJP\n                            \n                            \n                                    Public\n                                putDirective\n                            \n                            \n                                    Public\n                                putDirectives\n                            \n                            \n                                    Public\n                                putRepromptText\n                            \n                            \n                                    Public\n                                putSpeechText\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            contents\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ResponseContent\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         ContentBuilder\n\n                                \n                            \n                        \n                            \n                                    Defined in         ContentBuilder:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            locale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ContentBuilder\n\n                                \n                            \n                        \n                            \n                                    Defined in         ContentBuilder:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            responseBuilder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ResponseBuilder\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ContentBuilder\n\n                                \n                            \n                        \n                            \n                                    Defined in         ContentBuilder:10\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getNoEntitledProductResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNoEntitledProductResponse()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/Refund.ts:11\n                \n            \n\n\n            \n                \n                    If product not purchased yet\n\n\n                    \n                        Returns :         ResponseContent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setCancelDirective\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setCancelDirective(productId: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/Refund.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    productId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setNoEntitledProductResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setNoEntitledProductResponse()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/Refund.ts:31\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getResponse()\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:43\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Response\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isJP\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isJP()\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:16\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putDirective\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putDirective(directive: Directive)\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:35\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    directive\n                                    \n                                                Directive\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putDirectives\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putDirectives(directives: Directive[])\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    directives\n                                    \n                                            Directive[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putRepromptText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putRepromptText(text: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:23\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putSpeechText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putSpeechText(text: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n    getCancelProductDirective\n} from '../index'\nimport ContentBuilder, {\n    ResponseContent\n} from './base'\nexport class RefundContentBuilder extends ContentBuilder {\n    /**\n   * If product not purchased yet\n   */\n    public getNoEntitledProductResponse (): ResponseContent {\n        const product = this.getProduct()\n        if (this.isJP()) {\n            return {\n                speechText: [\n                    `${product.name} は購入していない商品ですので、キャンセルできません。`,\n                    '他になにをしますか？'\n                ].join(' '),\n                repromptText: '他に何をしますか？'\n            }\n        }\n        return {\n            speechText: [\n                'You can not refund it.',\n                `Because the ${product.name} is not purchased.`,\n                'What do you want to do next?'\n            ].join(' '),\n            repromptText: 'What will you do for next?'\n        }\n    }\n    public setNoEntitledProductResponse (): this {\n        this.contents = this.getNoEntitledProductResponse()\n        return this\n    }\n    public setCancelDirective (productId: string): this {\n        this.contents.directive = getCancelProductDirective(productId)\n        return this\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RefundResponseContentBuilder.html":{"url":"classes/RefundResponseContentBuilder.html","title":"class - RefundResponseContentBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RefundResponseContentBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/isp/libs/contentBuilders/RefundResponse.ts\n        \n\n\n            \n                Extends\n            \n            \n                        ContentBuilder\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                contents\n                            \n                            \n                                    Protected\n                                locale\n                            \n                            \n                                    Protected\n                                responseBuilder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getAcceptedRefundResult\n                            \n                            \n                                    Private\n                                getDeclinedRefundResult\n                            \n                            \n                                    Private\n                                getFailedRefundResult\n                            \n                            \n                                    Public\n                                setAcceptedRefundResult\n                            \n                            \n                                    Public\n                                setDeclinedRefundResult\n                            \n                            \n                                    Public\n                                setFailedRefundResult\n                            \n                            \n                                    Public\n                                getResponse\n                            \n                            \n                                    Protected\n                                isJP\n                            \n                            \n                                    Public\n                                putDirective\n                            \n                            \n                                    Public\n                                putDirectives\n                            \n                            \n                                    Public\n                                putRepromptText\n                            \n                            \n                                    Public\n                                putSpeechText\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            contents\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ResponseContent\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                            \n                                \n                                    Inherited from         ContentBuilder\n\n                                \n                            \n                        \n                            \n                                    Defined in         ContentBuilder:11\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            locale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ContentBuilder\n\n                                \n                            \n                        \n                            \n                                    Defined in         ContentBuilder:9\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            responseBuilder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ResponseBuilder\n\n                        \n                    \n                            \n                                \n                                    Inherited from         ContentBuilder\n\n                                \n                            \n                        \n                            \n                                    Defined in         ContentBuilder:10\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getAcceptedRefundResult\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAcceptedRefundResult()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/RefundResponse.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ResponseContent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getDeclinedRefundResult\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDeclinedRefundResult()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/RefundResponse.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ResponseContent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getFailedRefundResult\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getFailedRefundResult()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/RefundResponse.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ResponseContent\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setAcceptedRefundResult\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setAcceptedRefundResult()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/RefundResponse.ts:48\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setDeclinedRefundResult\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setDeclinedRefundResult()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/RefundResponse.ts:25\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setFailedRefundResult\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setFailedRefundResult()\n                \n            \n\n\n            \n                \n                    Defined in packages/isp/libs/contentBuilders/RefundResponse.ts:68\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getResponse\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getResponse()\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:43\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Response\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            isJP\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isJP()\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:16\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putDirective\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putDirective(directive: Directive)\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:35\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    directive\n                                    \n                                                Directive\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putDirectives\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putDirectives(directives: Directive[])\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:27\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    directives\n                                    \n                                            Directive[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putRepromptText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putRepromptText(text: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:23\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putSpeechText\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putSpeechText(text: string)\n                \n            \n\n\n            \n                \n                    Inherited from         ContentBuilder\n\n                \n            \n            \n                \n                        Defined in         ContentBuilder:19\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    text\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import ContentBuilder, {\n    ResponseContent\n} from './base'\n\nexport class RefundResponseContentBuilder extends ContentBuilder {\n    // purchaseResult === 'DECLINED'\n    private getDeclinedRefundResult (): ResponseContent {\n        if (this.isJP()) {\n            return {\n                speechText: [\n                    '承知しました。',\n                    '次はなにをしますか？'\n                ].join(' '),\n                repromptText: '次はなにをしますか？'\n            }\n        }\n        return {\n            speechText: [\n                `Ok.`,\n                'What will you do for next?'\n            ].join(' '),\n            repromptText: 'What will you do for next?'\n        }\n    }\n    public setDeclinedRefundResult (): this {\n        this.contents = this.getDeclinedRefundResult()\n        return this\n    }\n    // purchaseResult === 'ACCEPTED'\n    private getAcceptedRefundResult (): ResponseContent {\n        if (this.isJP()) {\n            return {\n                speechText: [\n                    `お使いいただいてありがとうございました。`,\n                    '次は何をしますか？'\n                ].join(' '),\n                repromptText: '次は何をしますか？'\n            }\n        }\n        return {\n            speechText: [\n                'Thanks for enjoy the packages. ',\n                'What will you do for next?'\n            ].join(' '),\n            repromptText: 'What will you do for next?'\n        }\n    }\n    public setAcceptedRefundResult (): this {\n        this.contents = this.getAcceptedRefundResult()\n        return this\n    }\n    private getFailedRefundResult (): ResponseContent {\n        if (this.isJP()) {\n            return {\n                speechText: [\n                    'キャンセル処理に失敗しました。',\n                    'もう一度トライするか、アレクサアプリからサポートに問い合わせてください。'\n                ].join(' ')\n            }\n        }\n        return {\n            speechText: [\n                'There was an error handling your refund request.',\n                'Please try again or contact us for help.'\n            ].join(' ')\n        }\n    }\n    public setFailedRefundResult (): this {\n        this.contents = this.getFailedRefundResult()\n        return this\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RelevantAudience.html":{"url":"interfaces/RelevantAudience.html","title":"interface - RelevantAudience","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RelevantAudience\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        payload\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        payload\n                                    \n                                \n                                \n                                    \n                                        payload:         AudiencePayload\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AudiencePayload\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:         AudienceType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         AudienceType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ReminderAPIClient.html":{"url":"classes/ReminderAPIClient.html","title":"class - ReminderAPIClient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ReminderAPIClient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/serviceClients/libs/Reminders.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Client\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                path\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                createReminder\n                            \n                            \n                                    Public\n                                    Async\n                                deleteReminder\n                            \n                            \n                                    Public\n                                    Async\n                                getReminder\n                            \n                            \n                                    Public\n                                    Async\n                                getReminders\n                            \n                            \n                                    Public\n                                    Async\n                                updateReminder\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '/v1/alerts/reminders'\n                        \n                    \n                        \n                            \n                                    Defined in packages/serviceClients/libs/Reminders.ts:7\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            createReminder\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createReminder(reminderRequest: reminderManagement.ReminderRequest)\n                \n            \n\n\n            \n                \n                    Defined in packages/serviceClients/libs/Reminders.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reminderRequest\n                                    \n                                            reminderManagement.ReminderRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            deleteReminder\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteReminder(alertId: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/serviceClients/libs/Reminders.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    alertId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getReminder\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getReminder(alertId: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/serviceClients/libs/Reminders.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    alertId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getReminders\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getReminders()\n                \n            \n\n\n            \n                \n                    Defined in packages/serviceClients/libs/Reminders.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            updateReminder\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateReminder(alertId: string, reminderRequest: reminderManagement.ReminderRequest)\n                \n            \n\n\n            \n                \n                    Defined in packages/serviceClients/libs/Reminders.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    alertId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reminderRequest\n                                    \n                                            reminderManagement.ReminderRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { services } from 'ask-sdk-model'\nimport Client from './client'\n\nimport reminderManagement = services.reminderManagement\n\nexport class ReminderAPIClient extends Client {\n    protected path = '/v1/alerts/reminders'\n    public async deleteReminder (alertId: string): Promise {\n        return this.delete(alertId)\n    }\n    /**\n     *\n     * @param {string} alertId\n     */\n    public async getReminder (alertId: string): Promise {\n        return this.get(alertId)\n    }\n    /**\n     *\n     * @param {string} alertId\n     * @param {reminderManagement.ReminderRequest} reminderRequest\n     */\n    public async updateReminder (alertId: string, reminderRequest: reminderManagement.ReminderRequest): Promise {\n        return this.put(reminderRequest, alertId)\n    }\n    /**\n     *\n     */\n    public async getReminders (): Promise {\n        return this.get()\n    }\n    /**\n     *\n     * @param {reminderManagement.ReminderRequest} reminderRequest\n     */\n    public async createReminder (reminderRequest: reminderManagement.ReminderRequest): Promise {\n        return this.post(reminderRequest)\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RequestEnvelopeFactory.html":{"url":"classes/RequestEnvelopeFactory.html","title":"class - RequestEnvelopeFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RequestEnvelopeFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/test/libs/RequestEnvelopeFactory.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                apiAccessToken\n                            \n                            \n                                    Public\n                                apiEndpoint\n                            \n                            \n                                    Public\n                                applicationId\n                            \n                            \n                                    Public\n                                    Readonly\n                                context\n                            \n                            \n                                    Public\n                                    Readonly\n                                request\n                            \n                            \n                                    Public\n                                requestDate\n                            \n                            \n                                    Public\n                                requestId\n                            \n                            \n                                    Public\n                                    Readonly\n                                session\n                            \n                            \n                                    Public\n                                sessionId\n                            \n                            \n                                    Public\n                                    Readonly\n                                user\n                            \n                            \n                                    Public\n                                userId\n                            \n                            \n                                    Public\n                                    Readonly\n                                version\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getRequest\n                            \n                            \n                                    Private\n                                putRequestAttributes\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(request: T, context: ContextFactory, session: SessionFactory, user: UserFactory)\n                    \n                \n                        \n                            \n                                Defined in packages/test/libs/RequestEnvelopeFactory.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        request\n                                                  \n                                                        \n                                                                    T\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        context\n                                                  \n                                                        \n                                                                        ContextFactory\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        session\n                                                  \n                                                        \n                                                                        SessionFactory\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        user\n                                                  \n                                                        \n                                                                        UserFactory\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            apiAccessToken\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'token'\n                        \n                    \n                        \n                            \n                                    Defined in packages/test/libs/RequestEnvelopeFactory.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            apiEndpoint\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'https://api.amazonalexa.com'\n                        \n                    \n                        \n                            \n                                    Defined in packages/test/libs/RequestEnvelopeFactory.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            applicationId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'amzn1.echo-sdk-ams.app.' + uuid()\n                        \n                    \n                        \n                            \n                                    Defined in packages/test/libs/RequestEnvelopeFactory.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ContextFactory\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/test/libs/RequestEnvelopeFactory.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            request\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     T\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/test/libs/RequestEnvelopeFactory.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            requestDate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                        \n                            \n                                    Defined in packages/test/libs/RequestEnvelopeFactory.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            requestId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'amzn1.echo-external.request.' + uuid()\n                        \n                    \n                        \n                            \n                                    Defined in packages/test/libs/RequestEnvelopeFactory.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            session\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SessionFactory\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/test/libs/RequestEnvelopeFactory.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sessionId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'SessionID.' + uuid()\n                        \n                    \n                        \n                            \n                                    Defined in packages/test/libs/RequestEnvelopeFactory.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserFactory\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/test/libs/RequestEnvelopeFactory.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            userId\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'amzn1.ask.account.' + uuid()\n                        \n                    \n                        \n                            \n                                    Defined in packages/test/libs/RequestEnvelopeFactory.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Readonly\n                            version\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '1.0'\n                        \n                    \n                        \n                            \n                                    Defined in packages/test/libs/RequestEnvelopeFactory.ts:32\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getRequest()\n                \n            \n\n\n            \n                \n                    Defined in packages/test/libs/RequestEnvelopeFactory.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     RequestEnvelope\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            putRequestAttributes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putRequestAttributes()\n                \n            \n\n\n            \n                \n                    Defined in packages/test/libs/RequestEnvelopeFactory.ts:45\n                \n            \n\n\n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n    RequestEnvelope\n} from 'ask-sdk-core/node_modules/ask-sdk-model'\nimport { v4 as uuid } from 'uuid'\nimport {\n    RequestFactory\n} from './request'\nimport {\n    SessionFactory\n} from './session'\nimport {\n    ContextFactory\n} from './context'\nimport {\n    UserFactory\n} from './user'\nimport { ApplicationFactory } from './application'\n\nexport class RequestEnvelopeFactory {\n    public applicationId: string = 'amzn1.echo-sdk-ams.app.' + uuid()\n    public userId: string = 'amzn1.ask.account.' + uuid()\n    public sessionId: string = 'SessionID.' + uuid()\n    public requestId: string = 'amzn1.echo-external.request.' + uuid()\n    public requestDate: Date = new Date()\n    public apiAccessToken: string = 'token'\n    public apiEndpoint: string = 'https://api.amazonalexa.com'\n\n    public readonly request: T;\n    public readonly context: ContextFactory;\n    public readonly session: SessionFactory;\n    public readonly user: UserFactory;\n    public readonly version = '1.0'\n\n    public constructor (\n        request: T,\n        context: ContextFactory = new ContextFactory(),\n        session: SessionFactory = new SessionFactory(),\n        user: UserFactory = new UserFactory()\n    ) {\n        this.request = request\n        this.context = context\n        this.session = session\n        this.user = user\n    }\n    private putRequestAttributes (): this {\n        const {\n            requestId,\n            applicationId,\n            userId,\n            sessionId,\n            apiAccessToken,\n            apiEndpoint\n        } = this\n        const application = (new ApplicationFactory()).putId(applicationId)\n            .getApplication()\n\n        const user = this.user.putUserId(userId).getUser()\n        this.request.setRequestId(requestId)\n            .setRequestedDate(this.requestDate)\n\n        this.context.system.putApplication(application)\n            .putApiEndpoint(apiEndpoint)\n            .putApiAccessToken(apiAccessToken)\n            .putUser(user)\n\n        this.session.putSessionId(sessionId)\n            .putUser(user)\n            .putApplication(application)\n\n        return this\n    }\n\n    public getRequest (): RequestEnvelope {\n        this.putRequestAttributes()\n        return {\n            request: this.request.getRequest(),\n            session: this.session.getSession(),\n            context: this.context.getContext(),\n            version: this.version\n        }\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RequestFactory.html":{"url":"classes/RequestFactory.html","title":"class - RequestFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RequestFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/test/libs/request/RequestFactory.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                date\n                            \n                            \n                                    Protected\n                                locale\n                            \n                            \n                                    Protected\n                                request\n                            \n                            \n                                    Protected\n                                    Optional\n                                requestID\n                            \n                            \n                                    Protected\n                                requestType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getLocale\n                            \n                            \n                                    Public\n                                getRequest\n                            \n                            \n                                    Private\n                                getRequestId\n                            \n                            \n                                    Private\n                                getRequestType\n                            \n                            \n                                    Private\n                                getTimestamp\n                            \n                            \n                                    Public\n                                putRequest\n                            \n                            \n                                    Public\n                                setLocale\n                            \n                            \n                                    Public\n                                setRequestedDate\n                            \n                            \n                                    Public\n                                setRequestId\n                            \n                            \n                                    Public\n                                setRequestType\n                            \n                            \n                                    Protected\n                                updateRequest\n                            \n                            \n                                    Protected\n                                validateRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(requestType, locale: string)\n                    \n                \n                        \n                            \n                                Defined in packages/test/libs/request/RequestFactory.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        requestType\n                                                  \n                                                        \n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        locale\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            date\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Default value : new Date()\n                        \n                    \n                        \n                            \n                                    Defined in packages/test/libs/request/RequestFactory.ts:9\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            locale\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/test/libs/request/RequestFactory.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            request\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Partial\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in packages/test/libs/request/RequestFactory.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                                Optional\n                            requestID\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/test/libs/request/RequestFactory.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            requestType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/test/libs/request/RequestFactory.ts:8\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getLocale\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getLocale()\n                \n            \n\n\n            \n                \n                    Defined in packages/test/libs/request/RequestFactory.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getRequest()\n                \n            \n\n\n            \n                \n                    Defined in packages/test/libs/request/RequestFactory.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Request\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getRequestId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getRequestId()\n                \n            \n\n\n            \n                \n                    Defined in packages/test/libs/request/RequestFactory.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getRequestType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getRequestType()\n                \n            \n\n\n            \n                \n                    Defined in packages/test/libs/request/RequestFactory.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            getTimestamp\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTimestamp()\n                \n            \n\n\n            \n                \n                    Defined in packages/test/libs/request/RequestFactory.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putRequest(request: T)\n                \n            \n\n\n            \n                \n                    Defined in packages/test/libs/request/RequestFactory.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setLocale\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setLocale(locale: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/test/libs/request/RequestFactory.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    locale\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setRequestedDate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setRequestedDate(date: Date)\n                \n            \n\n\n            \n                \n                    Defined in packages/test/libs/request/RequestFactory.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    date\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setRequestId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setRequestId(id: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/test/libs/request/RequestFactory.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setRequestType\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setRequestType(type)\n                \n            \n\n\n            \n                \n                    Defined in packages/test/libs/request/RequestFactory.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            updateRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateRequest(param?: Partial)\n                \n            \n\n\n            \n                \n                    Defined in packages/test/libs/request/RequestFactory.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    param\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Protected\n                            validateRequest\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateRequest()\n                \n            \n\n\n            \n                \n                    Defined in packages/test/libs/request/RequestFactory.ts:69\n                \n            \n\n\n            \n                \n                    IF the request type has several required value, should overwrite it to test them.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n    Request\n} from 'ask-sdk-core/node_modules/ask-sdk-model'\nimport { v4 as uuid } from 'uuid'\n\nexport class RequestFactory {\n    protected requestID?: string;\n    protected requestType: string;\n    protected date: Date = new Date();\n    protected locale: string;\n    protected request: Partial = {}\n    public constructor (requestType: T['type'], locale: string = 'en-US') {\n        this.requestType = requestType\n        this.locale = locale\n    }\n\n    public setRequestType (type: T['type']): this {\n        this.requestType = type\n        return this\n    }\n    private getRequestType (): string {\n        return this.requestType\n    }\n\n    public setRequestId (id: string): this {\n        this.requestID = id\n        return this\n    }\n    private getRequestId (): string {\n        if (this.requestID) return this.requestID\n        return 'amzn1.echo-external.request.' + uuid()\n    }\n\n    public setRequestedDate (date: Date): this {\n        this.date = date\n        return this\n    }\n    private getTimestamp (): string {\n        const timestamp = this.date.toISOString()\n        return timestamp.substring(0, 19) + 'Z'\n    }\n\n    public setLocale (locale: string): this {\n        this.locale = locale\n        return this\n    }\n    private getLocale (): string {\n        return this.locale\n    }\n\n    public putRequest (request: T): this {\n        this.request = request\n        return this\n    }\n    protected updateRequest (param?: Partial): this {\n        this.request = {\n            ...this.request,\n            timestamp: this.getTimestamp(),\n            locale: this.getLocale(),\n            requestId: this.getRequestId(),\n            type: this.getRequestType(),\n            ...param\n        }\n        return this\n    }\n    /**\n     * IF the request type has several required value, should overwrite it to test them.\n     */\n    protected validateRequest (): void {\n        if (!this.request) throw new Error('No request item')\n    }\n    public getRequest (): Request {\n        this.updateRequest()\n        this.validateRequest()\n        return this.request as Request\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RequestHandlerBuilder.html":{"url":"interfaces/RequestHandlerBuilder.html","title":"interface - RequestHandlerBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RequestHandlerBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/handlers/libs/requestHandlers/HandlerFactory.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    handle\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            handle\n                        \n                        \n                    \n                \n            \n            \n                \nhandle(handler: TMergeTargetHandler)\n                \n            \n\n\n            \n                \n                    Defined in packages/handlers/libs/requestHandlers/HandlerFactory.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    handler\n                                    \n                                                TMergeTargetHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TRequestHandler\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { RequestHandler, HandlerInput } from 'ask-sdk-core'\nimport { Response, Request, RequestEnvelope } from 'ask-sdk-model'\nimport Resolver, { interfaces } from 'class-resolver'\nimport { isLaunchRequest } from 'ask-utils'\n\nexport interface TMergeTargetHandler {\n    canHandle?: (input: Input) => Promise | boolean;\n    handle?: (input: Input) => Promise | Output;\n}\nexport interface TRequestHandler {\n    canHandle: (input: Input) => Promise | boolean;\n    handle: (input: Input) => Promise | Output;\n}\nexport interface CustomeRequestEnvelope extends RequestEnvelope {\n    request: CustomRequest;\n}\nexport interface CustomHandlerInput extends HandlerInput {\n    requestEnvelope: CustomeRequestEnvelope;\n}\nexport interface RequestHandlerBuilder extends interfaces.ResolveTarget {\n    handle(handler: TMergeTargetHandler): TRequestHandler;\n}\n\nconst merge = (handler: TMergeTargetHandler, target?: TMergeTargetHandler): TRequestHandler => {\n    const fallBackHandler: RequestHandler = {\n        canHandle () {\n            return true\n        },\n        handle (handlerInput) {\n            return handlerInput.responseBuilder.getResponse()\n        }\n    }\n    return Object.assign({}, fallBackHandler, target, handler)\n}\n\nexport type SupportedHandlerType = 'LaunchRequest'\nexport class RequestHandlerFactory {\n    public static create (type: SupportedHandlerType, handler: TMergeTargetHandler): TRequestHandler {\n        return new Resolver(\n            new LaunchRequestHandlerFactory(),\n            new FallbackIntentFactory()\n        ).resolve(type).handle(handler)\n    }\n}\nexport default RequestHandlerFactory\n\nexport class LaunchRequestHandlerFactory implements RequestHandlerBuilder {\n    supports (type: string) {\n        return type === 'LaunchRequest'\n    }\n    handle (handler: TMergeTargetHandler) {\n        return merge(handler, {\n            canHandle (handlerInput) {\n                return isLaunchRequest(handlerInput)\n            }\n        })\n    }\n}\n\nexport class FallbackIntentFactory implements RequestHandlerBuilder {\n    supports () {\n        return true\n    }\n    handle (handler: TMergeTargetHandler) {\n        return merge(handler)\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RequestHandlerFactory.html":{"url":"classes/RequestHandlerFactory.html","title":"class - RequestHandlerFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RequestHandlerFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/handlers/libs/requestHandlers/HandlerFactory.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(type: SupportedHandlerType, handler: TMergeTargetHandler)\n                \n            \n\n\n            \n                \n                    Defined in packages/handlers/libs/requestHandlers/HandlerFactory.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    type\n                                    \n                                                SupportedHandlerType\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    handler\n                                    \n                                                TMergeTargetHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TRequestHandler\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { RequestHandler, HandlerInput } from 'ask-sdk-core'\nimport { Response, Request, RequestEnvelope } from 'ask-sdk-model'\nimport Resolver, { interfaces } from 'class-resolver'\nimport { isLaunchRequest } from 'ask-utils'\n\nexport interface TMergeTargetHandler {\n    canHandle?: (input: Input) => Promise | boolean;\n    handle?: (input: Input) => Promise | Output;\n}\nexport interface TRequestHandler {\n    canHandle: (input: Input) => Promise | boolean;\n    handle: (input: Input) => Promise | Output;\n}\nexport interface CustomeRequestEnvelope extends RequestEnvelope {\n    request: CustomRequest;\n}\nexport interface CustomHandlerInput extends HandlerInput {\n    requestEnvelope: CustomeRequestEnvelope;\n}\nexport interface RequestHandlerBuilder extends interfaces.ResolveTarget {\n    handle(handler: TMergeTargetHandler): TRequestHandler;\n}\n\nconst merge = (handler: TMergeTargetHandler, target?: TMergeTargetHandler): TRequestHandler => {\n    const fallBackHandler: RequestHandler = {\n        canHandle () {\n            return true\n        },\n        handle (handlerInput) {\n            return handlerInput.responseBuilder.getResponse()\n        }\n    }\n    return Object.assign({}, fallBackHandler, target, handler)\n}\n\nexport type SupportedHandlerType = 'LaunchRequest'\nexport class RequestHandlerFactory {\n    public static create (type: SupportedHandlerType, handler: TMergeTargetHandler): TRequestHandler {\n        return new Resolver(\n            new LaunchRequestHandlerFactory(),\n            new FallbackIntentFactory()\n        ).resolve(type).handle(handler)\n    }\n}\nexport default RequestHandlerFactory\n\nexport class LaunchRequestHandlerFactory implements RequestHandlerBuilder {\n    supports (type: string) {\n        return type === 'LaunchRequest'\n    }\n    handle (handler: TMergeTargetHandler) {\n        return merge(handler, {\n            canHandle (handlerInput) {\n                return isLaunchRequest(handlerInput)\n            }\n        })\n    }\n}\n\nexport class FallbackIntentFactory implements RequestHandlerBuilder {\n    supports () {\n        return true\n    }\n    handle (handler: TMergeTargetHandler) {\n        return merge(handler)\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RequestHandlerFactory-1.html":{"url":"classes/RequestHandlerFactory-1.html","title":"class - RequestHandlerFactory-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RequestHandlerFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/router/libs/requestHandlers/createRequestHandler.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addRoutes\n                            \n                            \n                                    Static\n                                create\n                            \n                            \n                                    Public\n                                createHandlers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            router\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Router[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in packages/router/libs/requestHandlers/createRequestHandler.ts:26\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            addRoutes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    addRoutes(routers: Router[])\n                \n            \n\n\n            \n                \n                    Defined in packages/router/libs/requestHandlers/createRequestHandler.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    routers\n                                    \n                                                Router[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create(route: Router)\n                \n            \n\n\n            \n                \n                    Defined in packages/router/libs/requestHandlers/createRequestHandler.ts:39\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                Router\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     RequestHandler\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            createHandlers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createHandlers()\n                \n            \n\n\n            \n                \n                    Defined in packages/router/libs/requestHandlers/createRequestHandler.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     RequestHandler[]\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { StateManager, State, InitialState } from '@ask-utils/situation'\nimport { RequestHandler } from 'ask-sdk'\nimport {\n    Response\n} from 'ask-sdk-core/node_modules/ask-sdk-model'\nimport {\n    RouteMatcher\n} from '../matcher'\nimport {\n    Router,\n    Situation\n} from '../model'\n\nconst getSituation = (route: Router): Situation | undefined => {\n    const { situation } = route\n    return situation || undefined\n}\nconst getStateFromRoute = (route: Router): InitialState | undefined => {\n    const situation = getSituation(route)\n    if (!situation || !situation.state) return undefined\n    return situation.state as InitialState\n}\n\nexport class RequestHandlerFactory {\n    private router: Router[] = []\n\n    public addRoutes (...routers: Router[]): this {\n        this.router = [...this.router, ...routers]\n        return this\n    }\n\n    public createHandlers (): RequestHandler[] {\n        return this.router.map((route): RequestHandler => {\n            return RequestHandlerFactory.create(route)\n        })\n    }\n\n    public static create (route: Router): RequestHandler {\n        const expectedState = getStateFromRoute(route)\n        return {\n            async canHandle (handlerInput): Promise {\n                const matcher = new RouteMatcher(handlerInput, route)\n                await matcher.match()\n                return matcher.getMatchResult()\n            },\n            handle: (input): Response | Promise => {\n                const stateManager = new StateManager(input.attributesManager, expectedState)\n                /**\n                 * Auto state updator\n                 */\n                if (expectedState) {\n                    const { current, next } = expectedState\n                    if (current && next) {\n                        stateManager.setState(next, [], [current])\n                    }\n                }\n                const situation = getSituation(route)\n                if (situation && situation.shouldEndSession !== undefined) {\n                    input.responseBuilder.withShouldEndSession(situation.shouldEndSession)\n                }\n                const result = route.handler(input, {\n                    stateManager\n                })\n                return result\n            }\n        }\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RequstBody.html":{"url":"interfaces/RequstBody.html","title":"interface - RequstBody","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  RequstBody\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        event\n                                \n                                \n                                        expiryTime\n                                \n                                \n                                        timestamp\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        event\n                                    \n                                \n                                \n                                    \n                                        event:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        expiryTime\n                                    \n                                \n                                \n                                    \n                                        expiryTime:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timestamp\n                                    \n                                \n                                \n                                    \n                                        timestamp:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Response.html":{"url":"interfaces/Response.html","title":"interface - Response","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Response\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        message\n                                \n                                \n                                        request\n                                \n                                \n                                        statusCode\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        request\n                                    \n                                \n                                \n                                    \n                                        request:         RequstBody\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RequstBody\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusCode\n                                    \n                                \n                                \n                                    \n                                        statusCode:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ResponseContent.html":{"url":"interfaces/ResponseContent.html","title":"interface - ResponseContent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ResponseContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/libs/contentBuilder.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        directives\n                                \n                                \n                                            Optional\n                                        repromptText\n                                \n                                \n                                            Optional\n                                        speechText\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        directives\n                                    \n                                \n                                \n                                    \n                                        directives:     Directive[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Directive[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        repromptText\n                                    \n                                \n                                \n                                    \n                                        repromptText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        speechText\n                                    \n                                \n                                \n                                    \n                                        speechText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ResponseBuilder } from 'ask-sdk-core'\nimport { Response, Directive } from 'ask-sdk-model'\nexport interface ResponseContent {\n    speechText?: string;\n    repromptText?: string;\n    directives?: Directive[];\n}\nexport class ContentBuilder {\n    protected locale: string\n    protected responseBuilder: ResponseBuilder\n    protected contents: ResponseContent = {}\n    public constructor (locale: string, responseBuilder: ResponseBuilder) {\n        this.locale = locale\n        this.responseBuilder = responseBuilder\n    }\n    protected isJP (): boolean {\n        return /^ja/.test(this.locale)\n    }\n    public putSpeechText (text: string): this {\n        this.contents.speechText = text\n        return this\n    }\n    public putRepromptText (text: string): this {\n        this.contents.repromptText = text\n        return this\n    }\n    public putDirectives (directives: Directive[]): this {\n        if (!this.contents.directives) {\n            this.contents.directives = directives\n            return this\n        }\n        this.contents.directives = this.contents.directives.concat(directives)\n        return this\n    }\n    public putDirective (directive: Directive): this {\n        if (!this.contents.directives) {\n            this.contents.directives = [directive]\n            return this\n        }\n        this.contents.directives.push(directive)\n        return this\n    }\n    public getResponse (): Response {\n        const { speechText, repromptText, directives } = this.contents\n        if (speechText) this.responseBuilder.speak(speechText)\n        if (repromptText) this.responseBuilder.reprompt(repromptText)\n        if (directives) directives.forEach((directive): ResponseBuilder => this.responseBuilder.addDirective(directive))\n        return this.responseBuilder.getResponse()\n    }\n}\nexport default ContentBuilder\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ResponseContent-1.html":{"url":"interfaces/ResponseContent-1.html","title":"interface - ResponseContent-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ResponseContent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/isp/libs/contentBuilders/base.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        directive\n                                \n                                \n                                            Optional\n                                        repromptText\n                                \n                                \n                                            Optional\n                                        speechText\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        directive\n                                    \n                                \n                                \n                                    \n                                        directive:         Directive\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Directive\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        repromptText\n                                    \n                                \n                                \n                                    \n                                        repromptText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        speechText\n                                    \n                                \n                                \n                                    \n                                        speechText:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { services, Response, Directive } from 'ask-sdk-model'\nimport { ResponseBuilder } from 'ask-sdk-core'\n\nimport InSkillProduct = services.monetization.InSkillProduct\n\nexport interface ResponseContent {\n    speechText?: string;\n    repromptText?: string;\n    directive?: Directive;\n}\n\nexport class ContentBuilder {\n    protected locale: string\n    protected responseBuilder: ResponseBuilder\n    protected contents: ResponseContent = {}\n    public constructor (locale: string, responseBuilder: ResponseBuilder) {\n        this.locale = locale\n        this.responseBuilder = responseBuilder\n    }\n    protected isJP (): boolean {\n        return /^ja/.test(this.locale)\n    }\n    public getResponse (): Response {\n        const { speechText, repromptText, directive } = this.contents\n        if (speechText) this.responseBuilder.speak(speechText)\n        if (repromptText) this.responseBuilder.reprompt(repromptText)\n        if (directive) this.responseBuilder.addDirective(directive)\n        return this.responseBuilder.getResponse()\n    }\n}\n\nexport class ISPContentBuilder extends ContentBuilder {\n    protected productName?: string\n    protected product?: InSkillProduct\n    public constructor (locale: string, responseBuilder: ResponseBuilder, productName?: string, product?: InSkillProduct) {\n        super(locale, responseBuilder)\n        if (productName) this.productName = productName\n        if (product) this.product = product\n    }\n    public setProduct (product: InSkillProduct): this {\n        this.product = product\n        return this\n    }\n    protected getProduct (): InSkillProduct {\n        const { product } = this\n        if (!product) throw new Error('No products')\n        return product\n    }\n    public setProductName (name: string): this {\n        this.productName = name\n        return this\n    }\n    protected getProductName (): string {\n        if (!this.productName) throw new Error('No product name')\n        return this.productName\n    }\n    /**\n   * If the device or account does not supports ISP\n   */\n    private getUnSupportedISPResponse (): ResponseContent {\n        if (this.isJP()) {\n            return {\n                speechText: [\n                    'すみません。',\n                    'お使いのデバイス・アプリでは、スキル内課金を利用することができません。',\n                    '別のデバイスを利用するか、アレクサアプリから設定を確認してもう一度お試しください。',\n                    '次はなにをしますか？',\n                    'スキルを終了して、アプリの設定を確認したい場合は「終了」と話しかけてください。'\n                ].join(' '),\n                repromptText: [\n                    '次はなにをしますか？',\n                    'スキルを終了して、アプリの設定を確認したい場合は「終了」と話しかけてください。'\n                ].join(' ')\n            }\n        }\n        return {\n            speechText: [\n                'Sorry, you can not purchase by the device.',\n                'Please check your device and application settings by the Alexa app.',\n                'What will you do the next?'\n            ].join(' '),\n            repromptText: [\n                'What will you do the next?',\n                'If you want to stop the skill, please say me \"STOP\".'\n            ].join(' ')\n        }\n    }\n    public setUnSupportedISPResponse (): this {\n        this.contents = this.getUnSupportedISPResponse()\n        return this\n    }\n    /**\n   * Product does not found response\n   */\n    private getProductsNotFoundResponse (): ResponseContent {\n        if (this.isJP()) {\n            return {\n                speechText: [\n                    `すみません。商品が見つかりませんでした。`,\n                    '他に何をしますか？'\n                ].join(' '),\n                repromptText: '他に何をしますか？'\n            }\n        }\n        return {\n            speechText: `I can't find any products you can buy. What do you want to do next?`,\n            repromptText: `What do you want to do next?`\n        }\n    }\n    public setProductsNotFoundResponse (): this {\n        this.contents = this.getProductsNotFoundResponse()\n        return this\n    }\n    /**\n   * Product does not found response\n   */\n    private getProductNotFoundResponse (): ResponseContent {\n        try {\n            const productName = this.getProductName()\n            if (this.isJP()) {\n                return {\n                    speechText: [\n                        `${productName}を購入することができます。`,\n                        `詳細を聞きたい場合は「${productName}について教えて」、`,\n                        `購入する場合は「${productName}を購入」と話しかけてください。`,\n                        'どうしますか？'\n                    ].join(' '),\n                    repromptText: '購入・詳細、どちらにしますか？'\n                }\n            }\n            return {\n                speechText: `${productName}. what item do you want?`,\n                repromptText: `${productName}. what item do you want?`\n            }\n        } catch (e) {\n            return this.getProductsNotFoundResponse()\n        }\n    }\n    public setProductNotFoundResponse (): this {\n        this.contents = this.getProductNotFoundResponse()\n        return this\n    }\n    /**\n   * If product not found\n   */\n    private getCanNotBuyTheProductResponse (): ResponseContent {\n        if (this.isJP()) {\n            return {\n                speechText: 'すみません。その商品は現在購入できません。他に何をしますか？',\n                repromptText: '他に何をしますか？'\n            }\n        }\n        return {\n            speechText: \"I don't think we have a product by that name.  Can you try again?\",\n            repromptText: \"I didn't catch that. Can you try again?\"\n        }\n    }\n    public setCanNotBuyTheProductResponse (): this {\n        this.contents = this.getCanNotBuyTheProductResponse()\n        return this\n    }\n    /**\n   * If product already purchased\n   */\n    public getEntitledProductResponse (): ResponseContent {\n        if (this.isJP()) {\n            return {\n                speechText: 'その商品はすでに購入済の様子です。他に何をしますか？',\n                repromptText: '他に何をしますか？'\n            }\n        }\n        return {\n            speechText: 'You already entitled the product. What will you do for next?',\n            repromptText: 'What will you do for next?'\n        }\n    }\n    public setEntitledProductResponse (): this {\n        this.contents = this.getEntitledProductResponse()\n        return this\n    }\n}\nexport default ISPContentBuilder\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RouteMatcher.html":{"url":"classes/RouteMatcher.html","title":"class - RouteMatcher","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RouteMatcher\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/router/libs/matcher/RouteMatcher.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                canHandle\n                            \n                            \n                                    Private\n                                    Readonly\n                                input\n                            \n                            \n                                    Private\n                                    Readonly\n                                request\n                            \n                            \n                                    Private\n                                    Readonly\n                                stateManager\n                            \n                            \n                                    Private\n                                    Readonly\n                                targetRoute\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                executeCustomSituation\n                            \n                            \n                                    Public\n                                getMatchResult\n                            \n                            \n                                    Public\n                                    Async\n                                match\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(input: HandlerInput, targetRoute: Router)\n                    \n                \n                        \n                            \n                                Defined in packages/router/libs/matcher/RouteMatcher.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        input\n                                                  \n                                                        \n                                                                    HandlerInput\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        targetRoute\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            canHandle\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in packages/router/libs/matcher/RouteMatcher.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            input\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     HandlerInput\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/router/libs/matcher/RouteMatcher.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            request\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Request\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/router/libs/matcher/RouteMatcher.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            stateManager\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         StateManager\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/router/libs/matcher/RouteMatcher.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            targetRoute\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Router\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/router/libs/matcher/RouteMatcher.ts:28\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            Async\n                            executeCustomSituation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    executeCustomSituation()\n                \n            \n\n\n            \n                \n                    Defined in packages/router/libs/matcher/RouteMatcher.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getMatchResult\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMatchResult()\n                \n            \n\n\n            \n                \n                    Defined in packages/router/libs/matcher/RouteMatcher.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            match\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    match()\n                \n            \n\n\n            \n                \n                    Defined in packages/router/libs/matcher/RouteMatcher.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n    HandlerInput\n} from 'ask-sdk-core'\nimport {\n    getRequest,\n    isIntentRequestType\n} from '@ask-utils/core'\nimport {\n    StateManager,\n    State\n} from '@ask-utils/situation'\nimport {\n    Request\n} from 'ask-sdk-core/node_modules/ask-sdk-model'\nimport {\n    Router\n} from '../model'\nimport {\n    shouldMatchIntentRequest,\n    shouldMatchRequestType\n} from './helpers'\n\nexport class RouteMatcher  {\n    private readonly input: HandlerInput\n    private readonly stateManager: StateManager;\n    private readonly request: Request\n    private readonly targetRoute: Router\n    private canHandle: boolean = false\n    public constructor (input: HandlerInput, targetRoute: Router) {\n        this.input = input\n        this.request = getRequest(input)\n        this.stateManager = new StateManager(input.attributesManager)\n        this.targetRoute = targetRoute\n    }\n    private async executeCustomSituation (): Promise {\n        if (!this.targetRoute.situation || !this.targetRoute.situation.custom) return\n        this.canHandle = await this.targetRoute.situation.custom(this.input)\n    }\n    public async match (): Promise {\n        const {\n            request, targetRoute\n        } = this\n        /**\n         * If request type unmatch, always return false\n         */\n        if (!shouldMatchRequestType(request, targetRoute)) {\n            this.canHandle = false\n            return\n        }\n\n        /**\n         * If the request is intent request should check the intent name\n         */\n        if (isIntentRequestType(this.request)) {\n            this.canHandle = shouldMatchIntentRequest(request, targetRoute)\n        } else {\n            // If the request is not Intent Request, set true.(We can overwrite by state and custom)\n            this.canHandle = true\n        }\n\n        /**\n         * Check the requested state\n         */\n        if (this.stateManager.hasState() && this.targetRoute.situation) {\n            const currentState = this.targetRoute.situation.state\n            if (currentState) {\n                this.canHandle = this.stateManager.matchedCurrentState(currentState.current as T)\n            }\n        }\n\n        /**\n         * Execute custom matcher function\n         */\n        await this.executeCustomSituation()\n    }\n    public getMatchResult (): boolean {\n        return this.canHandle\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Router.html":{"url":"interfaces/Router.html","title":"interface - Router","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Router\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/router/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        handler\n                                \n                                \n                                            Optional\n                                        intentName\n                                \n                                \n                                        requestType\n                                \n                                \n                                            Optional\n                                        situation\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        handler\n                                    \n                                \n                                \n                                    \n                                        handler:         RouterHandler\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         RouterHandler\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        intentName\n                                    \n                                \n                                \n                                    \n                                        intentName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        requestType\n                                    \n                                \n                                \n                                    \n                                        requestType:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        situation\n                                    \n                                \n                                \n                                    \n                                        situation:         Situation\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Situation\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HandlerInput } from 'ask-sdk'\nimport { Response, Request\n} from 'ask-sdk-core/node_modules/ask-sdk-model'\nimport { StateManager, State } from '@ask-utils/situation'\n\n/**\n * Router for ASK SDK v2\n */\nexport interface Situation {\n    state?: SituationState;\n    custom?: (input: HandlerInput) => boolean | Promise;\n    shouldEndSession?: boolean;\n}\n\ninterface SituationState {\n    current?: string;\n    next?: string;\n}\n\nexport interface HandlerHelpers {\n    stateManager: StateManager;\n}\nexport type RouterHandler = (handlerInput: HandlerInput, helpers: HandlerHelpers) => Response | Promise\n\nexport interface Router {\n    requestType: Request['type'];\n    intentName?: string;\n    situation?: Situation;\n    handler: RouterHandler;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/S3SkillConfig.html":{"url":"interfaces/S3SkillConfig.html","title":"interface - S3SkillConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  S3SkillConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ask-utils/libs/models.ts\n        \n\n\n            \n                Extends\n            \n            \n                        BaseSkillConfig\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        bucketName\n                                \n                                \n                                        bucketPathPrefix\n                                \n                                \n                                        persistanceType\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bucketName\n                                    \n                                \n                                \n                                    \n                                        bucketName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bucketPathPrefix\n                                    \n                                \n                                \n                                    \n                                        bucketPathPrefix:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        persistanceType\n                                    \n                                \n                                \n                                    \n                                        persistanceType:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n    RequestInterceptor,\n    ResponseInterceptor,\n    ErrorHandler,\n    RequestHandler\n} from 'ask-sdk'\nimport {\n    SkillConstants\n} from '@ask-utils/handlers'\n\ntype PersistanceType = 'DynamoDB' | 'S3'\ninterface BaseSkillConfig {\n    persistanceType: PersistanceType;\n    isISP?: boolean;\n    constants?: T;\n}\nexport interface S3SkillConfig extends BaseSkillConfig {\n    persistanceType: 'S3';\n    bucketName: string;\n    bucketPathPrefix: string;\n}\nexport interface DynamoDBSkillConfig extends BaseSkillConfig {\n    persistanceType: 'DynamoDB';\n    tableName: string;\n}\nexport type SkillConfig = S3SkillConfig | DynamoDBSkillConfig\nexport interface SkillHandlers {\n    requestHandlers: RequestHandler[];\n    requestInterceptors?: RequestInterceptor[];\n    responseInterceptors?: ResponseInterceptor[];\n    errorHandlers?: ErrorHandler[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SentryErrorHandlerFactory.html":{"url":"classes/SentryErrorHandlerFactory.html","title":"class - SentryErrorHandlerFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SentryErrorHandlerFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/error-handlers/libs/index.ts\n        \n\n            \n                Description\n            \n            \n                ErrorHandler Factory for Sentry\n\n            \n\n\n\n            \n                Example\n            \n            \n                        \n                            Basic\n```typescript\n * const ErrorHandler = SentryErrorHandlerFactory.init().getHandler()\n * ```\n                        \n                        \n                            Custom speech and reprompt\n```typescript\n * const ErrorHandler = SentryErrorHandlerFactory.init()\n *                          .setErrorResponse('Speech something', 'reprompt something')\n *                          .getHandler()\n * ```\n                        \n                        \n                            Custom handler\n```typescript\n * const ErrorHandler = SentryErrorHandlerFactory.init()\n *                          .setHandle((handlerInput) => {\n *                            return handlerInput.responseBuilder\n *                              .speak('Sorry I could not understand the meaning. Please tell me again')\n *                              .reprompt('Could you tell me onece more?')\n *                              .getResponse()\n *                          })\n *                          .getHandler()\n * ```\n                        \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in packages/error-handlers/libs/index.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         ErrorHandlerBuilder\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ErrorHandler, RequestInterceptor, HandlerInput } from 'ask-sdk-core'\nimport { Response } from 'ask-sdk-model'\nimport * as Sentry from '@sentry/node'\nSentry.init({ dsn: process.env.SENTRY_DNS as string })\n\nexport type ErrorHandle = (handlerInput: HandlerInput, error: Error) => Promise | Response\nexport interface ErrorHandlerBuilder {\n    getHandler(): ErrorHandler;\n    setHandle(handle: ErrorHandle): ErrorHandlerBuilder;\n    setErrorResponse(speechText: string, repromptText: string): ErrorHandlerBuilder;\n}\n/**\n * ErrorHandler Factory for Sentry\n *\n * @example Basic\n * ```typescript\n * const ErrorHandler = SentryErrorHandlerFactory.init().getHandler()\n * ```\n * @example Custom speech and reprompt\n * ```typescript\n * const ErrorHandler = SentryErrorHandlerFactory.init()\n *                          .setErrorResponse('Speech something', 'reprompt something')\n *                          .getHandler()\n * ```\n * @example Custom handler\n * ```typescript\n * const ErrorHandler = SentryErrorHandlerFactory.init()\n *                          .setHandle((handlerInput) => {\n *                            return handlerInput.responseBuilder\n *                              .speak('Sorry I could not understand the meaning. Please tell me again')\n *                              .reprompt('Could you tell me onece more?')\n *                              .getResponse()\n *                          })\n *                          .getHandler()\n * ```\n */\nexport class SentryErrorHandlerFactory {\n    public static init (): ErrorHandlerBuilder {\n        let handlerFilter: ErrorHandle = (handlerInput) => {\n            return handlerInput.responseBuilder\n                .speak('Sorry I could not understand the meaning. Please tell me again')\n                .reprompt('Could you tell me onece more?')\n                .getResponse()\n        }\n\n        const handler: ErrorHandler = {\n            canHandle: () => true,\n            handle: (handlerInput, error) => {\n                Sentry.captureEvent({\n                    message: error.message,\n                    extra: {\n                        request: handlerInput.requestEnvelope,\n                        error,\n                        stack: error.stack\n                    }\n                })\n                return handlerFilter(handlerInput, error)\n            }\n        }\n        return {\n            getHandler (): ErrorHandler {\n                return handler\n            },\n            setHandle (handle: ErrorHandle) {\n                handlerFilter = handle\n                return this\n            },\n            setErrorResponse (speechText: string, repromptText: string) {\n                handlerFilter = (handlerInput) => {\n                    return handlerInput.responseBuilder\n                        .speak(speechText)\n                        .reprompt(repromptText)\n                        .getResponse()\n                }\n                return this\n            }\n        }\n    }\n}\n\nexport const SentryDefaultErrorHandler: ErrorHandler = SentryErrorHandlerFactory.init().getHandler()\n\n/**\n * Set additional track information\n *\n * @example\n * import Alexa from 'ask-sdk'\n * import { SetErrorTrackerInterceptor, SentryDefaultErrorHandler } from '@ask-utils/error-handlers'\n *\n * export const handler = Alexa.SkillBuilders.standard()\n *                            .addErrorHandlers(SentryDefaultErrorHandler)\n *                            .addRequestInterceptors(SetErrorTrackerInterceptor)\n *                            .lambda()\n */\nexport const SetErrorTrackerInterceptor: RequestInterceptor = {\n    process ({ requestEnvelope }) {\n        const { System } = requestEnvelope.context\n        const userParams: {[key: string]: string} = {\n            userId: System.user.userId\n        }\n        if (System.device) userParams.deviceId = System.device.deviceId\n        if (requestEnvelope.session) userParams.sessionId = requestEnvelope.session.sessionId\n\n        Sentry.configureScope(scope => {\n            scope.setTag('request_id', requestEnvelope.request.requestId)\n            scope.setUser(userParams)\n        })\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SessionAttribute.html":{"url":"interfaces/SessionAttribute.html","title":"interface - SessionAttribute","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SessionAttribute\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/test/libs/session/SessionFactory.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in packages/test/libs/session/SessionFactory.ts:8\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import {\n    User,\n    Session,\n    Application\n} from 'ask-sdk-core/node_modules/ask-sdk-model'\nimport { v4 as uuid } from 'uuid'\n\nexport interface SessionAttribute {\n    [key: string]: any;\n}\n\nexport class SessionFactory {\n    protected session: Session = {\n        new: true,\n        sessionId: 'SessionID.' + uuid(),\n        application: {\n            applicationId: ''\n        },\n        user: {\n            userId: ''\n        }\n    }\n\n    public putApplication (app: Application): this {\n        this.session.application = app\n        return this\n    }\n\n    public putSessionId (sessionId: string): this {\n        this.session.sessionId = sessionId\n        return this\n    }\n    public putUser (user: User): this {\n        this.session.user = user\n        return this\n    }\n\n    public putAttributes (attributes: T): this {\n        this.session.attributes = attributes\n        return this\n    }\n\n    public isNewSession (status: boolean): this {\n        this.session.new = status\n        return this\n    }\n\n    public putSession (session: Session): this {\n        this.session = session\n        return this\n    }\n    public getSession (): Session {\n        return this.session\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SessionFactory.html":{"url":"classes/SessionFactory.html","title":"class - SessionFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SessionFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/test/libs/session/SessionFactory.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                session\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getSession\n                            \n                            \n                                    Public\n                                isNewSession\n                            \n                            \n                                    Public\n                                putApplication\n                            \n                            \n                                    Public\n                                putAttributes\n                            \n                            \n                                    Public\n                                putSession\n                            \n                            \n                                    Public\n                                putSessionId\n                            \n                            \n                                    Public\n                                putUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            session\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Session\n\n                        \n                    \n                    \n                        \n                            Default value : {\n        new: true,\n        sessionId: 'SessionID.' + uuid(),\n        application: {\n            applicationId: ''\n        },\n        user: {\n            userId: ''\n        }\n    }\n                        \n                    \n                        \n                            \n                                    Defined in packages/test/libs/session/SessionFactory.ts:13\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getSession\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSession()\n                \n            \n\n\n            \n                \n                    Defined in packages/test/libs/session/SessionFactory.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Session\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            isNewSession\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isNewSession(status: boolean)\n                \n            \n\n\n            \n                \n                    Defined in packages/test/libs/session/SessionFactory.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    status\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putApplication\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putApplication(app: Application)\n                \n            \n\n\n            \n                \n                    Defined in packages/test/libs/session/SessionFactory.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            Application\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putAttributes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putAttributes(attributes: T)\n                \n            \n\n\n            \n                \n                    Defined in packages/test/libs/session/SessionFactory.ts:38\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    attributes\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putSession\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putSession(session: Session)\n                \n            \n\n\n            \n                \n                    Defined in packages/test/libs/session/SessionFactory.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    session\n                                    \n                                            Session\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putSessionId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putSessionId(sessionId: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/test/libs/session/SessionFactory.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    sessionId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putUser(user: User)\n                \n            \n\n\n            \n                \n                    Defined in packages/test/libs/session/SessionFactory.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                            User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n    User,\n    Session,\n    Application\n} from 'ask-sdk-core/node_modules/ask-sdk-model'\nimport { v4 as uuid } from 'uuid'\n\nexport interface SessionAttribute {\n    [key: string]: any;\n}\n\nexport class SessionFactory {\n    protected session: Session = {\n        new: true,\n        sessionId: 'SessionID.' + uuid(),\n        application: {\n            applicationId: ''\n        },\n        user: {\n            userId: ''\n        }\n    }\n\n    public putApplication (app: Application): this {\n        this.session.application = app\n        return this\n    }\n\n    public putSessionId (sessionId: string): this {\n        this.session.sessionId = sessionId\n        return this\n    }\n    public putUser (user: User): this {\n        this.session.user = user\n        return this\n    }\n\n    public putAttributes (attributes: T): this {\n        this.session.attributes = attributes\n        return this\n    }\n\n    public isNewSession (status: boolean): this {\n        this.session.new = status\n        return this\n    }\n\n    public putSession (session: Session): this {\n        this.session = session\n        return this\n    }\n    public getSession (): Session {\n        return this.session\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SettingAPIClient.html":{"url":"classes/SettingAPIClient.html","title":"class - SettingAPIClient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SettingAPIClient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/serviceClients/libs/Settings.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Client\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                path\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                getDistanceUnits\n                            \n                            \n                                    Public\n                                    Async\n                                getTempratureUnit\n                            \n                            \n                                    Public\n                                    Async\n                                getTimezone\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '/v2/devices/'\n                        \n                    \n                        \n                            \n                                    Defined in packages/serviceClients/libs/Settings.ts:5\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getDistanceUnits\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getDistanceUnits(deviceId: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/serviceClients/libs/Settings.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    deviceId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getTempratureUnit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTempratureUnit(deviceId: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/serviceClients/libs/Settings.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    deviceId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getTimezone\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTimezone(deviceId: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/serviceClients/libs/Settings.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    deviceId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { services } from 'ask-sdk-model'\nimport Client from './client'\n\nexport class SettingAPIClient extends Client {\n    protected path = '/v2/devices/'\n    public async getTimezone (deviceId: string): Promise {\n        return this.get(`${deviceId}/settings/System.timeZone`)\n    }\n    public async getTempratureUnit (deviceId: string): Promise {\n        return this.get(`${deviceId}/settings/System.temperatureUnit`)\n    }\n    public async getDistanceUnits (deviceId: string): Promise {\n        return this.get(`${deviceId}/settings/System.distanceUnits`)\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Situation.html":{"url":"interfaces/Situation.html","title":"interface - Situation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Situation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/router/libs/model.ts\n        \n\n            \n                Description\n            \n            \n                Router for ASK SDK v2\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        custom\n                                \n                                \n                                            Optional\n                                        shouldEndSession\n                                \n                                \n                                            Optional\n                                        state\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        custom\n                                    \n                                \n                                \n                                    \n                                        custom:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        shouldEndSession\n                                    \n                                \n                                \n                                    \n                                        shouldEndSession:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        state\n                                    \n                                \n                                \n                                    \n                                        state:         SituationState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SituationState\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HandlerInput } from 'ask-sdk'\nimport { Response, Request\n} from 'ask-sdk-core/node_modules/ask-sdk-model'\nimport { StateManager, State } from '@ask-utils/situation'\n\n/**\n * Router for ASK SDK v2\n */\nexport interface Situation {\n    state?: SituationState;\n    custom?: (input: HandlerInput) => boolean | Promise;\n    shouldEndSession?: boolean;\n}\n\ninterface SituationState {\n    current?: string;\n    next?: string;\n}\n\nexport interface HandlerHelpers {\n    stateManager: StateManager;\n}\nexport type RouterHandler = (handlerInput: HandlerInput, helpers: HandlerHelpers) => Response | Promise\n\nexport interface Router {\n    requestType: Request['type'];\n    intentName?: string;\n    situation?: Situation;\n    handler: RouterHandler;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SituationState.html":{"url":"interfaces/SituationState.html","title":"interface - SituationState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SituationState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/router/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        current\n                                \n                                \n                                            Optional\n                                        next\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        current\n                                    \n                                \n                                \n                                    \n                                        current:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        next\n                                    \n                                \n                                \n                                    \n                                        next:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { HandlerInput } from 'ask-sdk'\nimport { Response, Request\n} from 'ask-sdk-core/node_modules/ask-sdk-model'\nimport { StateManager, State } from '@ask-utils/situation'\n\n/**\n * Router for ASK SDK v2\n */\nexport interface Situation {\n    state?: SituationState;\n    custom?: (input: HandlerInput) => boolean | Promise;\n    shouldEndSession?: boolean;\n}\n\ninterface SituationState {\n    current?: string;\n    next?: string;\n}\n\nexport interface HandlerHelpers {\n    stateManager: StateManager;\n}\nexport type RouterHandler = (handlerInput: HandlerInput, helpers: HandlerHelpers) => Response | Promise\n\nexport interface Router {\n    requestType: Request['type'];\n    intentName?: string;\n    situation?: Situation;\n    handler: RouterHandler;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Skill.html":{"url":"interfaces/Skill.html","title":"interface - Skill","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Skill\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SkillConstants.html":{"url":"interfaces/SkillConstants.html","title":"interface - SkillConstants","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SkillConstants\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/handlers/libs/requestInterceptors/InjectConstants.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in packages/handlers/libs/requestInterceptors/InjectConstants.ts:4\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        import { HandlerInput } from 'ask-sdk-core'\nimport { RequestInterceptor } from 'ask-sdk-runtime'\n\nexport interface SkillConstants {\n    [key: string]: any;\n}\nexport class ConstantsInterceptorFactory {\n    public static init (constants: T): RequestInterceptor {\n        return {\n            async process ({ attributesManager }: HandlerInput) {\n                const atts = attributesManager.getRequestAttributes()\n                attributesManager.setRequestAttributes({\n                    ...atts,\n                    CONSTANTS: constants\n                })\n            }\n        }\n    }\n}\n\nexport default ConstantsInterceptorFactory\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SkillHandlers.html":{"url":"interfaces/SkillHandlers.html","title":"interface - SkillHandlers","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SkillHandlers\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ask-utils/libs/models.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        errorHandlers\n                                \n                                \n                                        requestHandlers\n                                \n                                \n                                            Optional\n                                        requestInterceptors\n                                \n                                \n                                            Optional\n                                        responseInterceptors\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errorHandlers\n                                    \n                                \n                                \n                                    \n                                        errorHandlers:     ErrorHandler[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ErrorHandler[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        requestHandlers\n                                    \n                                \n                                \n                                    \n                                        requestHandlers:     RequestHandler[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     RequestHandler[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        requestInterceptors\n                                    \n                                \n                                \n                                    \n                                        requestInterceptors:     RequestInterceptor[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     RequestInterceptor[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        responseInterceptors\n                                    \n                                \n                                \n                                    \n                                        responseInterceptors:         ResponseInterceptor[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ResponseInterceptor[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n    RequestInterceptor,\n    ResponseInterceptor,\n    ErrorHandler,\n    RequestHandler\n} from 'ask-sdk'\nimport {\n    SkillConstants\n} from '@ask-utils/handlers'\n\ntype PersistanceType = 'DynamoDB' | 'S3'\ninterface BaseSkillConfig {\n    persistanceType: PersistanceType;\n    isISP?: boolean;\n    constants?: T;\n}\nexport interface S3SkillConfig extends BaseSkillConfig {\n    persistanceType: 'S3';\n    bucketName: string;\n    bucketPathPrefix: string;\n}\nexport interface DynamoDBSkillConfig extends BaseSkillConfig {\n    persistanceType: 'DynamoDB';\n    tableName: string;\n}\nexport type SkillConfig = S3SkillConfig | DynamoDBSkillConfig\nexport interface SkillHandlers {\n    requestHandlers: RequestHandler[];\n    requestInterceptors?: RequestInterceptor[];\n    responseInterceptors?: ResponseInterceptor[];\n    errorHandlers?: ErrorHandler[];\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SkillHandlersBuilder.html":{"url":"interfaces/SkillHandlersBuilder.html","title":"interface - SkillHandlersBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SkillHandlersBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ask-utils/libs/handlerBuilders.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    addErrorHandlers\n                                \n                                \n                                    addRequestHandlers\n                                \n                                \n                                    addRequestInterceptors\n                                \n                                \n                                    addResponseInterceptors\n                                \n                                \n                                    getHandlers\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addErrorHandlers\n                        \n                        \n                    \n                \n            \n            \n                \naddErrorHandlers(...errorHandlers: ErrorHandler[])\n                \n            \n\n\n            \n                \n                    Defined in packages/ask-utils/libs/handlerBuilders.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    errorHandlers\n                                    \n                                            ErrorHandler[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SkillHandlersBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addRequestHandlers\n                        \n                        \n                    \n                \n            \n            \n                \naddRequestHandlers(...requestHandlers: RequestHandler[])\n                \n            \n\n\n            \n                \n                    Defined in packages/ask-utils/libs/handlerBuilders.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    requestHandlers\n                                    \n                                            RequestHandler[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SkillHandlersBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addRequestInterceptors\n                        \n                        \n                    \n                \n            \n            \n                \naddRequestInterceptors(...requestInterceptors: RequestInterceptor[])\n                \n            \n\n\n            \n                \n                    Defined in packages/ask-utils/libs/handlerBuilders.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    requestInterceptors\n                                    \n                                            RequestInterceptor[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SkillHandlersBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addResponseInterceptors\n                        \n                        \n                    \n                \n            \n            \n                \naddResponseInterceptors(responseInterceptors: ResponseInterceptor[])\n                \n            \n\n\n            \n                \n                    Defined in packages/ask-utils/libs/handlerBuilders.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    responseInterceptors\n                                    \n                                                ResponseInterceptor[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SkillHandlersBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHandlers\n                        \n                        \n                    \n                \n            \n            \n                \ngetHandlers()\n                \n            \n\n\n            \n                \n                    Defined in packages/ask-utils/libs/handlerBuilders.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         SkillHandlers\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n    RequestInterceptor,\n    ResponseInterceptor,\n    ErrorHandler,\n    RequestHandler\n} from 'ask-sdk'\nimport {\n    SkillHandlers\n} from './models'\n\nexport interface SkillHandlersBuilder {\n    addRequestHandlers(...requestHandlers: RequestHandler[]): SkillHandlersBuilder;\n    addRequestInterceptors(...requestInterceptors: RequestInterceptor[]): SkillHandlersBuilder;\n    addResponseInterceptors(...responseInterceptors: ResponseInterceptor[]): SkillHandlersBuilder;\n    addErrorHandlers(...errorHandlers: ErrorHandler[]): SkillHandlersBuilder;\n    getHandlers(): SkillHandlers;\n}\nexport class SkillHandlersFactory {\n    public static create (): SkillHandlersBuilder {\n        const handlers: Required = {\n            requestHandlers: [],\n            requestInterceptors: [],\n            responseInterceptors: [],\n            errorHandlers: []\n        }\n        return {\n            addRequestHandlers (...requestHandlers: RequestHandler[]): SkillHandlersBuilder {\n                requestHandlers.forEach(handler => handlers.requestHandlers.push(handler))\n                return this\n            },\n            addRequestInterceptors (...requestInterceptors: RequestInterceptor[]): SkillHandlersBuilder {\n                if (!handlers.requestInterceptors) handlers.requestInterceptors = []\n                requestInterceptors.forEach(interceptor => handlers.requestInterceptors.push(interceptor))\n                return this\n            },\n            addResponseInterceptors (...responseInterceptors: ResponseInterceptor[]): SkillHandlersBuilder {\n                if (!handlers.responseInterceptors) handlers.responseInterceptors = []\n                responseInterceptors.forEach(interceptor => handlers.responseInterceptors.push(interceptor))\n                return this\n            },\n            addErrorHandlers (...errorHandlers: ErrorHandler[]): SkillHandlersBuilder {\n                if (!handlers.errorHandlers) handlers.errorHandlers = []\n                handlers.errorHandlers.concat(errorHandlers)\n                return this\n            },\n            getHandlers (): SkillHandlers {\n                return handlers\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SkillHandlersFactory.html":{"url":"classes/SkillHandlersFactory.html","title":"class - SkillHandlersFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SkillHandlersFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ask-utils/libs/handlerBuilders.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            create\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    create()\n                \n            \n\n\n            \n                \n                    Defined in packages/ask-utils/libs/handlerBuilders.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         SkillHandlersBuilder\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n    RequestInterceptor,\n    ResponseInterceptor,\n    ErrorHandler,\n    RequestHandler\n} from 'ask-sdk'\nimport {\n    SkillHandlers\n} from './models'\n\nexport interface SkillHandlersBuilder {\n    addRequestHandlers(...requestHandlers: RequestHandler[]): SkillHandlersBuilder;\n    addRequestInterceptors(...requestInterceptors: RequestInterceptor[]): SkillHandlersBuilder;\n    addResponseInterceptors(...responseInterceptors: ResponseInterceptor[]): SkillHandlersBuilder;\n    addErrorHandlers(...errorHandlers: ErrorHandler[]): SkillHandlersBuilder;\n    getHandlers(): SkillHandlers;\n}\nexport class SkillHandlersFactory {\n    public static create (): SkillHandlersBuilder {\n        const handlers: Required = {\n            requestHandlers: [],\n            requestInterceptors: [],\n            responseInterceptors: [],\n            errorHandlers: []\n        }\n        return {\n            addRequestHandlers (...requestHandlers: RequestHandler[]): SkillHandlersBuilder {\n                requestHandlers.forEach(handler => handlers.requestHandlers.push(handler))\n                return this\n            },\n            addRequestInterceptors (...requestInterceptors: RequestInterceptor[]): SkillHandlersBuilder {\n                if (!handlers.requestInterceptors) handlers.requestInterceptors = []\n                requestInterceptors.forEach(interceptor => handlers.requestInterceptors.push(interceptor))\n                return this\n            },\n            addResponseInterceptors (...responseInterceptors: ResponseInterceptor[]): SkillHandlersBuilder {\n                if (!handlers.responseInterceptors) handlers.responseInterceptors = []\n                responseInterceptors.forEach(interceptor => handlers.responseInterceptors.push(interceptor))\n                return this\n            },\n            addErrorHandlers (...errorHandlers: ErrorHandler[]): SkillHandlersBuilder {\n                if (!handlers.errorHandlers) handlers.errorHandlers = []\n                handlers.errorHandlers.concat(errorHandlers)\n                return this\n            },\n            getHandlers (): SkillHandlers {\n                return handlers\n            }\n        }\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SkillState.html":{"url":"interfaces/SkillState.html","title":"interface - SkillState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SkillState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/situationManager/libs/StateManager.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        before\n                                \n                                \n                                        current\n                                \n                                \n                                            Optional\n                                        next\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        before\n                                    \n                                \n                                \n                                    \n                                        before:     T[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        current\n                                    \n                                \n                                \n                                    \n                                        current:     T | \"\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T | \"\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        next\n                                    \n                                \n                                \n                                    \n                                        next:     T[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n    AttributesManager\n} from 'ask-sdk-core'\n\nexport type State = string\nexport interface SkillState {\n    current: T | '';\n    next?: T[];\n    before?: T[];\n}\nexport interface InitialState {\n    current?: T;\n    next?: T;\n}\nexport class StateManager {\n    public stateKey: string = '__state'\n    private state: SkillState;\n    private readonly attributeManager: AttributesManager\n    public constructor (attributeManager: AttributesManager, initialState?: InitialState) {\n        this.attributeManager = attributeManager\n        this.state = {\n            current: initialState && initialState.current ? initialState.current : '',\n            next: initialState && initialState.next ? [initialState.next] : []\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    private isState (state: any): state is SkillState {\n        return state && state.current\n    }\n    private mergeSessionAttributes (): this {\n        const { state, stateKey, attributeManager } = this\n        const attributes = {\n            ...attributeManager.getSessionAttributes(),\n            [stateKey]: state\n        }\n        attributeManager.setSessionAttributes(attributes)\n        return this\n    }\n    public setState (current: T, next?: T[], before?: T[]): this {\n        this.state = {\n            current,\n            next,\n            before\n        }\n        this.mergeSessionAttributes()\n        return this\n    }\n\n    public getState (): SkillState {\n        const { stateKey, attributeManager } = this\n\n        const attributes = attributeManager.getSessionAttributes()\n        const targetState = attributes[stateKey]\n        if (!this.isState(targetState)) {\n            this.mergeSessionAttributes()\n            const retryAtt = attributeManager.getSessionAttributes()\n            return retryAtt[stateKey]\n        }\n        return targetState\n    }\n\n    public hasState (): boolean {\n        const state = this.getState()\n        if (!state) return false\n        return state.current !== ''\n    }\n\n    public getCurrentState (): T | '' {\n        const targetState = this.getState()\n        return targetState.current\n    }\n\n    public getNextState (): T[] {\n        const targetState = this.getState()\n        return targetState.next || []\n    }\n\n    public getBeforeState (): T[] {\n        const targetState = this.getState()\n        return targetState.before || []\n    }\n\n    public matchedCurrentState (state: T): boolean {\n        return this.getCurrentState() === state\n    }\n    public includesNextState (state: T): boolean {\n        return this.getNextState().includes(state)\n    }\n    public includesBeforeState (state: T): boolean {\n        return this.getBeforeState().includes(state)\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Soccer.html":{"url":"interfaces/Soccer.html","title":"interface - Soccer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Soccer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SportsEvent.html":{"url":"interfaces/SportsEvent.html","title":"interface - SportsEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SportsEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        awayTeamStatistic\n                                \n                                \n                                        eventLeague\n                                \n                                \n                                        homeTeamStatistic\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        awayTeamStatistic\n                                    \n                                \n                                \n                                    \n                                        awayTeamStatistic:         GameStatistic\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GameStatistic\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        eventLeague\n                                    \n                                \n                                \n                                    \n                                        eventLeague:         Soccer\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Soccer\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        homeTeamStatistic\n                                    \n                                \n                                \n                                    \n                                        homeTeamStatistic:         GameStatistic\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GameStatistic\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SportsTeam.html":{"url":"interfaces/SportsTeam.html","title":"interface - SportsTeam","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SportsTeam\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StateManager.html":{"url":"classes/StateManager.html","title":"class - StateManager","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StateManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/libs/stateManager.ts\n        \n\n            \n                Description\n            \n            \n                State manager class\n\n            \n\n\n\n            \n                Example\n            \n            \n                        \n                            ```\n * type NEWSTATE = 'BYE' | 'HELLO'\n * export const updateState = (attributeManager: AttributesManager): void => StateManager.updateState(attributeManager, 'HELLO')\n * export const getState = (attributeManager: AttributesManager): NEWSTATE => StateManager.getCurrentState(attributeManager)\n * export const isHelloState = (attributeManager: AttributesManager): boolean => {\n *   const state = getState(attributeManager)\n *   return state === 'HELLO'\n * }\n * const TestHandler: RequestHandler = {\n *   canHandle(handlerInput) {\n *     if (handlerInput.requestEnvelope.request.type !== 'LaunchRequest') return false\n *     return isHelloState(handlerInput.attributesManager)\n *   },\n *   handle(handlerInput) {\n *     ...\n *   }\n * }\n * ```\n                        \n            \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                getCurrentState\n                            \n                            \n                                    Static\n                                isMatchedState\n                            \n                            \n                                    Static\n                                resetState\n                            \n                            \n                                    Static\n                                updateState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            getCurrentState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCurrentState(attributeManager: AttributesManager)\n                \n            \n\n\n            \n                \n                    Defined in packages/core/libs/stateManager.ts:35\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    attributeManager\n                                    \n                                            AttributesManager\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     T\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            isMatchedState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isMatchedState(attributeManager: AttributesManager, state: T)\n                \n            \n\n\n            \n                \n                    Defined in packages/core/libs/stateManager.ts:42\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    attributeManager\n                                    \n                                            AttributesManager\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            resetState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    resetState(attributeManager: AttributesManager)\n                \n            \n\n\n            \n                \n                    Defined in packages/core/libs/stateManager.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    attributeManager\n                                    \n                                            AttributesManager\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            updateState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateState(attributeManager: AttributesManager, state: T)\n                \n            \n\n\n            \n                \n                    Defined in packages/core/libs/stateManager.ts:29\n                \n            \n\n            \n                \n                    Type parameters :\n                    \n                        T\n                    \n                \n            \n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    attributeManager\n                                    \n                                            AttributesManager\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n    AttributesManager\n} from 'ask-sdk-core'\nexport type DefaultState = string\n\n/**\n * State manager class\n * @example\n * ```\n * type NEWSTATE = 'BYE' | 'HELLO'\n * export const updateState = (attributeManager: AttributesManager): void => StateManager.updateState(attributeManager, 'HELLO')\n * export const getState = (attributeManager: AttributesManager): NEWSTATE => StateManager.getCurrentState(attributeManager)\n * export const isHelloState = (attributeManager: AttributesManager): boolean => {\n *   const state = getState(attributeManager)\n *   return state === 'HELLO'\n * }\n * const TestHandler: RequestHandler = {\n *   canHandle(handlerInput) {\n *     if (handlerInput.requestEnvelope.request.type !== 'LaunchRequest') return false\n *     return isHelloState(handlerInput.attributesManager)\n *   },\n *   handle(handlerInput) {\n *     ...\n *   }\n * }\n * ```\n */\nexport class StateManager {\n    public static updateState (attributeManager: AttributesManager, state: T): void {\n        attributeManager.setSessionAttributes({\n            ...attributeManager.getSessionAttributes(),\n            state\n        })\n    }\n    public static getCurrentState (attributeManager: AttributesManager): T {\n        const att = attributeManager.getSessionAttributes()\n        return att.state || ''\n    }\n    public static resetState (attributeManager: AttributesManager): void {\n        this.updateState(attributeManager, '')\n    }\n    public static isMatchedState (attributeManager: AttributesManager, state: T): boolean {\n        return state === this.getCurrentState(attributeManager)\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StateManager-1.html":{"url":"classes/StateManager-1.html","title":"class - StateManager-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StateManager\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/situationManager/libs/StateManager.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                attributeManager\n                            \n                            \n                                    Private\n                                state\n                            \n                            \n                                    Public\n                                stateKey\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getBeforeState\n                            \n                            \n                                    Public\n                                getCurrentState\n                            \n                            \n                                    Public\n                                getNextState\n                            \n                            \n                                    Public\n                                getState\n                            \n                            \n                                    Public\n                                hasState\n                            \n                            \n                                    Public\n                                includesBeforeState\n                            \n                            \n                                    Public\n                                includesNextState\n                            \n                            \n                                    Private\n                                isState\n                            \n                            \n                                    Public\n                                matchedCurrentState\n                            \n                            \n                                    Private\n                                mergeSessionAttributes\n                            \n                            \n                                    Public\n                                setState\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(attributeManager: AttributesManager, initialState?: InitialState)\n                    \n                \n                        \n                            \n                                Defined in packages/situationManager/libs/StateManager.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        attributeManager\n                                                  \n                                                        \n                                                                    AttributesManager\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        initialState\n                                                  \n                                                        \n                                                                        InitialState\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Readonly\n                            attributeManager\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AttributesManager\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/situationManager/libs/StateManager.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            state\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         SkillState\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/situationManager/libs/StateManager.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            stateKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '__state'\n                        \n                    \n                        \n                            \n                                    Defined in packages/situationManager/libs/StateManager.ts:16\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getBeforeState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getBeforeState()\n                \n            \n\n\n            \n                \n                    Defined in packages/situationManager/libs/StateManager.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getCurrentState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getCurrentState()\n                \n            \n\n\n            \n                \n                    Defined in packages/situationManager/libs/StateManager.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T | \"\"\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getNextState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getNextState()\n                \n            \n\n\n            \n                \n                    Defined in packages/situationManager/libs/StateManager.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     T[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getState()\n                \n            \n\n\n            \n                \n                    Defined in packages/situationManager/libs/StateManager.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         SkillState\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            hasState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    hasState()\n                \n            \n\n\n            \n                \n                    Defined in packages/situationManager/libs/StateManager.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            includesBeforeState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    includesBeforeState(state: T)\n                \n            \n\n\n            \n                \n                    Defined in packages/situationManager/libs/StateManager.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            includesNextState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    includesNextState(state: T)\n                \n            \n\n\n            \n                \n                    Defined in packages/situationManager/libs/StateManager.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            isState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    isState(state: any)\n                \n            \n\n\n            \n                \n                    Defined in packages/situationManager/libs/StateManager.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         SkillState\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            matchedCurrentState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    matchedCurrentState(state: T)\n                \n            \n\n\n            \n                \n                    Defined in packages/situationManager/libs/StateManager.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            mergeSessionAttributes\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    mergeSessionAttributes()\n                \n            \n\n\n            \n                \n                    Defined in packages/situationManager/libs/StateManager.ts:30\n                \n            \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            setState\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    setState(current: T, next?: T[], before?: T[])\n                \n            \n\n\n            \n                \n                    Defined in packages/situationManager/libs/StateManager.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    current\n                                    \n                                            T\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    before\n                                    \n                                            T[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n    AttributesManager\n} from 'ask-sdk-core'\n\nexport type State = string\nexport interface SkillState {\n    current: T | '';\n    next?: T[];\n    before?: T[];\n}\nexport interface InitialState {\n    current?: T;\n    next?: T;\n}\nexport class StateManager {\n    public stateKey: string = '__state'\n    private state: SkillState;\n    private readonly attributeManager: AttributesManager\n    public constructor (attributeManager: AttributesManager, initialState?: InitialState) {\n        this.attributeManager = attributeManager\n        this.state = {\n            current: initialState && initialState.current ? initialState.current : '',\n            next: initialState && initialState.next ? [initialState.next] : []\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    private isState (state: any): state is SkillState {\n        return state && state.current\n    }\n    private mergeSessionAttributes (): this {\n        const { state, stateKey, attributeManager } = this\n        const attributes = {\n            ...attributeManager.getSessionAttributes(),\n            [stateKey]: state\n        }\n        attributeManager.setSessionAttributes(attributes)\n        return this\n    }\n    public setState (current: T, next?: T[], before?: T[]): this {\n        this.state = {\n            current,\n            next,\n            before\n        }\n        this.mergeSessionAttributes()\n        return this\n    }\n\n    public getState (): SkillState {\n        const { stateKey, attributeManager } = this\n\n        const attributes = attributeManager.getSessionAttributes()\n        const targetState = attributes[stateKey]\n        if (!this.isState(targetState)) {\n            this.mergeSessionAttributes()\n            const retryAtt = attributeManager.getSessionAttributes()\n            return retryAtt[stateKey]\n        }\n        return targetState\n    }\n\n    public hasState (): boolean {\n        const state = this.getState()\n        if (!state) return false\n        return state.current !== ''\n    }\n\n    public getCurrentState (): T | '' {\n        const targetState = this.getState()\n        return targetState.current\n    }\n\n    public getNextState (): T[] {\n        const targetState = this.getState()\n        return targetState.next || []\n    }\n\n    public getBeforeState (): T[] {\n        const targetState = this.getState()\n        return targetState.before || []\n    }\n\n    public matchedCurrentState (state: T): boolean {\n        return this.getCurrentState() === state\n    }\n    public includesNextState (state: T): boolean {\n        return this.getNextState().includes(state)\n    }\n    public includesBeforeState (state: T): boolean {\n        return this.getBeforeState().includes(state)\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SystemFactory.html":{"url":"classes/SystemFactory.html","title":"class - SystemFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SystemFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/test/libs/context/SystemFactory.ts\n        \n\n            \n                Description\n            \n            \n                Skill request context (system factory)\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                system\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getSystem\n                            \n                            \n                                    Public\n                                putApiAccessToken\n                            \n                            \n                                    Public\n                                putApiEndpoint\n                            \n                            \n                                    Public\n                                putApplication\n                            \n                            \n                                    Public\n                                putApplicationId\n                            \n                            \n                                    Public\n                                putDevice\n                            \n                            \n                                    Public\n                                putPerson\n                            \n                            \n                                    Public\n                                putUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(applicationId?: string, userId?: string)\n                    \n                \n                        \n                            \n                                Defined in packages/test/libs/context/SystemFactory.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        applicationId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        userId\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            system\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     System\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/test/libs/context/SystemFactory.ts:18\n                            \n                        \n\n                \n                    \n                        Default object\n\n                    \n                \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getSystem\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getSystem()\n                \n            \n\n\n            \n                \n                    Defined in packages/test/libs/context/SystemFactory.ts:107\n                \n            \n\n\n            \n                \n                    Get attributes\n\n\n                    \n                        Returns :     System\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putApiAccessToken\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putApiAccessToken(token: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/test/libs/context/SystemFactory.ts:86\n                \n            \n\n\n            \n                \n                    Put api access token for ASK API\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putApiEndpoint\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putApiEndpoint(endpoint: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/test/libs/context/SystemFactory.ts:77\n                \n            \n\n\n            \n                \n                    Put api endpoint url fo ASK API\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    endpoint\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putApplication\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putApplication(application: Application)\n                \n            \n\n\n            \n                \n                    Defined in packages/test/libs/context/SystemFactory.ts:44\n                \n            \n\n\n            \n                \n                    Put the application\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    application\n                                    \n                                            Application\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putApplicationId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putApplicationId(id: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/test/libs/context/SystemFactory.ts:35\n                \n            \n\n\n            \n                \n                    Put the application id\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putDevice\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putDevice(device: Device)\n                \n            \n\n\n            \n                \n                    Defined in packages/test/libs/context/SystemFactory.ts:65\n                \n            \n\n\n            \n                \n                    Put execution device attributes\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    device\n                                    \n                                            Device\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putPerson\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putPerson(id: string, accessToken?: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/test/libs/context/SystemFactory.ts:96\n                \n            \n\n\n            \n                \n                    Put execution person attributes\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    accessToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putUser(user: Partial)\n                \n            \n\n\n            \n                \n                    Defined in packages/test/libs/context/SystemFactory.ts:55\n                \n            \n\n\n            \n                \n                    Put skill user attributes\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                            Partial\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n    interfaces,\n    User,\n    Device,\n    Application\n\n} from 'ask-sdk-core/node_modules/ask-sdk-model'\nimport { v4 as uuid } from 'uuid'\nimport System = interfaces.system.SystemState\n\n/**\n * Skill request context (system factory)\n */\nexport class SystemFactory {\n    /**\n     * Default object\n     */\n    private system: System\n    public constructor (applicationId?: string, userId?: string) {\n        this.system = {\n            application: {\n                applicationId: applicationId || 'amzn1.echo-sdk-ams.app.' + uuid()\n            },\n            user: {\n                userId: userId || 'amzn1.ask.account.' + uuid()\n            },\n            apiEndpoint: 'https://api.amazonalexa.com'\n        }\n    }\n\n    /**\n     * Put the application id\n     * @param id\n     */\n    public putApplicationId (id: string): this {\n        this.system.application.applicationId = id\n        return this\n    }\n\n    /**\n     * Put the application\n     * @param id\n     */\n    public putApplication (application: Application): this {\n        this.system.application = application\n        return this\n    }\n\n    /**\n     * Put skill user attributes\n     * @param id\n     * @param acccessToken\n     * @param permissions\n     */\n    public putUser (user: Partial): this {\n        this.system.user = Object.assign(this.system.user, user)\n        return this\n    }\n\n    /**\n     * Put execution device attributes\n     * @param id\n     * @param supportedInterfaces\n     */\n    public putDevice (device: Device): this {\n        this.system.device = {\n            ...this.system.device,\n            ...device\n        }\n        return this\n    }\n\n    /**\n     * Put api endpoint url fo ASK API\n     * @param endpoint\n     */\n    public putApiEndpoint (endpoint: string): this {\n        this.system.apiEndpoint = endpoint\n        return this\n    }\n\n    /**\n     * Put api access token for ASK API\n     * @param token\n     */\n    public putApiAccessToken (token: string): this {\n        this.system.apiAccessToken = token\n        return this\n    }\n\n    /**\n     * Put execution person attributes\n     * @param id\n     * @param accessToken\n     */\n    public putPerson (id: string, accessToken?: string): this {\n        this.system.person = {\n            personId: id,\n            accessToken\n        }\n        return this\n    }\n\n    /**\n     * Get attributes\n     */\n    public getSystem (): System {\n        return this.system\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TMergeTargetHandler.html":{"url":"interfaces/TMergeTargetHandler.html","title":"interface - TMergeTargetHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TMergeTargetHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/handlers/libs/requestHandlers/HandlerFactory.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        canHandle\n                                \n                                \n                                            Optional\n                                        handle\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        canHandle\n                                    \n                                \n                                \n                                    \n                                        canHandle:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        handle\n                                    \n                                \n                                \n                                    \n                                        handle:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { RequestHandler, HandlerInput } from 'ask-sdk-core'\nimport { Response, Request, RequestEnvelope } from 'ask-sdk-model'\nimport Resolver, { interfaces } from 'class-resolver'\nimport { isLaunchRequest } from 'ask-utils'\n\nexport interface TMergeTargetHandler {\n    canHandle?: (input: Input) => Promise | boolean;\n    handle?: (input: Input) => Promise | Output;\n}\nexport interface TRequestHandler {\n    canHandle: (input: Input) => Promise | boolean;\n    handle: (input: Input) => Promise | Output;\n}\nexport interface CustomeRequestEnvelope extends RequestEnvelope {\n    request: CustomRequest;\n}\nexport interface CustomHandlerInput extends HandlerInput {\n    requestEnvelope: CustomeRequestEnvelope;\n}\nexport interface RequestHandlerBuilder extends interfaces.ResolveTarget {\n    handle(handler: TMergeTargetHandler): TRequestHandler;\n}\n\nconst merge = (handler: TMergeTargetHandler, target?: TMergeTargetHandler): TRequestHandler => {\n    const fallBackHandler: RequestHandler = {\n        canHandle () {\n            return true\n        },\n        handle (handlerInput) {\n            return handlerInput.responseBuilder.getResponse()\n        }\n    }\n    return Object.assign({}, fallBackHandler, target, handler)\n}\n\nexport type SupportedHandlerType = 'LaunchRequest'\nexport class RequestHandlerFactory {\n    public static create (type: SupportedHandlerType, handler: TMergeTargetHandler): TRequestHandler {\n        return new Resolver(\n            new LaunchRequestHandlerFactory(),\n            new FallbackIntentFactory()\n        ).resolve(type).handle(handler)\n    }\n}\nexport default RequestHandlerFactory\n\nexport class LaunchRequestHandlerFactory implements RequestHandlerBuilder {\n    supports (type: string) {\n        return type === 'LaunchRequest'\n    }\n    handle (handler: TMergeTargetHandler) {\n        return merge(handler, {\n            canHandle (handlerInput) {\n                return isLaunchRequest(handlerInput)\n            }\n        })\n    }\n}\n\nexport class FallbackIntentFactory implements RequestHandlerBuilder {\n    supports () {\n        return true\n    }\n    handle (handler: TMergeTargetHandler) {\n        return merge(handler)\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TRequestHandler.html":{"url":"interfaces/TRequestHandler.html","title":"interface - TRequestHandler","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TRequestHandler\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/handlers/libs/requestHandlers/HandlerFactory.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        canHandle\n                                \n                                \n                                        handle\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        canHandle\n                                    \n                                \n                                \n                                    \n                                        canHandle:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        handle\n                                    \n                                \n                                \n                                    \n                                        handle:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { RequestHandler, HandlerInput } from 'ask-sdk-core'\nimport { Response, Request, RequestEnvelope } from 'ask-sdk-model'\nimport Resolver, { interfaces } from 'class-resolver'\nimport { isLaunchRequest } from 'ask-utils'\n\nexport interface TMergeTargetHandler {\n    canHandle?: (input: Input) => Promise | boolean;\n    handle?: (input: Input) => Promise | Output;\n}\nexport interface TRequestHandler {\n    canHandle: (input: Input) => Promise | boolean;\n    handle: (input: Input) => Promise | Output;\n}\nexport interface CustomeRequestEnvelope extends RequestEnvelope {\n    request: CustomRequest;\n}\nexport interface CustomHandlerInput extends HandlerInput {\n    requestEnvelope: CustomeRequestEnvelope;\n}\nexport interface RequestHandlerBuilder extends interfaces.ResolveTarget {\n    handle(handler: TMergeTargetHandler): TRequestHandler;\n}\n\nconst merge = (handler: TMergeTargetHandler, target?: TMergeTargetHandler): TRequestHandler => {\n    const fallBackHandler: RequestHandler = {\n        canHandle () {\n            return true\n        },\n        handle (handlerInput) {\n            return handlerInput.responseBuilder.getResponse()\n        }\n    }\n    return Object.assign({}, fallBackHandler, target, handler)\n}\n\nexport type SupportedHandlerType = 'LaunchRequest'\nexport class RequestHandlerFactory {\n    public static create (type: SupportedHandlerType, handler: TMergeTargetHandler): TRequestHandler {\n        return new Resolver(\n            new LaunchRequestHandlerFactory(),\n            new FallbackIntentFactory()\n        ).resolve(type).handle(handler)\n    }\n}\nexport default RequestHandlerFactory\n\nexport class LaunchRequestHandlerFactory implements RequestHandlerBuilder {\n    supports (type: string) {\n        return type === 'LaunchRequest'\n    }\n    handle (handler: TMergeTargetHandler) {\n        return merge(handler, {\n            canHandle (handlerInput) {\n                return isLaunchRequest(handlerInput)\n            }\n        })\n    }\n}\n\nexport class FallbackIntentFactory implements RequestHandlerBuilder {\n    supports () {\n        return true\n    }\n    handle (handler: TMergeTargetHandler) {\n        return merge(handler)\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Thing.html":{"url":"interfaces/Thing.html","title":"interface - Thing","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Thing\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TranslationBuilder.html":{"url":"interfaces/TranslationBuilder.html","title":"interface - TranslationBuilder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TranslationBuilder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/libs/translator.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    addLocale\n                                \n                                \n                                    addLocaleStrings\n                                \n                                \n                                    getLanguageStrings\n                                \n                                \n                                    putLocaleStrings\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addLocale\n                        \n                        \n                    \n                \n            \n            \n                \naddLocale(locale: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/core/libs/translator.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    locale\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TranslationBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            addLocaleStrings\n                        \n                        \n                    \n                \n            \n            \n                \naddLocaleStrings(locale: string, key: string, message: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/core/libs/translator.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    locale\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TranslationBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getLanguageStrings\n                        \n                        \n                    \n                \n            \n            \n                \ngetLanguageStrings()\n                \n            \n\n\n            \n                \n                    Defined in packages/core/libs/translator.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         TranslationObject | literal type\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            putLocaleStrings\n                        \n                        \n                    \n                \n            \n            \n                \nputLocaleStrings(locale: string, messages: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/core/libs/translator.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    locale\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    messages\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         TranslationBuilder\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface TranslationObject {\n    translation: {\n        [key: string]: string;\n    };\n}\nexport interface TranslationBuilder {\n    addLocale(locale: string): TranslationBuilder;\n    putLocaleStrings(locale: string, messages: string): TranslationBuilder;\n    addLocaleStrings(locale: string, key: string, message: string): TranslationBuilder;\n    getLanguageStrings(): TranslationObject | {};\n}\n\n// beta\nexport class TranslationFactory {\n    public static init (): TranslationBuilder {\n        const translationObject: TranslationObject | null = null\n        const languageStrings: {\n            [lang: string]: TranslationObject;\n        } = {}\n        return {\n            addLocale (locale: string): TranslationBuilder {\n                if (languageStrings[locale] || !translationObject) return this\n                languageStrings[locale] = translationObject\n                return this\n            },\n            putLocaleStrings (locale: string, messages: string): TranslationBuilder {\n                if (!locale) throw new Error('locale is required')\n                if (!messages || Object.keys(messages).length \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TranslationFactory.html":{"url":"classes/TranslationFactory.html","title":"class - TranslationFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TranslationFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/libs/translator.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                init\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Static\n                            init\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    init()\n                \n            \n\n\n            \n                \n                    Defined in packages/core/libs/translator.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         TranslationBuilder\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export interface TranslationObject {\n    translation: {\n        [key: string]: string;\n    };\n}\nexport interface TranslationBuilder {\n    addLocale(locale: string): TranslationBuilder;\n    putLocaleStrings(locale: string, messages: string): TranslationBuilder;\n    addLocaleStrings(locale: string, key: string, message: string): TranslationBuilder;\n    getLanguageStrings(): TranslationObject | {};\n}\n\n// beta\nexport class TranslationFactory {\n    public static init (): TranslationBuilder {\n        const translationObject: TranslationObject | null = null\n        const languageStrings: {\n            [lang: string]: TranslationObject;\n        } = {}\n        return {\n            addLocale (locale: string): TranslationBuilder {\n                if (languageStrings[locale] || !translationObject) return this\n                languageStrings[locale] = translationObject\n                return this\n            },\n            putLocaleStrings (locale: string, messages: string): TranslationBuilder {\n                if (!locale) throw new Error('locale is required')\n                if (!messages || Object.keys(messages).length \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TranslationObject.html":{"url":"interfaces/TranslationObject.html","title":"interface - TranslationObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TranslationObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/libs/translator.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        translation\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        translation\n                                    \n                                \n                                \n                                    \n                                        translation:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TranslationObject {\n    translation: {\n        [key: string]: string;\n    };\n}\nexport interface TranslationBuilder {\n    addLocale(locale: string): TranslationBuilder;\n    putLocaleStrings(locale: string, messages: string): TranslationBuilder;\n    addLocaleStrings(locale: string, key: string, message: string): TranslationBuilder;\n    getLanguageStrings(): TranslationObject | {};\n}\n\n// beta\nexport class TranslationFactory {\n    public static init (): TranslationBuilder {\n        const translationObject: TranslationObject | null = null\n        const languageStrings: {\n            [lang: string]: TranslationObject;\n        } = {}\n        return {\n            addLocale (locale: string): TranslationBuilder {\n                if (languageStrings[locale] || !translationObject) return this\n                languageStrings[locale] = translationObject\n                return this\n            },\n            putLocaleStrings (locale: string, messages: string): TranslationBuilder {\n                if (!locale) throw new Error('locale is required')\n                if (!messages || Object.keys(messages).length \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TrashCollectionAlert.html":{"url":"interfaces/TrashCollectionAlert.html","title":"interface - TrashCollectionAlert","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  TrashCollectionAlert\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        collectionDayOfWeek\n                                \n                                \n                                        garbageTypes\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        collectionDayOfWeek\n                                    \n                                \n                                \n                                    \n                                        collectionDayOfWeek:         DayOfWeek\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         DayOfWeek\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        garbageTypes\n                                    \n                                \n                                \n                                    \n                                        garbageTypes:         GarbageType[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         GarbageType[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserFactory.html":{"url":"classes/UserFactory.html","title":"class - UserFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/test/libs/user/UserFactory.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getUser\n                            \n                            \n                                    Public\n                                putUser\n                            \n                            \n                                    Public\n                                putUserId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                    \n                        \n                            Default value : {\n        userId: ''\n    }\n                        \n                    \n                        \n                            \n                                    Defined in packages/test/libs/user/UserFactory.ts:6\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getUser()\n                \n            \n\n\n            \n                \n                    Defined in packages/test/libs/user/UserFactory.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     User\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putUser(user: User)\n                \n            \n\n\n            \n                \n                    Defined in packages/test/libs/user/UserFactory.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                            User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            putUserId\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    putUserId(userId: string)\n                \n            \n\n\n            \n                \n                    Defined in packages/test/libs/user/UserFactory.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n    User\n} from 'ask-sdk-core/node_modules/ask-sdk-model'\n\nexport class UserFactory {\n    private user: User = {\n        userId: ''\n    }\n    public putUserId (userId: string): this {\n        this.user.userId = userId\n        return this\n    }\n\n    public putUser (user: User): this {\n        this.user = user\n        return this\n    }\n\n    public getUser (): User {\n        return this.user\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserProfileAPIClient.html":{"url":"classes/UserProfileAPIClient.html","title":"class - UserProfileAPIClient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserProfileAPIClient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/serviceClients/libs/UserProfiles.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Client\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                path\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                getEmail\n                            \n                            \n                                    Public\n                                    Async\n                                getGivenName\n                            \n                            \n                                    Public\n                                    Async\n                                getMobileNumber\n                            \n                            \n                                    Public\n                                    Async\n                                getProfileName\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            path\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '/v2/accounts/~current/settings'\n                        \n                    \n                        \n                            \n                                    Defined in packages/serviceClients/libs/UserProfiles.ts:5\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getEmail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getEmail()\n                \n            \n\n\n            \n                \n                    Defined in packages/serviceClients/libs/UserProfiles.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getGivenName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getGivenName()\n                \n            \n\n\n            \n                \n                    Defined in packages/serviceClients/libs/UserProfiles.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getMobileNumber\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getMobileNumber()\n                \n            \n\n\n            \n                \n                    Defined in packages/serviceClients/libs/UserProfiles.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            getProfileName\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getProfileName()\n                \n            \n\n\n            \n                \n                    Defined in packages/serviceClients/libs/UserProfiles.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { services } from 'ask-sdk-model'\nimport Client from './client'\n\nexport class UserProfileAPIClient extends Client {\n    protected path = '/v2/accounts/~current/settings'\n    public async getProfileName (): Promise {\n        return this.get('Profile.name')\n    }\n    public async getGivenName (): Promise {\n        return this.get('Profile.givenName')\n    }\n    public async getEmail (): Promise {\n        return this.get('Profile.email')\n    }\n    public async getMobileNumber (): Promise {\n        return this.get('Profile.mobileNumber')\n    }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WeatherAlert.html":{"url":"interfaces/WeatherAlert.html","title":"interface - WeatherAlert","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WeatherAlert\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/proactive-event/libs/model.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        alertType\n                                \n                                \n                                            Optional\n                                        source\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alertType\n                                    \n                                \n                                \n                                    \n                                        alertType:         WeatherAlertType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         WeatherAlertType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        source\n                                    \n                                \n                                \n                                    \n                                        source:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export namespace Types {\n    export type Locale = 'de-DE' | 'en-AU' | 'en-CA' | 'en-GB' | 'en-IN' | 'en-US' | 'es-ES' | 'es-MX' | 'fr-CA' | 'fr-FR' | 'it-IT' | 'ja-JP'\n    export type dateTime = string\n    export interface Person {\n        name: string;\n    }\n    export type MediaType = 'BOOK' | 'EPISODE' | 'ALBUM' | 'SINGLE' | 'MOVIE' | 'GAME'\n    export type DistributionMethod = 'STREAM' | 'AIR' | 'RELEASE' | 'PREMIERE' | 'DROP'\n    export interface Thing {\n        name: 'localizedattribute:providerName';\n    }\n    export interface Availability {\n        startTime: Types.dateTime;\n        provider?: Thing;\n        method: DistributionMethod;\n    }\n    export interface CreativeWork {\n        name: string; // \"localizedattribute:contentName\",\n        contentType: MediaType;\n    }\n    export type OfferType = 'MATCH' | 'REMATCH' | 'GAME'\n    export type InviteType = 'CHALLENGE' | 'INVITE'\n    export type RelationshipToInvitee = 'FRIEND' | 'CONTACT'\n    export interface GameInvite {\n        inviter: Person;\n        relationshipToInvitee: RelationshipToInvitee;\n        inviteType: InviteType;\n    }\n    export interface Game {\n        offer: OfferType;\n        name: string; // 'localizedattribute:gameName';\n    }\n\n    export type ConfirmationStatus = 'CONFIRMED' | 'CANCELED' | 'RESCHEDULED' | 'REQUESTED' | 'CREATED' | 'UPDATED'\n    export type OccasionType = 'RESERVATION_REQUEST' | 'RESERVATION' | 'APPOINTMENT_REQUEST' | 'APPOINTMENT'\n    export interface ConfirmationState {\n        confirmationStatus: ConfirmationStatus;\n    }\n    export interface Ogranization {\n        name: string; // 'localizedattribute:providerName';\n    }\n    export interface Skill {\n        name: string; // 'localizedattribute:brokerName';\n    }\n    export interface Occasion {\n        occasionType: OccasionType;\n        subject: string; // \"localizedattribute:subject\",\n        provider: Ogranization;\n        bookingTime: Types.dateTime; // \"2018-11-20T19:16:31Z\",\n        broker?: Skill;\n    }\n    export interface ParcelDelivery {\n        expectedArrival: Types.dateTime; // \"2018-12-14T23:32:00.463Z\"\n    }\n    export interface OrderState {\n        status: OrderStatus;\n        enterTimestamp?: Types.dateTime; // \"20180916T030000Z   2018-09-16T03:00:00.463Z\"\n        deliveryDetails?: ParcelDelivery;\n    }\n    export interface Order {\n        seller: {\n            name: string; // 'localizedattribute:sellerName';\n        };\n    }\n    export type OrderStatus = 'PREORDER_RECEIVED' | 'ORDER_RECEIVED' | 'ORDER_PREPARING' | 'ORDER_SHIPPED' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_OUT_FOR_DELIVERY' | 'ORDER_DELIVERED'\n    export type GarbageType = 'BOTTLES' | 'BULKY' | 'BURNABLE' | 'CANS' | 'CLOTHING' | 'COMPOSTABLE' | 'CRUSHABLE' | 'GARDEN_WASTE' | 'GLASS' | 'HAZARDOUS' | 'HOME_APPLIANCES' | 'KITCHEN_WASTE' | 'LANDFILL' | 'PET_BOTTLES' | 'RECYCLABLE_PLASTICS' | 'WASTE_PAPER'\n    export type DayOfWeek = 'MONDAY' | 'TUESDAY' | 'WEDNESDAY' | 'THURSDAY' | 'FRIDAY' | 'SATURDAY' | 'SUNDAY'\n    export interface TrashCollectionAlert {\n        garbageTypes: GarbageType[];\n        collectionDayOfWeek: DayOfWeek;\n    }\n    export type WeatherAlertType = 'TORNADO' | 'HURRICANE' | 'SNOW_STORM' | 'THUNDER_STORM'\n    export interface WeatherAlert {\n        source?: string; // 'localizedattribute:source';\n        alertType: WeatherAlertType;\n    }\n\n    export interface Goal {\n        scoreEarned: number;\n        teamName: string;\n    }\n    export interface SportsEvent {\n        eventLeague: Soccer;\n        homeTeamStatistic: GameStatistic;\n        awayTeamStatistic: GameStatistic;\n    }\n    export interface SportsTeam {\n        name: string;\n    }\n    export interface GameStatistic {\n        team: SportsTeam;\n        score: number;\n    }\n    export interface Soccer {\n        name: string;\n    }\n\n    export interface MessageState {\n        status: MessageStatus;\n        freshness?: MessageFreshness;\n    }\n    export type MessageStatus = 'UNREAD' | 'FLAGGED'\n    export type MessageFreshness = 'NEW' | 'OVERDUE'\n    export type MessageUrgent = 'URGENT'\n    export interface MessageGroup {\n        creator: Types.Person;\n        count: number;\n        urgency?: MessageUrgent;\n    }\n    export interface LocalizedAttribute {\n        locale: Locale;\n        [name: string]: string;\n    }\n    export type LocalizedAttributes = LocalizedAttribute[]\n}\n\nexport namespace event {\n    export interface Props {\n        name: E;\n        payload: P;\n    }\n    export type EventName = WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n    export type Payload = TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n    export namespace TrashCollectionAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.TrashCollectionAlert.Activated'\n            export interface Payload {\n                alert: Types.TrashCollectionAlert;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.WeatherAlert.Activated'\n            export interface Payload {\n                weatherAlert: Types.WeatherAlert;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.SportsEvent.Updated'\n            export interface Payload {\n                update?: Types.Goal;\n                sportsEvent: Types.SportsEvent;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type EventName = Activated.EventName\n        export type Payload = Activated.Payload\n        export namespace Activated {\n            export type EventName = 'AMAZON.MessageAlert.Activated'\n            export interface Payload {\n                state: Types.MessageState;\n                messageGroup: Types.MessageGroup;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.OrderStatus.Updated'\n            export interface Payload {\n                state: Types.OrderState;\n                order: Types.Order;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type EventName = Updated.EventName\n        export type Payload = Updated.Payload\n        export namespace Updated {\n            export type EventName = 'AMAZON.Occasion.Updated'\n            export interface Payload {\n                state: Types.ConfirmationState;\n                occasion: Types.Occasion;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.MediaContent.Available'\n            export interface Payload {\n                availability: Types.Availability;\n                content: Types.CreativeWork;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export type EventName = Available.EventName\n        export type Payload = Available.Payload\n        export namespace Available {\n            export type EventName = 'AMAZON.SocialGameInvite.Available'\n            export interface Payload {\n                invite: Types.GameInvite;\n                game: Types.Game;\n            }\n        }\n    }\n}\n\nexport namespace client {\n    export interface Class {\n        getAccessToken: Promise;\n    }\n    export type ClientId = string\n    export type ClientSecret = string\n    export type APIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/'\n    export type DevAPIURL = 'https://api.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development' | 'https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development'\n    export type APIEndpoint = APIURL | DevAPIURL\n    export type ApiRegion = 'FE' | 'US' | 'EU'\n    export interface ClientConfig {\n        clientId: ClientId;\n        clientSecret: ClientSecret;\n        apiEndpont?: APIEndpoint;\n        apiRegion?: ApiRegion;\n        isProduction?: boolean;\n    }\n    export interface AuthResponse {\n        'access_token': string;\n        'expires_in': number;\n        'scope': 'alexa::proactive_events';\n        'token_type': 'Bearer';\n    }\n    export type AudienceType = 'Unicast' | 'Multicast'\n    export interface AudiencePayload {\n        user: string;\n    }\n    export interface RelevantAudience {\n        type: AudienceType;\n        payload?: AudiencePayload;\n    }\n    export interface RequstBody {\n        timestamp: string;\n        expiryTime: string;\n        event: {\n            payload: event.Payload;\n            name: event.EventName;\n            relevantAudience: RelevantAudience;\n            refereneId: string;\n        };\n    }\n    export interface Response {\n        statusCode: number;\n        message: string;\n        request: RequstBody;\n    }\n}\n\nexport namespace interfaces {\n    export interface PayloadBuilder {\n        getEventName(): event.EventName;\n        getParameter(): event.Props;\n    }\n    export namespace LocalizedAttributes {\n        export interface Factory {\n            putLocalizedAttribute(locale: Types.Locale, key: string, text: string): Factory;\n            getLocalizedAttributes(): Types.LocalizedAttributes;\n        }\n    }\n    export namespace TrashCollectionAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder {\n                putAlert(alert: Types.TrashCollectionAlert): PayloadBuilder;\n                putGarbageTypes(garbageTypes: Types.GarbageType[]): PayloadBuilder;\n                addGarbageType(garbageType: Types.GarbageType): PayloadBuilder;\n                setCollectionDayOfWeek(collectionDayOfWeek: Types.DayOfWeek): PayloadBuilder;\n                getEventName(): event.TrashCollectionAlert.Activated.EventName;\n                getPayload(): event.TrashCollectionAlert.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace WeatherAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setAlertSource(source?: string): PayloadBuilder;\n                setAlertType(type: Types.WeatherAlertType): PayloadBuilder;\n                getEventName (): event.WeatherAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.WeatherAlert.Activated.Payload;\n            }\n        }\n    }\n    export namespace SportsEvent {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateGoalData(teamName: string, score: number): PayloadBuilder;\n                setEventLeagueName(name: string): PayloadBuilder;\n                setHomeTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                setAwayTeamStatistic(teamName: string, score: number): PayloadBuilder;\n                getEventName(): event.SportsEvent.Updated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.SportsEvent.Updated.Payload;\n            }\n        }\n    }\n    export namespace MessageAlert {\n        export type PayloadBuilder = Activated.PayloadBuilder\n        export namespace Activated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setMessageCreator(name: string): PayloadBuilder;\n                setMessageCount(count: number): PayloadBuilder;\n                setMessageUrgency(urgency?: Types.MessageUrgent): PayloadBuilder;\n                setMessageFreshness(freshness: Types.MessageFreshness): PayloadBuilder;\n                setMessageStatus(messageStatus: Types.MessageStatus): PayloadBuilder;\n                getEventName (): event.MessageAlert.Activated.EventName;\n                getParameter(): event.Props;\n                getPayload(): event.MessageAlert.Payload;\n            }\n        }\n    }\n    export namespace OrderStatus {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setOrderStatus(status: Types.OrderStatus): PayloadBuilder;\n                setEnterTimestamp(date: Date): PayloadBuilder;\n                setExpectedArrival(date: Date): PayloadBuilder;\n                updateSellerName(name: string): PayloadBuilder;\n                getEventName(): event.OrderStatus.EventName;\n                getPayload(): event.OrderStatus.Updated.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace Occasion {\n        export type PayloadBuilder = Updated.PayloadBuilder\n        export namespace Updated {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                updateConfirmationStatus(status: Types.ConfirmationStatus): PayloadBuilder;\n                setOccasionType(type: Types.OccasionType): PayloadBuilder;\n                setSubject(subject: string): PayloadBuilder;\n                setProviderName(name: string): PayloadBuilder;\n                setBookingTime(date: Date): PayloadBuilder;\n                setBrokerName(name: string): PayloadBuilder;\n                getEventName(): event.Occasion.Updated.EventName;\n                getConfirmationState(): Types.ConfirmationState;\n                getConfirmationStatus(): Types.ConfirmationStatus;\n                getPayload(): event.Occasion.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace MediaContent {\n        export namespace Available {\n            export interface PayloadBuilder {\n                setContentName(name?: string): PayloadBuilder;\n                setMediaType(type: Types.MediaType): PayloadBuilder;\n                getEventName(): event.MediaContent.EventName;\n                setStartTime(date: Date): PayloadBuilder;\n                setDistributionMethod(method: Types.DistributionMethod): PayloadBuilder;\n                setProvider(providerName: string): PayloadBuilder;\n                getPayload(): event.MediaContent.Payload;\n                getParameter(): event.Props;\n            }\n        }\n    }\n    export namespace SocialGameInvite {\n        export namespace Available {\n            export interface PayloadBuilder extends interfaces.PayloadBuilder {\n                setInviterName(name: string): PayloadBuilder;\n                setRelationshipToInvitee(relation: Types.RelationshipToInvitee): PayloadBuilder;\n                setInviteType(type: Types.InviteType): PayloadBuilder;\n                setGameName(name: string): PayloadBuilder;\n                setGameOfferName(name: Types.OfferType): PayloadBuilder;\n                getEventName(): event.SocialGameInvite.Available.EventName;\n                getPayload(): event.SocialGameInvite.Available.Payload;\n            }\n        }\n    }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Peer dependencies\n    \n    \n        \n            ask-sdk-model : ^1.9.0\n    \n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nASK-Utils - Utility functions for ask-sdk\n\n\n\n\n\n\nhttps://ask-utils.dev\nGetting started\n$ npm i -S ask-utilsPackages\n\n\n\nname\nnpm url\nRepository\nSummary\n\n\n\n\n@ask-utils/core\nhttps://www.npmjs.com/package/@ask-utils/core\nhttps://github.com/ask-utils/ask-utils/tree/master/packages/core\nCore utilities\n\n\n@ask-utils/proactive-event\nhttps://www.npmjs.com/package/@ask-utils/proactive-event\nhttps://github.com/ask-utils/ask-utils/tree/master/packages/proactive-event\nProactive Event parameter builder and request client\n\n\n@ask-utils/isp\nhttps://www.npmjs.com/package/@ask-utils/isp\nhttps://github.com/ask-utils/ask-utils/tree/master/packages/isp\nISP helpers\n\n\n@ask-utils/handlers\nhttps://www.npmjs.com/package/@ask-utils/handlers\nhttps://github.com/ask-utils/ask-utils/tree/master/packages/handlers\nUtility handler and interceptors\n\n\n@ask-utils/error-handlers\nhttps://www.npmjs.com/package/@ask-utils/error-handlers\nhttps://github.com/ask-utils/ask-utils/tree/master/packages/error-handlers\nError handler helpers\n\n\n@ask-utils/service-client\nhttps://www.npmjs.com/package/@ask-utils/service-client\nhttps://github.com/ask-utils/ask-utils/tree/master/packages/serviceClient s\nServiceClient alternative\n\n\n\ndevelopment\n$ git clone git@github.com:hideokamoto/ask-utils.git\n$ cd ask-utils\n$ yarn\n$ yarn bootstraptest\n$ npm testLint\n$ npm run lint\n\nor\n\n$ npm run lint -- --fixHistory\n-> Release Note\nContributors\n\n\n\nName\nVersion\n\n\n\n\n@ArtskydJ\nv0.13.0\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    60 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    78 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            APIEndpoint   (packages/.../model.ts)\n                        \n                        \n                            ApiRegion   (packages/.../model.ts)\n                        \n                        \n                            APIURL   (packages/.../model.ts)\n                        \n                        \n                            AudienceType   (packages/.../model.ts)\n                        \n                        \n                            CanHandle   (packages/.../fixtures.ts)\n                        \n                        \n                            CanHandle   (packages/.../model.ts)\n                        \n                        \n                            CanHandleResponse   (packages/.../model.ts)\n                        \n                        \n                            ClientId   (packages/.../model.ts)\n                        \n                        \n                            ClientSecret   (packages/.../model.ts)\n                        \n                        \n                            ConfirmationStatus   (packages/.../model.ts)\n                        \n                        \n                            dateTime   (packages/.../model.ts)\n                        \n                        \n                            DayOfWeek   (packages/.../model.ts)\n                        \n                        \n                            DefaultState   (packages/.../stateManager.ts)\n                        \n                        \n                            DevAPIURL   (packages/.../model.ts)\n                        \n                        \n                            DistributionMethod   (packages/.../model.ts)\n                        \n                        \n                            ErrorHandle   (packages/.../index.ts)\n                        \n                        \n                            EventName   (packages/.../model.ts)\n                        \n                        \n                            EventName   (packages/.../model.ts)\n                        \n                        \n                            EventName   (packages/.../model.ts)\n                        \n                        \n                            EventName   (packages/.../model.ts)\n                        \n                        \n                            EventName   (packages/.../model.ts)\n                        \n                        \n                            EventName   (packages/.../model.ts)\n                        \n                        \n                            EventName   (packages/.../model.ts)\n                        \n                        \n                            EventName   (packages/.../model.ts)\n                        \n                        \n                            EventName   (packages/.../model.ts)\n                        \n                        \n                            EventName   (packages/.../model.ts)\n                        \n                        \n                            EventName   (packages/.../model.ts)\n                        \n                        \n                            EventName   (packages/.../model.ts)\n                        \n                        \n                            EventName   (packages/.../model.ts)\n                        \n                        \n                            EventName   (packages/.../model.ts)\n                        \n                        \n                            EventName   (packages/.../model.ts)\n                        \n                        \n                            EventName   (packages/.../model.ts)\n                        \n                        \n                            EventName   (packages/.../model.ts)\n                        \n                        \n                            FlashBriefings   (packages/.../flashbriefing.ts)\n                        \n                        \n                            GarbageType   (packages/.../model.ts)\n                        \n                        \n                            Handle   (packages/.../fixtures.ts)\n                        \n                        \n                            Handle   (packages/.../model.ts)\n                        \n                        \n                            HandleResponse   (packages/.../model.ts)\n                        \n                        \n                            InskillProducts   (packages/.../client.ts)\n                        \n                        \n                            InskillProducts   (packages/.../productFinders.ts)\n                        \n                        \n                            InskillProducts   (packages/.../productFinders.test.ts)\n                        \n                        \n                            InskillProducts   (packages/.../generalResponse.ts)\n                        \n                        \n                            InviteType   (packages/.../model.ts)\n                        \n                        \n                            ISPState   (packages/.../helpers.ts)\n                        \n                        \n                            ListStatus   (packages/.../Lists.ts)\n                        \n                        \n                            Locale   (packages/.../model.ts)\n                        \n                        \n                            LocalizedAttributes   (packages/.../model.ts)\n                        \n                        \n                            MediaType   (packages/.../model.ts)\n                        \n                        \n                            MessageFreshness   (packages/.../model.ts)\n                        \n                        \n                            MessageStatus   (packages/.../model.ts)\n                        \n                        \n                            MessageUrgent   (packages/.../model.ts)\n                        \n                        \n                            Method   (packages/.../client.ts)\n                        \n                        \n                            OccasionType   (packages/.../model.ts)\n                        \n                        \n                            OfferType   (packages/.../model.ts)\n                        \n                        \n                            OrderStatus   (packages/.../model.ts)\n                        \n                        \n                            Payload   (packages/.../model.ts)\n                        \n                        \n                            Payload   (packages/.../model.ts)\n                        \n                        \n                            Payload   (packages/.../model.ts)\n                        \n                        \n                            Payload   (packages/.../model.ts)\n                        \n                        \n                            Payload   (packages/.../model.ts)\n                        \n                        \n                            Payload   (packages/.../model.ts)\n                        \n                        \n                            Payload   (packages/.../model.ts)\n                        \n                        \n                            Payload   (packages/.../model.ts)\n                        \n                        \n                            Payload   (packages/.../model.ts)\n                        \n                        \n                            PayloadBuilder   (packages/.../model.ts)\n                        \n                        \n                            PayloadBuilder   (packages/.../model.ts)\n                        \n                        \n                            PayloadBuilder   (packages/.../model.ts)\n                        \n                        \n                            PayloadBuilder   (packages/.../model.ts)\n                        \n                        \n                            PayloadBuilder   (packages/.../model.ts)\n                        \n                        \n                            PayloadBuilder   (packages/.../model.ts)\n                        \n                        \n                            PersistanceType   (packages/.../models.ts)\n                        \n                        \n                            PollyLanguage   (packages/.../amznPolly.ts)\n                        \n                        \n                            ProgressiveResponseErrorHandler   (packages/.../responseHelpers.ts)\n                        \n                        \n                            RelationshipToInvitee   (packages/.../model.ts)\n                        \n                        \n                            resolutionSlot   (packages/.../slot.ts)\n                        \n                        \n                            RouterHandler   (packages/.../model.ts)\n                        \n                        \n                            SkillConfig   (packages/.../models.ts)\n                        \n                        \n                            State   (packages/.../StateManager.ts)\n                        \n                        \n                            SupportedHandlerType   (packages/.../HandlerFactory.ts)\n                        \n                        \n                            WeatherAlertType   (packages/.../model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    packages/proactive-event/libs/model.ts\n    \n    \n        \n            \n                \n                    \n                    APIEndpoint\n                \n            \n            \n                \n                        APIURL | DevAPIURL\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ApiRegion\n                \n            \n            \n                \n                        \"FE\" | \"US\" | \"EU\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    APIURL\n                \n            \n            \n                \n                        \"https://api.amazonalexa.com/v1/proactiveEvents/\" | \"https://api.eu.amazonalexa.com/v1/proactiveEvents/\" | \"https://api.fe.amazonalexa.com/v1/proactiveEvents/\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AudienceType\n                \n            \n            \n                \n                        \"Unicast\" | \"Multicast\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ClientId\n                \n            \n            \n                \n                            string\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ClientSecret\n                \n            \n            \n                \n                            string\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ConfirmationStatus\n                \n            \n            \n                \n                        \"CONFIRMED\" | \"CANCELED\" | \"RESCHEDULED\" | \"REQUESTED\" | \"CREATED\" | \"UPDATED\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    dateTime\n                \n            \n            \n                \n                            string\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DayOfWeek\n                \n            \n            \n                \n                        \"MONDAY\" | \"TUESDAY\" | \"WEDNESDAY\" | \"THURSDAY\" | \"FRIDAY\" | \"SATURDAY\" | \"SUNDAY\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DevAPIURL\n                \n            \n            \n                \n                        \"https://api.amazonalexa.com/v1/proactiveEvents/stages/development\" | \"https://api.eu.amazonalexa.com/v1/proactiveEvents/stages/development\" | \"https://api.fe.amazonalexa.com/v1/proactiveEvents/stages/development\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    DistributionMethod\n                \n            \n            \n                \n                        \"STREAM\" | \"AIR\" | \"RELEASE\" | \"PREMIERE\" | \"DROP\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EventName\n                \n            \n            \n                \n                        WeatherAlert.EventName | SportsEvent.EventName | MessageAlert.EventName | OrderStatus.EventName | Occasion.EventName | MediaContent.EventName | SocialGameInvite.EventName | TrashCollectionAlert.EventName\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EventName\n                \n            \n            \n                \n                        Activated.EventName\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EventName\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EventName\n                \n            \n            \n                \n                        Activated.EventName\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EventName\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EventName\n                \n            \n            \n                \n                        Updated.EventName\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EventName\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EventName\n                \n            \n            \n                \n                        Activated.EventName\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EventName\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EventName\n                \n            \n            \n                \n                        Updated.EventName\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EventName\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EventName\n                \n            \n            \n                \n                        Updated.EventName\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EventName\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EventName\n                \n            \n            \n                \n                        Available.EventName\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EventName\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EventName\n                \n            \n            \n                \n                        Available.EventName\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    EventName\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    GarbageType\n                \n            \n            \n                \n                        \"BOTTLES\" | \"BULKY\" | \"BURNABLE\" | \"CANS\" | \"CLOTHING\" | \"COMPOSTABLE\" | \"CRUSHABLE\" | \"GARDEN_WASTE\" | \"GLASS\" | \"HAZARDOUS\" | \"HOME_APPLIANCES\" | \"KITCHEN_WASTE\" | \"LANDFILL\" | \"PET_BOTTLES\" | \"RECYCLABLE_PLASTICS\" | \"WASTE_PAPER\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    InviteType\n                \n            \n            \n                \n                        \"CHALLENGE\" | \"INVITE\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Locale\n                \n            \n            \n                \n                        \"de-DE\" | \"en-AU\" | \"en-CA\" | \"en-GB\" | \"en-IN\" | \"en-US\" | \"es-ES\" | \"es-MX\" | \"fr-CA\" | \"fr-FR\" | \"it-IT\" | \"ja-JP\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    LocalizedAttributes\n                \n            \n            \n                \n                            LocalizedAttribute[]\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MediaType\n                \n            \n            \n                \n                        \"BOOK\" | \"EPISODE\" | \"ALBUM\" | \"SINGLE\" | \"MOVIE\" | \"GAME\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MessageFreshness\n                \n            \n            \n                \n                        \"NEW\" | \"OVERDUE\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MessageStatus\n                \n            \n            \n                \n                        \"UNREAD\" | \"FLAGGED\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    MessageUrgent\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    OccasionType\n                \n            \n            \n                \n                        \"RESERVATION_REQUEST\" | \"RESERVATION\" | \"APPOINTMENT_REQUEST\" | \"APPOINTMENT\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    OfferType\n                \n            \n            \n                \n                        \"MATCH\" | \"REMATCH\" | \"GAME\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    OrderStatus\n                \n            \n            \n                \n                        \"PREORDER_RECEIVED\" | \"ORDER_RECEIVED\" | \"ORDER_PREPARING\" | \"ORDER_SHIPPED\" | \"ORDER_OUT_FOR_DELIVERY\" | \"ORDER_OUT_FOR_DELIVERY\" | \"ORDER_DELIVERED\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Payload\n                \n            \n            \n                \n                        TrashCollectionAlert.Payload | WeatherAlert.Payload | SportsEvent.Payload | MessageAlert.Payload | OrderStatus.Payload | Occasion.Payload | MediaContent.Payload | SocialGameInvite.Payload\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Payload\n                \n            \n            \n                \n                        Activated.Payload\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Payload\n                \n            \n            \n                \n                        Activated.Payload\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Payload\n                \n            \n            \n                \n                        Updated.Payload\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Payload\n                \n            \n            \n                \n                        Activated.Payload\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Payload\n                \n            \n            \n                \n                        Updated.Payload\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Payload\n                \n            \n            \n                \n                        Updated.Payload\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Payload\n                \n            \n            \n                \n                        Available.Payload\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Payload\n                \n            \n            \n                \n                        Available.Payload\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    PayloadBuilder\n                \n            \n            \n                \n                        Activated.PayloadBuilder\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    PayloadBuilder\n                \n            \n            \n                \n                        Activated.PayloadBuilder\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    PayloadBuilder\n                \n            \n            \n                \n                        Updated.PayloadBuilder\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    PayloadBuilder\n                \n            \n            \n                \n                        Activated.PayloadBuilder\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    PayloadBuilder\n                \n            \n            \n                \n                        Updated.PayloadBuilder\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    PayloadBuilder\n                \n            \n            \n                \n                        Updated.PayloadBuilder\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    RelationshipToInvitee\n                \n            \n            \n                \n                        \"FRIEND\" | \"CONTACT\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    WeatherAlertType\n                \n            \n            \n                \n                        \"TORNADO\" | \"HURRICANE\" | \"SNOW_STORM\" | \"THUNDER_STORM\"\n\n                \n            \n        \n    \n    packages/isp/libs/handlers/fixtures.ts\n    \n    \n        \n            \n                \n                    \n                    CanHandle\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Handle\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    packages/handlers/libs/requestHandlers/factories/model.ts\n    \n    \n        \n            \n                \n                    \n                    CanHandle\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    CanHandleResponse\n                \n            \n            \n                \n                        Promise | boolean\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Handle\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    HandleResponse\n                \n            \n            \n                \n                            Promise | Response\n\n                \n            \n        \n    \n    packages/core/libs/stateManager.ts\n    \n    \n        \n            \n                \n                    \n                    DefaultState\n                \n            \n            \n                \n                            string\n\n                \n            \n        \n    \n    packages/error-handlers/libs/index.ts\n    \n    \n        \n            \n                \n                    \n                    ErrorHandle\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    packages/handlers/libs/flashbriefing.ts\n    \n    \n        \n            \n                \n                    \n                    FlashBriefings\n                \n            \n            \n                \n                            FlashBriefingContent[]\n\n                \n            \n        \n    \n    packages/isp/libs/client.ts\n    \n    \n        \n            \n                \n                    \n                    InskillProducts\n                \n            \n            \n                \n                            InSkillProduct[]\n\n                \n            \n        \n    \n    packages/isp/libs/productFinders.ts\n    \n    \n        \n            \n                \n                    \n                    InskillProducts\n                \n            \n            \n                \n                            InSkillProduct[]\n\n                \n            \n        \n    \n    packages/isp/__tests__/libs/productFinders.test.ts\n    \n    \n        \n            \n                \n                    \n                    InskillProducts\n                \n            \n            \n                \n                            InSkillProduct[]\n\n                \n            \n        \n    \n    packages/isp/libs/contentBuilders/generalResponse.ts\n    \n    \n        \n            \n                \n                    \n                    InskillProducts\n                \n            \n            \n                \n                            InSkillProduct[]\n\n                \n            \n        \n    \n    packages/isp/libs/handlers/helpers.ts\n    \n    \n        \n            \n                \n                    \n                    ISPState\n                \n            \n            \n                \n                        \"BUY\" | \"CANCEL\" | \"PRODUCT_DETAIL\" | \"\"\n\n                \n            \n        \n    \n    packages/serviceClients/libs/Lists.ts\n    \n    \n        \n            \n                \n                    \n                    ListStatus\n                \n            \n            \n                \n                        \"active\" | \"completed\"\n\n                \n            \n        \n    \n    packages/serviceClients/libs/client.ts\n    \n    \n        \n            \n                \n                    \n                    Method\n                \n            \n            \n                \n                        \"GET\" | \"PUT\" | \"POST\" | \"DELETE\"\n\n                \n            \n        \n    \n    packages/ask-utils/libs/models.ts\n    \n    \n        \n            \n                \n                    \n                    PersistanceType\n                \n            \n            \n                \n                        \"DynamoDB\" | \"S3\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    SkillConfig\n                \n            \n            \n                \n                            S3SkillConfig | DynamoDBSkillConfig\n\n                \n            \n        \n    \n    packages/core/libs/amznPolly.ts\n    \n    \n        \n            \n                \n                    \n                    PollyLanguage\n                \n            \n            \n                \n                        \"de-DE\" | \"en-AU\" | \"en-CA\" | \"en-GB\" | \"en-IN\" | \"en-US\" | \"es-ES\" | \"fr-FR\" | \"it-IT\" | \"ja-JP\"\n\n                \n            \n        \n    \n    packages/core/libs/responseHelpers.ts\n    \n    \n        \n            \n                \n                    \n                    ProgressiveResponseErrorHandler\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    packages/core/libs/slot.ts\n    \n    \n        \n            \n                \n                    \n                    resolutionSlot\n                \n            \n            \n                \n                        literal type | \"\"\n\n                \n            \n        \n    \n    packages/router/libs/model.ts\n    \n    \n        \n            \n                \n                    \n                    RouterHandler\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n    packages/situationManager/libs/StateManager.ts\n    \n    \n        \n            \n                \n                    \n                    State\n                \n            \n            \n                \n                            string\n\n                \n            \n        \n    \n    packages/handlers/libs/requestHandlers/HandlerFactory.ts\n    \n    \n        \n            \n                \n                    \n                    SupportedHandlerType\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
